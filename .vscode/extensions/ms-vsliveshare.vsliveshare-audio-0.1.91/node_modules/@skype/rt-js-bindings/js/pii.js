"use strict";
/*!
 *  pii.ts
 *  AUF
 *
 *  Created by Johan Blumenberg on 2017-01-16
 *  Copyright 2017 Microsoft. All rights reserved.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
var DefaultTagger = function (value) { return value; };
var g_anonymizationEnabled = true;
var g_tagger = DefaultTagger;
var nameMap = {};
var nameCount = 0;
function addName(name) {
    return nameMap[name] = 'u' + (++nameCount);
}
var ValidMriRegExp = /^([0-9][0-9]?):([^<>\*\{\}&'\"\/\\?^`|~\s]+)$/;
var MriNamespaces;
(function (MriNamespaces) {
    MriNamespaces[MriNamespaces["MSA"] = 1] = "MSA";
    MriNamespaces[MriNamespaces["S4B_Bridge"] = 2] = "S4B_Bridge";
    MriNamespaces[MriNamespaces["PSTN"] = 4] = "PSTN";
    MriNamespaces[MriNamespaces["SkypeId"] = 8] = "SkypeId";
    MriNamespaces[MriNamespaces["Thread"] = 19] = "Thread";
    MriNamespaces[MriNamespaces["LegacyShortCircuit"] = 20] = "LegacyShortCircuit";
    MriNamespaces[MriNamespaces["OneToOneTextMessage"] = 21] = "OneToOneTextMessage";
    MriNamespaces[MriNamespaces["GroupTextMessage"] = 22] = "GroupTextMessage";
    MriNamespaces[MriNamespaces["Bot"] = 28] = "Bot";
    MriNamespaces[MriNamespaces["InternalSkype"] = 48] = "InternalSkype";
})(MriNamespaces || (MriNamespaces = {}));
;
var SafeMRINamespaces = [
    MriNamespaces.Thread,
    MriNamespaces.InternalSkype,
    MriNamespaces.Bot
];
function enableAnonymization(enable) {
    g_anonymizationEnabled = enable;
}
exports.enableAnonymization = enableAnonymization;
function useTagger(tagger) {
    g_tagger = tagger || DefaultTagger;
}
exports.useTagger = useTagger;
var pii;
(function (pii) {
    function untaggedUserName(name) {
        if (g_anonymizationEnabled) {
            return !name ? null : nameMap[name] || addName(name);
        }
        else {
            return name;
        }
    }
    function UserName(name) {
        var untagged = untaggedUserName(name);
        return g_tagger(untagged);
    }
    pii.UserName = UserName;
    function Mri(mri) {
        var untagged;
        var match = mri.match(ValidMriRegExp);
        if (match) {
            var mri_namespace = Number(match[1]);
            var mri_id = match[2];
            if (SafeMRINamespaces.indexOf(mri_namespace) != -1) {
                untagged = mri;
            }
            else {
                untagged = mri_namespace + ':' + untaggedUserName(mri_id);
            }
        }
        else {
            untagged = untaggedUserName(mri);
        }
        return g_tagger(untagged);
    }
    pii.Mri = Mri;
    function Omit(value) {
        var untagged;
        if (g_anonymizationEnabled) {
            if (typeof value === 'number') {
                untagged = 0x4b1d;
            }
            else if (typeof value === 'string') {
                untagged = value.charAt(0) + '...';
            }
            else {
                untagged = null;
            }
        }
        else {
            untagged = value;
        }
        return g_tagger(untagged);
    }
    pii.Omit = Omit;
})(pii = exports.pii || (exports.pii = {}));
