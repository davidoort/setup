/*!
 *  EcsConfig.ts
 *  AUF
 *
 *  Created by Johan Blumenberg on 2016-12-30
 *  Copyright 2016 Microsoft. All rights reserved.
 *
 */
import { LogLevel } from '../AufLog';
export interface KillSwitchItem {
    namespace: string;
    experiment: string;
}
export interface KillSwitch {
    blacklist?: KillSwitchItem[];
    whitelist?: KillSwitchItem[];
}
export interface BlackLists {
    component?: string[];
    logline?: string[];
}
export interface Buffer {
    size: number;
    level: LogLevel;
}
export interface ComponentLevel {
    component: string;
    level: LogLevel;
}
export interface ULBaseline {
    circularBuffer?: {
        enabled?: boolean;
        storeUnsafe?: boolean;
        buffers?: Buffer[];
    };
    logUpload?: {
        maxSize: number;
    };
    killswitch?: KillSwitch;
    blacklists?: BlackLists;
    componentLevels?: ComponentLevel[];
    configPaths?: {
        ns: string;
        key: string;
    }[];
    defaultExperimentTarget?: string;
}
export interface Matcher {
    arg: number;
    op: string;
    value: string;
}
export interface LogTriggerCondition {
    name: string;
    logId: number;
    matchers?: Matcher[];
}
export interface LogTriggerFilter {
    component: string;
    level: string;
    parsedLevel: LogLevel;
}
export interface ULLogUpload {
    name: string;
    ecsNs: string;
    conditions: LogTriggerCondition[];
    resetCondition: LogTriggerCondition;
    filters: LogTriggerFilter[];
    reenableAfterTriggering: boolean;
    mutualSubmissionType?: string;
    includeUnsafe: boolean;
    experimentTarget?: string;
}
