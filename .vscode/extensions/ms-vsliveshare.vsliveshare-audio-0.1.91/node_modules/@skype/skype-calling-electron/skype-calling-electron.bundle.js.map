{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap ffe25266fdfc90ab719c","webpack:///./ts/SlimCoreCommon.ts","webpack:///external \"lodash\"","webpack:///../common/ts/causeId.ts","webpack:///./ts/SlimCoreElectronBase.ts","webpack:///../common/ts/async.ts","webpack:///../common/ts/piiUtils.ts","webpack:///../common/ts/fn.ts","webpack:///external \"@skype/rt-js-bindings\"","webpack:///../common/ts/callConstants.ts","webpack:///../common/ts/logUtils.ts","webpack:///../common/ts/tsCallingVersionProvider.ts","webpack:///./ts/SlimCoreElectronCall.ts","webpack:///./ts/SlimCoreElectronDataChannel.ts","webpack:///../common/ts/callTelemetry.ts","webpack:///../common/ts/operationDecorators.ts","webpack:///../common/ts/operationHandler.ts","webpack:///../common/ts/chainedPromise.ts","webpack:///./ts/SlimCoreElectronRemoteStreamManager.ts","webpack:///./ts/SlimCoreElectronRemoteStream.ts","webpack:///./ts/SlimCoreElectronEnumConverter.ts","webpack:///../common/ts/internalLogger.ts","webpack:///./ts/SlimCoreElectronEcsProvider.ts","webpack:///./ts/SlimCoreElectronSetup.ts","webpack:///../common/ts/events.ts","webpack:///../common/ts/asyncOperationHandler.ts","webpack:///../common/ts/mriUtils.ts","webpack:///./ts/SlimCoreElectronCallParticipant.ts","webpack:///./ts/SlimCoreElectronRemoteVideoRenderer.ts","webpack:///./ts/SlimCoreElectronVideoRenderer.ts","webpack:///./ts/SlimCoreElectronLocalScreenShare.ts","webpack:///./ts/SlimCoreElectronScreenScraper.ts","webpack:///./ts/SlimCoreElectronLocalVideo.ts","webpack:///../common/ts/guid.ts","webpack:///./ts/SlimCoreElectronCallRegistry.ts","webpack:///./ts/SlimCoreElectronDeviceManager.ts","webpack:///./ts/SlimCoreElectronLocalVideoPreview.ts","webpack:///./ts/SlimCoreElectronScreenSharingManager.ts","webpack:///./ts/SlimCoreElectronStack.ts","webpack:///../node_modules/webpack/buildin/global.js","webpack:///../common/ts/observableBase.ts","webpack:///../common/ts/stopwatch.ts","webpack:///../common/ts/constants.ts","webpack:///../common/ts/state.ts","webpack:///./ts/telemetry/helper.ts","webpack:///./ts/SlimCoreElectronContentSharing.ts","webpack:///../common/ts/contentSharingSession.ts","webpack:///./ts/SlimCoreElectronDataChannelAdapter.ts","webpack:///./ts/SlimCoreElectronScreenSharingControl.ts","webpack:///webpack:///webpack/universalModuleDefinition","webpack:///webpack:///webpack/bootstrap b597f90796601e76ea0c","webpack:///webpack:///ts/SlimCoreElectronControlCapturer.ts","webpack:///webpack:///common/ts/observableBase.ts","webpack:///webpack:///common/ts/events.ts","webpack:///webpack:///external \"lodash\"","webpack:///./ts/SlimCoreElectronBindingManager.ts","webpack:///./ts/logging/electronInitLogging.ts","webpack:///../common/ts/logging/tscallingLogger.ts","webpack:///../common/ts/logging/ulLogAppender.ts","webpack:///./ts/logging/ElectronRootToolsManagerDelegate.ts","webpack:///../node_modules/synctasks/dist/SyncTasks.js","webpack:///../node_modules/timers-browserify/main.js","webpack:///../node_modules/setimmediate/setImmediate.js","webpack:///../node_modules/process/browser.js","webpack:///./ts/SlimCoreUwpEventWrapper.ts","webpack:///./ts/public.ts"],"names":[],"mappings":"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7C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,kFAAkF,CAAC,CAAC;YACtG,OAAO;SACV;QAED,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,eAAe,EAAE,SAAS,EAAE,UAAC,IAA6C;YAC5F,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,sDAAoD,IAAI,CAAC,OAAO,YAAO,IAAI,CAAC,gBAAkB,CAAC,CAAC;YACnH,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;IACP,CAAC;IACL,+BAAC;AAAD,CAAC;AA/BY,4DAAwB;;;;;;;;ACLrC,oDAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,WAAW,EAAE;AACzD;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,oCAAoC,yBAAyB,EAAE,kBAAkB,sBAAsB,EAAE;AACzG;AACA,sDAAsD,UAAU,EAAE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,KAAoB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,gDAAgD,EAAE;AACrG;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,mDAAmD,EAAE;AAC5H;AACA;AACA;AACA;AACA;AACA,+CAA+C,0BAA0B,EAAE,gBAAgB,yBAAyB,EAAE;AACtH;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,gDAAgD,EAAE;AACrG;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,mDAAmD,EAAE;AAC5H;AACA;AACA;AACA;AACA,+CAA+C,0BAA0B,EAAE,gBAAgB,yBAAyB,EAAE;AACtH;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,oCAAoC,EAAE;AACjG;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,4BAA4B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iBAAiB;AAC3C,KAAK;AACL;AACA;AACA,gBAAgB;AAChB,KAAK;AACL;AACA;AACA;;;;;;;;AChgBA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,mBAAO,CAAC,EAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9DA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,sBAAsB,EAAE;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;ACzLD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,UAAU;;;;;;;;;;;;;;;;;;;;;;;AClLtC,+BAA4B;AAE5B,IAAK,WAIJ;AAJD,WAAK,WAAW;IACZ,mDAAW;IACX,iDAAU;IACV,iDAAU;AACd,CAAC,EAJI,WAAW,KAAX,WAAW,QAIf;AAgBD;IACI,0BAA2B,aAAgB;QAA3C,iBAeC;QAf0B,kBAAa,GAAb,aAAa,CAAG;QACvC,CAAC,CAAC,KAAK,CAAC,aAAa,EAAE,UAAC,CAAC,EAAE,CAAC,EAAE,CAAC;YAC3B,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;gBACjB,IAAI,CAAC,KAAI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","file":"skype-calling-electron.bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lodash\"), require(\"@skype/rt-js-bindings\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"skype-calling-electron\", [\"lodash\", \"@skype/rt-js-bindings\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"skype-calling-electron\"] = factory(require(\"lodash\"), require(\"@skype/rt-js-bindings\"));\n\telse\n\t\troot[\"skype-calling-electron\"] = factory(root[\"lodash\"], root[\"@skype/rt-js-bindings\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_7__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 39);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ffe25266fdfc90ab719c","/// <reference path=\"../typings/slimcore.d.ts\" />\r\n/// <reference path=\"../typings/slimcore-enums.d.ts\" />\r\n/// <reference path=\"../typings/slimcore-enums_autogen.d.ts\" />\r\n/// <reference path=\"../typings/video-renderer.d.ts\" />\r\n/// <reference path=\"../typings/es6.d.ts\" />\r\n\r\nimport { IDisposable, MediaType, RemoveEndpointScope } from 'skype-calling-interface';\r\nimport { SlimCoreSettings } from '../typings/skype-calling-electron';\r\n\r\nimport * as _ from 'lodash';\r\n\r\nimport { EventSourceImpl } from '../../common/ts/events';\r\n\r\n_.defaults(window, { SlimCore: {} });\r\n_.defaults(SlimCore, { Enums: {} });\r\n\r\nif (isSlimCoreRTModuleAvailable()) {\r\n    const enumsRt = (window as any).SlimCoreRT.SlimCore.Enums;\r\n    copyAllEnumObjects(enumsRt, SlimCore.Enums);\r\n    correctAllEnumObjectsForValueNames(SlimCore.Enums);\r\n}\r\n\r\nif (Proxy) {\r\n    SlimCore.Enums = new Proxy(SlimCore.Enums, {\r\n        get: (target, name) => (name in target) ? target[name] : {}\r\n    });\r\n}\r\n\r\nimport Enums = SlimCore.Enums;\r\nimport { IInternalLogger } from '../../common/ts/internalLogger';\r\n\r\nexport function isSlimCoreRTModuleAvailable(): boolean {\r\n    return !!((window as any).SlimCoreRT\r\n        && (window as any).SlimCoreRT.SlimCore\r\n        && (window as any).SlimCoreRT.SlimCore.Enums);\r\n}\r\n\r\nfunction firstLetterToUpperCase(inputString: string): string {\r\n    return inputString[0].toUpperCase() + inputString.substr(1);\r\n}\r\n\r\nfunction correctEnumObjectValueName(enumObject: Object, valueName: string): void {\r\n    const correctedValueName = firstLetterToUpperCase(valueName);\r\n    if (correctedValueName !== valueName) {\r\n        const value = enumObject[valueName];\r\n        enumObject[value] = correctedValueName;\r\n        delete enumObject[valueName];\r\n        enumObject[correctedValueName] = value;\r\n    }\r\n}\r\n\r\nfunction correctEnumObjectValueNames(enumObject: Object): void {\r\n    Object.keys(enumObject).forEach(key => {\r\n        correctEnumObjectValueName(enumObject, key);\r\n    });\r\n}\r\n\r\nfunction correctAllEnumObjectsForValueNames(enumObjects: Object): void {\r\n    Object.keys(enumObjects).forEach(key => {\r\n        correctEnumObjectValueNames(enumObjects[key]);\r\n    });\r\n}\r\n\r\nfunction copyEnumObject(sourceKey: string, sourceValue: Object, destination: Object): void {\r\n    destination[sourceKey] = {};\r\n    Object.keys(sourceValue).forEach(key => {\r\n        destination[sourceKey][key] = sourceValue[key];\r\n    });\r\n}\r\n\r\nfunction copyAllEnumObjects(source: Object, destination: Object): void {\r\n    Object.keys(source).forEach(key => {\r\n        copyEnumObject(key, source[key], destination);\r\n    });\r\n}\r\n\r\nconst AVAILABLE_VIDEO_STATES = [Enums.VideoStatus.Available, Enums.VideoStatus.Starting, Enums.VideoStatus.Running];\r\n\r\nexport type Wrapped<T, U> = T & Required<SlimCore.EventEmitter<U>>;\r\n\r\nfunction isMatch<T>(value: T, pattern: Partial<T>) {\r\n    // tslint:disable-next-line:no-for-in\r\n    for (const key in pattern) {\r\n        if (!pattern.hasOwnProperty(key)) {\r\n            continue;\r\n        }\r\n        if (value[key] !== pattern[key]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction makeFilteredListener<U>(listener: SlimCore.EventHandler<U[keyof U]>, filter: Partial<U[keyof U]>) {\r\n    return (args: U[keyof U]) => {\r\n        if (isMatch(args, filter)) {\r\n            listener(args);\r\n        }\r\n    };\r\n}\r\n\r\nexport function wrap<T extends SlimCore.EventEmitter<U>, U>(target: T, settings: Partial<SlimCoreSettings> = {}): Wrapped<T, U> {\r\n    const handle = (event: keyof U, filter: Partial<U[keyof U]>, listener: SlimCore.EventHandler<U[keyof U]>) => {\r\n\r\n        const callback = filter ? makeFilteredListener(listener, filter) : listener;\r\n\r\n        target.addListener(event, callback);\r\n\r\n        return {\r\n            dispose: () => {\r\n                target.removeListener(event, callback);\r\n            }\r\n        };\r\n    };\r\n\r\n    if (settings.enableNativeHandle && 'handle' in target) {\r\n        return target as Wrapped<T, U>;\r\n    }\r\n\r\n    return _.assign(target, { handle });\r\n}\r\n\r\nexport type Engine = Wrapped<SlimCore.Engine, SlimCore.Engine.Events>;\r\nexport type Account = Wrapped<SlimCore.Account, SlimCore.Account.Events>;\r\nexport type CallHandler = Wrapped<SlimCore.CallHandler, SlimCore.CallHandler.Events>;\r\nexport type ContentSharing = Wrapped<SlimCore.ContentSharing, SlimCore.ContentSharing.Events>;\r\n\r\nexport enum PlatformType {\r\n    Electron = 1,\r\n    Uwp = 2\r\n}\r\n\r\nexport type Settings = SlimCoreSettings & {\r\n    platform: PlatformType;\r\n};\r\n\r\nexport interface IVideoObjectChangedEventData {\r\n    videoObjectId: number;\r\n    videoType: Enums.VideoType;\r\n    videoStatus: Enums.VideoStatus;\r\n}\r\n\r\nexport interface IParticipantVideosChangedEventData {\r\n    videos: { [type: number]: IVideoObjectChangedEventData[] };\r\n    participantId: string;\r\n}\r\n\r\nexport function forgetAndLog(promise: Promise<any>, _logger: IInternalLogger, logMessage: string): Promise<any> {\r\n    if (promise) {\r\n        _logger.info(`Promise executing: ${logMessage}`);\r\n        return promise.catch(err => {\r\n            _logger.logFailure(`Promise execution failed: ${err}`);\r\n        });\r\n    }\r\n\r\n    _logger.logFailure(`Undefined promise @ ${new Error().stack}`);\r\n    return Promise.resolve<void>();\r\n}\r\n\r\nexport function getStrProperty(slimcoreObject: SlimCore.CallHandler | SlimCore.Engine, logger: IInternalLogger, objectId: SlimCore.ObjectId, propertyKey: SlimCore.Enums.Property, fallback?: string): string {\r\n    try {\r\n        return slimcoreObject.getStrProperty(objectId, propertyKey);\r\n    } catch (error) {\r\n        logger.logFailure(`getStrProperty failed for objectId=${objectId}, propertyKey=${propertyKey}: ${error}`);\r\n        return fallback;\r\n    }\r\n}\r\n\r\nexport function getIntProperty(slimcoreObject: SlimCore.CallHandler | SlimCore.Engine, logger: IInternalLogger, objectId: SlimCore.ObjectId, propertyKey: SlimCore.Enums.Property, fallback?: number): number {\r\n    try {\r\n        return slimcoreObject.getIntProperty(objectId, propertyKey);\r\n    } catch (error) {\r\n        logger.logFailure(`getIntProperty failed: ${error}`);\r\n        return fallback;\r\n    }\r\n}\r\n\r\nexport function hasFeature(feature: Enums.Feature): boolean {\r\n    return feature in Enums.Feature;\r\n}\r\n\r\ntype CancelEventHandler = () => void;\r\nexport class VideoStateCancelEvent extends EventSourceImpl<CancelEventHandler> {\r\n    public fire(): void {\r\n        this.raiseEvents(e => e());\r\n    }\r\n}\r\n\r\nexport interface VideoObjectStateWaitOptions {\r\n    slimcoreInstance: Engine;\r\n    slimcoreObject: any; // HODOR\r\n    videoObjectId: number;\r\n    logger: IInternalLogger;\r\n    resolveStates: Enums.VideoStatus[];\r\n    rejectStates?: Enums.VideoStatus[];\r\n    timeout?: number;\r\n    cancelEvent?: VideoStateCancelEvent;\r\n}\r\n\r\n/*\r\n * Hooks up a property change callback and awaits (with a timeout or indefinitely) for\r\n * video available state. If timeout hits, looks up value once before rejecting promise\r\n */\r\nexport function waitForVideoObjectState(options: VideoObjectStateWaitOptions): Promise<void> {\r\n    return new Promise<void>((resolve: () => void, reject: (error?: any) => void) => {\r\n        let done = false;\r\n        let videoStateChangedCallback: IDisposable = null;\r\n        let timeoutId = 0;\r\n        let cancelSub: IDisposable;\r\n\r\n        const _cleanupAndReturn = (error?: string) => {\r\n            done = true;\r\n            if (videoStateChangedCallback) {\r\n                videoStateChangedCallback.dispose();\r\n                videoStateChangedCallback = null;\r\n            }\r\n            if (timeoutId) {\r\n                clearTimeout(timeoutId);\r\n                timeoutId = 0;\r\n            }\r\n            if (cancelSub) {\r\n                cancelSub.dispose();\r\n            }\r\n            if (error) {\r\n                reject(error);\r\n            } else {\r\n                resolve();\r\n            }\r\n        };\r\n\r\n        const onVideoObjectStateChanged = (value: Enums.VideoStatus) => {\r\n            if (done) { return; }\r\n\r\n            options.logger.info(`waitForVideoObjectState[${options.videoObjectId}] state changed -> ${value} (${Enums.VideoStatus[value]})`);\r\n\r\n            if (isVideoInState(value, options.resolveStates)) {\r\n                _cleanupAndReturn();\r\n            } else if (options.rejectStates && isVideoInState(value, options.rejectStates)) {\r\n                _cleanupAndReturn(`waitForVideoObjectState[${options.videoObjectId}] rejecting state ${value} (${Enums.VideoStatus[value]})`);\r\n            }\r\n        };\r\n\r\n        const timeoutHandler = () => {\r\n            if (done) { return; }\r\n\r\n            options.logger.info(`waitForVideoObjectState[${options.videoObjectId}] timeout. Checking state again.`);\r\n\r\n            const videoStatus = getIntProperty(options.slimcoreObject, options.logger, options.videoObjectId, Enums.Property.VideoStatus);\r\n\r\n            if (isVideoInState(videoStatus, options.resolveStates)) {\r\n                _cleanupAndReturn();\r\n            } else if (options.rejectStates && isVideoInState(videoStatus, options.rejectStates)) {\r\n                _cleanupAndReturn(`waitForVideoObjectState[${options.videoObjectId}] rejecting state ${videoStatus}`);\r\n            } else {\r\n                _cleanupAndReturn(`waitForVideoObjectState[${options.videoObjectId}] timeout.`);\r\n            }\r\n        };\r\n\r\n        if (options.timeout) {\r\n            timeoutId = setTimeout(timeoutHandler, options.timeout);\r\n        }\r\n\r\n        if (options.cancelEvent) {\r\n            cancelSub = options.cancelEvent.subscribe(() => {\r\n                options.logger.info(`waitForVideoObjectState[${options.videoObjectId}] canceled.`);\r\n                _cleanupAndReturn(`waitForVideoObjectState[${options.videoObjectId}] canceled.`);\r\n            });\r\n        }\r\n\r\n        videoStateChangedCallback = options.slimcoreInstance.handle(\r\n            'object-property-changed',\r\n            { objectId: options.videoObjectId, propKey: Enums.Property.VideoStatus },\r\n            data => onVideoObjectStateChanged(data.value as number));\r\n\r\n        const videoStatus = getIntProperty(options.slimcoreObject, options.logger, options.videoObjectId, Enums.Property.VideoStatus);\r\n        onVideoObjectStateChanged(videoStatus);\r\n    });\r\n}\r\n\r\nexport function isVideoInState(state: Enums.VideoStatus, expected: Enums.VideoStatus[]): boolean {\r\n    return expected.indexOf(state) !== -1;\r\n}\r\n\r\nexport function videoObjectTimeout(settings: Settings): number {\r\n    return (settings.platform === PlatformType.Uwp) ? 5000 : 500;\r\n}\r\n\r\nexport function waitForVideoObjectToBeAvailable(\r\n    slimcoreInstance: Engine,\r\n    slimcoreObject: any, //HODOR\r\n    videoObjectId: number,\r\n    logger: IInternalLogger,\r\n    timeout?: number,\r\n    cancelEvent?: VideoStateCancelEvent): Promise<void> {\r\n    return waitForVideoObjectState({\r\n        slimcoreInstance,\r\n        slimcoreObject,\r\n        videoObjectId,\r\n        logger,\r\n        resolveStates: AVAILABLE_VIDEO_STATES,\r\n        rejectStates: [],\r\n        timeout,\r\n        cancelEvent\r\n    });\r\n}\r\n\r\n// This is for remote video to assure video is running\r\nexport function waitForVideoObjectToBeRunning(\r\n    slimcoreInstance: Engine,\r\n    slimcoreObject: any, //HODOR\r\n    videoObjectId: number,\r\n    logger: IInternalLogger,\r\n    timeout?: number,\r\n    cancelEvent?: VideoStateCancelEvent): Promise<void> {\r\n    return waitForVideoObjectState({\r\n        slimcoreInstance,\r\n        slimcoreObject,\r\n        videoObjectId,\r\n        logger,\r\n        resolveStates: [Enums.VideoStatus.Running],\r\n        rejectStates: [Enums.VideoStatus.Stopping],\r\n        timeout,\r\n        cancelEvent\r\n    });\r\n}\r\n\r\n// note this is for remote video to assure that when remote video gets stopped and binding released that remote video did actually release the underlying video sink to the available sinks pool\r\n// waiting for not started, not available but also available because some transitions can happen sequentially inside slimcore\r\n// when remote end stops sending then we end up in not started state, if we just stopped then video goes back to available (because remote still sends)\r\n// not available is on case of sink aquisition falure (non fatal) but for paranoia we monitor that aswell\r\nexport function waitForVideoObjectToBeStopped(\r\n    slimcoreInstance: Engine,\r\n    slimcoreObject: any, //HODOR\r\n    videoObjectId: number,\r\n    logger: IInternalLogger,\r\n    timeout?: number,\r\n    cancelEvent?: VideoStateCancelEvent): Promise<void> {\r\n    return waitForVideoObjectState({\r\n        slimcoreInstance,\r\n        slimcoreObject,\r\n        videoObjectId,\r\n        logger,\r\n        resolveStates: [ Enums.VideoStatus.NotStarted, Enums.VideoStatus.Available, Enums.VideoStatus.NotAvailable],\r\n        rejectStates: [],\r\n        timeout,\r\n        cancelEvent\r\n    });\r\n}\r\n\r\nexport function isVideoAvailable(state: Enums.VideoStatus) {\r\n    return isVideoInState(state, AVAILABLE_VIDEO_STATES);\r\n}\r\n\r\nexport function bufferToString(buf: Uint8Array): string {\r\n    return String.fromCharCode.apply(null, buf);\r\n}\r\n\r\nexport function stringToBuffer(msg: string): Uint8Array {\r\n    const buf = new ArrayBuffer(msg.length);\r\n    const bufView = new Uint8Array(buf);\r\n    for (let i = 0; i < msg.length; i++) {\r\n        bufView[i] = msg.charCodeAt(i);\r\n    }\r\n    return bufView;\r\n}\r\n\r\nexport function mapMediaTypeStringToMediaType(mediaTypeStr: string): MediaType {\r\n    switch (mediaTypeStr) {\r\n        case 'audio':\r\n            return MediaType.Audio;\r\n        case 'video':\r\n            return MediaType.Video;\r\n        case 'panoramic-video':\r\n            return MediaType.PanoramicVideo;\r\n        case 'applicationsharing-video':\r\n            return MediaType.ScreenShare;\r\n        case 'data':\r\n            return MediaType.Data;\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\n\r\nexport function mapToEmptyStrIfFalsy(inputString: string): string {\r\n    if (inputString) {\r\n        return inputString;\r\n    } else {\r\n        return '';\r\n    }\r\n}\r\n\r\nexport function hasCreateDataSource(engine: Engine) {\r\n    return !!(engine.createDataSource || SlimCore.createDataSource);\r\n}\r\n\r\nexport function hasCreateDataSink(engine: Engine) {\r\n    return !!(engine.createDataSink || SlimCore.createDataSink);\r\n}\r\n\r\nexport function createDataSource(engine: Engine, dataId: number) {\r\n    if (engine.createDataSource) {\r\n        return engine.createDataSource(dataId);\r\n    } else {\r\n        return SlimCore.createDataSource(dataId);\r\n    }\r\n}\r\n\r\nexport function createDataSink(engine: Engine, dataId: number) {\r\n    if (engine.createDataSink) {\r\n        return engine.createDataSink(dataId);\r\n    } else {\r\n        return SlimCore.createDataSink(dataId);\r\n    }\r\n}\r\n\r\nexport function convertImageData(image: SlimCore.ImageData) {\r\n    if (image.isImage) {\r\n        return (image as any) as ImageData;\r\n    } else {\r\n        const array = image.data as Uint8Array;\r\n        const data = new Uint8ClampedArray(array.buffer, array.byteOffset, array.byteLength);\r\n        return new ImageData(data, image.width, image.height);\r\n    }\r\n}\r\n\r\nexport function convertEndpointScope(value: RemoveEndpointScope): Enums.RemoveEndpointScope {\r\n    switch (value) {\r\n        case RemoveEndpointScope.Specified:\r\n            return Enums.RemoveEndpointScope.RemoveEndpointScopeSpecified;\r\n        case RemoveEndpointScope.Other:\r\n            return Enums.RemoveEndpointScope.RemoveEndpointScopeOther;\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\n\r\nexport function selectMonitorForScreenSharing(selectedMonitor: SlimCore.MonitorInfo, monitors: SlimCore.MonitorInfo[]): SlimCore.MonitorInfo {\r\n    const pickSameMonitor = (monitors: SlimCore.MonitorInfo[]) => {\r\n        return _.find(monitors, monitor => {\r\n            return monitor.monitorId === selectedMonitor.monitorId || _.isEqual(monitor.region, selectedMonitor.region);\r\n        });\r\n    };\r\n\r\n    const handleDuplicateToExtend = (monitors: SlimCore.MonitorInfo[]) => {\r\n        // if display configuration changes from duplicate to extend:\r\n        // desktop will share the primary screen, there is no internal concept\r\n        // laptop will share the extenal screen\r\n        if (selectedMonitor.isDuplicated && isExtendConfiguration(monitors)) {\r\n            // continue sharing the external screen\r\n            return _.find(monitors, monitor => !monitor.isInternal);\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const handleExtendToDuplicate = (monitors: SlimCore.MonitorInfo[]) => {\r\n        // if display configuration changes from extend to duplicate\r\n        if (!selectedMonitor.isDuplicated && isDuplicateConfiguration(monitors)) {\r\n            // continue sharing the primary monitor\r\n            return _.find(monitors, monitor => monitor.isPrimary);\r\n        }\r\n        return null;\r\n    };\r\n    return (!selectedMonitor) ? null : handleDuplicateToExtend(monitors) || handleExtendToDuplicate(monitors) || pickSameMonitor(monitors);\r\n}\r\n\r\nfunction isExtendConfiguration(monitors: SlimCore.MonitorInfo[]): boolean {\r\n    const duplicated = count(monitors, monitor => monitor.isDuplicated);\r\n    const primary = count(monitors, monitor => monitor.isPrimary);\r\n    return duplicated === 0 && primary === 1 && monitors.length > 1;\r\n}\r\n\r\nfunction isDuplicateConfiguration(monitors: SlimCore.MonitorInfo[]): boolean {\r\n    const duplicated = count(monitors, monitor => monitor.isDuplicated);\r\n    const primary = count(monitors, monitor => monitor.isPrimary);\r\n    return duplicated === 1 && primary === 1;\r\n}\r\n\r\nfunction count<T>(collection: T[], predicate: (value: T) => boolean): number {\r\n    return _.reduce(collection, (result, item) => predicate(item) ? result + 1 : result, 0);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreCommon.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 1\n// module chunks = 0","import { CauseId } from 'skype-calling-interface';\r\nconst CAUSEID_LENGTH = 8;\r\n/**\r\n * causeId.ts\r\n * Author: Richard Speyer\r\n * Copyright: Microsoft 2017\r\n *\r\n * Simple cause ID generator\r\n *\r\n * Cause IDs are basically random numbers that are passed along through asynchronous\r\n * operations and logged out at various points. They are extremely powerful in debugging\r\n * asynchronous codeflows and understanding data flows\r\n */\r\n\r\nexport function generateCauseId(): CauseId {\r\n    /* tslint:disable:insecure-random */\r\n    const alphanumerals = 'abcdefghijklmnopqrstuvwxyz0123456789';\r\n    const lenAlphanumerals = alphanumerals.length;\r\n    let causeId = '';\r\n    for (let i = 0; i < CAUSEID_LENGTH; i++) {\r\n        causeId += alphanumerals.charAt(Math.floor(Math.random() * lenAlphanumerals));\r\n    }\r\n    return causeId;\r\n}\r\n\r\nexport function validateCauseId(causeId: string): causeId is CauseId {\r\n    // expected format is CAUSEID_LENGTH lower case alphanumerals.\r\n    const regExp = new RegExp('^[a-z0-9]{8}$');\r\n    return regExp.test(causeId) && causeId.length === CAUSEID_LENGTH;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../common/ts/causeId.ts","import { CauseId, IDisposable } from 'skype-calling-interface';\r\n\r\nimport { IInternalLogger } from '../../common/ts/internalLogger';\r\nimport ObservableBase from '../../common/ts/observableBase';\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\n\r\ntype ObjectPropertyChangedCallback = SlimCore.EventHandler<SlimCore.Engine.Events.ObjectPropertyChangedArgs>;\r\n\r\nabstract class SlimCoreElectronBase<T> extends ObservableBase<T> implements IDisposable {\r\n\r\n    private _disposables: IDisposable[] = [];\r\n    private _objectPropertyChangedHandlers: Map<SlimCore.ObjectId, Map<SlimCore.Enums.Property, ObjectPropertyChangedCallback>> = new Map();\r\n\r\n    protected constructor(\r\n        protected _logger: IInternalLogger,\r\n        protected _settings: SlimCoreCommon.Settings,\r\n        protected _slimcoreInstance: SlimCoreCommon.Engine\r\n    ) {\r\n        super(_logger);\r\n    }\r\n\r\n    public dispose(causeId?: CauseId) {\r\n        this._logger.info('dispose');\r\n\r\n        this._disposables.forEach(disposable => disposable.dispose(causeId));\r\n        this._disposables = [];\r\n\r\n        this._objectPropertyChangedHandlers.clear();\r\n\r\n        super.dispose();\r\n    }\r\n\r\n    protected _registerDisposable(disposable: IDisposable) {\r\n        if (!disposable) {\r\n            this._logger.error(`Attempt to register null disposable, ignoring`);\r\n            return;\r\n        }\r\n        this._disposables.push(disposable);\r\n    }\r\n\r\n    protected _getProperties<T extends SlimCore.StrProperties, U extends SlimCore.IntProperties>(callHandler: SlimCore.CallHandler, objectId: SlimCore.ObjectId, strProperties: T, intProperties: U): SlimCore.PropertyResults<T, U>  {\r\n        if (callHandler.getProperties && this._settings.enableNativeGetProperties) {\r\n            return callHandler.getProperties(objectId, strProperties, intProperties);\r\n        }\r\n\r\n        const result = {};\r\n\r\n        for (const key of Object.keys(strProperties)) {\r\n            const item = strProperties[key];\r\n            result[key] = SlimCoreCommon.getStrProperty(callHandler, this._logger, item.objectId || objectId, item.propKey, item.fallback);\r\n        }\r\n\r\n        for (const key of Object.keys(intProperties)) {\r\n            const item = intProperties[key];\r\n            result[key] = SlimCoreCommon.getIntProperty(callHandler, this._logger, item.objectId || objectId, item.propKey, item.fallback);\r\n        }\r\n\r\n        return result as SlimCore.PropertyResults<T, U>;\r\n    }\r\n\r\n    protected _getStrProperty(callHandler: SlimCore.CallHandler, objectId: SlimCore.ObjectId, propertyKey: SlimCore.Enums.Property, fallback?: string): string {\r\n        return SlimCoreCommon.getStrProperty(callHandler, this._logger, objectId, propertyKey, fallback);\r\n    }\r\n\r\n    protected _getIntProperty(callHandler: SlimCore.CallHandler, objectId: SlimCore.ObjectId, propertyKey: SlimCore.Enums.Property, fallback?: number): number {\r\n        return SlimCoreCommon.getIntProperty(callHandler, this._logger, objectId, propertyKey, fallback);\r\n    }\r\n\r\n    protected _onObjectPropertyChanged(objectId: SlimCore.ObjectId, propKey: SlimCore.Enums.Property, listener: ObjectPropertyChangedCallback) {\r\n        if (!this._objectPropertyChangedHandlers.has(objectId)) {\r\n            this._objectPropertyChangedHandlers.set(objectId, new Map());\r\n\r\n            this._registerDisposable(this._slimcoreInstance.handle(\r\n                'object-property-changed',\r\n                { objectId },\r\n                data => this._onObjectPropertyChangedCallback(data)\r\n            ));\r\n        }\r\n\r\n        const handlers = this._objectPropertyChangedHandlers.get(objectId);\r\n        handlers.set(propKey, listener);\r\n    }\r\n\r\n    protected _onObjectPropertyChangedCallback(data: SlimCore.Engine.Events.ObjectPropertyChangedArgs) {\r\n        const handlers = this._objectPropertyChangedHandlers.get(data.objectId);\r\n        if (!handlers) { return; }\r\n\r\n        const handler = handlers.get(data.propKey);\r\n\r\n        if (this._settings.enableSlimCoreEventsCounting) {\r\n            const propKey = SlimCore.Enums.Property[data.propKey] || data.propKey;\r\n            const objectType = SlimCore.Enums.ObjectType[data.objectType] || data.objectType;\r\n            this._logger.debug(`_onObjectPropertyChangedCallback - objectId: ${data.objectId}, objectType: ${objectType}, propKey: ${propKey}, value: ${data.value}, handler: ${!!handler}`);\r\n        }\r\n\r\n        if (handler) {\r\n            handler.call(this, data);\r\n        }\r\n    }\r\n\r\n    protected raiseChanged(): void {\r\n        try {\r\n            super.raiseChanged();\r\n        } catch (err) {\r\n            this._logger.error(`Change handling error: ${err}`);\r\n        }\r\n    }\r\n\r\n    protected _raiseEventImpl(eventName: string, ...args: any[]): void {\r\n        try {\r\n            super._raiseEventImpl(eventName, ...args);\r\n        } catch (err) {\r\n            this._logger.error(`Event '${eventName}' handling error: ${err}`);\r\n        }\r\n    }\r\n}\r\n\r\nexport default SlimCoreElectronBase;\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronBase.ts","// executes exec function immediately as if it were an async call, and handles errors correctly\r\nexport function asap<T>(exec: () => T): Promise<T> {\r\n    return new Promise<T>(resolve => {\r\n        resolve(exec());\r\n    });\r\n}\r\n\r\nexport class TimeoutError extends Error { }\r\n\r\nexport class Timer {\r\n    private timeoutId: number;\r\n\r\n    constructor(private ontimeout: () => void) { }\r\n\r\n    public start(timeout: number) {\r\n        this.timeoutId = setTimeout(this.ontimeout, timeout);\r\n    }\r\n\r\n    public stop() {\r\n        clearTimeout(this.timeoutId);\r\n    }\r\n}\r\n\r\nexport type Deferred<T> = {\r\n    resolve(value?: T | Thenable<T>): void;\r\n    reject(error: any): void;\r\n    promise: Promise<T>;\r\n};\r\n\r\nexport function defer<T>(): Deferred<T> {\r\n    let resolve;\r\n    let reject;\r\n    const promise = new Promise<T>((resolveFn, rejectFn) => {\r\n        resolve = resolveFn;\r\n        reject = rejectFn;\r\n    });\r\n    return { promise, resolve, reject };\r\n}\r\n\r\nexport function timedDefer<T>(timeout: number, timeoutMessage = `deferred timed out after ${timeout}ms`): Deferred<T> {\r\n    let resolve;\r\n    let reject: (error: any) => void;\r\n    const rejectTimer = new Timer(() => reject(new TimeoutError(timeoutMessage)));\r\n    const promise = new Promise<T>((resolveFn, rejectFn) => {\r\n        resolve = (value?: T | Thenable<T>) => {\r\n            rejectTimer.stop();\r\n            resolveFn(value);\r\n        };\r\n        reject = (error: Error) => {\r\n            rejectTimer.stop();\r\n            rejectFn(error);\r\n        };\r\n    });\r\n    rejectTimer.start(timeout);\r\n    return { promise, resolve, reject };\r\n}\r\n\r\nexport function delay(time: number): Promise<void> {\r\n    // tslint:disable-next-line: no-string-based-set-timeout\r\n    return new Promise(resolve => setTimeout(resolve, time));\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../common/ts/async.ts","import { pii } from '@skype/rt-js-bindings';\r\n\r\nexport function scrubMriOrOmit(mri: any) {\r\n    if (typeof mri === 'string') {\r\n        return pii.Mri(mri);\r\n    } else {\r\n        return pii.Omit(mri as string);\r\n    }\r\n}\r\n\r\nexport function scrubMriOrOmitList(mriList: any[]) {\r\n    return mriList.forEach(scrubMriOrOmit);\r\n}\r\n\r\nexport function mriOrId(mriOrId: string): string;\r\nexport function mriOrId(mriOrId: undefined): undefined;\r\nexport function mriOrId(mriOrId: string | undefined): string | undefined;\r\nexport function mriOrId(mriOrId: string | undefined): string | undefined {\r\n    return mriOrId && pii.Mri(mriOrId);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../common/ts/piiUtils.ts","// tslint:disable-next-line\r\nexport function noop(): void { undefined; }\r\n\n\n\n// WEBPACK FOOTER //\n// ../common/ts/fn.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@skype/rt-js-bindings\"\n// module id = 7\n// module chunks = 0","// Internal operations must be prefixed with _ to exclude from dashboards\r\n\r\nexport enum CALL_OPERATIONS {\r\n    INITIALIZE = 'Initialize',\r\n    START_CALL = 'StartCall',\r\n    START_TRANSFER_TARGET_CALL = 'StartTransferTargetCall',\r\n    STOP_CALL = 'StopCall',\r\n    STOP_CALL_WITH_BEACON = 'StopCallWithBeacon',\r\n    JOIN_CALL = 'JoinCall',\r\n    JOIN_PREHEATED_CALL = 'JoinPreheatedCall',\r\n    SUBSCRIBE = 'Subscribe',\r\n    START_CALL_TO_VOICE_MAIL = 'StartCallToVoiceMail',\r\n    ACKNOWLEDGE = 'Acknowledge',\r\n    ACCEPT = 'Accept',\r\n    REJECT = 'Reject',\r\n    START_VIDEO = 'StartVideo',\r\n    STOP_VIDEO = 'StopVideo',\r\n    HOLD = 'Hold',\r\n    UNHOLD = 'Unhold',\r\n    UPDATE_ENDPOINT_METADATA = 'UpdateEndpointMetadata',\r\n    SEND_DTMF_TONE = 'SendDtmfTone',\r\n    SET_AUDIO_USAGE = 'SetAudioUsage',\r\n    DUMP_VIDEO_SOURCE_IMAGES = 'DumpVideoSourceImages',\r\n    BLIND_TRANSFER = 'BlindTransfer',\r\n    SAFE_TRANSFER = 'SafeTransfer',\r\n    TRANSFER_TO_VOICEMAIL = 'TransferToVoicemail',\r\n    CONSULTATIVE_TRANSFER = 'ConsultativeTransfer',\r\n    START_SCREEN_SHARING = 'StartScreenSharing',\r\n    STOP_SCREEN_SHARING = 'StopScreenSharing',\r\n    START_DATA_CHANNEL = 'StartDataChannel',\r\n    STOP_DATA_CHANNEL = 'StopDataChannel',\r\n    SHARE_SYSTEM_SOUNDS = 'ShareSystemSounds',\r\n    MUTE = 'Mute',\r\n    UNMUTE = 'Unmute',\r\n    MUTE_SPEAKER = 'MuteSpeaker',\r\n    UNMUTE_SPEAKER = 'UnmuteSpeaker',\r\n    MUTE_PARTICIPANTS = 'MuteParticipants',\r\n    UPDATE_MEETING_ROLE = 'UpdateMeetingRole',\r\n    START_AUDIO = 'StartAudio',\r\n    STOP_AUDIO = 'StopAudio',\r\n    ASSIMILATE = 'Assimilate',\r\n    SET_MAX_VIDEO_CHANNELS = 'SetMaxVideoChannels',\r\n    CREATE_CONTENT_SHARING_SESSION = 'CreateContentSharingSession',\r\n    START_CALL_WITH_NUDGE = 'StartCallWithNudge',\r\n    START_CALL_AND_UNPARK = 'StartCallAndUnpark',\r\n    PARK_CALL = 'ParkCall',\r\n    NUDGE_PARTICIPANTS = 'NudgeParticipants',\r\n    LWJ_FALLBACK = 'LwjFallback',\r\n    ELECTRON_PROVIDE_CQF = 'ElectronProvideCQF',\r\n    MERGE_CALL = 'MergeCall',\r\n    ADD_GROUP_MODALITY = 'AddGroupModality',\r\n    MERGE_WITH_PICKUP_CODE = 'MergeWithPickupCode'\r\n}\r\n\r\nexport enum CALL_OPERATIONS_INTERNAL {\r\n    CALL_START_OR_JOIN_INITIATED = '_CallStartOrJoinInitiated',\r\n    INCOMING_INITIALIZE = '_IncomingInitialize',\r\n    CALL_ENDED = '_CallEnded',\r\n    RECONNECT = '_Reconnect',\r\n    RENEGOTIATE = '_Renegotiate',\r\n    RENEGOTIATE_OUTGOING = '_RenegotiateOutgoing',\r\n    RENEGOTIATE_INCOMING = '_RenegotiateIncoming',\r\n    COMPLETE_NEGOTIATION_FAILED = '_CompleteNegotiationFailed',\r\n    UPDATE_LOCAL_MEDIA_STATUS = '_UpdateLocalMediaStatus',\r\n    START_PREVIEW_VIDEO = '_StartPreviewVideo',\r\n    START_LOCAL_VIDEO = '_StartLocalVideo',\r\n    SET_LOCAL_VIDEO = '_SetLocalVideo',\r\n    CALL_TRANSFER_IN_PROGRESS = '_CallTransferInProgress',\r\n    ON_TRANSFER_REQUESTED = '_OnTransferRequested',\r\n    ON_TRANSFER_REQUESTED_INVALID = '_OnTransferRequestedInvalid',\r\n    ON_INCOMING_CALL_REPLACEMENT = '_onIncomingCallReplacement',\r\n    GET_CALL_REPLACEMENT_DETAILS = '_GetCallReplacementDetails',\r\n    SET_CALL_STATE = '_SetCallState',\r\n    SET_TRANSFER_STATE = '_SetTransferState',\r\n    SET_PARK_STATE = '_SetParkState',\r\n    SET_MUTED = '_SetMuted',\r\n    SET_MUTED_SPEAKER = '_SetMutedSpeaker',\r\n    SET_SCREEN_SHARING = '_SetScreenSharing',\r\n    SET_CALL_ORIGIN = '_SetCallOrigin',\r\n    CONNECT_CALL = '_ConnectCall',\r\n    WAIT_FOR_ANSWER = '_WaitForAnswer',\r\n    MEDIA_ACKNOWLEDGMENT = '_MediaAcknowledgment',\r\n    SIGNALING_STATE_CHANGED = '_SignalingStateChanged',\r\n    CALL_TERMINATION_INFO = '_CallTerminationInfo',\r\n    MEDIA_WHITELISTING_ISSUE_DETECTED = '_MediaWhiteListingIssueDetected',\r\n    CALL_ESCALATED_TO_CONFERENCE = '_CallEscalatedToConference',\r\n    WEB_ON_OFFER = '_WebOnOffer',\r\n    WEB_ON_ANSWER = '_WebOnAnswer',\r\n    WEB_ON_RETARGET_SUCCESS = '_WebRetargetSuccess',\r\n    WEB_ON_RETARGET_FAILURE = '_WebRetargetFailure',\r\n    WEB_ON_ESCALATION_SUCCESS = '_WebOnEscalationSuccess',\r\n    WEB_ON_ESCALATION_FAILURE = '_WebOnEscalationFailure',\r\n    CALL_USES_MIXER = '_CallUsesMixer',\r\n    ESCALATION_IN_PROGRESS = '_EscalationInProgress',\r\n    ESCALATION_COMPLETED = '_EscalationCompleted',\r\n    ELECTRON_WAIT_FOR_HANDLE_PUSH = '_ElectronWaitForHandlePush',\r\n    ELECTRON_WAIT_FOR_RINGING = '_ElectronWaitForRinging',\r\n    ELECTRON_START_SCREEN_SHARING = '_ElectronStartScreenSharing',\r\n    ELECTRON_STOP_SCREEN_SHARING = '_ElectronStopScreenSharing',\r\n    ELECTRON_SLIMCORE_READY = '_ElectronSlimcoreReady',\r\n    ELECTRON_DATA_CHANNEL_CREATED = '_ElectronDataChannelCreated',\r\n    ELECTRON_ATTACH_SLIMCORE_CALL = '_ElectronAttachSlimcoreCall',\r\n    ELECTRON_ATTACH_SLIMCORE_CALL_FAILED = '_ElectronAttachSlimcoreCallFailed',\r\n    ELECTRON_LEAVE_CALL = '_ElectronLeaveCall',\r\n    PROCESS_CALL_START_OPTIONS = '_ProcessCallStartOptions'\r\n}\r\n\r\nexport enum OPERATION_VARIANTS {\r\n    CCWM = 'CCWM',\r\n    ENCRYPTED = 'Encrypted',\r\n    LWJ = 'LWJ',\r\n    PREHEAT = 'Preheat'\r\n}\r\n\r\nexport enum MEDIA_EVENT {\r\n    AUDIO_QUALITY_CHANGED = 'AudioQualityChanged',\r\n    SESSION_ERROR = 'SessionError',\r\n    NEGOTIATION_REQUIRED = 'NegotiationRequired',\r\n    OUTGOING_NEGOTIATION_FAILURE = 'OutgoingNegotiationFailure',\r\n    INCOMING_NEGOTIATION_FAILURE = 'IncomingNegotiationFailure',\r\n    NEGOTIATION_FATAL_ERROR = 'NegotiationFatalError',\r\n    NEGOTIATION_COMPLETION = 'NegotiationCompletion',\r\n    AUDIO_STATE_CHANGED = 'AudioStateChanged',\r\n    INCOMPATIBLE_OFFER = 'IncompatibleOffer',\r\n    NEW_OFFER_FAILED = 'NewOfferFailed'\r\n}\r\n\r\nexport enum PARTICIPANT_OPERATIONS {\r\n    ADD_PARTICIPANT = 'AddParticipant',\r\n    REMOVE_PARTICIPANT = 'RemoveParticipant',\r\n    ADMIT_PARTICIPANT = 'AdmitParticipant',\r\n    CALL_ME_BACK = 'CallMeBack',\r\n    ADD_PARTICIPANTS = 'AddParticipants'\r\n}\r\n\r\nexport enum PARTICIPANT_OPERATIONS_INTERNAL {\r\n    SET_PARTICIPANT_STATE = '_SetParticipantState',\r\n    SET_PARTICIPANT_STATE_INVALID = '_SetParticipantStateInvalid',\r\n    UPDATE_PARTICIPANT_STREAM = '_UpdateParticipantStream',\r\n    UPDATE_LOCAL_PARTICIPANT_STREAM = '_UpdateLocalParticipantStream',\r\n    PARTICIPANT_JOINED = '_ParticipantJoined',\r\n    SELF_PARTICIPANT_UPDATED = '_SelfParticipantUpdated',\r\n    ELECTRON_ATTACH_SLIMCORE_PARTICIPANT_FAILED = '_ElectronAttachSlimcoreParticipantFailed'\r\n}\r\n\r\nexport enum CONTENT_SHARING_OPERATIONS {\r\n    START_CONTENT_SHARING = 'StartContentSharing',\r\n    STOP_CONTENT_SHARING = 'StopContentSharing',\r\n    JOIN_CONTENT_SHARING = 'JoinContentSharing',\r\n    TAKE_CONTENT_SHARING_CONTROL = 'TakeContentSharingControl',\r\n    UPDATE_CONTENT_SHARING_SESSION_STATE = 'UpdateContentSharingSessionState',\r\n    UPDATE_PARTICIPANT_STATE = 'UpdateParticipantState'\r\n}\r\n\r\nexport enum CONTENT_SHARING_OPERATIONS_INTERNAL {\r\n    SET_CONTENT_SHARING_STATUS = '_SetContentSharingStatus'\r\n}\r\n\r\nexport const UNPARK_CODE = {\r\n    PARK: '*11',\r\n    SHARED_LINE: '*12',\r\n    SERVER_HOLD: '*13'\r\n};\r\n\r\nexport enum TRANSACTION_END_CODE {\r\n    SUCCESS = 0,\r\n    FORBIDDEN = 403,\r\n    CLIENT_ERROR = 499,\r\n    SIGNALING_ERROR = 599\r\n}\r\n\r\nexport enum TRANSACTION_END_SUBCODE {\r\n    LOCAL_REJECT = 0,\r\n    TRANSACTION_NOT_ALLOWED = 3548\r\n}\r\n\r\nexport enum TRANSACTION_END_PHRASE {\r\n    TRANSACTION_COMPLETE = 'TransactionComplete',\r\n    TRANSACTION_ALLOWED = 'TransactionAllowed',\r\n    TRANSACTION_DISALLOWED = 'TransactionDisallowed',\r\n    UNKNOWN = 'Unknown'\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../common/ts/callConstants.ts","const PROP_WHITELIST = ['response', 'responseText', 'responseURL',\r\n    'status', 'state', 'statusText', 'timeout', 'withCredentials',\r\n    'stack', 'message', 'name', 'error', 'piiSafe', 'phase', 'code',\r\n    'participantId', 'endpointId', 'phrase', 'subCode', 'reason'];\r\n\r\nexport function getPIISafeObject(obj: any): { [key: string]: string | number } {\r\n    try {\r\n        return JSON.parse(JSON.stringify(obj, PROP_WHITELIST, 4));\r\n    } catch (e) {\r\n        return { error: 'failed to parse object' };\r\n    }\r\n}\r\nexport function getPrintableObject(obj: any, all = false): string {\r\n    const processStackTrace = (stack: string) => {\r\n        try {\r\n            return stack.split('\\n')[0];\r\n        } catch (e) {\r\n            return 'invalid stack';\r\n        }\r\n    };\r\n\r\n    if (obj === undefined) {\r\n        return 'void';\r\n    } else if (obj instanceof Error) {\r\n        return obj.toString();\r\n    } else if (obj instanceof String || obj instanceof Number || obj instanceof Boolean) {\r\n        return obj.toString();\r\n    } else {\r\n        try {\r\n            if (obj.stack) {\r\n                obj.stack = processStackTrace(obj.stack);\r\n            }\r\n            return (all ? JSON.stringify(obj) : JSON.stringify(obj, PROP_WHITELIST, 4)).replace(/(\\r\\n\\t|\\n|\\r\\t|\\s)/gm, '');\r\n        } catch (e) {\r\n            return `failed to get error information:${(obj && typeof obj.toString === 'function' && obj.toString())} ${(obj && obj.response && JSON.stringify(obj.response))}`;\r\n        }\r\n    }\r\n}\r\n\r\nexport function safeJsonStringify(obj: any) {\r\n    try {\r\n        return JSON.stringify(obj);\r\n    } catch (e) {\r\n        return 'failed to stringify obj';\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../common/ts/logUtils.ts","export function getTsCallingVersion() {\r\n    return '_TS_BUILD_VERSION_';\r\n}\r\n\r\nexport function getOvb() {\r\n    return '_TS_OVB_VERSION_';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../common/ts/tsCallingVersionProvider.ts","import {\r\n    AddGroupModalityPayload, AddParticipantPayload, AddParticipantsPayload, AnswerMediaType, AudioUsageMode, BroadcastMetadata, CallAcceptOptions, CallAcknowledgeResult,\r\n    CallAcknowledgeResultCode, CallEndDiagnosticsInfo, CallInitOptions, CallMergeOptions, CallOrigin, CallParticipantEndpointDetails, CallParticipantEndpoints, CallParticipantStreamMap,\r\n    CallProgressStatus, CallQueueInfo, CallStartOptions, CallState, CallType, CallVoicemailStartOptions, CauseId,\r\n    ConnectionType, ContentSharingStatus, DominantSpeakerInfo, DtmfTone, FailureType, ForwardingDestinationType, IBroadcastMeeting, ICall,\r\n    ICallEvents, ICallParticipant, ICallTransferContext, IContentSharingSession, IDisposable, ILocalMediaStream, IncomingCallPayload, IncomingCallType,\r\n    ISharingSource, JoinPreheatedCallOptions, MediaConfiguration, MediaDirection, MediaNegotiationStatusCode,\r\n    MediaPeerType, MediaType, MeetingDetails, MeetingInfo, MeetingRole, MuteFlags, MuteScope, ParkContext, ParkState,\r\n    ParticipantRosterRole, ParticipantState, ParticipantStateReason, PickUpCode, PreheatFlags, QualityChangedEvent, QualityEventType, QualityLevel,\r\n    Rectangle, RemoveEndpointScope, RoutingFlags, ScraperEventArgs, SelfCapabilities, SkypeConversationLiveState, SkypeIdentity,\r\n    StreamType, TerminatedReason, TransactionEnd, TransferorType, TransferState, TransferType, TransferVoicemailOptions\r\n} from 'skype-calling-interface';\r\n\r\nimport { ISlimCoreElectronApplicationHooks, TelemetryService } from '../typings/skype-calling-electron';\r\nimport SlimCoreElectronDataChannel, { IMediaDataChannelUser } from './SlimCoreElectronDataChannel';\r\n\r\nimport * as _ from 'lodash';\r\nimport * as async from '../../common/ts/async';\r\nimport { CALL_OPERATIONS, CALL_OPERATIONS_INTERNAL, OPERATION_VARIANTS, PARTICIPANT_OPERATIONS, PARTICIPANT_OPERATIONS_INTERNAL,\r\n    TRANSACTION_END_CODE, TRANSACTION_END_PHRASE, TRANSACTION_END_SUBCODE, UNPARK_CODE } from '../../common/ts/callConstants';\r\nimport CallTelemetry, { DIRECTION, getEndpointInformationForTelemetry, ICallTelemetry, SELF_PARTICIPANT_ROLE } from '../../common/ts/callTelemetry';\r\nimport { generateAliasedMri, MRI_SKYPE_PREFIX, stripMriAliases } from '../../common/ts/mriUtils';\r\nimport { callOperation, callStartOptions, causeId, OPERATION_TYPE, operationId, participantOperation } from '../../common/ts/operationDecorators';\r\nimport OperationHandler from '../../common/ts/operationHandler';\r\nimport * as piiUtils from '../../common/ts/piiUtils';\r\n\r\nimport { CONSTANTS } from '../../common/ts/constants';\r\nimport { ICallTestable } from '../../common/ts/internalInterfaces';\r\nimport * as stateUtils from '../../common/ts/state';\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\nimport SlimCoreElectronBase from './SlimCoreElectronBase';\r\nimport SlimCoreElectronCallParticipant, { CallParticipantData, participantIntProps, participantStrProps } from './SlimCoreElectronCallParticipant';\r\nimport SlimCoreElectronContentSharing from './SlimCoreElectronContentSharing';\r\nimport SlimCoreElectronDataChannelAdapter from './SlimCoreElectronDataChannelAdapter';\r\nimport SlimCoreElectronDeviceManager from './SlimCoreElectronDeviceManager';\r\nimport * as EnumConverter from './SlimCoreElectronEnumConverter';\r\nimport SlimCoreElectronLocalScreenShare from './SlimCoreElectronLocalScreenShare';\r\nimport SlimCoreElectronLocalVideo from './SlimCoreElectronLocalVideo';\r\nimport { SlimCoreElectronRemoteStreamContext } from './SlimCoreElectronRemoteStream';\r\nimport SlimCoreElectronRemoteStreamManager from './SlimCoreElectronRemoteStreamManager';\r\nimport SlimCoreElectronScreenSharingControl from './SlimCoreElectronScreenSharingControl';\r\n\r\n// From electron/typings/slimcore-enums.d.ts:\r\nimport Enums = SlimCore.Enums;\r\nimport { generateCauseId } from '../../common/ts/causeId';\r\nimport { noop } from '../../common/ts/fn';\r\nimport { IInternalLogger } from '../../common/ts/internalLogger';\r\nimport { getPIISafeObject, getPrintableObject } from '../../common/ts/logUtils';\r\n\r\ntype JoinOrStartCallOptions = {\r\n    audioDirection?: MediaDirection;\r\n    videoDirection?: MediaDirection;\r\n    screenshareDirection?: MediaDirection;\r\n    datachannelDirection?: MediaDirection;\r\n    muteFlags?: MuteFlags;\r\n    ringOthers?: boolean;\r\n    conversationUrl?: string;\r\n    label?: string;\r\n    conversationType?: string;\r\n    enableLightWeightMeeting?: boolean;\r\n    callToVoicemail?: boolean;\r\n    voicemailResourcePath?: string;\r\n    voicemailItemId?: string;\r\n    callKey?: string;\r\n    encryptedKey?: string;\r\n    connectionType?: ConnectionType;\r\n    participantsToNudge?: string[];\r\n    invitationType?: Enums.InvitationType;\r\n    maxVideoChannels?: number;\r\n    routingFlags?: RoutingFlags[];\r\n    negotiationTag?: string;\r\n    parkContext?: ParkContext;\r\n    pickupCode?: string;\r\n    isExistingCallInObservingState?: boolean;\r\n    scenario?: string;\r\n    preheatFlags?: PreheatFlags;\r\n    mediaConfiguration?: MediaConfiguration;\r\n};\r\n\r\ninterface SlimCoreTransferContext {\r\n    newCallObjectId: number;\r\n}\r\n\r\ninterface TransferInfo {\r\n    transferTarget?: string;\r\n    transferType?: TransferType;\r\n    targetCallId?: number;\r\n    transferStatusSuccessList: Enums.CallStatus[];\r\n}\r\n\r\ninterface ParkInfo {\r\n    context: ParkContext;\r\n    parkStatusSuccessList: Enums.CallStatus[];\r\n}\r\n\r\ninterface ParticipantInfo {\r\n    objectId: number;\r\n    mri: string;\r\n}\r\n\r\ntype OperationTransactionEnd = {\r\n    [causeId: string]: {\r\n        [operationId: string]: TransactionEnd;\r\n    };\r\n};\r\n\r\nfunction isTransactionEnd(error: any): error is TransactionEnd {\r\n    return error.code !== undefined;\r\n}\r\n\r\nexport default class SlimCoreElectronCall extends SlimCoreElectronBase<ICallEvents> implements ICall, ICallTestable {\r\n    public participants: SlimCoreElectronCallParticipant[] = [];\r\n    public participantMap: { [participantId: string]: SlimCoreElectronCallParticipant } = {};\r\n\r\n    public isMuted = false;\r\n    public isSpeakerMuted = false;\r\n    public isServerMuted = false;\r\n    public isVideoOn = false;\r\n    public isScreenSharingOn = false;\r\n    public dominantSpeakerInfo: DominantSpeakerInfo = { speakerList: [], timestamp: null };\r\n    public callStartedAt: Date = null;\r\n    public callHeldAt: Date = null;\r\n    public terminatedReason: TerminatedReason;\r\n    public messageId: string;\r\n    public callerMri: string;\r\n    public failureType: FailureType = FailureType.Undefined;\r\n    public isCast: boolean;\r\n    public isEmergency: boolean;\r\n    public label: string;\r\n    public slimcoreCallId = 0;\r\n    public isHostless = true;\r\n    public endpoints: CallParticipantEndpoints;\r\n    public role: ParticipantRosterRole;\r\n    public tenantId: string;\r\n    public invitationData: any;\r\n    public transferorMri: string;\r\n    public transferorDisplayName: string;\r\n    public transferorType: TransferorType;\r\n    public callType = CallType.Unknown;\r\n    public onBehalfOfMri: string;\r\n    public callQueueInfo: CallQueueInfo;\r\n    public incomingCallType: IncomingCallType;\r\n    public isIncomingOneOnOneVideoCall = false;\r\n    public forwardingDestinationType: ForwardingDestinationType;\r\n    public optimalVideoCount: number;\r\n    public meetingDetails: MeetingDetails;\r\n    public broadcastMeeting: IBroadcastMeeting;\r\n    public broadcastMetadata: BroadcastMetadata;\r\n    public contentSharingSessions: SlimCoreElectronContentSharing[] = [];\r\n    public screenSharingControl: SlimCoreElectronScreenSharingControl = null;\r\n    public dataChannelAdapter: SlimCoreElectronDataChannelAdapter = null;\r\n    public callProgressStatus: CallProgressStatus;\r\n    public consultativeCallId: string;\r\n    public callEndDiagnosticsInfo?: CallEndDiagnosticsInfo;\r\n    public transferDiagnosticsInfo?: CallEndDiagnosticsInfo;\r\n    public meetingRole?: MeetingRole;\r\n    public isPreheatEnabled = false;\r\n    public localMediaStreams: ILocalMediaStream[] = [];\r\n    public activeVideoChannelCount?: number;\r\n\r\n    public mediaStreams: CallParticipantStreamMap = {\r\n        [StreamType.Video]: [],\r\n        [StreamType.ScreenSharing]: []\r\n    };\r\n\r\n    private _streamContextMap: { [type: number]: SlimCoreElectronRemoteStreamContext } = {};\r\n    private _isAudioStreamConnected = false;\r\n    private _wasAudioStreamConnected = false;\r\n    private _meetingInfo: MeetingInfo;\r\n    private _rawEndpoints: string;\r\n    private _rawMeetingDetails: string;\r\n    private _rawCallEndDiagnosticsInfo: string;\r\n    private _rawTransferDiagnosticsInfo: string;\r\n    private _callGotConnected = false;\r\n    private _enableGroupCallMeetupGeneration: boolean = false;\r\n    private _localScreenShareStream: SlimCoreElectronLocalScreenShare;\r\n    private _localVideo: SlimCoreElectronLocalVideo;\r\n    private _transferContext: ICallTransferContext<any>;\r\n    private _endpointMetadata: string;\r\n    private _mediaPeerType = MediaPeerType.ConsumerTwoParty;\r\n    private _emergencyContent: string;\r\n    private _locationContent: string;\r\n    private _callProgressStatus: string;\r\n    private _dataChannel: SlimCoreElectronDataChannel = null;\r\n    private _dataChannelUsers: IMediaDataChannelUser[] = [];\r\n    private _isRelayWhiteListingIssue = false;\r\n    private _slimCoreElectronRemoteManager: SlimCoreElectronRemoteStreamManager;\r\n    private _raiseChangedDefer: number;\r\n    private _updateDominantSpeakerListDefer: number;\r\n    private _handleParticipantJoinedDefer: number;\r\n    private _onParticipantJoinedOrRemovedDefer: number;\r\n    private _isOptimizedSpeakerEventingEnabled = false;\r\n    private _isSetVideoChannelsRenegotiated = false;\r\n    private _endpointId: string;\r\n    private _callIsSetupComplete = false;\r\n    private _origin: CallOrigin;\r\n    private _transferState: TransferState = TransferState.None;\r\n    private _parkState: ParkState = ParkState.None;\r\n    private _capabilityFlags: Enums.SelfCapability = Enums.SelfCapability.None;\r\n    private _capabilities: SelfCapabilities = { canMuteOthers: false, canUnmuteSelf: false };\r\n    private inCallTelemetryReported = false;\r\n    private setupTelemetryReported = false;\r\n    private connectCallPromise = Promise.resolve();\r\n    private disconnectingPromise: Promise<void>;\r\n\r\n    private _parkCompletePromise: Promise<TerminatedReason>;\r\n    private _serverHoldLocation: string;\r\n\r\n    private _callTelemetry: ICallTelemetry;\r\n    private _callOperationHandler: OperationHandler; // Rejects promises with TerminatedReason\r\n    private _participantOperationHandler: OperationHandler; // Rejects promises with ParticipantStateReason\r\n    private _dataChannelCreatedPromise: Promise<void>;\r\n\r\n    // Local video can not be turned on/off before call is connected - track any requested changes while call is connecting\r\n    private _videoRequestedOnWhileConnecting = false;\r\n    private _videoRequestedOffWhileConnecting = false;\r\n\r\n    private _callStartTime = new Date().getTime();\r\n\r\n    private _state: CallState = CallState.None;\r\n    public get state(): CallState {\r\n        return this._state;\r\n    }\r\n\r\n    public set state(value: CallState) {\r\n        this._state = value;\r\n    }\r\n\r\n    public get transferState() {\r\n        return this._transferState;\r\n    }\r\n\r\n    public get parkState() {\r\n        return this._parkState;\r\n    }\r\n\r\n    public get capabilities() {\r\n        return this._capabilities;\r\n    }\r\n\r\n    public constructor(\r\n        logger: IInternalLogger,\r\n        settings: SlimCoreCommon.Settings,\r\n        engine: SlimCoreCommon.Engine,\r\n        private _slimcoreCallHandler: SlimCoreCommon.CallHandler,\r\n        private _deviceManager: SlimCoreElectronDeviceManager,\r\n        private _appHooks: ISlimCoreElectronApplicationHooks,\r\n        public threadId: string,\r\n        public callId: string,\r\n        private currentUserSkypeIdentity: SkypeIdentity,\r\n        public participantId: string,\r\n        private _telemetryService?: TelemetryService,\r\n        messageId?: string\r\n    ) {\r\n        super(logger.createChild(() => {\r\n            const endpointIdPrefix = (this.endpointId || '').substr(0, 8);\r\n            const participantIdPrefix = (this.participantId || '').substr(0, 8);\r\n            return `Electron[${this.slimcoreCallId}:${this.callId}][${endpointIdPrefix}][${participantIdPrefix}][${this.state}]`;\r\n        }), settings, engine);\r\n        this._logger.info('constructor');\r\n\r\n        this.terminatedReason = TerminatedReason.Undefined;\r\n\r\n        this._setupCallTelemetry();\r\n        this._setParticipantId(this.participantId);\r\n        this._setThreadId(this.threadId);\r\n        this._setCallId(this.callId);\r\n        this._setCallOrigin(CallOrigin.Unspecified);\r\n        this._setMessageId(messageId);\r\n        this._setIsEmergency(false);\r\n\r\n        try {\r\n            this._setEndpointId(this._slimcoreInstance.getRegistrationId(this.currentUserSkypeIdentity.id));\r\n        } catch (error) {\r\n            this._logger.warn(`getRegistrationId is missing!`);\r\n        }\r\n\r\n        this.screenSharingControl = new SlimCoreElectronScreenSharingControl(\r\n            this._logger,\r\n            this._settings,\r\n            this._slimcoreInstance,\r\n            this,\r\n            this._appHooks.getControlInjector(),\r\n            this._telemetryService\r\n        );\r\n        this.raiseRenderedAtViewer = this.raiseRenderedAtViewer.bind(this);\r\n        this.screenSharingControl.setRaiseRenderedAtViewer(this.raiseRenderedAtViewer);\r\n        this.dataChannelAdapter = new SlimCoreElectronDataChannelAdapter(this._logger, this._slimcoreInstance);\r\n        this._dataChannelUsers = [this.screenSharingControl, this.dataChannelAdapter];\r\n        // For protocol messages, corresponds to DataChannelProtocolType enum - fragile/index based:\r\n        // adapter-based users don't use protocol (even protocol adapter), so adapter will just bounce the protocol message\r\n\r\n        this._callOperationHandler = new OperationHandler(this._logger, this._callTelemetry);\r\n        this._participantOperationHandler = new OperationHandler(this._logger, this._callTelemetry);\r\n        this._dataChannelCreatedPromise = this._callOperationHandler.createPendingOperation(CALL_OPERATIONS_INTERNAL.ELECTRON_DATA_CHANNEL_CREATED);\r\n        this._dataChannelCreatedPromise.catch(noop);\r\n        this._streamContextMap[StreamType.Video] = new SlimCoreElectronRemoteStreamContext(this._logger);\r\n        this._streamContextMap[StreamType.ScreenSharing] = new SlimCoreElectronRemoteStreamContext(this._logger);\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.INITIALIZE, { type: OPERATION_TYPE.SYNC })\r\n    public init(callInitOptions: CallInitOptions): void {\r\n        this._setMessageId(callInitOptions.messageId);\r\n        if (callInitOptions.threadId) {\r\n            this._setThreadId(callInitOptions.threadId);\r\n        }\r\n        this._meetingInfo = callInitOptions.meetingInfo;\r\n        this._enableGroupCallMeetupGeneration = !!callInitOptions.enableGroupCallMeetupGeneration;\r\n        if (callInitOptions.transferContext) {\r\n            this._transferContext = callInitOptions.transferContext;\r\n            if (callInitOptions.transferContext.transferType === TransferType.Park) {\r\n                this._setCallOrigin(CallOrigin.Park);\r\n            } else if (callInitOptions.transferContext.transferType === TransferType.Transfer) {\r\n                this._setCallOrigin(CallOrigin.Transfer);\r\n            } else if (callInitOptions.transferContext.transferType === TransferType.TransferToVoicemail) {\r\n                this._setCallOrigin(CallOrigin.TransferToVoicemail);\r\n            }\r\n            if (callInitOptions.transferContext.transferorMri) {\r\n                this._updateTransferorMri(callInitOptions.transferContext.transferorMri);\r\n            }\r\n        }\r\n        this._endpointMetadata = callInitOptions.endpointMetadata;\r\n        this.onBehalfOfMri = callInitOptions.onBehalfOf;\r\n        this._emergencyContent = callInitOptions.emergencyContent;\r\n        this._locationContent = callInitOptions.locationContent;\r\n        this._mediaPeerType = callInitOptions.mediaPeerType;\r\n        if (this.broadcastMeeting) {\r\n            this.broadcastMeeting.context = callInitOptions.broadcastContext;\r\n        }\r\n        this._setIsEmergency(!!callInitOptions.isEmergency);\r\n        this.raiseChanged();\r\n    }\r\n\r\n    public processCallStartOptions(options: CallStartOptions, causeId: CauseId) {\r\n        const fnLogger = this._logger.createFnLogger(CALL_OPERATIONS_INTERNAL.PROCESS_CALL_START_OPTIONS, causeId);\r\n        try {\r\n            // Options passed at the time of starting/joining the call only\r\n            if (options.preheatFlags & PreheatFlags.IsPreheatOnly) {\r\n                // Set the preheating flag. Should not change once set\r\n                this.isPreheatEnabled = true;\r\n            }\r\n        } catch (error) {\r\n            fnLogger.logFailure(error);\r\n        }\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.JOIN_CALL, { type: OPERATION_TYPE.CHAINED, triggerAttach: true })\r\n    public async join(context: SkypeConversationLiveState, @callStartOptions callStartOptions: CallStartOptions, @causeId causeId = generateCauseId()): Promise<void> {\r\n        this._setCallerMri(stripMriAliases(context.groupCallInitiator), causeId);\r\n        this._callTelemetry.setDirection(DIRECTION.INCOMING);\r\n        this._callTelemetry.setSelfParticipantRole(SELF_PARTICIPANT_ROLE.JOIN);\r\n        if (callStartOptions.preheatFlags & PreheatFlags.IsPreheatOnly) {\r\n            this._callTelemetry.setOperationVariant(CALL_OPERATIONS.JOIN_CALL, OPERATION_VARIANTS.PREHEAT);\r\n        }\r\n        if (callStartOptions.muteFlags) {\r\n            const operationData = {\r\n                muteMicrophone: !!(callStartOptions.muteFlags & MuteFlags.MuteMicrophone),\r\n                muteSpeaker: !!(callStartOptions.muteFlags & MuteFlags.MuteSpeaker)\r\n            };\r\n            this._callTelemetry.updateOperationData(CALL_OPERATIONS.JOIN_CALL, operationData, causeId);\r\n        }\r\n        this._callTelemetry.setPreheatFlags(callStartOptions.preheatFlags);\r\n        this.connectCallPromise = this._callOperationHandler.waitForOperation(CALL_OPERATIONS.JOIN_CALL);\r\n        return this._joinOrStartCall(\r\n            {\r\n                audioDirection: callStartOptions.audioDirection,\r\n                videoDirection: callStartOptions.videoDirection !== undefined ?\r\n                    callStartOptions.videoDirection :\r\n                    (callStartOptions.withVideo ? MediaDirection.Bidirectional : MediaDirection.ReceiveOnly),\r\n                screenshareDirection: callStartOptions.screenshareDirection,\r\n                datachannelDirection: callStartOptions.datachannelDirection,\r\n                muteFlags: callStartOptions.muteFlags,\r\n                conversationUrl: context.conversationUrl,\r\n                preheatFlags: callStartOptions.preheatFlags,\r\n                label: callStartOptions.label,\r\n                conversationType: context.conversationType,\r\n                enableLightWeightMeeting: false,\r\n                maxVideoChannels: callStartOptions.maxVideoChannels,\r\n                negotiationTag: callStartOptions.negotiationTag,\r\n                scenario: SlimCoreCommon.mapToEmptyStrIfFalsy(callStartOptions.scenario)\r\n            }, causeId);\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.START_CALL, { type: OPERATION_TYPE.CHAINED, triggerAttach: true })\r\n    public async start(@callStartOptions callStartOptions: CallStartOptions, @causeId causeId = generateCauseId()): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger(CALL_OPERATIONS.START_CALL, causeId);\r\n        this._setCallerMri(MRI_SKYPE_PREFIX + this.currentUserSkypeIdentity.id, causeId);\r\n        this._callTelemetry.setDirection(DIRECTION.OUTGOING);\r\n        this._callTelemetry.setSelfParticipantRole(SELF_PARTICIPANT_ROLE.CALLER);\r\n        if (callStartOptions.preheatFlags & PreheatFlags.IsPreheatOnly) {\r\n            this._callTelemetry.setOperationVariant(CALL_OPERATIONS.START_CALL, OPERATION_VARIANTS.PREHEAT);\r\n        } else if (callStartOptions.encryptedKey) {\r\n            this._callTelemetry.setOperationVariant(CALL_OPERATIONS.START_CALL, OPERATION_VARIANTS.ENCRYPTED);\r\n        }\r\n        this.connectCallPromise = this._callOperationHandler.waitForOperation(CALL_OPERATIONS.START_CALL);\r\n        if (callStartOptions.muteFlags) {\r\n            const operationData = {\r\n                muteMicrophone: !!(callStartOptions.muteFlags & MuteFlags.MuteMicrophone),\r\n                muteSpeaker: !!(callStartOptions.muteFlags & MuteFlags.MuteSpeaker)\r\n            };\r\n            this._callTelemetry.updateOperationData(CALL_OPERATIONS.START_CALL, operationData, causeId);\r\n        }\r\n        this._callTelemetry.setPreheatFlags(callStartOptions.preheatFlags);\r\n        if (this._transferContext) {\r\n            fnLogger.info('Transfer: Starting transfered call.');\r\n            const slimcoreContext = this._transferContext.context as SlimCoreTransferContext;\r\n            if (!slimcoreContext.newCallObjectId) {\r\n                return Promise.reject(new Error('Transfer: Transfered context is invalid. Missing callObjectId or newCallObjectId'));\r\n            }\r\n\r\n            this._setCallType(CallType.P2P);\r\n            let isVideoEnabled = callStartOptions.withVideo || (callStartOptions.videoDirection === MediaDirection.Bidirectional);\r\n            if (this._transferContext.transferType === TransferType.TransferToVoicemail) {\r\n                isVideoEnabled = false;\r\n            }\r\n\r\n            return this._callOperationHandler.execute(() => this._startTransferTargetCall(slimcoreContext.newCallObjectId, isVideoEnabled, causeId), CALL_OPERATIONS.START_TRANSFER_TARGET_CALL);\r\n        }\r\n        // for video calls, video line is negotiated bidirectional\r\n        if (callStartOptions.withVideo) {\r\n            callStartOptions.videoDirection = MediaDirection.Bidirectional;\r\n        }\r\n\r\n        return this._joinOrStartCall({\r\n            audioDirection: callStartOptions.audioDirection,\r\n            videoDirection: callStartOptions.videoDirection,\r\n            screenshareDirection: callStartOptions.screenshareDirection,\r\n            datachannelDirection: callStartOptions.datachannelDirection,\r\n            ringOthers: callStartOptions.ringOthers,\r\n            preheatFlags: callStartOptions.preheatFlags,\r\n            label: callStartOptions.label,\r\n            conversationType: this.isEmergency ? 'emergencyGroupCall' : (callStartOptions.isCast ? 'cast' : ''),\r\n            enableLightWeightMeeting: false,\r\n            callKey: callStartOptions.callKey,\r\n            encryptedKey: callStartOptions.encryptedKey,\r\n            connectionType: callStartOptions.connectionType,\r\n            mediaConfiguration: callStartOptions.mediaConfiguration,\r\n            maxVideoChannels: callStartOptions.maxVideoChannels,\r\n            routingFlags: callStartOptions.routingFlags,\r\n            muteFlags: callStartOptions.muteFlags,\r\n            negotiationTag: callStartOptions.negotiationTag,\r\n            scenario: SlimCoreCommon.mapToEmptyStrIfFalsy(callStartOptions.scenario)\r\n        }, causeId);\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.START_CALL_TO_VOICE_MAIL, { type: OPERATION_TYPE.CHAINED, triggerAttach: true })\r\n    public async startCallToVoicemail(callStartOptions: CallVoicemailStartOptions, @causeId causeId = generateCauseId()): Promise<void> {\r\n        this._setCallerMri(MRI_SKYPE_PREFIX + this.currentUserSkypeIdentity.id, causeId);\r\n        this._callTelemetry.setDirection(DIRECTION.OUTGOING);\r\n        this._callTelemetry.setSelfParticipantRole(SELF_PARTICIPANT_ROLE.CALLER);\r\n        this.connectCallPromise = this._callOperationHandler.waitForOperation(CALL_OPERATIONS.START_CALL_TO_VOICE_MAIL);\r\n\r\n        return this._joinOrStartCall({\r\n            callToVoicemail: true,\r\n            voicemailResourcePath: callStartOptions.voicemailResourcePath,\r\n            voicemailItemId: callStartOptions.voicemailItemId\r\n        }, causeId);\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.START_CALL_WITH_NUDGE, { type: OPERATION_TYPE.CHAINED, triggerAttach: true })\r\n    public async startCallWithNudge(participants: string[], @callStartOptions callStartOptions: CallStartOptions, @causeId causeId = generateCauseId()): Promise<void> {\r\n        this._setCallerMri(MRI_SKYPE_PREFIX + this.currentUserSkypeIdentity.id, causeId);\r\n        const fnLogger = this._logger.createFnLogger(CALL_OPERATIONS.START_CALL_WITH_NUDGE, causeId);\r\n        this._callTelemetry.setDirection(DIRECTION.OUTGOING);\r\n        this._callTelemetry.setSelfParticipantRole(SELF_PARTICIPANT_ROLE.CALLER);\r\n        if (callStartOptions.encryptedKey) {\r\n            this._callTelemetry.setOperationVariant(CALL_OPERATIONS.START_CALL_WITH_NUDGE, OPERATION_VARIANTS.ENCRYPTED);\r\n        }\r\n        if (_.isEmpty(participants)) {\r\n            fnLogger.logFailure('No participants provided to nudge');\r\n            return Promise.reject(new Error('No participants provided to nudge'));\r\n        }\r\n        this.connectCallPromise = this._callOperationHandler.waitForOperation(CALL_OPERATIONS.START_CALL_WITH_NUDGE);\r\n\r\n        return this._joinOrStartCall({\r\n            audioDirection: callStartOptions.audioDirection,\r\n            videoDirection: callStartOptions.videoDirection !== undefined ?\r\n                callStartOptions.videoDirection :\r\n                (callStartOptions.withVideo ? MediaDirection.Bidirectional : MediaDirection.ReceiveOnly),\r\n            screenshareDirection: callStartOptions.screenshareDirection,\r\n            datachannelDirection: callStartOptions.datachannelDirection,\r\n            ringOthers: false,\r\n            label: callStartOptions.label,\r\n            conversationType: callStartOptions.isCast ? 'cast' : '',\r\n            enableLightWeightMeeting: false,\r\n            callKey: callStartOptions.callKey,\r\n            encryptedKey: callStartOptions.encryptedKey,\r\n            connectionType: callStartOptions.connectionType,\r\n            mediaConfiguration: callStartOptions.mediaConfiguration,\r\n            participantsToNudge: participants,\r\n            invitationType: Enums.InvitationType.Nudge,\r\n            negotiationTag: callStartOptions.negotiationTag,\r\n            scenario: SlimCoreCommon.mapToEmptyStrIfFalsy(callStartOptions.scenario)\r\n        }, causeId);\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.START_CALL_AND_UNPARK, { type: OPERATION_TYPE.CHAINED, triggerAttach: true })\r\n    public async startAndUnpark(context: ParkContext, pickupCode: PickUpCode, @callStartOptions callStartOptions: CallStartOptions = {}, @causeId causeId = generateCauseId()): Promise<void> {\r\n        this._setCallerMri(MRI_SKYPE_PREFIX + this.currentUserSkypeIdentity.id, causeId);\r\n        const fnLogger = this._logger.createFnLogger(CALL_OPERATIONS.START_CALL_AND_UNPARK, causeId);\r\n        this._callTelemetry.setDirection(DIRECTION.OUTGOING);\r\n        this._callTelemetry.setSelfParticipantRole(SELF_PARTICIPANT_ROLE.CALLER);\r\n        if (callStartOptions.encryptedKey) {\r\n            this._callTelemetry.setOperationVariant(CALL_OPERATIONS.START_CALL_AND_UNPARK, OPERATION_VARIANTS.ENCRYPTED);\r\n        }\r\n        this._setCallType(CallType.P2P);\r\n        this.connectCallPromise = this._callOperationHandler.waitForOperation(CALL_OPERATIONS.START_CALL_AND_UNPARK);\r\n\r\n        // for video calls, video line is negotiated bidirectional\r\n        if (callStartOptions.withVideo) {\r\n            callStartOptions.videoDirection = MediaDirection.Bidirectional;\r\n        }\r\n\r\n        const parkContextMri = context === ParkContext.Team ? UNPARK_CODE.PARK :\r\n            (context === ParkContext.SharedLine ? UNPARK_CODE.SHARED_LINE : UNPARK_CODE.SERVER_HOLD);\r\n\r\n        this.addParticipant(`4:${parkContextMri}`, undefined, causeId)\r\n            .catch(e => fnLogger.logFailure(`Failed to add participant to unparked call=${e}`));\r\n\r\n        return this._joinOrStartCall({\r\n            audioDirection: callStartOptions.audioDirection,\r\n            videoDirection: callStartOptions.videoDirection,\r\n            screenshareDirection: callStartOptions.screenshareDirection,\r\n            datachannelDirection: callStartOptions.datachannelDirection,\r\n            ringOthers: callStartOptions.ringOthers,\r\n            label: callStartOptions.label,\r\n            conversationType: callStartOptions.isCast ? 'cast' : '',\r\n            enableLightWeightMeeting: false,\r\n            callKey: callStartOptions.callKey,\r\n            encryptedKey: callStartOptions.encryptedKey,\r\n            connectionType: callStartOptions.connectionType,\r\n            mediaConfiguration: callStartOptions.mediaConfiguration,\r\n            maxVideoChannels: callStartOptions.maxVideoChannels,\r\n            routingFlags: callStartOptions.routingFlags,\r\n            muteFlags: callStartOptions.muteFlags,\r\n            parkContext: context,\r\n            pickupCode,\r\n            scenario: SlimCoreCommon.mapToEmptyStrIfFalsy(callStartOptions.scenario)\r\n        }, causeId);\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.SUBSCRIBE, { type: OPERATION_TYPE.CHAINED, triggerAttach: true })\r\n    public async joinCallWithoutCallModality(context: SkypeConversationLiveState, callStartOptions: CallStartOptions, @causeId causeId = generateCauseId()): Promise<void> {\r\n        this._setCallerMri(stripMriAliases(context.groupCallInitiator), causeId);\r\n        const fnLogger = this._logger.createFnLogger(CALL_OPERATIONS.SUBSCRIBE, causeId);\r\n        fnLogger.info(`joinCallWithoutCallModality: ${context.conversationUrl}`);\r\n\r\n        this._callTelemetry.setDirection(DIRECTION.OUTGOING);\r\n        this._callTelemetry.setSelfParticipantRole(SELF_PARTICIPANT_ROLE.SUBSCRIBE);\r\n        if (!context.conversationUrl) {\r\n            this._callTelemetry.setOperationVariant(CALL_OPERATIONS.SUBSCRIBE, OPERATION_VARIANTS.CCWM);\r\n        }\r\n\r\n        if (this.state !== CallState.None) {\r\n            fnLogger.logFailure('Trying to start a call that has already been acted on');\r\n            return Promise.reject(new Error('Trying to start a call that has already been acted on'));\r\n        }\r\n\r\n        const props = this._getSlimCoreCallProperties({\r\n            audioDirection: Enums.MediaDirection.Disabled,\r\n            videoDirection: Enums.MediaDirection.Disabled,\r\n            screenshareDirection: Enums.MediaDirection.Disabled,\r\n            datachannelDirection: Enums.MediaDirection.Disabled,\r\n            mediaPeerType: SlimCoreElectronCall.convertToSlimCoreMediaPeerType(this._mediaPeerType),\r\n            isVideoEnabled: false,\r\n            isGoLive: !callStartOptions.ringOthers,\r\n            isHostless: true,\r\n            participantLegId: this.participantId,\r\n            enableGroupCallMeetupGeneration: this._enableGroupCallMeetupGeneration,\r\n            threadId: SlimCoreCommon.mapToEmptyStrIfFalsy(this.threadId),\r\n            messageId: SlimCoreCommon.mapToEmptyStrIfFalsy(this.messageId),\r\n            subject: SlimCoreCommon.mapToEmptyStrIfFalsy(callStartOptions.label),\r\n            conversationType: SlimCoreCommon.mapToEmptyStrIfFalsy(context.conversationType),\r\n            meetingInfo: SlimCoreCommon.mapToEmptyStrIfFalsy(JSON.stringify(this._meetingInfo)),\r\n            endpointMetadata: SlimCoreCommon.mapToEmptyStrIfFalsy(this._endpointMetadata),\r\n            onBehalfOf: SlimCoreCommon.mapToEmptyStrIfFalsy(this.onBehalfOfMri),\r\n            enableLightWeightMeeting: false,\r\n            emergencyContent: SlimCoreCommon.mapToEmptyStrIfFalsy(this._emergencyContent),\r\n            broadcastContext: this.broadcastMeeting && this.broadcastMeeting.context ? JSON.stringify(this.broadcastMeeting.context) : null,\r\n            callKey: '',\r\n            encryptedKey: '',\r\n            invitationType: Enums.InvitationType.None,\r\n            connectionType: Enums.ConnectionType.AllSupported,\r\n            maxVideoChannels: (callStartOptions.maxVideoChannels !== undefined) ? callStartOptions.maxVideoChannels : 0,\r\n            muteFlags: callStartOptions.muteFlags as number,\r\n            negotiationTag: SlimCoreCommon.mapToEmptyStrIfFalsy(callStartOptions.negotiationTag),\r\n            routingFlags: callStartOptions.routingFlags,\r\n            scenario: SlimCoreCommon.mapToEmptyStrIfFalsy(callStartOptions.scenario),\r\n            locationContent: SlimCoreCommon.mapToEmptyStrIfFalsy(this._locationContent),\r\n            mediaConfigurationJson: SlimCoreCommon.mapToEmptyStrIfFalsy(JSON.stringify(callStartOptions.mediaConfiguration))\r\n        });\r\n\r\n        try {\r\n        const slimcoreCallId = this._slimcoreCallHandler.subscribe(\r\n            JSON.stringify({\r\n                conversationUrl: context.conversationUrl,\r\n                conversationId: this.callId,\r\n                conversationType: context.conversationType\r\n            }),\r\n            props\r\n        );\r\n\r\n        this._setCallState(CallState.Observing, causeId);\r\n        await this.attachSlimCoreCallObject(slimcoreCallId, causeId, true, 'joinCallWithoutCallModality');\r\n\r\n        if (!SlimCoreCommon.hasFeature(Enums.Feature.ObservingStateSupported)) {\r\n                return Promise.resolve<void>();\r\n        } else {\r\n            return this._callOperationHandler.waitForOperation(CALL_OPERATIONS.SUBSCRIBE, undefined, causeId);\r\n        }\r\n        } catch (error) {\r\n            fnLogger.logFailure(`sync failure, cleaning up slimcore ready operation: error=${getPrintableObject(error)}`);\r\n            this._callTelemetry.updateOperationData(CALL_OPERATIONS.SUBSCRIBE, { error: getPIISafeObject(error) }, causeId);\r\n            this._callOperationHandler.rejectOperation(CALL_OPERATIONS_INTERNAL.ELECTRON_SLIMCORE_READY);\r\n            throw error;\r\n    }\r\n    }\r\n\r\n    private _assertSlimcoreObjectId(id: number, errorString: string) {\r\n        if (id === 0) {\r\n            throw new Error(`${errorString} Failed. Slimcore returned objectId of 0`);\r\n        }\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.JOIN_PREHEATED_CALL, { waitFor: CALL_OPERATIONS_INTERNAL.CALL_START_OR_JOIN_INITIATED })\r\n    public async joinPreheatedCall(joinPreheatedCallOptions: JoinPreheatedCallOptions, @causeId causeId = generateCauseId()): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger(CALL_OPERATIONS.JOIN_PREHEATED_CALL, causeId);\r\n\r\n        if (this.state !== CallState.Preheating && this.state !== CallState.Preheated) {\r\n            fnLogger.logFailure('Trying to join a call that is not in preheating state');\r\n            return Promise.reject(new Error('Trying to join a call that is not in preheating state'));\r\n        }\r\n\r\n        if ((joinPreheatedCallOptions.muteFlags & MuteFlags.MuteMicrophone) === MuteFlags.MuteMicrophone) {\r\n            fnLogger.info(`isMuted set to true in joinPreheatedCall`);\r\n            this.isMuted = true;\r\n        }\r\n        if ((joinPreheatedCallOptions.muteFlags & MuteFlags.MuteSpeaker) === MuteFlags.MuteSpeaker) {\r\n            fnLogger.info(`isSpeakerMuted set to true in joinPreheatedCall`);\r\n            this.isSpeakerMuted = true;\r\n        }\r\n        // Setting the state to connecting here to keep UI happy. A state change to preheated may already\r\n        // be in transit from slimcore here. The connecting to preheated transition will need to be ignored.\r\n        this._setCallState(CallState.Connecting, causeId);\r\n        this.connectCallPromise = this._callOperationHandler.waitForOperation(CALL_OPERATIONS.JOIN_PREHEATED_CALL);\r\n        try {\r\n            this._slimcoreCallHandler.joinPreheatedCall(this.slimcoreCallId, causeId, joinPreheatedCallOptions.muteFlags);\r\n        } catch (error) {\r\n            this.stopInternal(causeId);\r\n            fnLogger.logFailure(error);\r\n            throw error;\r\n        }\r\n\r\n        return this._callOperationHandler.waitForOperation(CALL_OPERATIONS.JOIN_PREHEATED_CALL, undefined, causeId);\r\n    }\r\n\r\n    private startVideoSafe(causeId: CauseId): Promise<void> {\r\n        return this.startVideo(causeId).catch(error => {\r\n            this._logger.createFnLogger(CALL_OPERATIONS.START_VIDEO, causeId).logFailure(error);\r\n        });\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.START_VIDEO, { waitFor: CALL_OPERATIONS_INTERNAL.ELECTRON_SLIMCORE_READY })\r\n    public async startVideo(negotiationTag?: string, @causeId causeId = generateCauseId()): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger(CALL_OPERATIONS.START_VIDEO, causeId);\r\n        if (!this.callStateCanToggleVideo()) {\r\n            fnLogger.info('startVideo called but call is not in togglable state - starting preview only, video will start once available');\r\n            this._videoRequestedOnWhileConnecting = true;\r\n            this._videoRequestedOffWhileConnecting = false;\r\n            this._setVideoOn(true, causeId);\r\n            return;\r\n        }\r\n\r\n        const startVideoPromise = Promise.resolve()\r\n            .then(() => this._startLocalVideo(negotiationTag, causeId))\r\n            .then(() => this._setVideoOn(true, causeId));\r\n\r\n        return this._callOperationHandler.registerPromise(CALL_OPERATIONS.START_VIDEO, startVideoPromise).catch(error => {\r\n            this._callTelemetry.updateOperationData(CALL_OPERATIONS.START_VIDEO, { error: getPIISafeObject(error) }, causeId);\r\n            this._logger.logFailure(error);\r\n            this.stopVideo(negotiationTag, causeId).catch(noop);\r\n            throw error;\r\n        });\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.STOP_VIDEO, { waitFor: CALL_OPERATIONS_INTERNAL.ELECTRON_SLIMCORE_READY })\r\n    public async stopVideo(negotiationTag?: string, @causeId causeId = generateCauseId()): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger(CALL_OPERATIONS.STOP_VIDEO, causeId);\r\n        if (!this.callStateCanToggleVideo()) {\r\n            if (this._videoRequestedOnWhileConnecting) {\r\n                fnLogger.info('stopVideo called but call is not in togglable state - video will stop once available');\r\n                this._videoRequestedOffWhileConnecting = true;\r\n            } else {\r\n                fnLogger.info('stopVideo called but call is not in togglable state - enabling video was not requested anyway, so ignoring');\r\n            }\r\n            return Promise.resolve<void>();\r\n        }\r\n\r\n        const cleanUp = () => {\r\n            if (this._localVideo) {\r\n                this._localVideo.dispose(causeId);\r\n                this._localVideo = null;\r\n            }\r\n\r\n            this._setVideoOn(false, causeId);\r\n        };\r\n\r\n        const stopVideoPromise = Promise.resolve()\r\n            .then(async () => {\r\n                if (this._localVideo) {\r\n                    await SlimCoreCommon.forgetAndLog(this._localVideo.stop(causeId, negotiationTag), fnLogger, 'stopVideo: stopping localVideo failed');\r\n                }\r\n            });\r\n\r\n        return this._callOperationHandler.registerPromise(CALL_OPERATIONS.STOP_VIDEO, stopVideoPromise)\r\n            .then(cleanUp, error => {\r\n                this._callTelemetry.updateOperationData(CALL_OPERATIONS.STOP_VIDEO, { error: getPIISafeObject(error) }, causeId);\r\n                fnLogger.logFailure(error);\r\n                cleanUp();\r\n            });\r\n\r\n    }\r\n\r\n    public get endpointId() {\r\n        return this._endpointId;\r\n    }\r\n\r\n    private _setEndpointId(endpointId: string) {\r\n        this._endpointId = endpointId;\r\n        this._callTelemetry.setEndpointId(endpointId);\r\n    }\r\n\r\n    private _setFailureType(failureType: FailureType) {\r\n        this._callTelemetry.setFailureType(failureType);\r\n        this.failureType = failureType;\r\n    }\r\n\r\n    private _setThreadId(threadId: string) {\r\n        this._logger.info(`Set threadId:${threadId}`);\r\n        this.threadId = threadId;\r\n        this._callTelemetry.setThreadId(threadId);\r\n    }\r\n\r\n    private _setMessageId(messageId: string) {\r\n        this._logger.info(`Set messageId:${messageId}`);\r\n        this.messageId = messageId;\r\n        this._callTelemetry.setMesageId(messageId);\r\n    }\r\n\r\n    private _setCallType(callType: CallType) {\r\n        this._logger.info(`Set callType:${callType}`);\r\n        this.callType = callType;\r\n        this._callTelemetry.setCallType(callType);\r\n    }\r\n\r\n    private _setCallerMri(callerMri: string, causeId: string) {\r\n        this._logger.info(`[${causeId}]Set callerMri:${callerMri}`);\r\n        this.callerMri = callerMri;\r\n    }\r\n\r\n    private _setCallOrigin(origin: CallOrigin) {\r\n        this._logger.info(`Set origin:${origin}`);\r\n        this._origin = origin;\r\n        this._callTelemetry.setCallOrigin(origin);\r\n    }\r\n\r\n    private _setIsCast(isCast: boolean) {\r\n        this._logger.info(`Set isCast:${isCast}`);\r\n        this.isCast = isCast;\r\n        this._callTelemetry.setIsCast(isCast);\r\n    }\r\n\r\n    private _setIsEmergency(isEmergency: boolean) {\r\n        this._logger.info(`Set isEmergency:${isEmergency}`);\r\n        this.isEmergency = isEmergency;\r\n        this._callTelemetry.setIsEmergency(isEmergency);\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS_INTERNAL.START_LOCAL_VIDEO, { waitFor: CALL_OPERATIONS_INTERNAL.ELECTRON_SLIMCORE_READY })\r\n    private _startLocalVideo(negotiationTag: string, @causeId causeId: CauseId): Promise<void> {\r\n        if (!this._localVideo) {\r\n            this._localVideo = new SlimCoreElectronLocalVideo(\r\n                this._logger,\r\n                this._settings,\r\n                this._slimcoreInstance,\r\n                this,\r\n                this.slimcoreCallId,\r\n                this._slimcoreCallHandler,\r\n                this._deviceManager\r\n            );\r\n        }\r\n\r\n        return this._localVideo.start(causeId, negotiationTag);\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.DUMP_VIDEO_SOURCE_IMAGES, { waitFor: CALL_OPERATIONS_INTERNAL.ELECTRON_SLIMCORE_READY })\r\n    public async dumpVideoSourceImages(): Promise<number> {\r\n        if (!this._localVideo) {\r\n            return Promise.reject(new Error('Cannot dump video effects debug images when there is no local video'));\r\n        }\r\n        return this._localVideo.dumpVideoSourceImages();\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.START_SCREEN_SHARING, { type: OPERATION_TYPE.CHAINED })\r\n    public async startScreenSharing(source?: ISharingSource, cropRegion?: Rectangle, negotiationTag?: string, @causeId causeId = generateCauseId()): Promise<void> {\r\n\r\n        if (this.screenSharingControl && this.screenSharingControl.isScreenSharingControlEnabled()) {\r\n            // If we were viewing (i.e. we are switching from viewing to sharing),\r\n            // cleanup any control state\r\n            this.screenSharingControl.shutdownControlForViewer();\r\n        }\r\n\r\n        return Promise.resolve()\r\n            .then(() => {\r\n\r\n                if (!this._localScreenShareStream) {\r\n                    this._localScreenShareStream = new SlimCoreElectronLocalScreenShare(\r\n                        this._logger,\r\n                        this._settings,\r\n                        this._slimcoreInstance,\r\n                        this.slimcoreCallId,\r\n                        this._slimcoreCallHandler,\r\n                        this._deviceManager,\r\n                        this._appHooks,\r\n                        this.screenSharingControl,\r\n                        this._callTelemetry\r\n                    );\r\n                    this._localScreenShareStream.changed(() => this._onLocalScreenShareStreamChanged(causeId)); // no need to track this for disposal\r\n                    this._localScreenShareStream.on('sharingSourceLost', () => this._onLocalScreenShareSourceLost());\r\n                    this._localScreenShareStream.on('windowClosed', () => this.stopScreenSharing(false, negotiationTag, causeId));\r\n                    this._localScreenShareStream.on('scraperEvent', args => this._onScraperEvent(args));\r\n                }\r\n            })\r\n            .then(() => this._localScreenShareStream.start(causeId, source, cropRegion, negotiationTag));\r\n    }\r\n\r\n    public changeCropRegion(cropRegion: Rectangle): void {\r\n        if (this._localScreenShareStream) {\r\n            this._localScreenShareStream.changeCropRegion(cropRegion);\r\n        }\r\n    }\r\n\r\n    private _onLocalScreenShareSourceLost() {\r\n\r\n        if (this.screenSharingControl && this.screenSharingControl.isScreenSharingControlEnabled()) {\r\n            this.screenSharingControl.shutdownControlForSharer();\r\n        }\r\n        if (this._localScreenShareStream.isStreaming) {\r\n            this.event('sharingDropped').raise();\r\n        }\r\n    }\r\n\r\n    private _onScraperEvent(args: SlimCore.VideoBindingScreenShare.Events.ScraperEventArgs) {\r\n        const eventArgs: ScraperEventArgs = {\r\n            event: (args.event as number),\r\n            data: args.data\r\n        };\r\n        this.event('scraperEvent').raise(eventArgs);\r\n    }\r\n\r\n    public raiseRenderedAtViewer(id: string) {\r\n        this.event('sharingRenderedAtViewer').raise(id);\r\n    }\r\n\r\n    private _onLocalScreenShareStreamChanged(causeId: CauseId) {\r\n        if (this._localScreenShareStream.isStreaming) {\r\n\r\n            if (!this.isScreenSharingOn && this._dataChannel && this.screenSharingControl && this.screenSharingControl.isScreenSharingControlEnabled()) {\r\n                // Initialize screen sharing control for sharer\r\n                this.screenSharingControl.initControlForSharer(this._localScreenShareStream.negotiationTag);\r\n\r\n                // Start the data channel used for pointers/remote control\r\n                // if necessary (it may already be started if we were\r\n                // previously viewing and performed a sharer switch)\r\n                this._dataChannel.start();\r\n            }\r\n            this._setScreenSharingOn(true, causeId);\r\n\r\n        } else if (!this._localScreenShareStream.isAvailable) {\r\n            if (this.isScreenSharingOn && this.screenSharingControl && this.screenSharingControl.isScreenSharingControlEnabled()) {\r\n                // Cleanup any control state - this is added to handle the call hold scenario\r\n                this.screenSharingControl.shutdownControlForSharer();\r\n            }\r\n            this._setScreenSharingOn(false, causeId);\r\n        }\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.STOP_SCREEN_SHARING, { type: OPERATION_TYPE.CHAINED })\r\n    public async stopScreenSharing(isSharerSwitch?: boolean, negotiationTag?: string, @causeId causeId = generateCauseId()): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger(CALL_OPERATIONS.STOP_SCREEN_SHARING, causeId);\r\n        const always = () => {\r\n            if (this._localScreenShareStream) {\r\n                this._localScreenShareStream.dispose(causeId);\r\n                this._localScreenShareStream = null;\r\n            }\r\n            this._setScreenSharingOn(false, causeId);\r\n\r\n            if (this.screenSharingControl && this.screenSharingControl.isScreenSharingControlEnabled()) {\r\n                // Cleanup any control state\r\n                this.screenSharingControl.shutdownControlForSharer();\r\n            }\r\n        };\r\n\r\n        const stopScreenSharingPromise = Promise.resolve()\r\n            .then(async () => {\r\n                if (this._localScreenShareStream) {\r\n                    await SlimCoreCommon.forgetAndLog(this._localScreenShareStream.stop(causeId, negotiationTag), fnLogger, 'stopScreenSharing: stopping screen sharing failed');\r\n                }\r\n            });\r\n\r\n        return this._callOperationHandler.registerPromise(CALL_OPERATIONS_INTERNAL.ELECTRON_STOP_SCREEN_SHARING, stopScreenSharingPromise)\r\n            .then(always, error => {\r\n                fnLogger.logFailure(error);\r\n                always();\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.START_DATA_CHANNEL, { type: OPERATION_TYPE.CHAINED })\r\n    public async startDataChannel(negotiationTag?: string, @causeId causeId = generateCauseId()): Promise<void> {\r\n        await this._dataChannelCreatedPromise;\r\n        return this._dataChannel.start(negotiationTag);\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.STOP_DATA_CHANNEL, { type: OPERATION_TYPE.CHAINED })\r\n    public async stopDataChannel(negotiationTag?: string, @causeId causeId = generateCauseId()): Promise<void> {\r\n        await this._dataChannelCreatedPromise;\r\n        return this._dataChannel.stop(negotiationTag);\r\n    }\r\n\r\n    public async sendUserEvents?(events: string, participantIds?: string[]): Promise<void> {\r\n        await this._dataChannelCreatedPromise;\r\n        return this._dataChannel.sendUserEvents(events, participantIds);\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.SHARE_SYSTEM_SOUNDS, { waitFor: CALL_OPERATIONS_INTERNAL.ELECTRON_SLIMCORE_READY })\r\n    public async shareSystemSound(enable: boolean): Promise<void> {\r\n        this._logger.info(`shareSystemSound: ${enable}`);\r\n        return Promise.resolve().then(() => {\r\n            this._slimcoreCallHandler.callShareSystemSound(this.slimcoreCallId, enable);\r\n        });\r\n    }\r\n\r\n    public transferCall(transferTargetMri: string): Promise<TerminatedReason> {\r\n        this._logger.warn('transferCall is deprecated, please use callBlindTransfer instead');\r\n        return this.callBlindTransfer(transferTargetMri);\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.BLIND_TRANSFER, { singular: true, type: OPERATION_TYPE.CHAINED })\r\n    public async callBlindTransfer(transferTargetMri: string, @causeId causeId = generateCauseId()): Promise<TerminatedReason> {\r\n        // TransferStatus:\r\n        //    Transferring: transferAcceptance,\r\n        //    Transferred: transferCompletion with Success,\r\n        //    Failed: transferCompletion with Failure\r\n        // For Blind transfer, transferAcceptance is the success criteria\r\n        const transferInfo: TransferInfo = {\r\n            transferTarget: transferTargetMri,\r\n            transferType: TransferType.Transfer,\r\n            transferStatusSuccessList: [Enums.CallStatus.Transferring, Enums.CallStatus.Transferred]\r\n        };\r\n        return this._transferCall(transferInfo, causeId);\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.SAFE_TRANSFER, { singular: true, type: OPERATION_TYPE.CHAINED })\r\n    public async callSafeTransfer(transferTargetMri: string, @causeId causeId = generateCauseId()): Promise<TerminatedReason> {\r\n        // TransferStatus:\r\n        //    Transferring: transferAcceptance,\r\n        //    Transferred: transferCompletion with Success,\r\n        //    Failed: transferCompletion with Failure\r\n        // For Safe transfer, transferCompletion is the success criteria\r\n        const transferInfo: TransferInfo = {\r\n            transferTarget: transferTargetMri,\r\n            transferType: TransferType.Transfer,\r\n            transferStatusSuccessList: [Enums.CallStatus.Transferred]\r\n        };\r\n        return this._transferCall(transferInfo, causeId);\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.TRANSFER_TO_VOICEMAIL, { singular: true, type: OPERATION_TYPE.CHAINED })\r\n    public transferCallToVoicemail(transferOptions: TransferVoicemailOptions, @causeId causeId = generateCauseId()): Promise<TerminatedReason> {\r\n        // TransferStatus:\r\n        //    Transferring: transferAcceptance,\r\n        //    Transferred: transferCompletion with Success,\r\n        //    Failed: transferCompletion with Failure\r\n        // For Safe transfer, transferCompletion is the success criteria\r\n        const transferInfo: TransferInfo = {\r\n            transferTarget: transferOptions.transferTargetMri,\r\n            transferType: TransferType.TransferToVoicemail,\r\n            transferStatusSuccessList: [Enums.CallStatus.Transferred]\r\n        };\r\n        return this._transferCall(transferInfo, causeId);\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.CONSULTATIVE_TRANSFER, { singular: true, type: OPERATION_TYPE.CHAINED })\r\n    public async callConsultativeTransfer(callWithTarget: ICall, @causeId causeId = generateCauseId()): Promise<TerminatedReason> {\r\n        // TransferStatus:\r\n        //    Transferring: transferAcceptance,\r\n        //    Transferred: transferCompletion with Success,\r\n        //    Failed: transferCompletion with Failure\r\n        // For Consultative transfer, transferCompletion is the success criteria\r\n        const transferInfo: TransferInfo = {\r\n            targetCallId: (callWithTarget as SlimCoreElectronCall).slimcoreCallId,\r\n            transferType: TransferType.Transfer,\r\n            transferStatusSuccessList: [Enums.CallStatus.Transferred]\r\n        };\r\n        return this._transferCall(transferInfo, causeId);\r\n    }\r\n\r\n    public async consultativeTransferWithPickupCode(pickupCode: PickUpCode, causeId?: CauseId): Promise<TransactionEnd> {\r\n        return Promise.reject(`not yet implemented`);\r\n    }\r\n\r\n    private async _transferCall(transferInfo: TransferInfo, causeId: CauseId): Promise<TerminatedReason> {\r\n        const fnLogger = this._logger.createFnLogger(`Transfer`, causeId);\r\n        fnLogger.info('start');\r\n        this._setTransferState(TransferState.Started, causeId);\r\n\r\n        const transferCompletePromise = this._waitForTransferSuccessOrFailure(transferInfo.transferStatusSuccessList, TransferType.Transfer, causeId);\r\n\r\n        if (transferInfo.transferTarget && transferInfo.transferType === TransferType.TransferToVoicemail) {\r\n            this._slimcoreCallHandler.startCallTransfer(this.slimcoreCallId, transferInfo.transferTarget, Enums.TransferType.TransferToVoicemail);\r\n        } else if (transferInfo.transferTarget) {\r\n            this._slimcoreCallHandler.startCallTransfer(this.slimcoreCallId, transferInfo.transferTarget, Enums.TransferType.TransferStandard);\r\n        } else if (transferInfo.targetCallId) {\r\n            this._slimcoreCallHandler.startConsultativeCallTransfer(transferInfo.targetCallId, this.slimcoreCallId);\r\n        } else {\r\n            return Promise.reject(new Error('Either transferTarget/transfereeCallId should be present'));\r\n        }\r\n\r\n        return transferCompletePromise;\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.PARK_CALL, { type: OPERATION_TYPE.CHAINED })\r\n    public async park(context: ParkContext, @causeId causeId = generateCauseId()): Promise<PickUpCode> {\r\n        const parkInfo: ParkInfo = {\r\n            context,\r\n            parkStatusSuccessList: [Enums.CallStatus.Parked]\r\n        };\r\n\r\n        this._setParkState(ParkState.Started, causeId);\r\n        this._parkCompletePromise = this._waitForTransferSuccessOrFailure(parkInfo.parkStatusSuccessList, TransferType.Park, causeId);\r\n        const slimcoreParkContext = this.mapParkContext(parkInfo.context);\r\n        if (slimcoreParkContext === Enums.ParkContext.Invalid) {\r\n            return Promise.reject(TerminatedReason.UnknownError);\r\n        }\r\n\r\n        this._slimcoreCallHandler.startCallPark(this.slimcoreCallId, slimcoreParkContext);\r\n\r\n        return this._parkCompletePromise\r\n            .then(() => {\r\n                try {\r\n                    const pickupCode = this.getStrProperty(Enums.Property.CallParkPickupCode);\r\n                    this._serverHoldLocation = this.getStrProperty(Enums.Property.CallServerHoldLocation);\r\n                    return Promise.resolve(pickupCode);\r\n                } catch (e) {\r\n                    return Promise.reject(TerminatedReason.UnknownError);\r\n                }\r\n            });\r\n    }\r\n\r\n    public async getServerHoldLocation(): Promise<string> {\r\n        // ServerHeldPromise will be resolved on transferCompletion\r\n        // when ServerHoldLocation property is set\r\n        return this._parkCompletePromise\r\n            .then(() => {\r\n                this._logger.info(`getServerHoldLocation=${this._serverHoldLocation}`);\r\n                return Promise.resolve(this._serverHoldLocation);\r\n            });\r\n    }\r\n\r\n    private mapParkContext(context: ParkContext): Enums.ParkContext {\r\n        switch (context) {\r\n            case ParkContext.Team: return Enums.ParkContext.Team;\r\n            case ParkContext.SharedLine: return Enums.ParkContext.Sharedline;\r\n            case ParkContext.ServerHold: return Enums.ParkContext.Serverhold;\r\n            default: return Enums.ParkContext.Invalid;\r\n        }\r\n    }\r\n\r\n    private _waitForTransferSuccessOrFailure(transferSuccessStatusList: Enums.CallStatus[], transferType: TransferType, causeId: CauseId): Promise<TerminatedReason> {\r\n        const fnLogger = this._logger.createFnLogger('WaitForTransfer', causeId);\r\n        fnLogger.info(`successStatusList=${transferSuccessStatusList}, type=${transferType}`);\r\n        const transferPromise = this._callOperationHandler.createPendingOperation<TerminatedReason>(CALL_OPERATIONS_INTERNAL.CALL_TRANSFER_IN_PROGRESS, undefined, causeId);\r\n\r\n        const slimcoreTransferStatusProperty = transferType === TransferType.Transfer ? Enums.Property.CallTransferStatus : Enums.Property.CallParkStatus;\r\n        const slimcoreTransferFailureReasonProperty = transferType === TransferType.Transfer ? Enums.Property.CallTransferFailureReason : Enums.Property.CallParkFailureReason;\r\n\r\n        const onTransferStatusChanged = (value: Enums.CallStatus) => {\r\n            fnLogger.info(`status changed: ${value} (${Enums.CallStatus[value]})`);\r\n            if (transferSuccessStatusList.indexOf(value) !== -1 || value === Enums.CallStatus.Failed) {\r\n                if (callTransferStatus) {\r\n                    callTransferStatus.dispose();\r\n                    callTransferStatus = null;\r\n                }\r\n                if (transferSuccessStatusList.indexOf(value) !== -1) {\r\n                    this._callOperationHandler.resolveOperation(CALL_OPERATIONS_INTERNAL.CALL_TRANSFER_IN_PROGRESS, TerminatedReason.Success);\r\n                } else {\r\n                    const failureReason = this.getIntProperty(slimcoreTransferFailureReasonProperty);\r\n\r\n                    const terminatedReason = SlimCoreElectronCall.convertParticipantReasonToTerminatedReason(\r\n                        EnumConverter.convertFailureReasonToParticipantReason(failureReason));\r\n                    const telemetryData = {\r\n                        reason: failureReason,\r\n                        code: this.transferDiagnosticsInfo && this.transferDiagnosticsInfo.callControllerCode,\r\n                        subcode: this.transferDiagnosticsInfo && this.transferDiagnosticsInfo.callControllerSubCode\r\n                    };\r\n\r\n                    this._callTelemetry.updateOperationData(CALL_OPERATIONS_INTERNAL.CALL_TRANSFER_IN_PROGRESS, telemetryData, causeId);\r\n                    fnLogger.logFailure(`failureReason=${failureReason} => terminatedReason=${terminatedReason}, diagnostic info: ${getPrintableObject(this.transferDiagnosticsInfo)}`);\r\n                    this._callOperationHandler.rejectOperation(CALL_OPERATIONS_INTERNAL.CALL_TRANSFER_IN_PROGRESS, terminatedReason);\r\n                }\r\n            }\r\n        };\r\n\r\n        let callTransferStatus = this._slimcoreInstance.handle(\r\n            'object-property-changed',\r\n            { objectId: this.slimcoreCallId, propKey: slimcoreTransferStatusProperty },\r\n            data => onTransferStatusChanged(data.value as number));\r\n\r\n        return transferPromise;\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.MUTE, { waitFor: CALL_OPERATIONS.UNMUTE })\r\n    public async mute(@causeId causeId = generateCauseId()): Promise<void> {\r\n        if (this.isMuteDisabled()) {\r\n            return Promise.reject(new Error('Cannot mute when already locally muted'));\r\n        }\r\n        return this._muteUnmute(true, causeId);\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.UNMUTE, { waitFor: CALL_OPERATIONS.MUTE })\r\n    public async unmute(@causeId causeId = generateCauseId()): Promise<void> {\r\n        if (this.isUnMuteDisabled()) {\r\n            return Promise.reject(new Error('Cannot unmute when already locally and server unmuted'));\r\n        }\r\n        return this._muteUnmute(false, causeId);\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.MUTE_SPEAKER, { waitFor: CALL_OPERATIONS.UNMUTE_SPEAKER })\r\n    public async muteSpeaker(@causeId causeId = generateCauseId()): Promise<void> {\r\n        if (this.isSpeakerMuted) {\r\n            return Promise.reject(new Error('Cannot mute speaker when already muted'));\r\n        }\r\n        return this._muteUnmuteSpeaker(true, causeId);\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.UNMUTE_SPEAKER, { waitFor: CALL_OPERATIONS.MUTE_SPEAKER })\r\n    public async unmuteSpeaker(@causeId causeId = generateCauseId()): Promise<void> {\r\n        if (!this.isSpeakerMuted) {\r\n            return Promise.reject(new Error('Cannot unmute speaker when already unmuted'));\r\n        }\r\n        return this._muteUnmuteSpeaker(false, causeId);\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.MUTE_PARTICIPANTS, { waitFor: CALL_OPERATIONS_INTERNAL.ELECTRON_SLIMCORE_READY })\r\n    public async muteParticipants(muteScope: MuteScope, callParticipants: ICallParticipant[], @causeId causeId = generateCauseId()): Promise<void> {\r\n        return this._muteParticipants(muteScope, callParticipants, causeId);\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.HOLD, { type: OPERATION_TYPE.CHAINED })\r\n    public async hold(negotiationTag?: string, @causeId causeId = generateCauseId()): Promise<void> {\r\n        return this._holdUnhold(true, causeId, negotiationTag);\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.UNHOLD, { type: OPERATION_TYPE.CHAINED })\r\n    public async unhold(negotiationTag?: string, @causeId causeId = generateCauseId()): Promise<void> {\r\n        return this._holdUnhold(false, causeId, negotiationTag);\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.UPDATE_ENDPOINT_METADATA, { waitFor: CALL_OPERATIONS_INTERNAL.ELECTRON_SLIMCORE_READY })\r\n    public async updateEndpointMetadata(endpointMetadata: string, @causeId causeId = generateCauseId()): Promise<void> {\r\n        if (this.state !== CallState.Connected) {\r\n            this._logger.warn(`Trying to updateEndpointMetadata in a call which is not connected, callId = ${this.callId}`);\r\n            return Promise.reject(new Error('cannot updateEndpointMetadata in a call which is not connected'));\r\n        }\r\n        this._endpointMetadata = endpointMetadata; // keeping the local value in sync\r\n        return this._updateEndpointMetadata(this._endpointMetadata, causeId);\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.SEND_DTMF_TONE)\r\n    public async sendDtmfTone(dtmfTone: DtmfTone, @causeId causeId = generateCauseId()): Promise<void> {\r\n        this._logger.info(`DTMF tone <omitted>`);\r\n        return this._sendDtmfTone(dtmfTone, causeId);\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.SET_AUDIO_USAGE, { waitFor: CALL_OPERATIONS_INTERNAL.ELECTRON_SLIMCORE_READY })\r\n    public async setAudioUsageMode(audioUsageMode: AudioUsageMode, @causeId causeId = generateCauseId()): Promise<void> {\r\n        return this._setAudioUsageMode(audioUsageMode, causeId);\r\n    }\r\n\r\n    public async getTechnicalInformationJson(): Promise<string> {\r\n        return Promise.resolve().then(() => {\r\n            try {\r\n                return this._slimcoreCallHandler.callGetTechnicalInformationJson(this.slimcoreCallId);\r\n            } catch (error) {\r\n                this._logger.error(`Error in callGetTechnicalInformationJson callId: ${this.callId}, error: ${error}`);\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.START_AUDIO, { type: OPERATION_TYPE.CHAINED })\r\n    public async startAudio(negotiationTag?: string, @causeId causeId = generateCauseId()): Promise<MediaNegotiationStatusCode> {\r\n        const fnLogger = this._logger.createFnLogger(CALL_OPERATIONS.START_AUDIO, causeId);\r\n        if (this.state !== CallState.Connected) {\r\n            fnLogger.logFailure('cannot startAudio when call is not connected');\r\n            return Promise.reject(TerminatedReason.ActionNotAllowed);\r\n        }\r\n\r\n        const startAudioPromise = this._callOperationHandler.waitForOperation<MediaNegotiationStatusCode>(CALL_OPERATIONS.START_AUDIO, undefined, causeId);\r\n        this._slimcoreCallHandler.callStartAudio(this.slimcoreCallId, negotiationTag);\r\n        return startAudioPromise;\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.STOP_AUDIO, { type: OPERATION_TYPE.CHAINED })\r\n    public async stopAudio(negotiationTag?: string, @causeId causeId = generateCauseId()): Promise<MediaNegotiationStatusCode> {\r\n        const fnLogger = this._logger.createFnLogger(CALL_OPERATIONS.STOP_AUDIO, causeId);\r\n        if (this.state !== CallState.Connected) {\r\n            fnLogger.logFailure('cannot stopAudio when call is not connected');\r\n            return Promise.reject(TerminatedReason.ActionNotAllowed);\r\n        }\r\n\r\n        const stopAudioPromise = this._callOperationHandler.waitForOperation<MediaNegotiationStatusCode>(CALL_OPERATIONS.STOP_AUDIO, undefined, causeId);\r\n        this._slimcoreCallHandler.callStopAudio(this.slimcoreCallId, negotiationTag);\r\n        return stopAudioPromise;\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.ASSIMILATE, { waitFor: CALL_OPERATIONS.ASSIMILATE })\r\n    public async assimilate(callToAssimilate: ICall, threadId?: string, messageId?: string, @causeId causeId = generateCauseId()): Promise<TransactionEnd> {\r\n        const fnLogger = this._logger.createFnLogger(CALL_OPERATIONS.ASSIMILATE, causeId);\r\n\r\n        fnLogger.info(`assimilate: ${callToAssimilate.callId} threadId: ${threadId}, messageId: ${messageId}, causeId: ${causeId}`);\r\n\r\n        this._slimcoreCallHandler.callAssimilate(this.slimcoreCallId,\r\n            (callToAssimilate as SlimCoreElectronCall).slimcoreCallId, threadId, messageId);\r\n\r\n        // Need to add error handling.\r\n        return Promise.resolve<TransactionEnd>({ code: 0 });\r\n    }\r\n\r\n    private _onMediaNegotiationStatusChanged(eventData: SlimCore.CallHandler.Events.MediaNegotiationStatusChangedArgs) {\r\n        const fnLogger = this._logger.createFnLogger('onMediaNegotiationStatusChanged', eventData.causeId);\r\n        fnLogger.info(`_onMediaNegotiationStatusChanged modalityType: ${eventData.modalityType}\r\n            mediaNegotiationStatusCode: ${eventData.mediaNegotiationStatusCode}`);\r\n\r\n        let operationName;\r\n        switch (eventData.modalityType) {\r\n            case Enums.ModalityType.Audio:\r\n                operationName = (this._callOperationHandler.hasPendingOperation(CALL_OPERATIONS.START_AUDIO)) ?\r\n                    CALL_OPERATIONS.START_AUDIO : CALL_OPERATIONS.STOP_AUDIO;\r\n                break;\r\n\r\n            case Enums.ModalityType.Video:\r\n                operationName = CALL_OPERATIONS.SET_MAX_VIDEO_CHANNELS;\r\n                break;\r\n\r\n            default:\r\n                return;\r\n        }\r\n\r\n        if (this._callOperationHandler.hasPendingOperation(operationName)) {\r\n            if (eventData.mediaNegotiationStatusCode === Enums.MediaNegotiationStatusCode.Succeeded) {\r\n                this._callOperationHandler.maybeResolveOperation(operationName, eventData.mediaNegotiationStatusCode, undefined, eventData.causeId);\r\n            } else {\r\n                this._callOperationHandler.maybeRejectOperation(operationName, eventData.mediaNegotiationStatusCode, undefined, eventData.causeId);\r\n            }\r\n        }\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.STOP_CALL, { waitFor: CALL_OPERATIONS_INTERNAL.ELECTRON_SLIMCORE_READY })\r\n    public stop(forEveryone = false, @causeId causeId = generateCauseId()): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger(CALL_OPERATIONS.STOP_CALL, causeId);\r\n        if (this.state === CallState.Disconnecting) {\r\n            fnLogger.logFailure(`Trying to stop a call which is already Disconnecting, callId = ${this.callId}`);\r\n            return Promise.reject(new Error('cannot stop call in Disconnecting state'));\r\n        }\r\n\r\n        if (this.state === CallState.Disconnected) {\r\n            fnLogger.logFailure(`Trying to stop a call which is already Disconnected, callId = ${this.callId}`);\r\n            return Promise.reject(new Error('cannot stop call in Disconnected state'));\r\n        }\r\n\r\n        return this.stopInternal(causeId, undefined, forEveryone);\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.REJECT, { waitFor: CALL_OPERATIONS_INTERNAL.ELECTRON_SLIMCORE_READY })\r\n    public reject(@causeId causeId = generateCauseId()): Promise<void> {\r\n        return this.state !== CallState.Notified ?\r\n            Promise.reject(TerminatedReason.ActionNotAllowed) :\r\n            this.stopInternal(causeId);\r\n    }\r\n\r\n    private stopInternal(causeId: CauseId, terminatedReason: TerminatedReason = TerminatedReason.Undefined, forEveryone: boolean = false): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger('stopInternal', causeId);\r\n        if (this.state === CallState.Disconnecting) {\r\n            fnLogger.info(`Trying to stop a call which is already Disconnecting`);\r\n            return this.disconnectingPromise;\r\n        }\r\n\r\n        if (this.state === CallState.Disconnected) {\r\n            fnLogger.info(`Trying to stop a call which is already Disconnected`);\r\n            return this.disconnectingPromise;\r\n        }\r\n        this._setCallState(CallState.Disconnecting, causeId, terminatedReason);\r\n\r\n        this.disconnectingPromise = Promise.resolve<void>()\r\n            .then(() => {\r\n                fnLogger.info(`Leaving from call`);\r\n                return this._leaveSlimCoreCall(forEveryone, causeId);\r\n            })\r\n            .catch(error => {\r\n                this._callTelemetry.updateOperationData(CALL_OPERATIONS.STOP_CALL, { error: getPIISafeObject(error) }, causeId);\r\n                fnLogger.logFailure(error);\r\n                this._setCallState(CallState.Disconnected, causeId, error);\r\n                throw error;\r\n            });\r\n        return this.disconnectingPromise;\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS_INTERNAL.ELECTRON_LEAVE_CALL, { waitFor: CALL_OPERATIONS_INTERNAL.ELECTRON_SLIMCORE_READY })\r\n    private _leaveSlimCoreCall(forEveryone: boolean, causeId: CauseId): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger(CALL_OPERATIONS_INTERNAL.ELECTRON_LEAVE_CALL, causeId);\r\n        fnLogger.info(`forEveryone: ${forEveryone}`);\r\n\r\n        if (this.slimcoreCallId === 0) {\r\n            fnLogger.logFailure(`slimcoreCallId == 0`);\r\n            return Promise.reject(TerminatedReason.UnknownError);\r\n        }\r\n\r\n        const waitForEndCallPromise = this._callOperationHandler.createPendingOperation(CALL_OPERATIONS_INTERNAL.CALL_ENDED);\r\n\r\n        return Promise.resolve<void>()\r\n            .then(() => {\r\n                if (forEveryone) {\r\n                    this._slimcoreCallHandler.endCallForAll(this.slimcoreCallId);\r\n                } else {\r\n                    this._slimcoreCallHandler.leaveCall(this.slimcoreCallId);\r\n                }\r\n            })\r\n            .then(() => fnLogger.info('Waiting for SlimCore to end call'))\r\n            .then(() => waitForEndCallPromise)\r\n            .then(() => {\r\n                fnLogger.info('SlimCore ended the call');\r\n            }, err => {\r\n                const reason = TerminatedReason.LocalError;\r\n                fnLogger.logFailure(`Error in leaveSlimCoreCall().. ignoring, error = ${getPrintableObject(err)}, reason = ${reason}`);\r\n                return Promise.reject(reason);\r\n            });\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS_INTERNAL.INCOMING_INITIALIZE, { triggerAttach: true })\r\n    public incomingCallInit(callObjectId: number, @causeId causeId = generateCauseId()) {\r\n        const fnLogger = this._logger.createFnLogger(CALL_OPERATIONS_INTERNAL.INCOMING_INITIALIZE, causeId);\r\n        try {\r\n        this.callerMri = stripMriAliases(this._getStrProperty(this._slimcoreCallHandler, callObjectId, Enums.Property.CallerMriIdentity));\r\n        if (!this.callerMri) {\r\n            fnLogger.logFailure('Unable to get callerMRI from call object. Ignoring incoming call');\r\n            return;\r\n        }\r\n\r\n        const props = this._getProperties(this._slimcoreCallHandler, callObjectId, {\r\n            callQueueInfo: { propKey: Enums.Property.CallQueueInfo },\r\n            transferorMri: { propKey: Enums.Property.CallTransferorMri },\r\n            transferorDisplayName: { propKey: Enums.Property.CallTransferorDisplayName },\r\n            transferorType: { propKey: Enums.Property.CallTransferorType },\r\n            onBehalfOfMri: { propKey: Enums.Property.CallOnBehalfOfMri },\r\n            incomingCallType: { propKey: Enums.Property.CallIncomingType },\r\n            consultativeCallId: { propKey: Enums.Property.CallConsultativeTransferCallId },\r\n            messageId: { propKey: Enums.Property.CallMessageId }\r\n        }, {\r\n                status: { propKey: Enums.Property.CallStatus },\r\n                isIncomingOneOnOneVideoCall: { propKey: Enums.Property.CallIsIncomingOneOnOneVideoCall }\r\n            });\r\n\r\n        this.transferorMri = stripMriAliases(props.transferorMri);\r\n        this.transferorDisplayName = props.transferorDisplayName;\r\n        this.transferorType = props.transferorType as TransferorType;\r\n        this.onBehalfOfMri = stripMriAliases(props.onBehalfOfMri);\r\n        this.callQueueInfo = props.callQueueInfo && JSON.parse(props.callQueueInfo).callQueueInfo;\r\n        this.incomingCallType = props.incomingCallType as IncomingCallType;\r\n        this.consultativeCallId = props.consultativeCallId;\r\n        this.isIncomingOneOnOneVideoCall = !!props.isIncomingOneOnOneVideoCall;\r\n        this.messageId = props.messageId;\r\n        this.attachSlimCoreCallObject(callObjectId, causeId);\r\n        if (props.status === Enums.CallStatus.RingingIn) { // in case of Incoming 1:1 call or nudge\r\n            this._setCallState(CallState.Notified, causeId);\r\n            this._callTelemetry.setDirection(DIRECTION.INCOMING);\r\n            this._callTelemetry.setSelfParticipantRole(SELF_PARTICIPANT_ROLE.CALLEE);\r\n        }\r\n        } catch (error) {\r\n            fnLogger.logFailure(`sync failure, cleaning up slimcore ready operation: error=${getPrintableObject(error)}`);\r\n            this._callTelemetry.updateOperationData(CALL_OPERATIONS_INTERNAL.INCOMING_INITIALIZE, { error: getPIISafeObject(error) }, causeId);\r\n            this._callOperationHandler.rejectOperation(CALL_OPERATIONS_INTERNAL.ELECTRON_SLIMCORE_READY);\r\n            throw error;\r\n    }\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.ACKNOWLEDGE, { type: OPERATION_TYPE.CHAINED, triggerAttach: true })\r\n    public acknowledge(incomingCallPayload: IncomingCallPayload, @causeId causeId = generateCauseId()): Promise<CallAcknowledgeResult> {\r\n        const fnLogger = this._logger.createFnLogger(CALL_OPERATIONS.ACKNOWLEDGE, causeId);\r\n        if (this.state !== CallState.None && this.state !== CallState.Observing) {\r\n            // Clients may have dependency on existing behavior of rejected promise / error,\r\n            // but this should still be considered a success in telemetry\r\n            this._callTelemetry.maybeRecordOperationSuccess(CALL_OPERATIONS.ACKNOWLEDGE, { code: CallAcknowledgeResultCode.CallAlreadyExists });\r\n            return Promise.reject(new Error('Trying to acknowledge a call that has already been acted on'));\r\n        }\r\n\r\n        this._setCallerMri(stripMriAliases(incomingCallPayload.callerId), causeId);\r\n        this._callTelemetry.setDirection(DIRECTION.INCOMING);\r\n        this._callTelemetry.setSelfParticipantRole(SELF_PARTICIPANT_ROLE.CALLEE);\r\n        const correlationIds = {\r\n            callId: incomingCallPayload.convoCallId,\r\n            callerId: incomingCallPayload.callerId,\r\n            launchTime: incomingCallPayload.launchTime.toString(),\r\n            pushReceivedTime: incomingCallPayload.pushReceivedTime.toString(),\r\n            registrationId: incomingCallPayload.registrationId,\r\n            participantId: incomingCallPayload.participantId\r\n        };\r\n\r\n        const token = this._slimcoreInstance.handlePushNotification({\r\n            eventType: incomingCallPayload.body.evt,\r\n            servicePayload: incomingCallPayload.body.gp,\r\n            correlationIdsJson: JSON.stringify(correlationIds),\r\n            callKey: incomingCallPayload.callKey,\r\n            connectionType: SlimCoreElectronCall.convertConnectionType(incomingCallPayload.connectionType),\r\n            accountIdentity: this.currentUserSkypeIdentity.id,\r\n            mediaConfigurationJson: SlimCoreCommon.mapToEmptyStrIfFalsy(JSON.stringify(incomingCallPayload.mediaConfiguration))\r\n        });\r\n\r\n        const callbacks: IDisposable[] = [];\r\n        const waitForHandlePush = this._callOperationHandler.createPendingOperation<CallAcknowledgeResult>(CALL_OPERATIONS_INTERNAL.ELECTRON_WAIT_FOR_HANDLE_PUSH, undefined, causeId);\r\n        callbacks.push(this._slimcoreInstance.handle('push-handling-complete', { token }, event => { /* #1237310 (Closed Won't Fix Bug) *//* tslint:disable-line */\r\n            if (event.token !== token) {/* #1237310 (Closed Won't Fix Bug) *//* tslint:disable-line */\r\n                fnLogger.logFailure(`HandlePushNotification: Received unexpected token ${event.token} (expected ${token})`);\r\n                return;\r\n            }\r\n\r\n            fnLogger.info(`HandlePushNotification: Received event for token: ${event.token} result: ${event.result}`);\r\n            if (event.result === Enums.PushHandlingResult.CallSetupSucceeded) {\r\n                fnLogger.logSuccess('HandlePushNotification: Succeeded');\r\n                this._callOperationHandler.resolveOperation(\r\n                    CALL_OPERATIONS_INTERNAL.ELECTRON_WAIT_FOR_HANDLE_PUSH,\r\n                    { code: CallAcknowledgeResultCode.CallSetupSucceeded, success: true }, undefined, causeId\r\n                ).catch(e => {\r\n                    fnLogger.logFailure(`HandlePushNotification: Failed ${e}`);\r\n                });\r\n            } else if (event.result === Enums.PushHandlingResult.CallSetupProgress) {\r\n                fnLogger.info('HandlePushNotification: In progress, keep waiting...');\r\n            } else {\r\n                const message = `HandlePushNotification: Failed ${event.result}`;\r\n                fnLogger.logFailure(message);\r\n                this._callOperationHandler.resolveOperation(\r\n                    CALL_OPERATIONS_INTERNAL.ELECTRON_WAIT_FOR_HANDLE_PUSH,\r\n                    SlimCoreElectronCall.convertPushHandlingResult(event.result), undefined, causeId\r\n                ).catch(e => {\r\n                    fnLogger.logFailure(`HandlePushNotification: Failed ${e}`);\r\n                });\r\n            }\r\n        }));\r\n\r\n        const waitForRinging = this._callOperationHandler.createPendingOperation(CALL_OPERATIONS_INTERNAL.ELECTRON_WAIT_FOR_RINGING);\r\n        waitForRinging.catch(noop);\r\n        // We do not have a call object ID yet, so need to listen globally\r\n        callbacks.push(this._slimcoreInstance.handle('object-property-changed', { objectType: Enums.ObjectType.Call }, event => {\r\n            const callId = this._getStrProperty(this._slimcoreCallHandler, event.objectId, Enums.Property.CallName);\r\n            const status = this._getIntProperty(this._slimcoreCallHandler, event.objectId, Enums.Property.CallStatus);\r\n\r\n            if (callId !== this.callId) {\r\n                fnLogger.info(`Ignoring SlimCore event for incorrect call ${event.objectId}/${callId}`);\r\n                return;\r\n            }\r\n\r\n            if (status === Enums.CallStatus.RingingIn) {\r\n                this.attachSlimCoreCallObject(event.objectId, causeId, false, 'acknowledge');\r\n                this._fillIncomingCallProperties(causeId);\r\n\r\n                if (this._callOperationHandler.hasPendingOperation(CALL_OPERATIONS_INTERNAL.ELECTRON_WAIT_FOR_RINGING)) {\r\n                    this._callOperationHandler.resolveOperation(CALL_OPERATIONS_INTERNAL.ELECTRON_WAIT_FOR_RINGING, undefined, undefined, causeId)\r\n                        .then(() => {\r\n                            fnLogger.logSuccess('Reached ringing/active state for call pending acknowledgement');\r\n                        }, e => {\r\n                            fnLogger.logFailure(`Reached ringing/active state for call pending acknowledgement ${e}`);\r\n                        });\r\n                }\r\n                this.raiseChanged();\r\n            }\r\n        }));\r\n\r\n        const unsubscribe = () => _.each(callbacks, c => c.dispose());\r\n        const clearPendingOperations = (result: any) => {\r\n            this._callOperationHandler.maybeRejectOperation(CALL_OPERATIONS_INTERNAL.ELECTRON_WAIT_FOR_RINGING, result, undefined, causeId);\r\n            this._callOperationHandler.maybeRejectOperation(CALL_OPERATIONS_INTERNAL.ELECTRON_WAIT_FOR_HANDLE_PUSH, result, undefined, causeId);\r\n        };\r\n\r\n        return waitForHandlePush.then(pushResult => {\r\n            if (!pushResult.success) {\r\n                clearPendingOperations(pushResult);\r\n                return pushResult;\r\n            }\r\n\r\n            return waitForRinging.then(() => {\r\n                this._setCallState(CallState.Notified, causeId);\r\n                return pushResult;\r\n            });\r\n        }).then(result => {\r\n            fnLogger.logSuccess('Acknowledge done');\r\n            unsubscribe();\r\n            return result;\r\n        }).catch(error => {\r\n            fnLogger.logFailure(`sync failure, cleaning up slimcore ready operation: error=${getPrintableObject(error)}`);\r\n            this._callTelemetry.updateOperationData(CALL_OPERATIONS_INTERNAL.INCOMING_INITIALIZE, { error: getPIISafeObject(error) }, causeId);\r\n            this._callOperationHandler.rejectOperation(CALL_OPERATIONS_INTERNAL.ELECTRON_SLIMCORE_READY);\r\n            unsubscribe();\r\n            clearPendingOperations(error);\r\n            throw error;\r\n        });\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.ACCEPT, { waitFor: CALL_OPERATIONS_INTERNAL.ELECTRON_SLIMCORE_READY })\r\n    public async accept(callAcceptOptions: CallAcceptOptions, @causeId causeId = generateCauseId()): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger(CALL_OPERATIONS.ACCEPT, causeId);\r\n        fnLogger.info(`accept, answerMediaType: ${callAcceptOptions.answerMediaType},\r\n                            withVideo: ${callAcceptOptions.withVideo},\r\n                            muted: ${callAcceptOptions.muted}`);\r\n\r\n        if (callAcceptOptions.muted) {\r\n            fnLogger.logFailure('Accepting call muted is not implemented');\r\n        }\r\n\r\n        this._setCallState(CallState.Connecting, causeId);\r\n        this.connectCallPromise = this._callOperationHandler.waitForOperation(CALL_OPERATIONS.ACCEPT);\r\n        const acceptCallPromise = this._callOperationHandler.createPendingOperation<void>(CALL_OPERATIONS_INTERNAL.CONNECT_CALL, undefined, causeId);\r\n\r\n        try {\r\n            this._acceptCall(callAcceptOptions, causeId);\r\n            this._updateCallType(this.getIntProperty(Enums.Property.CallIsConference), causeId);\r\n            if (callAcceptOptions.answerMediaType === AnswerMediaType.AnswerWithAudioVideo) {\r\n                fnLogger.info('Call has been answered - turning on video');\r\n                await this.startVideoSafe(causeId);\r\n            }\r\n            await acceptCallPromise;\r\n            this._setCallState(CallState.Connected, causeId);\r\n        } catch (error) {\r\n            this._callTelemetry.updateOperationData(CALL_OPERATIONS.ACCEPT, { error: getPIISafeObject(error) }, causeId);\r\n            this.stopInternal(causeId);\r\n            this._logger.error(`Error in accept(), callId = ${this.callId}, error = ${error}`);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.MERGE_WITH_PICKUP_CODE, { operationIdKey: 'pickupCode' })\r\n    public async mergeWithPickupCode(@operationId payload: CallMergeOptions, @causeId causeId = generateCauseId()): Promise<TransactionEnd> {\r\n        const fnLogger = this._logger.createFnLogger(CALL_OPERATIONS.MERGE_WITH_PICKUP_CODE, causeId);\r\n        fnLogger.info(`mergeWithPickupCode: pickup code: ${payload.pickupCode}, threadId: ${payload.threadId} messageId: ${payload.messageId}`);\r\n        if (!payload.pickupCode) {\r\n            fnLogger.info(`mergeWithPickupCode: pickup code cannot be empty`);\r\n            return Promise.reject({\r\n                code: TRANSACTION_END_CODE.CLIENT_ERROR,\r\n                subcode: TRANSACTION_END_SUBCODE.LOCAL_REJECT,\r\n                phrase: TRANSACTION_END_PHRASE.TRANSACTION_DISALLOWED\r\n            });\r\n        }\r\n        const mergePromise = this._callOperationHandler.waitForOperation<TransactionEnd>(\r\n            CALL_OPERATIONS.MERGE_WITH_PICKUP_CODE, payload.pickupCode, causeId);\r\n\r\n        return Promise.resolve()\r\n            .then(() => this._mergeWithPickupCode(payload.pickupCode, payload.threadId, payload.messageId, causeId))\r\n            .catch(error => {\r\n                this._callTelemetry.updateOperationData(CALL_OPERATIONS.MERGE_WITH_PICKUP_CODE, { error: getPIISafeObject(error) }, causeId);\r\n                fnLogger.logFailure(error);\r\n\r\n                let result = error;\r\n                if (isTransactionEnd(error)) {\r\n                    result = (error as TransactionEnd);\r\n                } else {\r\n                    result = {\r\n                        code: TRANSACTION_END_CODE.CLIENT_ERROR,\r\n                        subcode: TRANSACTION_END_SUBCODE.TRANSACTION_NOT_ALLOWED,\r\n                        phrase: getPrintableObject(error)\r\n                    };\r\n                }\r\n                return Promise.reject(result);\r\n            })\r\n            .then(() => mergePromise);\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.MERGE_CALL, { singular: true, waitFor: CALL_OPERATIONS_INTERNAL.ELECTRON_SLIMCORE_READY })\r\n    public async merge(callToMerge: ICall, callMergeOptions: CallMergeOptions, @causeId causeId = generateCauseId()): Promise<TransactionEnd> {\r\n        const fnLogger = this._logger.createFnLogger(CALL_OPERATIONS.MERGE_CALL, causeId);\r\n        fnLogger.info(`merge: ${callToMerge.callId} threadId: ${callMergeOptions.threadId}, messageId: ${callMergeOptions.messageId}`);\r\n\r\n        let participantMri: string;\r\n        if (callToMerge.participants && callToMerge.participants.length === 1) {\r\n            participantMri = callToMerge.participants[0].id;\r\n        } else {\r\n            fnLogger.error(`error invalid number of participants on call to be merged ${callToMerge.participants.length}`);\r\n            return Promise.reject({\r\n                code: TRANSACTION_END_CODE.CLIENT_ERROR,\r\n                subcode: TRANSACTION_END_SUBCODE.LOCAL_REJECT,\r\n                phrase: TRANSACTION_END_PHRASE.TRANSACTION_DISALLOWED\r\n            });\r\n        }\r\n        const participant = this._getOrCreateParticipant(participantMri, causeId);\r\n        // returning add participant promise.\r\n        this._addParticipantToCall(participant, causeId);\r\n        const addParticipantPromise = this._participantOperationHandler.createPendingOperation<ICallParticipant>(\r\n            PARTICIPANT_OPERATIONS.ADD_PARTICIPANT,\r\n            participant.id,\r\n            causeId);\r\n\r\n        return Promise.resolve()\r\n            .then(() => this._slimcoreCallHandler.callMerge(this.slimcoreCallId,\r\n                (callToMerge as SlimCoreElectronCall).slimcoreCallId,\r\n                callMergeOptions.threadId,\r\n                callMergeOptions.messageId,\r\n                causeId))\r\n            .catch(error => {\r\n                // catch error thrown by slimcore exceptions. this will also catch if slimcore electron wrapper throws based on falsey results\r\n                this._callTelemetry.updateOperationData(PARTICIPANT_OPERATIONS.ADD_PARTICIPANT, { error: getPIISafeObject(error) }, causeId, participantMri);\r\n                fnLogger.logFailure(error);\r\n                this._handleParticipantRemoved(participantMri, causeId, error);\r\n                let result = error;\r\n                if (isTransactionEnd(error)) {\r\n                    result = (error as TransactionEnd);\r\n                } else {\r\n                    result = {\r\n                        code: TRANSACTION_END_CODE.CLIENT_ERROR,\r\n                        subcode: TRANSACTION_END_SUBCODE.TRANSACTION_NOT_ALLOWED,\r\n                        phrase: getPrintableObject(error)\r\n                    };\r\n                }\r\n                return Promise.reject(result);\r\n            })\r\n            .then(() => addParticipantPromise)\r\n            .then(() => {\r\n                return Promise.resolve({\r\n                    code: TRANSACTION_END_CODE.SUCCESS,\r\n                    subCode: 0,\r\n                    phrase: TRANSACTION_END_PHRASE.TRANSACTION_COMPLETE\r\n                });\r\n            })\r\n            .catch(error => {\r\n                fnLogger.logFailure(error);\r\n                this._handleParticipantRemoved(participantMri, causeId, error);\r\n                let result = error;\r\n                if (isTransactionEnd(error)) {\r\n                    result = (error as TransactionEnd);\r\n                }\r\n                return Promise.reject(result);\r\n            });\r\n    }\r\n\r\n    private _acceptCall(callAcceptOptions: CallAcceptOptions, causeId: CauseId): void {\r\n        try {\r\n            if (callAcceptOptions.withVideo) {\r\n                callAcceptOptions.answerMediaType = AnswerMediaType.AnswerWithAudioVideo;\r\n            }\r\n            this._slimcoreCallHandler.acceptCall(this.slimcoreCallId, SlimCoreElectronCall.toAnswerMediaType(callAcceptOptions.answerMediaType));\r\n        } catch (error) {\r\n            this._logger.info(`acceptCall is missing from the slimcore electron module: ${error}`);\r\n            if (callAcceptOptions.answerMediaType === AnswerMediaType.AnswerWithAudioVideo) {\r\n                callAcceptOptions.withVideo = true;\r\n            }\r\n            this._slimcoreCallHandler.answerCall(this.slimcoreCallId, callAcceptOptions.withVideo);\r\n        }\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS_INTERNAL.RECONNECT)\r\n    public reconnect(): Promise<void> {\r\n        return Promise.reject(new Error('Retargeting is not supported'));\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.ELECTRON_PROVIDE_CQF, { waitFor: CALL_OPERATIONS_INTERNAL.ELECTRON_SLIMCORE_READY })\r\n    public provideCallQualityFeedback(questionaryId: string, trackingReason: string, rating: number, problemTokens: string): Promise<void> {\r\n        this._logger.info('provideCallQualityFeedback');\r\n        return Promise.resolve().then(() => {\r\n            try {\r\n                this._slimcoreCallHandler.provideCallQualityFeedback(this.callId, this.participantId, questionaryId, trackingReason, rating, problemTokens);\r\n            } catch (error) {\r\n                this._logger.error(`Error in provideCallQualityFeedback callId: ${this.callId}, error: ${error}`);\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n\r\n    private isServerMuteUnmuteEnabled = () => {\r\n        if (!this.endpoints) {\r\n            // Endpoints not set until once the call is established\r\n            return false;\r\n        }\r\n\r\n        return _.some(this.endpoints.endpointDetails, (endpoint: CallParticipantEndpointDetails) => {\r\n            if (this.endpointId === endpoint.endpointId) {\r\n                return endpoint.capabilities && endpoint.capabilities.serverMuteUnmute === 'enabled';\r\n            }\r\n            return false;\r\n        });\r\n    }\r\n\r\n    private _mergeWithPickupCode(pickupCode: string, threadId?: string, messageId?: string, causeId?: string) {\r\n        this._logger.info(`_mergeWithPickupCode: pickupCode = ${pickupCode} threadId = ${threadId} messageId = ${messageId} causeId = ${causeId}`);\r\n\r\n        this._slimcoreCallHandler.mergeCall(\r\n            this.slimcoreCallId,\r\n            pickupCode,\r\n            SlimCoreCommon.mapToEmptyStrIfFalsy(threadId),\r\n            SlimCoreCommon.mapToEmptyStrIfFalsy(messageId),\r\n            SlimCoreCommon.mapToEmptyStrIfFalsy(causeId)\r\n        );\r\n    }\r\n\r\n    private isMuteDisabled = () => {\r\n        return this.isMuted;\r\n    }\r\n\r\n    private isUnMuteDisabled = () => {\r\n        if (this.callType === CallType.P2P) {\r\n            return !this.isMuted;\r\n        } else if (this.callType === CallType.Conference) {\r\n            if (!this.isServerMuteUnmuteEnabled()) {\r\n                return !this.isMuted;\r\n            }\r\n            return !this.isServerMuted && !this.isMuted;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private _onCallOriginChanged(callOrigin: Enums.OriginType) {\r\n        if (callOrigin === Enums.OriginType.Transfer) {\r\n            this._setCallOrigin(CallOrigin.Transfer);\r\n        } else if (callOrigin === Enums.OriginType.Park) {\r\n            this._setCallOrigin(CallOrigin.Park);\r\n        } else if (callOrigin === Enums.OriginType.Unspecified) {\r\n            this._setCallOrigin(CallOrigin.Unspecified);\r\n        } else if (callOrigin === Enums.OriginType.TransferToVoicemail) {\r\n            this._setCallOrigin(CallOrigin.TransferToVoicemail);\r\n        } else {\r\n            this._logger.info('Unknown origin');\r\n        }\r\n    }\r\n\r\n    private _onCallMutedUnmuted(callIsMuted: boolean) {\r\n        const inLobby = this.state === CallState.InLobby;\r\n\r\n        this._logger.info(`onCallMutedUnmuted current: ${this.isMuted} new: ${callIsMuted}`);\r\n        this._logger.info(`onCallMutedUnmuted isServerMuted: ${this.isServerMuted} inLobby: ${inLobby}`);\r\n        // Only resolve unmuted promise if we are serverMuted when we receive onUnmuteOperationStatusChange\r\n        // Also resolve unmuted promise if we are in lobby, as we will never be server unmuted in the lobby\r\n        // but we allow the user to toggle local mute state.\r\n\r\n        if ((!this.isServerMuted || inLobby) && !callIsMuted) {\r\n            this._callOperationHandler.maybeResolveOperation(CALL_OPERATIONS.MUTE);\r\n            this._callOperationHandler.maybeResolveOperation(CALL_OPERATIONS.UNMUTE);\r\n        }\r\n\r\n        if (callIsMuted) {\r\n            this._callOperationHandler.maybeResolveOperation(CALL_OPERATIONS.MUTE);\r\n            this._callOperationHandler.maybeResolveOperation(CALL_OPERATIONS.UNMUTE);\r\n        }\r\n\r\n        if (this.isMuted !== callIsMuted) {\r\n            this._logger.info(`isMuted set to ${callIsMuted} in _onCallMutedUnmuted`);\r\n            this.isMuted = callIsMuted;\r\n            this._logger.info(`onCallMutedUnmuted isMuted: ${this.isMuted}`);\r\n            this._updateCapabilities(generateCauseId());\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _onCallMutedUnmutedSpeaker(speakerMuted: boolean, causeId = generateCauseId()) {\r\n        const fnLogger = this._logger.createFnLogger('onCallMutedUnmutedSpeaker', causeId);\r\n        fnLogger.info(`current: ${this.isSpeakerMuted} new: ${speakerMuted}`);\r\n\r\n        if (!speakerMuted) {\r\n            this._callOperationHandler.maybeResolveOperation(CALL_OPERATIONS.UNMUTE_SPEAKER, undefined, undefined, causeId);\r\n        } else {\r\n            this._callOperationHandler.maybeResolveOperation(CALL_OPERATIONS.MUTE_SPEAKER, undefined, undefined, causeId);\r\n        }\r\n\r\n        this._setMutedSpeaker(speakerMuted, causeId);\r\n    }\r\n\r\n    private _onCallIsServerMuted(isServerMuted: boolean, causeId = generateCauseId()) {\r\n        this._logger.info(`_onCallIsServerMuted ${isServerMuted}`);\r\n        if (isServerMuted !== this.isServerMuted) {\r\n            this.isServerMuted = isServerMuted;\r\n            this._callTelemetry.recordEvent(PARTICIPANT_OPERATIONS_INTERNAL.SELF_PARTICIPANT_UPDATED, { isServerMuted: this.isServerMuted }, causeId);\r\n            this.event('serverMutedChanged').raise(isServerMuted);\r\n            this._updateCapabilities(causeId);\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _onCallCapabilitiesChanged(value: Enums.SelfCapability) {\r\n        if (value !== this._capabilityFlags) {\r\n            this._logger.info(`_onCallCapabilitiesChanged: new value is ${value}`);\r\n            this._capabilityFlags = value;\r\n            this._updateCapabilities(generateCauseId(), true);\r\n        }\r\n    }\r\n\r\n    private _updateCapabilities(causeId: CauseId, raiseIfChanged = false) {\r\n        // See SlimCore's NGCall::updateCapabilities() for this._capabilityFlags logic.\r\n        // E.g. meeting role logic is included there.\r\n        let canUnmuteSelf = false;\r\n        let canMuteOthers = false;\r\n\r\n        if (!stateUtils.callStateIsAnyOf(this.state, [CallState.Preheating, CallState.Preheated])) {\r\n            // The link check is here rather than isUnMuteDisabled() to avoid\r\n            // returning an misleading error in the unmute path in the\r\n            // server-muted & missing link scenario.\r\n            canUnmuteSelf = !this.isUnMuteDisabled() &&\r\n                (!this.isServerMuted || !!(this._capabilityFlags & Enums.SelfCapability.UnmuteSelf));\r\n\r\n            canMuteOthers = !!(this._capabilityFlags & Enums.SelfCapability.MuteOthers);\r\n        }\r\n\r\n        if (this._capabilities.canUnmuteSelf !== canUnmuteSelf ||\r\n            this._capabilities.canMuteOthers !== canMuteOthers) {\r\n            this._capabilities.canUnmuteSelf = canUnmuteSelf;\r\n            this._capabilities.canMuteOthers = canMuteOthers;\r\n            this._logger.info(`[${causeId}]_updateCapabilities Computed capabilities: ${JSON.stringify(this._capabilities)}`);\r\n            if (raiseIfChanged) {\r\n                this.raiseChanged();\r\n            }\r\n        }\r\n    }\r\n\r\n    private _getCallParticipantMriMap() {\r\n        const result: { [mri: string]: number } = {};\r\n        // NOTE , winRT may return null instead of empty array, fallback to empty array if this happens\r\n        const slimcoreParticipantsInCall = this._slimcoreCallHandler.callGetParticipants(this.slimcoreCallId) || [];\r\n        const mriPropQuery: SlimCore.StrProperties = {};\r\n        for (const objectId of slimcoreParticipantsInCall) {\r\n            mriPropQuery[objectId] = { objectId, propKey: Enums.Property.ParticipantMriIdentity };\r\n        }\r\n        const participantMris = this._getProperties(this._slimcoreCallHandler, 0, mriPropQuery, {});\r\n        for (const participantId of slimcoreParticipantsInCall) {\r\n            const mri = participantMris[participantId];\r\n            if (mri) {\r\n                result[mri] = participantId;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private _getParticipantsData(participantsToFetch: ParticipantInfo[]): CallParticipantData[] {\r\n        const strPropQuery: SlimCore.StrProperties = {};\r\n        const intPropQuery: SlimCore.IntProperties = {};\r\n        const participantMriMap: { [key: number]: string } = {};\r\n        const propNameSeparator = '_';\r\n        const getPropName = (objectId: number, propName: string) => `${objectId}${propNameSeparator}${propName}`;\r\n\r\n        // fetch all props for all participants\r\n        for (const info of participantsToFetch) {\r\n            for (const propName of Object.keys(participantStrProps)) {\r\n                strPropQuery[getPropName(info.objectId, propName)] = {\r\n                    objectId: info.objectId,\r\n                    propKey: participantStrProps[propName].propKey,\r\n                    fallback: participantStrProps[propName].fallback\r\n                };\r\n            }\r\n            for (const propName of Object.keys(participantIntProps)) {\r\n                intPropQuery[getPropName(info.objectId, propName)] = {\r\n                    objectId: info.objectId,\r\n                    propKey: participantIntProps[propName].propKey,\r\n                    fallback: participantIntProps[propName].fallback\r\n                };\r\n            }\r\n            participantMriMap[info.objectId] = info.mri;\r\n        }\r\n\r\n        const participantsProps: { [key: number]: CallParticipantData } = {};\r\n        if (participantsToFetch.length) {\r\n            const fetchedProps = this._getProperties(this._slimcoreCallHandler, 0, strPropQuery, intPropQuery);\r\n\r\n            // break the result into dictionary by participant id\r\n            for (const fetchedProp of Object.keys(fetchedProps)) {\r\n                const [id, propKey] = fetchedProp.split(propNameSeparator);\r\n                if (!participantsProps[id]) {\r\n                    participantsProps[id] = {\r\n                        objectId: Number(id),\r\n                        mri: participantMriMap[id],\r\n                        props: {}\r\n                    };\r\n                }\r\n                participantsProps[id].props[propKey] = fetchedProps[fetchedProp];\r\n            }\r\n        }\r\n        const result: CallParticipantData[] = [];\r\n        for (const id of Object.keys(participantsProps)) {\r\n            result.push(participantsProps[id]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private _callGetParticipantsData(currentParticipants: ParticipantInfo[], causeId: CauseId) {\r\n        const newRoster = this._getCallParticipantMriMap();\r\n        const participantsToAdd: ParticipantInfo[] = [];\r\n        const participantsToRemove: ParticipantInfo[] = [];\r\n\r\n        this._logger.info(`[${causeId}]onParticipantJoinedOrRemoved # of participants in roster=${Object.keys(newRoster).length}`);\r\n\r\n        const existsInRoster = (participant: ParticipantInfo) => newRoster.hasOwnProperty(participant.mri);\r\n        const hasSlimcoreObjectId = (participant: ParticipantInfo) => participant.objectId;\r\n        const isSameAsInRoster = (participant: ParticipantInfo) => participant.objectId === newRoster[participant.mri];\r\n\r\n        currentParticipants.forEach(currentParticipant => {\r\n            if (existsInRoster(currentParticipant)) {\r\n                if (!hasSlimcoreObjectId(currentParticipant)) {\r\n                    participantsToAdd.push(currentParticipant);\r\n                    delete newRoster[currentParticipant.objectId];\r\n                } else if (!isSameAsInRoster(currentParticipant)) {\r\n                    // edge case: we locally have participant and his ID is NOT the same as the one in roster - remove local first, he'll be added from roster after\r\n                    // if id is the same - we'll process participant to make sure all pending promises are cleared.\r\n                    participantsToRemove.push(currentParticipant);\r\n                }\r\n\r\n            } else {\r\n                participantsToRemove.push(currentParticipant);\r\n            }\r\n        });\r\n        Object.keys(newRoster).forEach(mri => participantsToAdd.push({ mri, objectId: newRoster[mri] }));\r\n\r\n        let newParticipantsData: CallParticipantData[] = [];\r\n        if (this._settings.enableParticipantsGetPropsAggregation) {\r\n            newParticipantsData = this._getParticipantsData(participantsToAdd);\r\n        } else {\r\n            newParticipantsData = participantsToAdd;\r\n        }\r\n\r\n        return { newParticipantsData, participantsToRemove };\r\n    }\r\n\r\n    private _onParticipantJoinedOrRemoved(causeId: CauseId) {\r\n        const { newParticipantsData, participantsToRemove } = this._callGetParticipantsData(this.participants.map(p =>\r\n            ({ objectId: p.slimcoreObjectId, mri: p.id })), causeId);\r\n        participantsToRemove.forEach(participant =>\r\n            this._handleParticipantRemoved(participant.mri, causeId, this.participantMap[participant.mri].stateReason));\r\n        Object.keys(newParticipantsData).forEach(objectId => this._handleParticipantJoined(newParticipantsData[objectId], causeId));\r\n    }\r\n\r\n    private _updateDominantSpeakerList(): { fullOrderMatches: boolean; topSpeakerMatches: boolean } {\r\n        if (this._isOptimizedSpeakerEventingEnabled) {\r\n            return { fullOrderMatches: true, topSpeakerMatches: false };\r\n        }\r\n\r\n        const sortedDominantSpeakerIds: string[] = _.map(\r\n            _.sortBy(\r\n                _.map(\r\n                    _.filter(this.participants, p => p.state === ParticipantState.Connected),\r\n                    participant => {\r\n                        return {\r\n                            mri: participant.id,\r\n\r\n                            // If dominant speaker is 0, then set it to max value so it always appears last in the list.\r\n                            rank: participant.dominantSpeakerRank ? participant.dominantSpeakerRank : this.participants.length + 1\r\n                        };\r\n                    }), 'rank'),\r\n            elem => {\r\n                return elem.mri;\r\n            });\r\n\r\n        const fullOrderMatches = _.isEqual(this.dominantSpeakerInfo.speakerList, sortedDominantSpeakerIds);\r\n        let topSpeakerMatches = fullOrderMatches;\r\n        if (!topSpeakerMatches) {\r\n            topSpeakerMatches = !_.isEmpty(this.dominantSpeakerInfo.speakerList)\r\n                && !_.isEmpty(sortedDominantSpeakerIds)\r\n                && (_.head(this.dominantSpeakerInfo.speakerList) === _.head(sortedDominantSpeakerIds));\r\n        }\r\n\r\n        this.dominantSpeakerInfo = {\r\n            speakerList: sortedDominantSpeakerIds,\r\n            timestamp: new Date()\r\n        };\r\n\r\n        if (!fullOrderMatches) {\r\n            this._logger.info(`_updateDominantSpeakerList: ${this.dominantSpeakerInfo.speakerList.length}`);\r\n        }\r\n\r\n        return { fullOrderMatches, topSpeakerMatches };\r\n    }\r\n\r\n    private _handleParticipantRemoved(participantId: string, causeId: CauseId, reason: ParticipantStateReason = ParticipantStateReason.None) {\r\n        const fnLogger = this._logger.createFnLogger('handleParticipantRemoved', causeId);\r\n        fnLogger.info(`reason=${reason}`);\r\n\r\n        // Notify screen sharing control about participant removed\r\n        if (this.screenSharingControl && this.screenSharingControl.isScreenSharingControlEnabled()) {\r\n            this.screenSharingControl.handleParticipantRemoved(participantId);\r\n        }\r\n\r\n        const participant = this._removeParticipantEntry(participantId);\r\n        if (!participant) {\r\n            fnLogger.logFailure(`unable to remove participant`);\r\n            return;\r\n        }\r\n\r\n        participant.setState(ParticipantState.Disconnected, causeId, reason);\r\n\r\n        this._participantOperationHandler.maybeRejectOperation(PARTICIPANT_OPERATIONS.ADD_PARTICIPANT, reason, participantId);\r\n        this._participantOperationHandler.maybeResolveOperation(PARTICIPANT_OPERATIONS.REMOVE_PARTICIPANT, reason, participantId);\r\n\r\n        participant.rejectAdmitParticipantDeferred(reason);\r\n        participant.dispose();\r\n\r\n        this._updateDominantSpeakerList();\r\n        this.event('participantRemoved').raise(participant);\r\n        this.raiseChangedDeferred();\r\n    }\r\n\r\n    private _handleParticipantJoined(data: CallParticipantData, causeId: CauseId) {\r\n        this._logger.debug(`[${causeId}]handleParticipantJoined: ${piiUtils.scrubMriOrOmit(data.mri)}`);\r\n        const participant = this._getOrCreateParticipant(data.mri, causeId, data.objectId, data);\r\n\r\n        // if the participant state is connected/has early media/ has connected and put on hold\r\n        if (SlimCoreElectronCallParticipant.isParticipantActive(participant.state) &&\r\n            this._participantOperationHandler.hasPendingOperation(PARTICIPANT_OPERATIONS.ADD_PARTICIPANT, data.mri)) {\r\n            this._participantOperationHandler.resolveOperation(PARTICIPANT_OPERATIONS.ADD_PARTICIPANT, participant, data.mri);\r\n            this._callTelemetry.recordOperationSuccess(PARTICIPANT_OPERATIONS.ADD_PARTICIPANT, null, data.mri);\r\n\r\n            const getEndpointsDetails = (participant: SlimCoreElectronCallParticipant) => {\r\n                return (participant && participant.endpoints && participant.endpoints.endpointDetails) || [];\r\n            };\r\n            this._callTelemetry.recordOperationSuccess(\r\n                PARTICIPANT_OPERATIONS_INTERNAL.PARTICIPANT_JOINED,\r\n                getEndpointInformationForTelemetry(getEndpointsDetails(participant)),\r\n                data.mri,\r\n                causeId\r\n            );\r\n        }\r\n\r\n        if (!this._handleParticipantJoinedDefer) {\r\n            this._handleParticipantJoinedDefer = _.defer(() => {\r\n                delete this._handleParticipantJoinedDefer;\r\n                if (!this._updateDominantSpeakerList().fullOrderMatches) {\r\n                    this.raiseChangedDeferred();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private _admitParticipantToSlimCoreElectronCall(participantId: string): Promise<void> {\r\n        const participantsToAdmit = [participantId];\r\n        this._slimcoreCallHandler.admitParticipants(this.slimcoreCallId, participantsToAdmit);\r\n\r\n        return Promise.resolve<void>();\r\n    }\r\n    @participantOperation(PARTICIPANT_OPERATIONS.ADMIT_PARTICIPANT)\r\n    public async admitParticipant(@operationId participantId: string, @causeId causeId = generateCauseId()): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger(PARTICIPANT_OPERATIONS.ADMIT_PARTICIPANT, causeId);\r\n        fnLogger.info(`participantId = ${piiUtils.scrubMriOrOmit(participantId)}`);\r\n\r\n        // if slimcore call is not created yet, the admit call will fail\r\n        if (this.slimcoreCallId === 0) {\r\n            return Promise.reject(ParticipantStateReason.OtherError);\r\n        }\r\n\r\n        // Admit participants that are inLobby only\r\n        const participant = this._getOrCreateParticipant(participantId, causeId);\r\n        if (participant.state !== ParticipantState.InLobby) {\r\n            return Promise.reject(ParticipantStateReason.ParticipantDoesNotExist);\r\n        }\r\n\r\n        const waitForAdmitParticipant = async.defer<void>();\r\n        const promise = this._admitParticipantToSlimCoreElectronCall(participantId)\r\n            .then(() => participant.addAdmitParticipantDeferred(waitForAdmitParticipant))\r\n            .then(() => waitForAdmitParticipant.promise)\r\n            .then(() => fnLogger.logSuccess(`admitted`))\r\n            .catch(error => {\r\n                fnLogger.logFailure(error);\r\n                this._handleParticipantOperationFailure(PARTICIPANT_OPERATIONS.ADMIT_PARTICIPANT, error, causeId, participantId);\r\n                return Promise.reject(error);\r\n            });\r\n\r\n        this.raiseChanged();\r\n        return promise;\r\n    }\r\n\r\n    private _addParticipantToSlimCoreElectronCall(participantId: string, threadId?: string, messageId?: string, participantInvitationData?: string): Promise<number> {\r\n        this._logger.info(`addParticipantToSlimCoreElectronCall: participantId = ${piiUtils.scrubMriOrOmit(participantId)} threadId = ${threadId} messageId = ${messageId} participantInvitationData = ${piiUtils.scrubMriOrOmit(participantInvitationData)}`);\r\n\r\n        const objectId = this._slimcoreCallHandler.addParticipant(\r\n            this.slimcoreCallId,\r\n            participantId,\r\n            SlimCoreCommon.mapToEmptyStrIfFalsy(threadId),\r\n            SlimCoreCommon.mapToEmptyStrIfFalsy(messageId),\r\n            SlimCoreCommon.mapToEmptyStrIfFalsy(participantInvitationData)\r\n        );\r\n\r\n        if (objectId === 0) {\r\n            return Promise.reject(new Error('AddParticipant call to slimcore failed'));\r\n        } else {\r\n            return Promise.resolve(objectId);\r\n        }\r\n    }\r\n\r\n    @participantOperation(PARTICIPANT_OPERATIONS.CALL_ME_BACK)\r\n    public async callMeBack(@operationId participantMri: string, assertedMri?: string, @causeId causeId = generateCauseId()): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger(PARTICIPANT_OPERATIONS.CALL_ME_BACK, causeId);\r\n        fnLogger.info(`callMeBack: participantMri = ${piiUtils.scrubMriOrOmit(participantMri)} assertedMri = ${piiUtils.scrubMriOrOmit(assertedMri)}`);\r\n\r\n        if (this.slimcoreCallId === 0) {\r\n            fnLogger.logFailure('call is not initialized yet');\r\n            return Promise.reject(new Error('call is not initialized yet'));\r\n        }\r\n\r\n        const waitForCallMeBackPromise = this._participantOperationHandler.waitForOperation<void>(\r\n            PARTICIPANT_OPERATIONS.CALL_ME_BACK, participantMri);\r\n\r\n        const currentUserMri = generateAliasedMri(`${MRI_SKYPE_PREFIX}${this.currentUserSkypeIdentity.id}`, this.currentUserSkypeIdentity.sipUri);\r\n\r\n        return Promise.resolve<void>()\r\n            .then(() => {\r\n                this._slimcoreCallHandler.callMeBack(this.slimcoreCallId, participantMri, assertedMri || currentUserMri, causeId);\r\n                return waitForCallMeBackPromise;\r\n            })\r\n            .catch(error => {\r\n                this._callTelemetry.updateOperationData(PARTICIPANT_OPERATIONS.CALL_ME_BACK, { error: getPIISafeObject(error) }, causeId, participantMri);\r\n                this._participantOperationHandler.maybeRejectOperation(PARTICIPANT_OPERATIONS.CALL_ME_BACK, ParticipantStateReason.AddingFailed, participantMri, causeId);\r\n                fnLogger.logFailure(`Error in callMeBack(), callId = ${this.callId}, error = ${error}`);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    @participantOperation(CALL_OPERATIONS.NUDGE_PARTICIPANTS)\r\n    public async nudgeParticipants(@operationId context: string, participants: string[], payload: AddParticipantPayload = {}, @causeId causeId = generateCauseId()): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger(CALL_OPERATIONS.NUDGE_PARTICIPANTS, causeId);\r\n        fnLogger.info(`nudgeParticipants: context = ${context}`);\r\n\r\n        if (this.state !== CallState.Connecting && this.state !== CallState.Connected) {\r\n            return Promise.reject(ParticipantStateReason.ActionNotAllowed);\r\n        }\r\n\r\n        if (this.slimcoreCallId === 0) {\r\n            return Promise.reject(new Error('call is not initialized yet'));\r\n        }\r\n\r\n        if (payload.sipUri) {\r\n            return Promise.reject(new Error('sipUri not supported yet'));\r\n        }\r\n\r\n        let participantInvitationData: string;\r\n        if (payload.participantInvitationData) {\r\n            try {\r\n                participantInvitationData = JSON.stringify(payload.participantInvitationData);\r\n            } catch (error) {\r\n                fnLogger.logFailure(error);\r\n                return Promise.reject(error);\r\n            }\r\n        }\r\n\r\n        fnLogger.info(`nudgeParticipants: context = ${context} threadId = ${payload.threadId} messageId = ${payload.messageId} participantInvitationData = ${piiUtils.scrubMriOrOmit(participantInvitationData)}`);\r\n\r\n        const waitForNudgeParticipantPromise = this._participantOperationHandler.waitForOperation<void>(\r\n            CALL_OPERATIONS.NUDGE_PARTICIPANTS, context);\r\n\r\n        return Promise.resolve<void>()\r\n            .then(() => {\r\n                this._slimcoreCallHandler.nudgeParticipants(this.slimcoreCallId,\r\n                    participants,\r\n                    SlimCoreCommon.mapToEmptyStrIfFalsy(context),\r\n                    SlimCoreCommon.mapToEmptyStrIfFalsy(payload.threadId),\r\n                    SlimCoreCommon.mapToEmptyStrIfFalsy(payload.messageId),\r\n                    SlimCoreCommon.mapToEmptyStrIfFalsy(participantInvitationData));\r\n                return waitForNudgeParticipantPromise;\r\n            })\r\n            .catch(error => {\r\n                this._callTelemetry.updateOperationData(CALL_OPERATIONS.NUDGE_PARTICIPANTS, { error: getPIISafeObject(error) }, causeId, context);\r\n                this._participantOperationHandler.rejectOperation(CALL_OPERATIONS.NUDGE_PARTICIPANTS, ParticipantStateReason.SignalingError, context, causeId);\r\n                fnLogger.logFailure(`Error in NudgeParticipants(), callId = ${this.callId}, context = ${context}, error = ${error}`);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    private _handleParticipantOperationFailure(eventName: string, error: any, causeId: CauseId, participantId: string): ParticipantStateReason {\r\n        this._callTelemetry.updateOperationData(eventName, { error: getPIISafeObject(error) }, causeId, participantId);\r\n        const participantErrorReason = EnumConverter.convertFailureReasonToParticipantReason(error);\r\n        const telemetryData: { [key: string]: any } = {\r\n            callId: this.callId,\r\n            reason: participantErrorReason\r\n        };\r\n\r\n        const participant = this._getOrCreateParticipant(participantId, causeId);\r\n        if (participant.callEndDiagnosticsInfo) {\r\n            telemetryData.code = participant.callEndDiagnosticsInfo.callControllerCode;\r\n            telemetryData.subCode = participant.callEndDiagnosticsInfo.callControllerSubCode;\r\n        }\r\n        this._callTelemetry.recordOperationFailure(eventName, telemetryData, participantId, causeId);\r\n        return participantErrorReason;\r\n    }\r\n\r\n    @participantOperation(CALL_OPERATIONS.UPDATE_MEETING_ROLE)\r\n    public async updateMeetingRoles(participants: string[], meetingRole: MeetingRole, @causeId causeId = generateCauseId()): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger(CALL_OPERATIONS.UPDATE_MEETING_ROLE, causeId);\r\n        fnLogger.info(`updateMeetingRole: participants = ${piiUtils.scrubMriOrOmitList(participants)}, role = ${meetingRole}`);\r\n\r\n        if ((this.state !== CallState.Connecting && this.state !== CallState.Connected) ||\r\n            !SlimCoreCommon.hasFeature(Enums.Feature.StructuredMeetings)) {\r\n            return Promise.reject({\r\n                code: CONSTANTS.CODE.CLIENT_ERROR_CODE,\r\n                subCode: CONSTANTS.SUB_CODE.ACTION_NOT_ALLOWED,\r\n                phrase: 'ActionNotAllowed'\r\n            });\r\n        }\r\n\r\n        const updateMeetingRolePromise = this._participantOperationHandler.waitForOperation<void>(\r\n            CALL_OPERATIONS.UPDATE_MEETING_ROLE, causeId);\r\n        return Promise.resolve()\r\n            .then(() => {\r\n                this._slimcoreCallHandler.updateMeetingRoles(\r\n                    this.slimcoreCallId,\r\n                    participants,\r\n                    meetingRole,\r\n                    causeId\r\n                );\r\n                return updateMeetingRolePromise;\r\n            })\r\n            .catch(error => {\r\n                fnLogger.logFailure(`Error in UpdateMeetingRoles(), callId = ${this.callId}, error = ${error}`);\r\n                this._callTelemetry.updateOperationData(CALL_OPERATIONS.UPDATE_MEETING_ROLE, { error: getPIISafeObject(error) }, causeId);\r\n                this._participantOperationHandler.rejectOperation(CALL_OPERATIONS.UPDATE_MEETING_ROLE, ParticipantStateReason.SignalingError, causeId, causeId);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    @participantOperation(PARTICIPANT_OPERATIONS.ADD_PARTICIPANT)\r\n    public async addParticipant(@operationId participantId: string, payload: AddParticipantPayload = {}, @causeId causeId = generateCauseId()): Promise<ICallParticipant> {\r\n        const fnLogger = this._logger.createFnLogger(PARTICIPANT_OPERATIONS.ADD_PARTICIPANT, causeId);\r\n\r\n        //  A special case for emergency calls to minimize points of failure, etc.\r\n        if (this.isEmergency &&\r\n            this.slimcoreCallId === 0 &&\r\n            this.participants.length !== 0) {\r\n            return Promise.reject(new Error('Only 1 participant (the emergency operator) may be added to unstarted emergency calls'));\r\n        }\r\n\r\n        if (payload.sipUri) {\r\n            fnLogger.logFailure('sipUri not supported yet');\r\n        }\r\n\r\n        let participantInvitationData: string;\r\n        if (payload.participantInvitationData) {\r\n            try {\r\n                participantInvitationData = JSON.stringify(payload.participantInvitationData);\r\n            } catch (error) {\r\n                fnLogger.logFailure(error);\r\n                throw error;\r\n            }\r\n        }\r\n\r\n        fnLogger.info(`participantId = ${piiUtils.scrubMriOrOmit(participantId)} threadId = ${payload.threadId} messageId = ${payload.messageId} participantInvitationData = ${piiUtils.scrubMriOrOmit(participantInvitationData)}`);\r\n\r\n        const participant = this._getOrCreateParticipant(participantId, causeId);\r\n\r\n        // if slimcore call is not created yet, the placeCall will handle starting the call with the participants\r\n        if (this.slimcoreCallId === 0) {\r\n            return Promise.resolve(participant);\r\n        }\r\n\r\n        const disconnectedStates = [ParticipantState.None, ParticipantState.Disconnected];\r\n        if (disconnectedStates.indexOf(participant.state) === -1) {\r\n            // Do not try to add participant if it is already connecting or connected\r\n            return Promise.resolve<ICallParticipant>(participant);\r\n        }\r\n        const addParticipantPromise = this._participantOperationHandler.waitForOperation(PARTICIPANT_OPERATIONS.ADD_PARTICIPANT, participant.id);\r\n\r\n        const promise = Promise.resolve()\r\n            .then(() => this._addParticipantToCall(participant, causeId))\r\n            .then(() => this._addParticipantToSlimCoreElectronCall(participant.id, payload.threadId, payload.messageId, participantInvitationData))\r\n            .then(participantObjectId => participant.attachSlimcoreObjectId(participantObjectId, causeId))\r\n            .catch(error => {\r\n                this._callTelemetry.updateOperationData(PARTICIPANT_OPERATIONS.ADD_PARTICIPANT, { error: getPIISafeObject(error) }, causeId, participantId);\r\n                fnLogger.logFailure(error);\r\n                return Promise.reject(ParticipantStateReason.AddingFailed);\r\n            })\r\n            .then(() => addParticipantPromise)\r\n            .then(() => participant)\r\n            .catch(error => {\r\n                fnLogger.logFailure(error);\r\n                this._handleParticipantOperationFailure(PARTICIPANT_OPERATIONS.ADD_PARTICIPANT, error, causeId, participantId);\r\n                this._handleParticipantRemoved(participantId, causeId, error);\r\n                return Promise.reject(error);\r\n            });\r\n\r\n        this.raiseChanged();\r\n        return promise;\r\n    }\r\n\r\n    @participantOperation(PARTICIPANT_OPERATIONS.ADD_PARTICIPANTS)\r\n    public async addParticipants(@operationId participantIds: string[], payload: AddParticipantsPayload = {}, @causeId causeId = generateCauseId()): Promise<Promise<ICallParticipant>[]> {\r\n        const fnLogger = this._logger.createFnLogger(PARTICIPANT_OPERATIONS.ADD_PARTICIPANTS, causeId);\r\n\r\n        //  A special case for emergency calls to minimize points of failure, etc.\r\n        if (this.isEmergency &&\r\n            this.slimcoreCallId === 0 &&\r\n            (this.participants.length !== 0 || participantIds.length !== 1)) {\r\n            return Promise.reject(new Error('Only 1 participant (the emergency operator) may be added to unstarted emergency calls'));\r\n        }\r\n\r\n        let participantInvitationData: string;\r\n        if (payload.participantInvitationData) {\r\n            try {\r\n                participantInvitationData = JSON.stringify(payload.participantInvitationData);\r\n            } catch (error) {\r\n                fnLogger.logFailure(error);\r\n                throw error;\r\n            }\r\n        }\r\n\r\n        fnLogger.info(`threadId = ${payload.threadId} messageId = ${payload.messageId} participantInvitationData = ${piiUtils.scrubMriOrOmit(participantInvitationData)}`);\r\n\r\n        const newParticipants: SlimCoreElectronCallParticipant[] = [];\r\n        const newParticipantIds: string[] = [];\r\n        const promiseList: Promise<ICallParticipant>[] = [];\r\n        const disconnectedStates = [ParticipantState.None, ParticipantState.Disconnected];\r\n\r\n        participantIds.forEach(participantId => {\r\n            const participant = this._getOrCreateParticipant(participantId, causeId);\r\n\r\n            if (this.slimcoreCallId === 0) {\r\n                // The call hasn't started yet - participants will be handled when that happens.\r\n                promiseList.push(Promise.resolve(participant));\r\n            } else if (disconnectedStates.indexOf(participant.state) !== -1) {\r\n                // The participant doesn't exist yet.\r\n                newParticipants.push(participant);\r\n                newParticipantIds.push(participantId);\r\n                this._addParticipantToCall(participant, causeId);\r\n                promiseList.push(this._participantOperationHandler.createPendingOperation<ICallParticipant>(PARTICIPANT_OPERATIONS.ADD_PARTICIPANT, participant.id, causeId));\r\n            } else if (this._participantOperationHandler.hasPendingOperation(PARTICIPANT_OPERATIONS.ADD_PARTICIPANT, participant.id)) {\r\n                // The participant is already connecting.\r\n                promiseList.push(this._participantOperationHandler.waitForOperation(PARTICIPANT_OPERATIONS.ADD_PARTICIPANT, participant.id));\r\n            } else {\r\n                // The participant is already connected.\r\n                promiseList.push(Promise.resolve(participant));\r\n            }\r\n        });\r\n\r\n        if (newParticipants.length === 0) {\r\n            return Promise.resolve(promiseList);\r\n        }\r\n\r\n        return Promise.resolve<Promise<ICallParticipant>[]>()\r\n            .then(() =>\r\n                this._slimcoreCallHandler.addParticipantsToCall(\r\n                    this.slimcoreCallId,\r\n                    newParticipantIds,\r\n                    SlimCoreCommon.mapToEmptyStrIfFalsy(payload.threadId),\r\n                    SlimCoreCommon.mapToEmptyStrIfFalsy(payload.messageId),\r\n                    SlimCoreCommon.mapToEmptyStrIfFalsy(participantInvitationData),\r\n                    (payload.disableUnmute !== undefined ? payload.disableUnmute : false),\r\n                    causeId))\r\n            .then(participantObjectIds => {\r\n                if (!participantObjectIds || participantObjectIds.length === 0) {\r\n                    throw new Error('addParticipants: participantObjectIds null or empty');\r\n                }\r\n                for (let i = 0; i < participantObjectIds.length; i++) {\r\n                    newParticipants[i].attachSlimcoreObjectId(participantObjectIds[i], causeId);\r\n                }\r\n                return promiseList;\r\n            })\r\n            .catch(error => {\r\n                fnLogger.logFailure(error);\r\n                newParticipantIds.forEach(participantId => {\r\n                    this._handleParticipantRemoved(participantId, causeId, error);\r\n                });\r\n                return Promise.reject(ParticipantStateReason.AddingFailed);\r\n            });\r\n    }\r\n\r\n    @participantOperation(PARTICIPANT_OPERATIONS.REMOVE_PARTICIPANT)\r\n    public async removeParticipant(@operationId participantId: string, @causeId causeId = generateCauseId(), endpoint?: string, endpointScope?: RemoveEndpointScope): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger(PARTICIPANT_OPERATIONS.REMOVE_PARTICIPANT, causeId);\r\n        fnLogger.info(`removeParticipant: participantId = ${piiUtils.scrubMriOrOmit(participantId)}, endpointScope =${endpointScope}`);\r\n\r\n        let participant: SlimCoreElectronCallParticipant;\r\n        if (this.participantMap.hasOwnProperty(participantId)) {\r\n            participant = this.participantMap[participantId];\r\n        }\r\n\r\n        if (participant) {\r\n            fnLogger.info(`removeParticipant: current participant state: ${participant.state}`);\r\n            if (participant.state === ParticipantState.None || participant.state === ParticipantState.Disconnected) {\r\n                // Do not try to remove participant if it is already disconnecting or disconnected\r\n                fnLogger.logFailure('Participant in invalid state, None or Disconnected');\r\n                return Promise.reject(new Error('Participant already in disconnected state'));\r\n            }\r\n        }\r\n\r\n        const scope = SlimCoreCommon.convertEndpointScope(endpointScope);\r\n\r\n        if (endpointScope && !scope) {\r\n            this._logger.error(`Slimcore mapping for endpointScope failed: ${endpointScope} => ${scope}`);\r\n            return Promise.reject(TerminatedReason.ActionNotAllowed);\r\n        }\r\n\r\n        const waitForRemoveParticipant = async.defer<void>();\r\n        const promise = Promise.resolve()\r\n            .then(() => {\r\n                if (!participant) {\r\n                    this._assertSlimcoreObjectId(this.slimcoreCallId, 'removeParticipantByMri');\r\n                    this._slimcoreCallHandler.removeParticipantByMri(\r\n                        this.slimcoreCallId,\r\n                        participantId,\r\n                        endpoint,\r\n                        scope\r\n                    );\r\n                    waitForRemoveParticipant.resolve();\r\n                } else {\r\n                    this._assertSlimcoreObjectId(participant.slimcoreObjectId, 'removeParticipant');\r\n                    this._slimcoreCallHandler.removeParticipant(\r\n                        participant.slimcoreObjectId,\r\n                        scope\r\n                    );\r\n                    participant.addRemoveParticipantDeferred(waitForRemoveParticipant);\r\n                }\r\n            })\r\n            .then(() => {\r\n                if (!SlimCoreCommon.hasFeature(Enums.Feature.AttendeeBlackList)) {\r\n                    waitForRemoveParticipant.resolve();\r\n                }\r\n                return waitForRemoveParticipant.promise;\r\n            })\r\n            .then(() => fnLogger.logSuccess(`removed`))\r\n            .catch(error => {\r\n                fnLogger.logFailure(error);\r\n                this._handleParticipantOperationFailure(PARTICIPANT_OPERATIONS.REMOVE_PARTICIPANT, error, causeId, participantId);\r\n                return Promise.reject(error);\r\n            });\r\n\r\n        this.raiseChanged();\r\n        return promise;\r\n    }\r\n\r\n    private _startTransferTargetCall(transferedCallObjectId: number, isVideoEnabled: boolean, causeId: CauseId): Promise<void> {\r\n        this._logger.info('Transfer: _startTransferTargetCall', transferedCallObjectId);\r\n        return this.attachSlimCoreCallObject(transferedCallObjectId, causeId, false, '_startTransferTargetCall')\r\n            .then(() => this._slimcoreCallHandler.startTransferTargetCall(transferedCallObjectId, isVideoEnabled, this.threadId, this.messageId));\r\n    }\r\n\r\n    // If WinRt module, will create WinRt object.\r\n    // CallProperties exposes a non-primitive (routingFlags), and now we need to\r\n    // pass a ref class to WinRt in the following manner.\r\n    private _getSlimCoreCallProperties(props: any): any {\r\n        this._logger.info('_getSlimCoreCallProperties');\r\n\r\n        if (!SlimCoreCommon.isSlimCoreRTModuleAvailable()) {\r\n            return props;\r\n        }\r\n\r\n        try {\r\n            const propsRT = new (window as any).SlimCoreRT.SlimCore.CallProperties();\r\n            propsRT.audioDirection = props.audioDirection;\r\n            propsRT.videoDirection = props.videoDirection;\r\n            propsRT.screenshareDirection = props.screenshareDirection;\r\n            propsRT.datachannelDirection = props.datachannelDirection;\r\n            propsRT.muteFlags = props.muteFlags;\r\n            propsRT.mediaPeerType = props.mediaPeerType;\r\n            propsRT.isVideoEnabled = props.isVideoEnabled;\r\n            propsRT.isGoLive = props.isGoLive;\r\n            propsRT.isHostless = props.isHostless;\r\n            propsRT.participantLegId = props.participantLegId;\r\n            propsRT.enableGroupCallMeetupGeneration = props.enableGroupCallMeetupGeneration;\r\n            propsRT.threadId = props.threadId;\r\n            propsRT.messageId = props.messageId;\r\n            propsRT.subject = props.subject;\r\n            propsRT.conversationType = props.conversationType;\r\n            propsRT.meetingInfo = props.meetingInfo;\r\n            propsRT.endpointMetadata = props.endpointMetadata;\r\n            propsRT.onBehalfOf = props.onBehalfOf;\r\n            propsRT.enableLightWeightMeeting = props.enableLightWeightMeeting;\r\n            propsRT.emergencyContent = props.emergencyContent;\r\n            propsRT.broadcastContext = props.broadcastContext;\r\n            propsRT.callKey = props.callKey;\r\n            propsRT.encryptedKey = props.encryptedKey;\r\n            propsRT.invitationType = props.invitationType;\r\n            propsRT.connectionType = props.connectionType;\r\n            propsRT.maxVideoChannels = props.maxVideoChannels;\r\n            propsRT.negotiationTag = props.negotiationTag;\r\n            propsRT.routingFlags = props.routingFlags;\r\n            propsRT.scenario = props.scenario;\r\n            propsRT.preheatFlags = props.preheatFlags;\r\n            propsRT.locationContent = props.locationContent;\r\n            propsRT.mediaConfigurationJson = props.mediaConfigurationJson;\r\n\r\n            this._logger.info('_getSlimCoreCallProperties created RT CallProperties');\r\n\r\n            return propsRT;\r\n        } catch (error) {\r\n            // If SlimCoreRT does not expose CallProperties as a class yet, simply return property bag.\r\n            this._logger.info('_getSlimCoreCallProperties failed, reverting back to property bag ', error);\r\n        }\r\n\r\n        return props;\r\n    }\r\n\r\n    private _isEnterpriseMultiParty(mediaPeerType: MediaPeerType): boolean {\r\n        return mediaPeerType === MediaPeerType.EnterpriseMultiParty || mediaPeerType === MediaPeerType.EnterpriseMultiPartyBroadcasting;\r\n    }\r\n\r\n    private _joinOrStartSlimCoreCall(options: JoinOrStartCallOptions, causeId: CauseId): void {\r\n        const fnLogger = this._logger.createFnLogger('joinOrStartSlimCoreCall', causeId);\r\n        let slimcoreCallId = 0;\r\n        const isGoLive = !options.ringOthers;\r\n        const allowHostless = true;\r\n        if (options.conversationUrl || options.isExistingCallInObservingState) {\r\n            fnLogger.info(`options: ${getPrintableObject(options)}`);\r\n\r\n            const props = this._getSlimCoreCallProperties({\r\n                audioDirection: (options.audioDirection !== undefined) ?\r\n                    SlimCoreElectronCall.toMediaDirection(options.audioDirection) : Enums.MediaDirection.Bidirectional,\r\n                videoDirection: (options.videoDirection !== undefined) ?\r\n                    SlimCoreElectronCall.toMediaDirection(options.videoDirection) : Enums.MediaDirection.ReceiveFromPeer,\r\n                screenshareDirection: (options.screenshareDirection !== undefined) ?\r\n                    SlimCoreElectronCall.toMediaDirection(options.screenshareDirection) :\r\n                    this._isEnterpriseMultiParty(this._mediaPeerType) ?\r\n                        Enums.MediaDirection.ReceiveFromPeer :\r\n                        Enums.MediaDirection.Disabled,\r\n                datachannelDirection: (options.datachannelDirection !== undefined) ?\r\n                    SlimCoreElectronCall.toMediaDirection(options.datachannelDirection) : Enums.MediaDirection.Disabled,\r\n                muteFlags: options.muteFlags as number,\r\n                mediaPeerType: SlimCoreElectronCall.convertToSlimCoreMediaPeerType(this._mediaPeerType),\r\n                isVideoEnabled: options.videoDirection === MediaDirection.Bidirectional,\r\n                isGoLive,\r\n                isHostless: allowHostless,\r\n                participantLegId: this.participantId,\r\n                enableGroupCallMeetupGeneration: this._enableGroupCallMeetupGeneration,\r\n                threadId: SlimCoreCommon.mapToEmptyStrIfFalsy(this.threadId),\r\n                messageId: SlimCoreCommon.mapToEmptyStrIfFalsy(this.messageId),\r\n                subject: SlimCoreCommon.mapToEmptyStrIfFalsy(options.label),\r\n                conversationType: SlimCoreCommon.mapToEmptyStrIfFalsy(options.conversationType),\r\n                meetingInfo: SlimCoreCommon.mapToEmptyStrIfFalsy(JSON.stringify(this._meetingInfo)),\r\n                endpointMetadata: SlimCoreCommon.mapToEmptyStrIfFalsy(this._endpointMetadata),\r\n                onBehalfOf: SlimCoreCommon.mapToEmptyStrIfFalsy(this.onBehalfOfMri),\r\n                enableLightWeightMeeting: options.enableLightWeightMeeting,\r\n                emergencyContent: SlimCoreCommon.mapToEmptyStrIfFalsy(this._emergencyContent),\r\n                broadcastContext: this.broadcastMeeting && this.broadcastMeeting.context ? JSON.stringify(this.broadcastMeeting.context) : null,\r\n                callKey: options.callKey,\r\n                encryptedKey: options.encryptedKey,\r\n                invitationType: Enums.InvitationType.None,\r\n                connectionType: SlimCoreElectronCall.convertConnectionType(options.connectionType),\r\n                maxVideoChannels: (options.maxVideoChannels !== undefined) ? options.maxVideoChannels : 0,\r\n                negotiationTag: SlimCoreCommon.mapToEmptyStrIfFalsy(options.negotiationTag),\r\n                routingFlags: options.routingFlags,\r\n                scenario: SlimCoreCommon.mapToEmptyStrIfFalsy(options.scenario),\r\n                preheatFlags: options.preheatFlags as number,\r\n                locationContent: SlimCoreCommon.mapToEmptyStrIfFalsy(this._locationContent),\r\n                mediaConfigurationJson: SlimCoreCommon.mapToEmptyStrIfFalsy(JSON.stringify(options.mediaConfiguration))\r\n            });\r\n\r\n            slimcoreCallId = this._slimcoreCallHandler.joinCall(\r\n                JSON.stringify({\r\n                    conversationUrl: options.conversationUrl,\r\n                    conversationId: this.callId,\r\n                    conversationType: options.conversationType\r\n                }),\r\n                props\r\n            );\r\n            this._assertSlimcoreObjectId(slimcoreCallId, 'JoinCall');\r\n            fnLogger.logSuccess(`slimcoreCallHandler.JoinCall()`);\r\n        } else if (options.callToVoicemail) {\r\n            fnLogger.info(`Calling slimcoreCallHandler.PlaceCallToVoicemail`);\r\n            if (this.participants.length !== 1) {\r\n                throw new Error('PlaceCallToVoicemail Failed. Participant size should be one');\r\n            }\r\n            this._addParticipantToCall(this.participants[0], causeId);\r\n\r\n            slimcoreCallId = this._slimcoreCallHandler.placeCallToVoicemail(this.callId,\r\n                SlimCoreElectronCall.convertToSlimCoreMediaPeerType(this._mediaPeerType),\r\n                this.participants[0].id,\r\n                {\r\n                    threadId: this.threadId,\r\n                    voicemailResourcePath: options.voicemailResourcePath,\r\n                    voicemailItemId: options.voicemailItemId\r\n                });\r\n\r\n            this._assertSlimcoreObjectId(slimcoreCallId, 'PlaceCallToVoicemail');\r\n            fnLogger.logSuccess(`slimcoreCallHandler.PlaceCallToVoicemail()`);\r\n\r\n        } else if (options.parkContext !== undefined && options.pickupCode !== undefined) {\r\n            const slimcoreParkContext = this.mapParkContext(options.parkContext);\r\n\r\n            this._setCallType(CallType.P2P);\r\n\r\n            const props = this._getSlimCoreCallProperties({\r\n                audioDirection: (options.audioDirection !== undefined) ?\r\n                    SlimCoreElectronCall.toMediaDirection(options.audioDirection) : Enums.MediaDirection.Bidirectional,\r\n                videoDirection: (options.videoDirection !== undefined) ?\r\n                    SlimCoreElectronCall.toMediaDirection(options.videoDirection) : Enums.MediaDirection.ReceiveFromPeer,\r\n                screenshareDirection: Enums.MediaDirection.Disabled,\r\n                datachannelDirection: (options.datachannelDirection !== undefined) ?\r\n                    SlimCoreElectronCall.toMediaDirection(options.datachannelDirection) : Enums.MediaDirection.Disabled,\r\n                muteFlags: options.muteFlags as number,\r\n                mediaPeerType: SlimCoreElectronCall.convertToSlimCoreMediaPeerType(this._mediaPeerType),\r\n                isVideoEnabled: options.videoDirection === MediaDirection.Bidirectional,\r\n                isGoLive,\r\n                isHostless: allowHostless,\r\n                participantLegId: this.participantId,\r\n                enableGroupCallMeetupGeneration: this._enableGroupCallMeetupGeneration,\r\n                threadId: SlimCoreCommon.mapToEmptyStrIfFalsy(this.threadId),\r\n                messageId: SlimCoreCommon.mapToEmptyStrIfFalsy(this.messageId),\r\n                subject: SlimCoreCommon.mapToEmptyStrIfFalsy(options.label),\r\n                conversationType: SlimCoreCommon.mapToEmptyStrIfFalsy(options.conversationType),\r\n                meetingInfo: SlimCoreCommon.mapToEmptyStrIfFalsy(JSON.stringify(this._meetingInfo)),\r\n                endpointMetadata: SlimCoreCommon.mapToEmptyStrIfFalsy(this._endpointMetadata),\r\n                onBehalfOf: SlimCoreCommon.mapToEmptyStrIfFalsy(this.onBehalfOfMri),\r\n                enableLightWeightMeeting: options.enableLightWeightMeeting,\r\n                emergencyContent: SlimCoreCommon.mapToEmptyStrIfFalsy(this._emergencyContent),\r\n                broadcastContext: this.broadcastMeeting && this.broadcastMeeting.context ? JSON.stringify(this.broadcastMeeting.context) : null,\r\n                callKey: options.callKey,\r\n                encryptedKey: options.encryptedKey,\r\n                connectionType: SlimCoreElectronCall.convertConnectionType(options.connectionType),\r\n                invitationType: options.invitationType,\r\n                maxVideoChannels: (options.maxVideoChannels !== undefined) ? options.maxVideoChannels : 0,\r\n                routingFlags: options.routingFlags,\r\n                negotiationTag: SlimCoreCommon.mapToEmptyStrIfFalsy(options.negotiationTag),\r\n                scenario: SlimCoreCommon.mapToEmptyStrIfFalsy(options.scenario),\r\n                locationContent: SlimCoreCommon.mapToEmptyStrIfFalsy(this._locationContent),\r\n                mediaConfigurationJson: SlimCoreCommon.mapToEmptyStrIfFalsy(JSON.stringify(options.mediaConfiguration))\r\n            });\r\n\r\n            slimcoreCallId = this._slimcoreCallHandler.startCallUnpark(this.callId,\r\n                props, slimcoreParkContext, options.pickupCode);\r\n\r\n            this._assertSlimcoreObjectId(slimcoreCallId, 'StartCallUnpark');\r\n            fnLogger.logSuccess(`slimcoreCallHandler.StartCallUnpark()`);\r\n\r\n        } else {\r\n            fnLogger.info(`Calling slimcoreCallHandler.PlaceCall`);\r\n            let participantStrings: string[] = [];\r\n\r\n            if (options.invitationType === Enums.InvitationType.Nudge && options.participantsToNudge) {\r\n                participantStrings = options.participantsToNudge;\r\n            } else {\r\n                this.participants.forEach(participant => {\r\n                    this._addParticipantToCall(participant, causeId);\r\n                    participantStrings.push(participant.id);\r\n                });\r\n            }\r\n\r\n            const isMultiparty = !!this.threadId || participantStrings.length !== 1;\r\n            this._setCallType(isMultiparty ? CallType.Conference : CallType.P2P);\r\n\r\n            const props = this._getSlimCoreCallProperties({\r\n                audioDirection: (options.audioDirection !== undefined) ?\r\n                    SlimCoreElectronCall.toMediaDirection(options.audioDirection) : Enums.MediaDirection.Bidirectional,\r\n                videoDirection: (options.videoDirection !== undefined) ?\r\n                    SlimCoreElectronCall.toMediaDirection(options.videoDirection) : Enums.MediaDirection.ReceiveFromPeer,\r\n                screenshareDirection: (options.screenshareDirection !== undefined) ?\r\n                    SlimCoreElectronCall.toMediaDirection(options.screenshareDirection) :\r\n                    (this.callType === CallType.Conference && this._isEnterpriseMultiParty(this._mediaPeerType)) ?\r\n                        Enums.MediaDirection.ReceiveFromPeer :\r\n                        Enums.MediaDirection.Disabled,\r\n                datachannelDirection: (options.datachannelDirection !== undefined) ?\r\n                    SlimCoreElectronCall.toMediaDirection(options.datachannelDirection) : Enums.MediaDirection.Disabled,\r\n                muteFlags: options.muteFlags as number,\r\n                mediaPeerType: SlimCoreElectronCall.convertToSlimCoreMediaPeerType(this._mediaPeerType),\r\n                isVideoEnabled: options.videoDirection === MediaDirection.Bidirectional,\r\n                isGoLive,\r\n                isHostless: allowHostless,\r\n                participantLegId: this.participantId,\r\n                enableGroupCallMeetupGeneration: this._enableGroupCallMeetupGeneration,\r\n                threadId: SlimCoreCommon.mapToEmptyStrIfFalsy(this.threadId),\r\n                messageId: SlimCoreCommon.mapToEmptyStrIfFalsy(this.messageId),\r\n                subject: SlimCoreCommon.mapToEmptyStrIfFalsy(options.label),\r\n                conversationType: SlimCoreCommon.mapToEmptyStrIfFalsy(options.conversationType),\r\n                meetingInfo: SlimCoreCommon.mapToEmptyStrIfFalsy(JSON.stringify(this._meetingInfo)),\r\n                endpointMetadata: SlimCoreCommon.mapToEmptyStrIfFalsy(this._endpointMetadata),\r\n                onBehalfOf: SlimCoreCommon.mapToEmptyStrIfFalsy(this.onBehalfOfMri),\r\n                enableLightWeightMeeting: options.enableLightWeightMeeting,\r\n                emergencyContent: SlimCoreCommon.mapToEmptyStrIfFalsy(this._emergencyContent),\r\n                broadcastContext: this.broadcastMeeting && this.broadcastMeeting.context ? JSON.stringify(this.broadcastMeeting.context) : null,\r\n                callKey: options.callKey,\r\n                encryptedKey: options.encryptedKey,\r\n                connectionType: SlimCoreElectronCall.convertConnectionType(options.connectionType),\r\n                invitationType: options.invitationType,\r\n                maxVideoChannels: (options.maxVideoChannels !== undefined) ? options.maxVideoChannels : 0,\r\n                routingFlags: options.routingFlags,\r\n                negotiationTag: SlimCoreCommon.mapToEmptyStrIfFalsy(options.negotiationTag),\r\n                scenario: SlimCoreCommon.mapToEmptyStrIfFalsy(options.scenario),\r\n                preheatFlags: options.preheatFlags as number,\r\n                locationContent: SlimCoreCommon.mapToEmptyStrIfFalsy(this._locationContent),\r\n                mediaConfigurationJson: SlimCoreCommon.mapToEmptyStrIfFalsy(JSON.stringify(options.mediaConfiguration))\r\n            });\r\n\r\n            slimcoreCallId = this._slimcoreCallHandler.placeCall(this.callId,\r\n                participantStrings,\r\n                props\r\n            );\r\n\r\n            this._assertSlimcoreObjectId(slimcoreCallId, 'PlaceCall');\r\n            fnLogger.logSuccess(`slimcoreCallHandler.PlaceCall()`);\r\n        }\r\n\r\n        this.attachSlimCoreCallObject(slimcoreCallId, causeId, false, '_joinOrStartSlimCoreCall');\r\n        this._callOperationHandler.maybeResolveOperation(CALL_OPERATIONS_INTERNAL.CALL_START_OR_JOIN_INITIATED, undefined, undefined, causeId);\r\n    }\r\n\r\n    private _fillIncomingCallProperties(causeId: CauseId) {\r\n        const props = this._getProperties(this._slimcoreCallHandler, this.slimcoreCallId, {\r\n            callQueueInfo: { propKey: Enums.Property.CallQueueInfo },\r\n            callerMri: { propKey: Enums.Property.CallerMriIdentity },\r\n            transferorMri: { propKey: Enums.Property.CallTransferorMri },\r\n            transferorDisplayName: { propKey: Enums.Property.CallTransferorDisplayName },\r\n            transferorType: { propKey: Enums.Property.CallTransferorType },\r\n            onBehalfOfMri: { propKey: Enums.Property.CallOnBehalfOfMri },\r\n            incomingCallType: { propKey: Enums.Property.CallIncomingType },\r\n            consultativeTransferCallId: { propKey: Enums.Property.CallConsultativeTransferCallId }\r\n        }, {\r\n                isIncomingOneOnOneVideoCall: { propKey: Enums.Property.CallIsIncomingOneOnOneVideoCall }\r\n        });\r\n\r\n        this._setCallerMri(stripMriAliases(props.callerMri), causeId);\r\n        this.transferorMri = stripMriAliases(props.transferorMri);\r\n        this.transferorDisplayName = props.transferorDisplayName;\r\n        this.transferorType = props.transferorType as TransferorType;\r\n        this.onBehalfOfMri = stripMriAliases(props.onBehalfOfMri);\r\n        this.callQueueInfo = props.callQueueInfo && JSON.parse(props.callQueueInfo);\r\n        this.incomingCallType = props.incomingCallType as IncomingCallType;\r\n        this._setConsultativeCallId(this.consultativeCallId);\r\n        this.isIncomingOneOnOneVideoCall = !!props.isIncomingOneOnOneVideoCall;\r\n    }\r\n\r\n    private _onCallPropertyChanged(propKey: Enums.Property, listener: SlimCore.EventHandler<SlimCore.Engine.Events.ObjectPropertyChangedArgs>) {\r\n        this._onObjectPropertyChanged(this.slimcoreCallId, propKey, listener);\r\n    }\r\n\r\n    private attachSlimCoreCallObject(slimCoreCallObjectId: number, causeId: CauseId, isObserving: boolean = false, errorString: string = 'attachSlimCoreCallObject'): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger('attachSlimCoreCallObject', causeId);\r\n        const slimcoreAttachedPromise = this._callOperationHandler.getPendingOperation(CALL_OPERATIONS_INTERNAL.ELECTRON_SLIMCORE_READY);\r\n        const oldSlimcoreCallId = this.slimcoreCallId;\r\n\r\n        if (this.slimcoreCallId === slimCoreCallObjectId) {\r\n            this._callTelemetry.recordEvent(CALL_OPERATIONS_INTERNAL.ELECTRON_ATTACH_SLIMCORE_CALL_FAILED, { slimCoreCallObjectId, reason: 'Call already attached to a SlimCore object' }, causeId);\r\n            fnLogger.logFailure('Call already attached to a SlimCore object');\r\n            return slimcoreAttachedPromise;\r\n        }\r\n\r\n        if (this.slimcoreCallId !== 0) {\r\n            fnLogger.info('Call already attached to a different SlimCore object, attaching to new object');\r\n        }\r\n\r\n        fnLogger.info(`new slimCoreCallObjectId=${slimCoreCallObjectId}`);\r\n        this.slimcoreCallId = slimCoreCallObjectId;\r\n\r\n        try {\r\n            // Need to call this API under try/catch for backward compat reasons as newer web client with older electron can throw exception.\r\n            // We treat it as expected and assume the functionality is disabled.\r\n            this._isOptimizedSpeakerEventingEnabled = this._slimcoreInstance.ecsGetSettingAsBool('SkypeCalling', 'enableOptimizedSpeakerChangeEvents', false);\r\n            this._isSetVideoChannelsRenegotiated = this._slimcoreInstance.ecsGetSettingAsBool('SkypeCalling', 'renegotiateVideoChannels', false);\r\n        } catch (error) {\r\n            fnLogger.logFailure('Assuming optimized speaker event feature is disabled via ECS.');\r\n            fnLogger.logFailure(error);\r\n        }\r\n\r\n        this._slimCoreElectronRemoteManager = new SlimCoreElectronRemoteStreamManager(\r\n            this._logger,\r\n            this._settings,\r\n            this._slimcoreInstance,\r\n            this._slimcoreCallHandler,\r\n            this.slimcoreCallId,\r\n            this.mediaStreams,\r\n            this._streamContextMap,\r\n            isObserving);\r\n        this._slimCoreElectronRemoteManager.changed(() => this.raiseChanged());\r\n\r\n        this._onCallPropertyChanged(Enums.Property.CallOrigin, data => this._onCallOriginChanged(data.value as number));\r\n        this._onCallPropertyChanged(Enums.Property.CallStatus, data => this._onCallStatusChanged(data.value as number));\r\n        this._onCallPropertyChanged(Enums.Property.CallTransferStatus, data => this._onCallTransferStatusChanged(data.value as number));\r\n        this._onCallPropertyChanged(Enums.Property.CallParkStatus, data => this._onCallParkStatusChanged(data.value as number));\r\n        this._onCallPropertyChanged(Enums.Property.CallIsMuted, data => this._onCallMutedUnmuted(!!data.value));\r\n        this._onCallPropertyChanged(Enums.Property.CallIsMutedSpeaker, data => this._onCallMutedUnmutedSpeaker(!!data.value));\r\n        this._onCallPropertyChanged(Enums.Property.CallIsServerMuted, data => this._onCallIsServerMuted(!!data.value));\r\n        this._onCallPropertyChanged(Enums.Property.CallActiveMembers, data => this._onParticipantJoinedOrRemovedDeferred());\r\n        this._onCallPropertyChanged(Enums.Property.CallThreadId, data => this._onThreadIdChanged(data.value as string));\r\n        this._onCallPropertyChanged(Enums.Property.CallMessageId, data => this._onMessageIdChanged(data.value as string));\r\n        this._onCallPropertyChanged(Enums.Property.CallEndpointDetails, data => this._updateEndpointDetails(data.value as string));\r\n        this._onCallPropertyChanged(Enums.Property.SelfParticipantRole, data => this._onSelfParticipantRoleChanged(data.value as string));\r\n        this._onCallPropertyChanged(Enums.Property.SelfParticipantTenantId, data => this._onSelfParticipantTenantIdChanged(data.value as string));\r\n        this._onCallPropertyChanged(Enums.Property.CallMeetingDetails, data => this._updateMeetingDetails(data.value as string));\r\n        this._onCallPropertyChanged(Enums.Property.CallMemberCountChanged, data => this._onParticipantJoinedOrRemovedDeferred());\r\n        this._onCallPropertyChanged(Enums.Property.CallIsConference, data => this._updateCallType(data.value as number, causeId));\r\n        this._onCallPropertyChanged(Enums.Property.CallIsHostless, data => this._updateIsHostless(data.value as number));\r\n        this._onCallPropertyChanged(Enums.Property.CallForwardingDestinationType, data => this._updateForwardingDestinationType(data.value as string));\r\n        this._onCallPropertyChanged(Enums.Property.CallOptimalRemoteVideoCount, data => this._onCallOptimalVideoCountChanged(data.value as number));\r\n        this._onCallPropertyChanged(Enums.Property.CallName, data => this._onCallIdChanged(data.value as string));\r\n        this._onCallPropertyChanged(Enums.Property.CallDataChannelObjectId, data => this._updateDataChannel(data.value as number));\r\n        this._onCallPropertyChanged(Enums.Property.CallBroadcastMetadata, data => this._onBroadcastMetadataChanged(data.value as string));\r\n        this._onCallPropertyChanged(Enums.Property.CallProgressStatus, data => this._onCallProgressStatusChanged(data.value as string));\r\n        this._onCallPropertyChanged(Enums.Property.CallEndDiagnosticsCode, data => this._onDiagnosticsCodeChanged(data.value as string));\r\n        this._onCallPropertyChanged(Enums.Property.TransferDiagnosticsCode, data => this._onTransferDiagnosticsCodeChanged(data.value as string));\r\n        this._onCallPropertyChanged(Enums.Property.CallInvitationData, data => this._updateCallInvitationData(data.value as string));\r\n        this._onCallPropertyChanged(Enums.Property.SelfMeetingRole, data => this._updateMeetingRole(data.value as string));\r\n        this._onCallPropertyChanged(Enums.Property.CallTransferorMri, data => this._updateTransferorMri(data.value as string));\r\n        this._onCallPropertyChanged(Enums.Property.CallCapabilities, data => this._onCallCapabilitiesChanged(data.value as number));\r\n        this._onCallPropertyChanged(Enums.Property.CallActiveVideoChannelCount, data => this._updateActiveVideoChannelCount(data.value as number));\r\n\r\n        // Todo: Use some other property to monitor this\r\n        this._registerDisposable(this._slimcoreInstance.handle(\r\n            'object-property-changed',\r\n            { propKey: Enums.Property.ContentSharingStatus },\r\n            data => this._onContentSharingChanged()));\r\n\r\n        this._registerDisposable(this._slimcoreCallHandler.handle(\r\n            'audio-stream-state-changed',\r\n            { callObjectId: this.slimcoreCallId },\r\n            data => this._onAudioStreamStateChanged(data)));\r\n\r\n        this._registerDisposable(this._slimcoreCallHandler.handle(\r\n            'transfer-requested',\r\n            { callObjectId: this.slimcoreCallId },\r\n            data => this._onTransferRequested(data)));\r\n\r\n        this._registerDisposable(this._slimcoreCallHandler.handle(\r\n            'callmeback-operation-status-changed',\r\n            { callObjectId: this.slimcoreCallId },\r\n            data => this._onCallMeBackOperationStatusChanged(data)));\r\n\r\n        this._registerDisposable(this._slimcoreCallHandler.handle(\r\n            'unmuteself-operation-status-changed',\r\n            { callObjectId: this.slimcoreCallId },\r\n            data => this._onUnmuteOperationStatusChanged(data)));\r\n\r\n        this._registerDisposable(this._slimcoreCallHandler.handle(\r\n            'media-negotiation-status-changed',\r\n            { callObjectId: this.slimcoreCallId },\r\n            data => this._onMediaNegotiationStatusChanged(data)));\r\n\r\n        this._registerDisposable(this._slimcoreCallHandler.handle(\r\n            'nudge-participants-operation-status-changed',\r\n            { callObjectId: this.slimcoreCallId },\r\n            data => this._onNudgeParticipantOperationStatusChanged(data)));\r\n\r\n        this._registerDisposable(this._slimcoreCallHandler.handle(\r\n            'update-meeting-roles-operation-status-changed',\r\n            { callObjectId: this.slimcoreCallId },\r\n            data => this._onUpdateMeetingRoleOperationStatusChanged(data)));\r\n\r\n        this._registerDisposable(this._slimcoreCallHandler.handle(\r\n            'mute-participants-operation-status-changed',\r\n            { callObjectId: this.slimcoreCallId },\r\n            data => this._onMuteParticipantOperationStatusChanged(data)));\r\n\r\n        this._registerDisposable(this._slimcoreCallHandler.handle(\r\n            'active-speaker-list-changed',\r\n            { callObjectId: this.slimcoreCallId },\r\n            data => this._onActiveSpeakerListChanged(data)));\r\n\r\n        this._registerDisposable(this._slimcoreCallHandler.handle(\r\n            'dominant-speaker-list-changed',\r\n            { callObjectId: this.slimcoreCallId },\r\n            data => this._onDominantSpeakerListChanged(data)));\r\n\r\n        this._registerDisposable(this._slimcoreCallHandler.handle(\r\n            'remote-user-events-received',\r\n            { callObjectId: this.slimcoreCallId },\r\n            data => this._onRemoteUserEventsReceived(data)));\r\n\r\n        this._registerDisposable(this._slimcoreCallHandler.handle(\r\n            'operation-status-changed',\r\n            { callObjectId: this.slimcoreCallId },\r\n            data => this._onOperationStatusChanged(data)));\r\n\r\n        this._registerDisposable(this._slimcoreInstance.handle('quality-changed', undefined, data => this._onQualityChanged(data)));\r\n\r\n        const props = this._getProperties(this._slimcoreCallHandler, this.slimcoreCallId, {\r\n            callId: { propKey: Enums.Property.CallName },\r\n            threadId: { propKey: Enums.Property.CallThreadId },\r\n            messageId: { propKey: Enums.Property.CallMessageId },\r\n            meetingDetails: { propKey: Enums.Property.CallMeetingDetails },\r\n            tenantId: { propKey: Enums.Property.SelfParticipantTenantId },\r\n            role: { propKey: Enums.Property.SelfParticipantRole },\r\n            broadcastMetadata: { propKey: Enums.Property.CallBroadcastMetadata },\r\n            invitationData: { propKey: Enums.Property.CallInvitationData },\r\n            meetingRole: { propKey: Enums.Property.SelfMeetingRole }\r\n        }, {\r\n                status: { propKey: Enums.Property.CallStatus },\r\n                isConference: { propKey: Enums.Property.CallIsConference },\r\n                isServerMuted: { propKey: Enums.Property.CallIsServerMuted },\r\n                capabilityFlags: { propKey: Enums.Property.CallCapabilities },\r\n                activeVideoChannelCount: { propKey: Enums.Property.CallActiveVideoChannelCount }\r\n            });\r\n\r\n        this._updateCallType(props.isConference, causeId);\r\n\r\n        // It's possible events were already raised before ICall had a chance to process so read important properties\r\n\r\n        this._onCallIdChanged(props.callId);\r\n        this._onThreadIdChanged(props.threadId);\r\n        this._onMessageIdChanged(props.messageId);\r\n        this._onCallStatusChanged(props.status, causeId);\r\n        this._updateMeetingDetails(props.meetingDetails);\r\n        this._onSelfParticipantTenantIdChanged(props.tenantId);\r\n        this._onSelfParticipantRoleChanged(props.role);\r\n        this._onCallIsServerMuted(!!props.isServerMuted);\r\n        this._onBroadcastMetadataChanged(props.broadcastMetadata);\r\n        this._updateCallInvitationData(props.invitationData);\r\n        this._updateMeetingRole(props.meetingRole);\r\n        this._onCallCapabilitiesChanged(props.capabilityFlags);\r\n        this._updateActiveVideoChannelCount(props.activeVideoChannelCount);\r\n\r\n        this._callTelemetry.recordEvent(CALL_OPERATIONS_INTERNAL.ELECTRON_ATTACH_SLIMCORE_CALL, {\r\n            slimCoreCallObjectId,\r\n            oldSlimcoreCallId,\r\n            callId: props.callId,\r\n            threadId: props.threadId,\r\n            messageId: props.messageId,\r\n            role: props.role\r\n        }, causeId);\r\n\r\n        this._onParticipantJoinedOrRemoved(causeId);\r\n        this._callOperationHandler.resolveOperation(CALL_OPERATIONS_INTERNAL.ELECTRON_SLIMCORE_READY, undefined, undefined, undefined, true);\r\n        this._assertSlimcoreObjectId(this.slimcoreCallId, errorString);\r\n        return slimcoreAttachedPromise;\r\n    }\r\n\r\n    public getStrProperty(property: Enums.Property, fallback?: string): string {\r\n        return this._getStrProperty(this._slimcoreCallHandler, this.slimcoreCallId, property, SlimCoreCommon.mapToEmptyStrIfFalsy(fallback));\r\n    }\r\n\r\n    public getIntProperty(property: Enums.Property, fallback?: number, slimcoreCallId?: number): number {\r\n        return this._getIntProperty(this._slimcoreCallHandler, slimcoreCallId || this.slimcoreCallId, property, fallback);\r\n    }\r\n\r\n    private _updateCallInvitationData(invitationData: string) {\r\n        try {\r\n            if (invitationData) {\r\n                this.invitationData = JSON.parse(invitationData);\r\n                this._logger.info(`_updateCallInvitationData updated: ${this.invitationData.length > 0}`);\r\n                this.raiseChanged();\r\n            }\r\n        } catch (err) {\r\n            this._logger.info(`Failed to parse invitation data. Error: ${err}, diagnosticsCode: ${invitationData}`);\r\n        }\r\n    }\r\n\r\n    private _updateCallType(callIsConference: number, causeId: CauseId) {\r\n        const fnLogger = this._logger.createFnLogger('updateCallType', causeId, `current=${this.callType}`);\r\n\r\n        const newCallType =\r\n            callIsConference === 0 ? CallType.P2P :\r\n                (callIsConference === 1 ? CallType.Conference : CallType.Unknown);\r\n\r\n        if (this.callType === CallType.Conference && newCallType === CallType.P2P) {\r\n            fnLogger.logFailure(`De-escalating to P2P not allowed!`);\r\n            return;\r\n        }\r\n        fnLogger.info(`newValue: ${newCallType}`);\r\n        if (newCallType !== this.callType) {\r\n            if (newCallType === CallType.Conference) {\r\n                this._callTelemetry.recordEvent(CALL_OPERATIONS_INTERNAL.CALL_ESCALATED_TO_CONFERENCE, undefined, causeId);\r\n            }\r\n            this._setCallType(newCallType);\r\n            this._updateCapabilities(causeId);\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _updateForwardingDestinationType(forwardingDestinationType: string) {\r\n        if (forwardingDestinationType !== this.forwardingDestinationType) {\r\n            this.forwardingDestinationType = forwardingDestinationType as ForwardingDestinationType;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _setupCallTelemetry(): void {\r\n        this._callTelemetry = new CallTelemetry(this._logger, this._callStartTime);\r\n        try {\r\n            this._callTelemetry.setStackConfig({\r\n                ConversationServiceUrl: this._slimcoreInstance.setupGetStr('*Lib/Call/NG/ConversationServiceUrl'),\r\n                UdpTransportUrl: this._slimcoreInstance.setupGetStr('*Lib/Call/NG/UdpTransportUrl'),\r\n                KeyDistributionUrl: this._slimcoreInstance.setupGetStr('*Lib/Call/NG/KeyDistributionUrl'),\r\n                PotentialCallRequestUrl: this._slimcoreInstance.setupGetStr('*Lib/Call/NG/PotentialCallRequestUrl'),\r\n                UploadLogUrl: this._slimcoreInstance.setupGetStr('*Lib/Call/NG/UploadLogUrl'),\r\n                UdpEnabled: this._slimcoreInstance.setupGetStr('*Lib/Call/NG/UdpEnabled'),\r\n                SlimCoreVersion: SlimCore.getVersion()\r\n            });\r\n        } catch (e) {\r\n            this._logger.info('Failed to log stack config');\r\n        }\r\n    }\r\n\r\n    private _updateDataChannel(dataChannelObjectId: number) {\r\n        this._logger.info('_updateDataChannel()');\r\n\r\n        if (dataChannelObjectId) {\r\n\r\n            if (this._dataChannel) {\r\n                this._dataChannel.dispose();\r\n            }\r\n\r\n            let dataChannel: any;\r\n\r\n            try {\r\n                dataChannel = this._slimcoreInstance.getDataChannel(dataChannelObjectId);\r\n            } catch (err) {\r\n                this._logger.error(`failed to get data channel: ${err}`);\r\n                this._callOperationHandler.maybeRejectOperation(CALL_OPERATIONS_INTERNAL.ELECTRON_DATA_CHANNEL_CREATED);\r\n                return;\r\n            }\r\n\r\n            this._dataChannel = new SlimCoreElectronDataChannel(\r\n                this._logger,\r\n                this._settings,\r\n                this._slimcoreInstance,\r\n                this,\r\n                this._slimcoreCallHandler,\r\n                dataChannel,\r\n                this._dataChannelUsers,\r\n                dataChannelObjectId\r\n            );\r\n            this._dataChannel.setAdapterSourceSinkCallback(this.dataChannelAdapter.setInternalSourceSink);\r\n            this._callOperationHandler.maybeResolveOperation(CALL_OPERATIONS_INTERNAL.ELECTRON_DATA_CHANNEL_CREATED);\r\n            this._logger.info('Data channel set');\r\n        }\r\n    }\r\n\r\n    public mapDataChannelSourceIdToParticipant(sourceID: number): ICallParticipant {\r\n        let participant: ICallParticipant = null;\r\n\r\n        if (this.callType === CallType.P2P) {\r\n            participant = this.participants[0];\r\n        } else {\r\n            participant = _.find(this.participants, participant => participant.hasSourceId(MediaType.Data, sourceID));\r\n        }\r\n\r\n        if (participant && participant.id) {\r\n            this._logger.info(`ParticipantId: ${piiUtils.scrubMriOrOmit(participant.id)} to SourceId: ${sourceID}`);\r\n        } else {\r\n            this._logger.warn(`No Participant found for SourceId: ${sourceID}`);\r\n        }\r\n\r\n        return participant;\r\n    }\r\n\r\n    private _onAudioStreamStateChanged(eventData: SlimCore.CallHandler.Events.AudioStreamStateChangedArgs) {\r\n        this.event('mediaStreamStateChanged').raise(); // missing payload\r\n        if (eventData.direction === SlimCore.Enums.MediaDirection.ReceiveFromPeer) {\r\n            // If the audio stream state is Inactive or Active, it means at least an audio path is established.\r\n            // State being Active indicates audio packets (RTP) flowing. We only for receive direction.\r\n            this.isAudioStreamConnected = eventData.streamState === SlimCore.Enums.MediaStreamState.StreamInactive\r\n                || eventData.streamState === SlimCore.Enums.MediaStreamState.StreamActive;\r\n        }\r\n        if (eventData.streamState === SlimCore.Enums.MediaStreamState.StreamFail) {\r\n            this.event('mediaConnectionFailed').raise();\r\n        }\r\n    }\r\n\r\n    private _onTransferRequested(eventData: SlimCore.CallHandler.Events.TransferRequestedArgs) {\r\n        this._logger.info('Transfer: _onTransferRequested', eventData);\r\n\r\n        const newCallOrigin = this.getIntProperty(Enums.Property.CallOrigin, Enums.OriginType.Unspecified, eventData.targetCallObjectId);\r\n        let transferType: TransferType;\r\n        if (newCallOrigin === Enums.OriginType.Park) {\r\n            transferType = TransferType.Park;\r\n        } else if (newCallOrigin === Enums.OriginType.Transfer) {\r\n            transferType = TransferType.Transfer;\r\n        } else if (newCallOrigin === Enums.OriginType.TransferToVoicemail) {\r\n            transferType = TransferType.TransferToVoicemail;\r\n        } else {\r\n            this._logger.info('Unkown transfer type based on new call origin');\r\n        }\r\n        this._logger.info(`onTransferRequested newCallOrigin=${newCallOrigin} transferType=${transferType}`);\r\n\r\n        const slimCoreTransferContext: ICallTransferContext<SlimCoreTransferContext> = {\r\n            transferorMri: eventData.transferorMri,\r\n            targetMri: eventData.transferTargetMri,\r\n            transferType,\r\n            context: {\r\n                newCallObjectId: eventData.targetCallObjectId\r\n            }\r\n        };\r\n\r\n        this.event('transferRequested').raise({\r\n            transferContext: slimCoreTransferContext,\r\n            onCompleted: (code: TerminatedReason) => {\r\n                this._logger.debug(`Transfer: transferCompleted called: ${code}`);\r\n\r\n                if (code !== TerminatedReason.Success) {\r\n                    // todo: leave with error code when available\r\n                    this._slimcoreCallHandler.leaveCall(slimCoreTransferContext.context.newCallObjectId);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private _operationStatusChanged(operationHandler: OperationHandler, operationName: string, eventData: any) {\r\n        this._logger.info(`[${operationHandler}][OperationStatusChanged]: ${eventData}`);\r\n\r\n        const causeId = eventData.causeId || generateCauseId();\r\n        if (!operationHandler.hasPendingOperation(operationName)) {\r\n            // Nothing to do\r\n            return;\r\n        }\r\n        const reason = EnumConverter.convertFailureReasonToParticipantReason(eventData.failureReason);\r\n        const telemetryData: { [key: string]: any } = { reason };\r\n        telemetryData.code = eventData.code;\r\n        telemetryData.subCode = eventData.subCode;\r\n        telemetryData.phrase = eventData.phrase;\r\n\r\n        this._callTelemetry.updateOperationData(operationName, telemetryData, causeId);\r\n    }\r\n\r\n    private _onCallMeBackOperationStatusChanged(eventData: SlimCore.CallHandler.Events.CallMeBackOperationStatusChangedArgs) {\r\n        this._operationStatusChanged(this._participantOperationHandler, PARTICIPANT_OPERATIONS.CALL_ME_BACK, eventData);\r\n\r\n        const reason = EnumConverter.convertFailureReasonToParticipantReason(eventData.failureReason);\r\n\r\n        const transactionEnd: TransactionEnd = {\r\n            code: eventData.code,\r\n            subCode: eventData.subCode,\r\n            phrase: eventData.phrase\r\n        };\r\n\r\n        (transactionEnd as any).failureReason = reason;\r\n\r\n        if (eventData.failureReason === Enums.ParticipantFailureReason.NoFailure) {\r\n            // For successful one, wait for participantendpointdetails before resolve the promise\r\n        } else {\r\n            this._participantOperationHandler.rejectOperation(PARTICIPANT_OPERATIONS.CALL_ME_BACK, transactionEnd, eventData.participantMri, eventData.causeId);\r\n        }\r\n    }\r\n\r\n    private _onUnmuteOperationStatusChanged(eventData: SlimCore.CallHandler.Events.UnmuteSelfOperationStatusChangedArgs) {\r\n        this._operationStatusChanged(this._callOperationHandler, CALL_OPERATIONS.UNMUTE, eventData);\r\n\r\n        const causeId = generateCauseId();\r\n        const reason = SlimCoreElectronCall.convertParticipantReasonToTerminatedReason(\r\n            EnumConverter.convertFailureReasonToParticipantReason(eventData.failureReason));\r\n\r\n        if (eventData.operationResult === Enums.OperationResultCode.Success) {\r\n            this._callOperationHandler.resolveOperation(CALL_OPERATIONS.UNMUTE, reason, undefined, causeId);\r\n        } else {\r\n        this._callOperationHandler.rejectOperation(CALL_OPERATIONS.UNMUTE, reason, undefined, causeId);\r\n    }\r\n    }\r\n\r\n    private _onNudgeParticipantOperationStatusChanged(eventData: SlimCore.CallHandler.Events.NudgeParticipantsOperationStatusChangedArgs) {\r\n        this._operationStatusChanged(this._participantOperationHandler, CALL_OPERATIONS.NUDGE_PARTICIPANTS, eventData);\r\n\r\n        const causeId = generateCauseId();\r\n        const reason = EnumConverter.convertFailureReasonToParticipantReason(eventData.failureReason);\r\n        if (eventData.failureReason === Enums.ParticipantFailureReason.NoFailure) {\r\n            this._participantOperationHandler.resolveOperation(CALL_OPERATIONS.NUDGE_PARTICIPANTS, reason, eventData.context, causeId);\r\n        } else {\r\n        this._participantOperationHandler.rejectOperation(CALL_OPERATIONS.NUDGE_PARTICIPANTS, reason, eventData.context, causeId);\r\n    }\r\n    }\r\n\r\n    private _onUpdateMeetingRoleOperationStatusChanged(eventData: SlimCore.CallHandler.Events.UpdateMeetingRolesOperationStatusChangedArgs) {\r\n        this._operationStatusChanged(this._participantOperationHandler, CALL_OPERATIONS.UPDATE_MEETING_ROLE, eventData);\r\n\r\n        const transactionEnd: TransactionEnd = {\r\n            code: eventData.code,\r\n            subCode: eventData.subCode,\r\n            phrase: eventData.phrase\r\n        };\r\n        if (transactionEnd.code === 0 && transactionEnd.subCode === 0) {\r\n            this._participantOperationHandler.resolveOperation(CALL_OPERATIONS.UPDATE_MEETING_ROLE, transactionEnd, eventData.causeId, eventData.causeId);\r\n        } else {\r\n        this._participantOperationHandler.rejectOperation(CALL_OPERATIONS.UPDATE_MEETING_ROLE, transactionEnd, eventData.causeId, eventData.causeId);\r\n    }\r\n    }\r\n\r\n    private _onMuteParticipantOperationStatusChanged(eventData: SlimCore.CallHandler.Events.MuteParticipantsOperationStatusChangedArgs) {\r\n        this._operationStatusChanged(this._callOperationHandler, CALL_OPERATIONS.MUTE_PARTICIPANTS, eventData);\r\n\r\n        const transactionEnd: TransactionEnd = {\r\n            code: eventData.code,\r\n            subCode: eventData.subCode,\r\n            phrase: eventData.phrase\r\n        };\r\n        if (transactionEnd.code === 0 && transactionEnd.subCode === 0) {\r\n            this._callOperationHandler.resolveOperation(CALL_OPERATIONS.MUTE_PARTICIPANTS, transactionEnd, eventData.causeId, eventData.causeId);\r\n        } else {\r\n        this._callOperationHandler.rejectOperation(CALL_OPERATIONS.MUTE_PARTICIPANTS, transactionEnd, eventData.causeId, eventData.causeId);\r\n    }\r\n    }\r\n\r\n    private _onActiveSpeakerListChanged(eventData: SlimCore.CallHandler.Events.ActiveSpeakerListChangedArgs) {\r\n        // For each user listed in the active speaker, set the voiceLevel appropriately.\r\n        // This code should be removed once client can handle active speaker events directly.\r\n        // WinRt arrays of size 0 come back as null. Check if not null/undefined then map to go from [object StringArray] -> [object Array]\r\n        const activeSpeakers: string[] = eventData.activeSpeakers ? Array.from(eventData.activeSpeakers) : [];\r\n\r\n        const isActiveSpeakerMap = {};\r\n\r\n        // Active speaker list is usually not big so create a map with key as active speaker.\r\n        for (const activeSpeakerId of activeSpeakers) {\r\n            isActiveSpeakerMap[activeSpeakerId] = 1;\r\n        }\r\n\r\n        // Now run through all the participants and set the voicelevel if they are in the active speaker map.\r\n        for (const participant of this.participants) {\r\n            participant.setVoiceLevel(isActiveSpeakerMap[participant.id] || 0);\r\n        }\r\n\r\n        this._logger.debug(`_onActiveSpeakerListChanged: number of active speakers ${Object.keys(isActiveSpeakerMap).length}`);\r\n\r\n        // To be enabled when the client starts consuming active speaker list directly.\r\n        // this.activeSpeakerList = eventData.activeSpeakers;\r\n        // this.raiseChanged();\r\n    }\r\n\r\n    private _onDiagnosticsCodeChanged(diagnosticsCode: string) {\r\n        if (this._rawCallEndDiagnosticsInfo === diagnosticsCode || !diagnosticsCode || _.isEmpty(diagnosticsCode)) {\r\n            return;\r\n        }\r\n        this._logger.info(`_onDiagnosticsCodeChanged diagnosticsCode: ${diagnosticsCode}`);\r\n\r\n        try {\r\n            this._rawCallEndDiagnosticsInfo = diagnosticsCode;\r\n            this.callEndDiagnosticsInfo = JSON.parse(diagnosticsCode) as CallEndDiagnosticsInfo;\r\n            this.raiseChanged();\r\n        } catch (err) {\r\n            this._logger.info(`Failed to parse raw diagnostis details. Error: ${err}, diagnosticsCode: ${diagnosticsCode}`);\r\n        }\r\n    }\r\n\r\n    private _onTransferDiagnosticsCodeChanged(transferDiagnosticsCode: string) {\r\n        if (this._rawTransferDiagnosticsInfo === transferDiagnosticsCode || !transferDiagnosticsCode || _.isEmpty(transferDiagnosticsCode)) {\r\n            return;\r\n        }\r\n        this._logger.info(`_onTransferDiagnosticsCodeChanged: ${transferDiagnosticsCode}`);\r\n\r\n        try {\r\n            this._rawTransferDiagnosticsInfo = transferDiagnosticsCode;\r\n            this.transferDiagnosticsInfo = JSON.parse(transferDiagnosticsCode) as CallEndDiagnosticsInfo;\r\n            this.raiseChanged();\r\n        } catch (err) {\r\n            this._logger.info(`Failed to parse raw diagnostis details. Error: ${err}, diagnosticsCode: ${transferDiagnosticsCode}`);\r\n        }\r\n    }\r\n\r\n    private _onDominantSpeakerListChanged(eventData: SlimCore.CallHandler.Events.DominantSpeakerListChangedArgs) {\r\n        // WinRt arrays of size 0 come back as null. Check if not null/undefined then map to go from [object StringArray] -> [object Array]\r\n        this.dominantSpeakerInfo.speakerList = !!eventData.dominantSpeakers ? Array.from(eventData.dominantSpeakers) : [];\r\n        this._logger.info(`_onDominantSpeakerListChanged: number of dominant speakers ${this.dominantSpeakerInfo.speakerList.length}`);\r\n        this.raiseChanged();\r\n    }\r\n\r\n    private _onRemoteUserEventsReceived(eventData: SlimCore.CallHandler.Events.RemoteUserEventsReceivedArgs) {\r\n        this.event('remoteUserEventsReceived').raise(eventData.participantId, eventData.events);\r\n    }\r\n\r\n    private _updateCallLegIdChanged(newLegId: string) {\r\n        if (this.participantId !== newLegId) {\r\n            this._logger.info(`updateCallLegIdChanged: new value is ${newLegId}`);\r\n            this._setParticipantId(newLegId);\r\n            this.event('callLegIdChanged').raise(newLegId);\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _onOperationStatusChanged(eventData: SlimCore.CallHandler.Events.OperationStatusChangedArgs) {\r\n        this._logger.info(`_onOperationStatusChanged: eventData ${JSON.stringify(eventData, null, 4)}`);\r\n        let response: any;\r\n        try {\r\n            response = JSON.parse(eventData.result) as OperationTransactionEnd;\r\n        } catch (err) {\r\n            this._logger.info(`_onOperationStatusChanged: exception when parsing result ${err}`);\r\n            return;\r\n        }\r\n\r\n        if (!response) {\r\n            this._logger.info(`_onOperationStatusChanged: not a valid object ${response}`);\r\n            return;\r\n        }\r\n\r\n        for (const causeId in response) { // tslint:disable-line\r\n            if (!causeId || !response.hasOwnProperty(causeId)) {\r\n                continue;\r\n            }\r\n            for (const operationId in response[causeId]) { // tslint:disable-line\r\n                if (!operationId || !response[causeId].hasOwnProperty(operationId)) {\r\n                    continue;\r\n                }\r\n                const transactionEnd = response[causeId][operationId];\r\n                this._callTelemetry.updateOperationData(CALL_OPERATIONS.MERGE_WITH_PICKUP_CODE, transactionEnd, causeId, operationId);\r\n                if (transactionEnd.code === 0 && transactionEnd.subCode === 0) {\r\n                    this._callOperationHandler.maybeResolveOperation(CALL_OPERATIONS.MERGE_WITH_PICKUP_CODE, transactionEnd, operationId, causeId);\r\n                } else {\r\n                    this._callOperationHandler.maybeRejectOperation(CALL_OPERATIONS.MERGE_WITH_PICKUP_CODE, transactionEnd, operationId, causeId);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _updateIsHostless(newIsHostless: number) {\r\n        const newValue = (newIsHostless === 1);\r\n        if (this.isHostless !== newValue) {\r\n            this._logger.info(`_updateIsHostless: new value is ${newValue}`);\r\n            this.isHostless = newValue;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _onCallOptimalVideoCountChanged(value: number) {\r\n        this._logger.info(`_onCallOptimalVideoCountChanged ${value}`);\r\n        if (value !== this.optimalVideoCount) {\r\n            this.optimalVideoCount = value;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _onCallIdChanged(value: string) {\r\n        this._logger.info(`_onCallIdChanged ${value}`);\r\n        if (value !== this.callId) {\r\n            this._setCallId(value);\r\n            this.event('callIdChanged').raise(this.callId);\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _setCallId(callId: string) {\r\n        this.callId = callId;\r\n        this._callTelemetry.setCallId(this.callId);\r\n    }\r\n\r\n    private _setParticipantId(participantId: string) {\r\n        this.participantId = participantId;\r\n        this._callTelemetry.setParticipantId(this.participantId);\r\n    }\r\n\r\n    private _setConsultativeCallId(callId: string) {\r\n        this.consultativeCallId = callId;\r\n        this._callTelemetry.setConsultativeCallId(this.consultativeCallId);\r\n    }\r\n\r\n    private _onCallTransferStatusChanged(status: Enums.CallStatus) {\r\n        const causeId = generateCauseId();\r\n        this._logger.info(`[${causeId}]onCallTransferStatusChanged status: ${status} (${Enums.CallStatus[status]})`);\r\n\r\n        if (this._callOperationHandler.hasPendingOperation(CALL_OPERATIONS_INTERNAL.CALL_TRANSFER_IN_PROGRESS)) {\r\n            if (status === Enums.CallStatus.Transferring) {\r\n                this._setTransferState(TransferState.Accepted, causeId);\r\n            } else if (status === Enums.CallStatus.Transferred) {\r\n                this._setTransferState(TransferState.Completed, causeId);\r\n            } else if (status === Enums.CallStatus.Failed) {\r\n                this._setTransferState(TransferState.Failed, causeId);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _onCallParkStatusChanged(status: Enums.CallStatus) {\r\n        const causeId = generateCauseId();\r\n        this._logger.info(`[${causeId}]_onCallParkStatusChanged status: ${status} (${Enums.CallStatus[status]})`);\r\n\r\n        if (this._callOperationHandler.hasPendingOperation(CALL_OPERATIONS_INTERNAL.CALL_TRANSFER_IN_PROGRESS)) {\r\n            if (status === Enums.CallStatus.Parking) {\r\n                this._setParkState(ParkState.Parking, causeId);\r\n            } else if (status === Enums.CallStatus.Parked) {\r\n                this._setParkState(ParkState.Parked, causeId);\r\n            } else if (status === Enums.CallStatus.Failed) {\r\n                this._setParkState(ParkState.Failed, causeId);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _onCallStatusChanged(status: Enums.CallStatus, causeId = generateCauseId()) {\r\n        const fnLogger = this._logger.createFnLogger('onCallStatusChanged', causeId);\r\n        fnLogger.info(`new status=${status}, mapped to=(${Enums.CallStatus[status]})`);\r\n        this._updateCallLegIdChanged(this.getStrProperty(Enums.Property.CallLegId));\r\n        this._callTelemetry.recordEvent(CALL_OPERATIONS_INTERNAL.SIGNALING_STATE_CHANGED, { status, statusToEnum: Enums.CallStatus[status] }, causeId);\r\n        if (SlimCoreElectronCall.isCallConnecting(status)) {\r\n            this._setCallState(CallState.Connecting, causeId);\r\n\r\n        } else if (SlimCoreElectronCall.isCallPreheating(status)) {\r\n            fnLogger.info('status=Preheating');\r\n            this._setCallState(CallState.Preheating, causeId);\r\n\r\n        } else if (SlimCoreElectronCall.isCallEarlyMedia(status)) {\r\n            fnLogger.info('status=EarlyMedia');\r\n            this._setCallState(CallState.EarlyMedia, causeId);\r\n\r\n        } else if (SlimCoreElectronCall.isCallRinging(status)) {\r\n            fnLogger.info('status=Ringing');\r\n            this.participants.forEach(p => p.setState(ParticipantState.Ringing, causeId));\r\n            this._updateCallType(this.getIntProperty(Enums.Property.CallIsConference), causeId);\r\n\r\n        } else if (SlimCoreElectronCall.isCallInLobby(status)) {\r\n            this._callIsSetupComplete = true;\r\n            fnLogger.info('status=InLobby');\r\n            this._setCallState(CallState.InLobby, causeId);\r\n            this.participants.forEach(p => p.setState(ParticipantState.InLobby, causeId));\r\n            this._updateCallType(this.getIntProperty(Enums.Property.CallIsConference), causeId);\r\n            this._callOperationHandler.maybeResolveOperation(CALL_OPERATIONS.HOLD, undefined, undefined, causeId);\r\n            this._callOperationHandler.maybeResolveOperation(CALL_OPERATIONS.UNHOLD, undefined, undefined, causeId);\r\n            this._callOperationHandler.maybeResolveOperation(CALL_OPERATIONS_INTERNAL.CONNECT_CALL, undefined, undefined, causeId);\r\n            this._callOperationHandler.maybeResolveOperation(CALL_OPERATIONS.JOIN_PREHEATED_CALL, undefined, undefined, causeId);\r\n            this._reportTsCallingTelemetry(true);\r\n\r\n        } else if (SlimCoreElectronCall.isCallPreheated(status)) {\r\n            fnLogger.info('status=Preheated');\r\n            this._setCallState(CallState.Preheated, causeId);\r\n            this._updateIsHostless(this.getIntProperty(Enums.Property.CallIsHostless));\r\n            this._updateCallType(this.getIntProperty(Enums.Property.CallIsConference), causeId);\r\n            this._updateEndpointDetails(this.getStrProperty(Enums.Property.CallEndpointDetails));\r\n            this._callOperationHandler.maybeResolveOperation(CALL_OPERATIONS_INTERNAL.CONNECT_CALL, undefined, undefined, causeId);\r\n\r\n        } else if (SlimCoreElectronCall.isCallConnected(status)) {\r\n            this._callIsSetupComplete = true;\r\n            fnLogger.info('status=Connected');\r\n            this._setCallState(CallState.Connected, causeId);\r\n            this._updateIsHostless(this.getIntProperty(Enums.Property.CallIsHostless));\r\n            this._updateCallType(this.getIntProperty(Enums.Property.CallIsConference), causeId);\r\n            this._updateEndpointDetails(this.getStrProperty(Enums.Property.CallEndpointDetails));\r\n            this._onCallMutedUnmuted(!!this.getIntProperty(Enums.Property.CallIsMuted));\r\n            this._callOperationHandler.maybeResolveOperation(CALL_OPERATIONS.HOLD, undefined, undefined, causeId);\r\n            this._callOperationHandler.maybeResolveOperation(CALL_OPERATIONS.UNHOLD, undefined, undefined, causeId);\r\n            this._callOperationHandler.maybeResolveOperation(CALL_OPERATIONS_INTERNAL.CONNECT_CALL, undefined, undefined, causeId);\r\n            this._callOperationHandler.maybeResolveOperation(CALL_OPERATIONS.JOIN_PREHEATED_CALL, undefined, undefined, causeId);\r\n            this._reportTsCallingTelemetry(true);\r\n\r\n        } else if (SlimCoreElectronCall.isObserving(status)) {\r\n            this._callOperationHandler.maybeResolveOperation(CALL_OPERATIONS.SUBSCRIBE, undefined, undefined, causeId);\r\n\r\n        } else if (status === Enums.CallStatus.LocalHold) {\r\n            fnLogger.info('status=LocalHold');\r\n            this._setCallState(CallState.LocalHold, causeId);\r\n            this._callOperationHandler.maybeResolveOperation(CALL_OPERATIONS.HOLD, undefined, undefined, causeId);\r\n            this._callOperationHandler.maybeResolveOperation(CALL_OPERATIONS.UNHOLD, undefined, undefined, causeId);\r\n\r\n        } else if (status === Enums.CallStatus.RemoteHold) {\r\n            fnLogger.info('status=RemoteHold');\r\n            this._setCallState(CallState.RemoteHold, causeId);\r\n            this._callOperationHandler.maybeResolveOperation(CALL_OPERATIONS.HOLD, undefined, undefined, causeId);\r\n            this._callOperationHandler.maybeResolveOperation(CALL_OPERATIONS.UNHOLD, undefined, undefined, causeId);\r\n\r\n        } else if (SlimCoreElectronCall.isCallTerminated(status)) {\r\n\r\n            const terminatedReasonFromStatus: TerminatedReason = SlimCoreElectronCall.convertStatusToTerminatedReason(status);\r\n            let finalReason: TerminatedReason = terminatedReasonFromStatus;\r\n            fnLogger.info(`status=Terminated, reason=${terminatedReasonFromStatus}`);\r\n            const slimcoreCallFailureReason = this.getIntProperty(Enums.Property.CallFailureReason);\r\n            const diagnosticsCode = this.getStrProperty(Enums.Property.CallEndDiagnosticsCode);\r\n            const slimcoreCallType = this.getIntProperty(Enums.Property.CallIsConference);\r\n            const firstParticipantFailureReason = this._getFirstParticipantFailureReason(fnLogger);\r\n            // If call is in Failed or Dropped status - user CMEMBER_FAILURE_REASON will contain the reason for Failed call\r\n            // TODO: remove the callFailureReason after fixing SlimCore to set failed as call status\r\n            if ((status === Enums.CallStatus.Failed) ||\r\n                (status === Enums.CallStatus.Dropped) ||\r\n                (slimcoreCallFailureReason === Enums.ParticipantFailureReason.CallNotFound)) {\r\n                finalReason = this._getTerminatedReason(slimcoreCallFailureReason, terminatedReasonFromStatus);\r\n            }\r\n\r\n            if (this.state === CallState.Observing &&\r\n                (this._callOperationHandler.hasPendingOperation(CALL_OPERATIONS.START_CALL) ||\r\n                    this._callOperationHandler.hasPendingOperation(CALL_OPERATIONS.JOIN_CALL))) {\r\n\r\n                // reset slimcore call id so that pending start/join can fail gracefully\r\n                this.slimcoreCallId = 0;\r\n                this._callOperationHandler.maybeRejectOperation(CALL_OPERATIONS.SUBSCRIBE, finalReason, undefined, causeId);\r\n                fnLogger.info('Subscribe failed, there is pending start/join operation, ignore call end message');\r\n                return;\r\n            }\r\n\r\n            this._callTelemetry.recordEvent(CALL_OPERATIONS_INTERNAL.CALL_TERMINATION_INFO, { terminatedReasonFromStatus, slimcoreCallFailureReason, firstParticipantFailureReason, finalReason, slimcoreCallType }, causeId);\r\n\r\n            fnLogger.info(`status=Terminated, statusToReason=${terminatedReasonFromStatus}, slimcoreCallFailureReason=${slimcoreCallFailureReason}, finalReason=${finalReason}`);\r\n\r\n            this._callOperationHandler.maybeRejectOperation(CALL_OPERATIONS_INTERNAL.CONNECT_CALL, finalReason, undefined, causeId);\r\n            this._callOperationHandler.maybeResolveOperation(CALL_OPERATIONS_INTERNAL.CALL_ENDED, finalReason, undefined, causeId);\r\n\r\n            this._setCallState(CallState.Disconnected, causeId, finalReason, diagnosticsCode);\r\n            this.participants.forEach(p => p.setState(ParticipantState.Disconnected, causeId));\r\n            this._updateDominantSpeakerList();\r\n\r\n            this.disconnectingPromise = this.cleanUp(causeId).catch(error => {\r\n                fnLogger.logFailure(`Error when cleaning up the call, callId = ${this.callId}, error = ${error}`);\r\n            });\r\n        }\r\n        this.raiseChanged();\r\n    }\r\n\r\n    private cleanUp = async (causeId: CauseId): Promise<void> => {\r\n        this._logger.info(`[${causeId}][cleanup]start`);\r\n        await Promise.all([this._getCallEndOperation(), this._cleanCallResources(causeId)]);\r\n\r\n            this._callOperationHandler.rejectPendingOperations(TerminatedReason.Abandoned);\r\n            this._participantOperationHandler.rejectPendingOperations(ParticipantStateReason.Abandoned);\r\n\r\n            this._callTelemetry.setTerminationState(this.state);\r\n            this._callTelemetry.setTerminationReason(this.terminatedReason);\r\n            this._reportTsCallingTelemetry(!this._callIsSetupComplete);\r\n    }\r\n\r\n    private async _reportTsCallingTelemetry(isCallSetupEvent: boolean): Promise<void> {\r\n        if (isCallSetupEvent && this.setupTelemetryReported) {\r\n            return;\r\n        } else if (!isCallSetupEvent && this.inCallTelemetryReported) {\r\n            return;\r\n        }\r\n        await this.connectCallPromise.catch(noop);\r\n        const eventName = isCallSetupEvent ? 'skypecosi_concore_native_ts_calling_call_setup_session' : 'skypecosi_concore_native_ts_calling_in_call_session';\r\n        this._callTelemetry.setCallEndDiagnosticInfo(this.callEndDiagnosticsInfo);\r\n        if (this._telemetryService) {\r\n            this._telemetryService.sendEvent(eventName, this._callTelemetry.getEvent(isCallSetupEvent));\r\n        }\r\n        if (isCallSetupEvent) {\r\n            this.setupTelemetryReported = true;\r\n            this._callTelemetry.switchToInCallTelemetry();\r\n        } else {\r\n            this.inCallTelemetryReported = true;\r\n        }\r\n    }\r\n\r\n    private _getCallEndOperation = (): Promise<void> => {\r\n        // waiting for stop\r\n        if (this._callOperationHandler.hasPendingOperation(CALL_OPERATIONS.STOP_CALL)) {\r\n            return this._callOperationHandler.waitForOperation(CALL_OPERATIONS.STOP_CALL);\r\n            // waiting for reject\r\n        } else if (this._callOperationHandler.hasPendingOperation(CALL_OPERATIONS.REJECT)) {\r\n            return this._callOperationHandler.waitForOperation(CALL_OPERATIONS.REJECT);\r\n            // remote end/service end\r\n        } else {\r\n            return Promise.resolve<void>();\r\n        }\r\n    }\r\n\r\n    private _getFirstParticipantFailureReason = (fnLogger: IInternalLogger) => {\r\n        try {\r\n            if (this.participants.length) {\r\n                const participantFailureReason = _.head(this.participants).getIntProperty(Enums.Property.ParticipantFailureReason);\r\n                fnLogger.info(`participantFailureReason=${participantFailureReason}`);\r\n                return participantFailureReason;\r\n            }\r\n            fnLogger.logFailure(`no participants , can't query for participantFailureReason`);\r\n            return undefined;\r\n        } catch (e) {\r\n            this._logger.logFailure(`participantFailureReason=${getPrintableObject(e)}`);\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    private _getTerminatedReason(callFailureReason: number, originalReason?: TerminatedReason): TerminatedReason {\r\n        if (this._isRelayWhiteListingIssue) {\r\n            return TerminatedReason.MediaRelayWhiteListingIssue;\r\n\r\n        } else if (!_.isUndefined(callFailureReason) && callFailureReason !== Enums.ParticipantFailureReason.NoFailure) {\r\n            return SlimCoreElectronCall.convertParticipantReasonToTerminatedReason(\r\n                EnumConverter.convertFailureReasonToParticipantReason(callFailureReason));\r\n\r\n        } else if (this.participants.length) {\r\n            const firstParticipantFailureReason = _.head(this.participants).getIntProperty(Enums.Property.ParticipantFailureReason);\r\n            return SlimCoreElectronCall.convertParticipantReasonToTerminatedReason(\r\n                EnumConverter.convertFailureReasonToParticipantReason(firstParticipantFailureReason));\r\n        }\r\n\r\n        return originalReason || TerminatedReason.Undefined;\r\n    }\r\n\r\n    private _addParticipantToCall(participant: SlimCoreElectronCallParticipant, causeId: CauseId): void {\r\n        participant.setState(ParticipantState.Connecting, causeId);\r\n        this._logger.info(`[${causeId}]starting adding participant to call, participantId = ${piiUtils.scrubMriOrOmit(participant.id)}`);\r\n    }\r\n\r\n    private async _joinOrStartCall(options: JoinOrStartCallOptions, causeId: CauseId): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger('joinOrStartCall', causeId);\r\n        if (this.state !== CallState.None && this.state !== CallState.Observing) {\r\n            throw new Error('Trying to start a call that has already been acted on');\r\n        }\r\n\r\n        this._setIsCast(options.conversationType === 'cast');\r\n        this.label = options.label;\r\n        this.raiseChanged();\r\n\r\n        if ((options.muteFlags & MuteFlags.MuteMicrophone) === MuteFlags.MuteMicrophone) {\r\n            fnLogger.info(`isMuted set to true in _joinOrStartCall`);\r\n            this.isMuted = true;\r\n        }\r\n        if ((options.muteFlags & MuteFlags.MuteSpeaker) === MuteFlags.MuteSpeaker) {\r\n            fnLogger.info(`isSpeakerMuted set to true in _joinOrStartCall`);\r\n            this.isSpeakerMuted = true;\r\n        }\r\n        options.isExistingCallInObservingState = this.state === CallState.Observing;\r\n\r\n        if ((options.preheatFlags & PreheatFlags.IsPreheatOnly) === PreheatFlags.IsPreheatOnly) {\r\n            // Set call state to preheating\r\n            fnLogger.info(`Call set to preheating in _joinOrStartCall`);\r\n            this._setCallState(CallState.Preheating, causeId);\r\n        } else {\r\n            // Set call state to connecting only when we are not preheating\r\n            fnLogger.info(`Call set to connecting in _joinOrStartCall`);\r\n            this._setCallState(CallState.Connecting, causeId);\r\n        }\r\n\r\n        const connectCallPromise = this._callOperationHandler.createPendingOperation<void>(CALL_OPERATIONS_INTERNAL.CONNECT_CALL, undefined, causeId);\r\n\r\n        try {\r\n            this._joinOrStartSlimCoreCall(options, causeId);\r\n        } catch (error) {\r\n            fnLogger.logFailure(`sync failure, cleaning up slimcore ready operation: error=${getPrintableObject(error)}`);\r\n            this._callTelemetry.updateOperationData(CALL_OPERATIONS_INTERNAL.INCOMING_INITIALIZE, { error: getPIISafeObject(error) }, causeId);\r\n            this._callOperationHandler.rejectOperation(CALL_OPERATIONS_INTERNAL.ELECTRON_SLIMCORE_READY);\r\n            this.stopInternal(causeId);\r\n            throw error;\r\n        }\r\n\r\n        if (options.videoDirection === MediaDirection.Bidirectional) {\r\n            fnLogger.info('Call has been started; turning on video');\r\n            await this.startVideoSafe(causeId);\r\n        }\r\n        return connectCallPromise;\r\n    }\r\n\r\n    private _muteUnmute(value: boolean, causeId: CauseId): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger('muteUnmute', causeId);\r\n        fnLogger.info(`muteUnmute, value = ${value} isMuted = ${this.isMuted} isServerMuted = ${this.isServerMuted}`);\r\n\r\n        if (stateUtils.callStateIsAnyOf(this.state, [CallState.Preheating, CallState.Preheated])) {\r\n            fnLogger.logFailure('Can not mute/unmute during preheat call');\r\n            return Promise.reject(TerminatedReason.ActionNotAllowed);\r\n        }\r\n\r\n        let muteUnMutePromise: Promise<any>;\r\n        if (value) {\r\n            muteUnMutePromise = this._callOperationHandler.waitForOperation(CALL_OPERATIONS.MUTE);\r\n        } else {\r\n            muteUnMutePromise = this._callOperationHandler.waitForOperation(CALL_OPERATIONS.UNMUTE);\r\n        }\r\n\r\n        // Allow unmuting even if local state indicates muted due to missing roster events.\r\n        return Promise.resolve()\r\n            .then(() => this._slimcoreCallHandler.callMute(this.slimcoreCallId, value))\r\n            .then(() => muteUnMutePromise)\r\n            .catch(error => {\r\n                fnLogger.logFailure(error);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    private _muteUnmuteSpeaker(value: boolean, causeId: CauseId): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger('muteUnmuteSpeaker', causeId);\r\n        fnLogger.info(`muteUnmuteSpeaker, value = ${value} isSpeakerMuted = ${this.isSpeakerMuted}`);\r\n\r\n        let muteUnMutePromise: Promise<any>;\r\n        if (value) {\r\n            muteUnMutePromise = this._callOperationHandler.waitForOperation(CALL_OPERATIONS.MUTE_SPEAKER);\r\n        } else {\r\n            muteUnMutePromise = this._callOperationHandler.waitForOperation(CALL_OPERATIONS.UNMUTE_SPEAKER);\r\n        }\r\n\r\n        // Allow unmuting even if local state indicates muted due to missing roster events.\r\n        return Promise.resolve()\r\n            .then(() => this._slimcoreCallHandler.callMuteSpeaker(this.slimcoreCallId, value))\r\n            .then(() => muteUnMutePromise)\r\n            .then(() => this._setMutedSpeaker(value, causeId))\r\n            .catch(error => {\r\n                fnLogger.logFailure(error);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    private _muteParticipants(muteScope: MuteScope, callParticipants: ICallParticipant[], causeId: CauseId): Promise<void> {\r\n        const scope = SlimCoreElectronCall.convertMuteScope(muteScope);\r\n        const fnLogger = this._logger.createFnLogger('muteParticipants', causeId);\r\n        if (scope === undefined) {\r\n            fnLogger.logFailure(`Unrecognized ${muteScope}`);\r\n            return Promise.reject(new Error('Unrecognized muteScope'));\r\n        }\r\n\r\n        if (stateUtils.callStateIsAnyOf(this.state, [CallState.Preheating, CallState.Preheated])) {\r\n            fnLogger.logFailure('Can not mute/unmute during preheat call');\r\n            return Promise.reject(TerminatedReason.ActionNotAllowed);\r\n        }\r\n\r\n        const participantStrings: string[] = [];\r\n        callParticipants.forEach(participant => {\r\n            participantStrings.push(participant.id);\r\n        });\r\n\r\n        const muteParticipantsPromise = this._callOperationHandler.waitForOperation<void>(\r\n            CALL_OPERATIONS.MUTE_PARTICIPANTS, '', causeId);\r\n        return Promise.resolve()\r\n            .then(() => {\r\n                this._slimcoreCallHandler.callMuteParticipants(this.slimcoreCallId, scope, participantStrings, causeId);\r\n                if (SlimCoreCommon.hasFeature(Enums.Feature.AttendeeBlackList)) {\r\n                    return muteParticipantsPromise;\r\n                } else {\r\n                    return this._callOperationHandler.resolveOperation(CALL_OPERATIONS.MUTE_PARTICIPANTS, null, causeId, causeId)\r\n                        .then<void>();\r\n                }\r\n            })\r\n            .catch(error => {\r\n                fnLogger.logFailure(`mute participants failed with ${error}`);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    private async _holdUnhold(shouldHold: boolean, causeId: CauseId, negotiationTag: string): Promise<void> {\r\n        const currentHoldStatus = (this.state === CallState.LocalHold);\r\n        const fnLogger = this._logger.createFnLogger('holdUnhold', causeId);\r\n        fnLogger.info(`_holdUnhold, value: ${shouldHold} currentState: ${currentHoldStatus}`);\r\n\r\n        if (currentHoldStatus === shouldHold) {\r\n            return Promise.resolve<void>();\r\n        }\r\n\r\n        try {\r\n            this._slimcoreCallHandler.callHold(this.slimcoreCallId, shouldHold, negotiationTag);\r\n            if (shouldHold) {\r\n                await this._callOperationHandler.waitForOperation(CALL_OPERATIONS.HOLD);\r\n            } else {\r\n                await this._callOperationHandler.waitForOperation(CALL_OPERATIONS.UNHOLD);\r\n            }\r\n        } catch (error) {\r\n            fnLogger.logFailure(error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    private _updateEndpointMetadata(endpointMetadata: string, causeId: CauseId): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger('updateEndpointMetadata', causeId);\r\n        return Promise.resolve()\r\n            .then(() => this._slimcoreCallHandler.callUpdateEndpointMetadata(this.slimcoreCallId, this._endpointMetadata))\r\n            .catch(error => {\r\n                fnLogger.logFailure(error);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    private _sendDtmfTone(dtmfTone: DtmfTone, causeId: CauseId): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger('sendDtmfTone', causeId);\r\n        return Promise.resolve()\r\n            .then(() => {\r\n                const slimCoreDtmfTone = SlimCoreElectronCall.convertToSlimCoreDtmfTone(dtmfTone);\r\n                if (slimCoreDtmfTone === undefined) {\r\n                    fnLogger.logFailure(`Unrecognized dtmfTone`);\r\n                    throw new Error('Unrecognized dtmfTone');\r\n                }\r\n\r\n                try {\r\n                    this._slimcoreCallHandler.callSendDtmf(this.slimcoreCallId, slimCoreDtmfTone);\r\n                } catch (error) {\r\n                    fnLogger.logFailure(error);\r\n                    throw error;\r\n                }\r\n            });\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.SET_MAX_VIDEO_CHANNELS, { type: OPERATION_TYPE.CHAINED })\r\n    public setMaxVideoChannels(maxVideoChannels: number, negotiationTag?: string, @causeId causeId = generateCauseId()): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger('setMaxVideoChannels', causeId);\r\n        fnLogger.info(`setMaxVideoChannels: ${maxVideoChannels}`);\r\n\r\n        return Promise.resolve()\r\n            .then(() => {\r\n                this._slimcoreCallHandler.callSetMaxVideoChannels(this.slimcoreCallId, maxVideoChannels, negotiationTag, causeId);\r\n\r\n                if (this._isSetVideoChannelsRenegotiated) {\r\n                    return this._callOperationHandler.waitForOperation(CALL_OPERATIONS.SET_MAX_VIDEO_CHANNELS);\r\n                } else {\r\n                    return Promise.resolve<void>();\r\n                }\r\n            })\r\n            .catch(error => {\r\n                fnLogger.logFailure(error);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    public _setAudioUsageMode(audioUsageMode: AudioUsageMode, causeId: CauseId): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger('setAudioUsageMode', causeId);\r\n        return Promise.resolve()\r\n            .then(() => {\r\n                const slimCoreAudioUsageMode = SlimCoreElectronCall.convertToSlimCoreAudioUsageMode(audioUsageMode);\r\n                if (slimCoreAudioUsageMode === undefined) {\r\n                    throw new Error('Unrecognized audioUsageMode');\r\n                }\r\n                this._slimcoreCallHandler.callSetAudioUsageMode(this.slimcoreCallId, slimCoreAudioUsageMode);\r\n            })\r\n            .catch(error => {\r\n                fnLogger.logFailure(error);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    private _getOrCreateParticipant(participantMri: string, causeId: CauseId, slimcoreObjectId?: number, data?: CallParticipantData): SlimCoreElectronCallParticipant {\r\n        const isObserving = this.state === CallState.Observing;\r\n        let participant: SlimCoreElectronCallParticipant;\r\n        if (this.participantMap.hasOwnProperty(participantMri)) {\r\n            const participant = this.participantMap[participantMri];\r\n            if (slimcoreObjectId) {\r\n                participant.attachSlimcoreObjectId(slimcoreObjectId, causeId, isObserving, data);\r\n            }\r\n            return participant;\r\n        }\r\n\r\n        this._logger.info(`getOrCreateParticipant: creating new participant ${piiUtils.scrubMriOrOmit(participantMri)} ${slimcoreObjectId}`);\r\n        participant = new SlimCoreElectronCallParticipant(\r\n            this._logger,\r\n            this._settings,\r\n            this._slimcoreInstance,\r\n            participantMri,\r\n            this._slimcoreCallHandler,\r\n            this._streamContextMap,\r\n            slimcoreObjectId,\r\n            this._callTelemetry,\r\n            isObserving,\r\n            data\r\n        );\r\n\r\n        participant.changed(() => this._participantChangedCallback(participant));\r\n\r\n        this._addParticipantEntry(participant);\r\n        this._monitorCallStart();\r\n        this.event('participantAdded').raise(participant);\r\n        this.raiseChangedDeferred();\r\n\r\n        return participant;\r\n    }\r\n\r\n    private _participantChangedCallback(participant: SlimCoreElectronCallParticipant) {\r\n        if (participant.previousId) {\r\n            this._callOperationHandler.updateOperationId(participant.previousId, participant.id);\r\n            this._participantOperationHandler.updateOperationId(participant.previousId, participant.id);\r\n            participant.previousId = null;\r\n        }\r\n        _.each(participant.streams[StreamType.ScreenSharing], s => {\r\n            if (this._localScreenShareStream && !this._callOperationHandler.hasPendingOperation(CALL_OPERATIONS.START_SCREEN_SHARING)) {\r\n                if (s.isAvailable) {\r\n                    SlimCoreCommon.forgetAndLog(this.stopScreenSharing(true), this._logger, 'ParticipantChanged: Cleaning up local screenshare because remote screenshare is running');\r\n                    this.event('sharingStolen').raise();\r\n                }\r\n            }\r\n\r\n            if (this.screenSharingControl && this.screenSharingControl.isScreenSharingControlEnabled()) {\r\n                this.screenSharingControl.reportSharingSessionChangeForViewer(participant, s.negotiationTag);\r\n                if (s.isActive() && this.state === CallState.Connected) {\r\n                    // Initialize screen sharing control as viewer\r\n                    this.screenSharingControl.initControlForViewer(participant, s.negotiationTag);\r\n                } else {\r\n                    // Screen sharing not active\r\n                    this.screenSharingControl.shutdownControlForViewer(participant);\r\n                }\r\n            }\r\n        });\r\n\r\n        this._updateDominantSpeakerListDeferred();\r\n        this.event('participantUpdated').raise(participant);\r\n        this.raiseChangedDeferred();\r\n    }\r\n\r\n    private _setCallState(callState: CallState, causeId: CauseId, terminatedReason?: TerminatedReason, diagnosticCode?: string) {\r\n        if (this.state === callState) {\r\n            return;\r\n        }\r\n        const fnLogger = this._logger.createFnLogger(`setCallState`, causeId);\r\n        fnLogger.info(`currentState=${this.state}, newState=${callState}, terminatedReason=${this.terminatedReason}`);\r\n\r\n        const validNextStates = stateUtils.validStateTransitions[this.state];\r\n        const isValidNextState = validNextStates.indexOf(callState) >= 0;\r\n\r\n        if (!isValidNextState) {\r\n            // Some of the invalid transitions are due to setting the state in Ts-Calling layer itself\r\n            // without waiting for state changes from slimcore. Since these are expected, just logging\r\n            // these as warnings\r\n            this._logger.warn('invalid state transition');\r\n            return;\r\n        }\r\n\r\n        this.state = callState;\r\n        // In case call is disconnected by the time we attached, we may have\r\n        // missed the diagnostic code event. So we read it here always\r\n        this._onDiagnosticsCodeChanged(diagnosticCode);\r\n        this._callTelemetry.recordEvent(CALL_OPERATIONS_INTERNAL.SET_CALL_STATE, { state: callState, reason: terminatedReason }, causeId);\r\n\r\n        if (callState === CallState.Connected) {\r\n            this._callGotConnected = true;\r\n            this.callHeldAt = null;\r\n        } else if ((callState === CallState.RemoteHold || callState === CallState.LocalHold) && !this.callHeldAt) {\r\n            // This is the place to set HeldAt time. Extra condition is to make sure you don't override the current timer for hold-on-hold scenario.\r\n            this.callHeldAt = new Date();\r\n        } else if (callState === CallState.Disconnected) {\r\n            this.terminatedReason = terminatedReason;\r\n            this._setFailureType(SlimCoreElectronCall.convertTerminatedReasonToFailureType(terminatedReason, this._callGotConnected, this._wasAudioStreamConnected));\r\n\r\n            const transactionEnd: TransactionEnd = {};\r\n            if (this.callEndDiagnosticsInfo) {\r\n                transactionEnd.code = this.callEndDiagnosticsInfo.callControllerCode;\r\n                transactionEnd.subCode = this.callEndDiagnosticsInfo.callControllerSubCode;\r\n            }\r\n            this._callTelemetry.updateOperationData(CALL_OPERATIONS_INTERNAL.SET_CALL_STATE, transactionEnd, causeId);\r\n        }\r\n\r\n            if (this.screenSharingControl && this.screenSharingControl.isScreenSharingControlEnabled()) {\r\n            this.screenSharingControl.callStateChanged(this.state);\r\n            }\r\n\r\n        fnLogger.logSuccess(`changed to ${callState}, terminatedReason: ${this.terminatedReason}, failureType=${this.failureType}`);\r\n\r\n        this._startInitialVideoIfReady(causeId);\r\n        this._monitorCallStart();\r\n        this.event('callStateChanged').raise();\r\n        // Presently a caps update is only required if the state toggles between\r\n        // a preheat variant and something else, but keep it simple/extensible.\r\n        this._updateCapabilities(causeId);\r\n        this.raiseChanged();\r\n    }\r\n\r\n    private _setTransferState = (state: TransferState, causeId: CauseId): void => {\r\n        if (this.transferState !== state) {\r\n            this._logger.info(`Transfer: state set: ${state}`);\r\n            this._transferState = state;\r\n            this._callTelemetry.recordEvent(CALL_OPERATIONS_INTERNAL.SET_TRANSFER_STATE, { state }, causeId);\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _setParkState = (state: ParkState, causeId: CauseId): void => {\r\n        if (this.parkState !== state) {\r\n            this._logger.info(`Park: state set: ${state}`);\r\n            this._parkState = state;\r\n            this._callTelemetry.recordEvent(CALL_OPERATIONS_INTERNAL.SET_PARK_STATE, { state }, causeId);\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _setVideoOn(videoOn: boolean, causeId: CauseId) {\r\n        if (this.isVideoOn !== videoOn) {\r\n            this.isVideoOn = videoOn;\r\n            this._callTelemetry.recordEvent(CALL_OPERATIONS_INTERNAL.SET_LOCAL_VIDEO, { value: videoOn }, causeId);\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _setScreenSharingOn(screenSharingOn: boolean, causeId: CauseId) {\r\n        if (this.isScreenSharingOn !== screenSharingOn) {\r\n            this.isScreenSharingOn = screenSharingOn;\r\n            this._callTelemetry.recordEvent(CALL_OPERATIONS_INTERNAL.SET_SCREEN_SHARING, { value: screenSharingOn }, causeId);\r\n            this.raiseChanged();\r\n        }\r\n        this.event('userActivityChanged').raise();\r\n    }\r\n\r\n    private _setMutedSpeaker(muted: boolean, causeId: CauseId) {\r\n        if (this.isSpeakerMuted !== muted) {\r\n            this.isSpeakerMuted = muted;\r\n            this._callTelemetry.recordEvent(CALL_OPERATIONS_INTERNAL.SET_MUTED_SPEAKER, { value: muted }, causeId);\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _monitorCallStart() {\r\n        if (this.state === CallState.Connected && this.participants.length && !this.callStartedAt) {\r\n            this.callStartedAt = new Date();\r\n        }\r\n    }\r\n\r\n    private _addParticipantEntry(participant: SlimCoreElectronCallParticipant) {\r\n        this.participantMap[participant.id] = participant;\r\n        this.participants.push(participant);\r\n    }\r\n\r\n    private _removeParticipantEntry(participantId: string): SlimCoreElectronCallParticipant {\r\n        if (!this.participantMap.hasOwnProperty(participantId)) {\r\n            return null;\r\n        }\r\n\r\n        const participant = this.participantMap[participantId];\r\n        delete this.participantMap[participantId];\r\n\r\n        _.pull(this.participants, participant);\r\n        if (participant) {\r\n            this.raiseChanged();\r\n        }\r\n\r\n        return participant;\r\n    }\r\n\r\n    private _onThreadIdChanged(threadId: string) {\r\n        if (threadId && (this.threadId !== threadId)) {\r\n            this.threadId = threadId;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _onMessageIdChanged(messageId: string) {\r\n        if (messageId && (this.messageId !== messageId)) {\r\n            this.messageId = messageId;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _onSelfParticipantRoleChanged(role: string) {\r\n        if (role !== this.role) {\r\n            this._logger.info(`Role for self is set to ${role}`);\r\n            this.role = role as ParticipantRosterRole;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _updateMeetingRole(meetingRole: string) {\r\n        if (meetingRole !== this.meetingRole) {\r\n            this.meetingRole = meetingRole as MeetingRole;\r\n            this._logger.info(`_updateMeetingRole: ${this.meetingRole}`);\r\n            this.event('meetingRoleUpdated').raise(this.meetingRole);\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _updateTransferorMri(transferorMri: string) {\r\n        const formattedTransferorMri = stripMriAliases(transferorMri);\r\n        if (formattedTransferorMri !== this.transferorMri) {\r\n            this.transferorMri = formattedTransferorMri;\r\n            this._logger.info(`_transferorMri: ${this.transferorMri}`);\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _updateActiveVideoChannelCount(channelCount: number) {\r\n        if (channelCount !== this.activeVideoChannelCount) {\r\n            this._logger.info(`_updateActiveVideoChannelCount to ${channelCount}`);\r\n            this.activeVideoChannelCount = channelCount;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _onSelfParticipantTenantIdChanged(tenantId: string) {\r\n        if (tenantId !== this.tenantId) {\r\n            this._logger.info(`TenantId for self is set to ${tenantId}`);\r\n            this.tenantId = tenantId;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _updateEndpointDetails(rawEndpointDetails: string) {\r\n        const causeId = generateCauseId();\r\n        if (this._rawEndpoints === rawEndpointDetails || !rawEndpointDetails) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            this.endpoints = JSON.parse(rawEndpointDetails) as CallParticipantEndpoints;\r\n            this._rawEndpoints = rawEndpointDetails;\r\n\r\n            this.endpoints.endpointDetails.forEach(endpointDetail => {\r\n                if (endpointDetail.originalId) {\r\n                    this._participantOperationHandler.resolveOperation<void>(\r\n                        PARTICIPANT_OPERATIONS.CALL_ME_BACK, null, endpointDetail.originalId, causeId).catch(e => {\r\n                            this._logger.error(`[${causeId}]Failed to update call me back participant ${e}`);\r\n                        });\r\n                }\r\n            });\r\n        } catch (err) {\r\n            this._logger.info(`[${causeId}]Failed to parse raw endpoint details. Error: ${err}, EndpointDetails: ${rawEndpointDetails}`);\r\n        }\r\n\r\n        this._updateCapabilities(causeId);\r\n        this.raiseChanged();\r\n    }\r\n\r\n    private _updateMeetingDetails(rawMeetingDetails: string) {\r\n        if (this._rawMeetingDetails === rawMeetingDetails) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            if (!rawMeetingDetails || _.isEmpty(rawMeetingDetails)) {\r\n                this.meetingDetails = null;\r\n            } else {\r\n                this.meetingDetails = JSON.parse(rawMeetingDetails) as MeetingDetails;\r\n            }\r\n            this._rawMeetingDetails = rawMeetingDetails;\r\n            this.raiseChanged();\r\n        } catch (err) {\r\n            this._logger.warn(`Failed to parse the raw meeting details. Error: ${err}, MeetingDetails: ${rawMeetingDetails}`);\r\n        }\r\n    }\r\n\r\n    private _onBroadcastMetadataChanged(broadcastMetadata: string) {\r\n        if (broadcastMetadata) {\r\n            try {\r\n                this.broadcastMetadata = JSON.parse(broadcastMetadata);\r\n                this._logger.info('broadcast metadata updated');\r\n                if (this.broadcastMeeting) {\r\n                    this.broadcastMeeting.metadataChanged(broadcastMetadata);\r\n                }\r\n                this.raiseChanged();\r\n            } catch (e) {\r\n                this._logger.info('broadcast metadata invalid, failed to parse');\r\n            }\r\n        }\r\n    }\r\n\r\n    private _onCallProgressStatusChanged(callProgessStatus: string) {\r\n        if (callProgessStatus !== this._callProgressStatus) {\r\n            this._callProgressStatus = callProgessStatus;\r\n            this.callProgressStatus = callProgessStatus as CallProgressStatus;\r\n            this.event('callProgressStatusChanged').raise(callProgessStatus as CallProgressStatus);\r\n        }\r\n    }\r\n\r\n    private _getParticipantByObjectId(slimcoreObjectId: SlimCore.ObjectId) {\r\n        return _.find(this.participants, participant => participant.slimcoreObjectId === slimcoreObjectId);\r\n    }\r\n\r\n    private _onQualityChanged(event: SlimCore.Engine.Events.QualityChangedArgs) {\r\n        this._logger.info(`onQualityChanged: oid=${event.objectId}, mtype=${event.mediaType}, otype=${event.objectType}, type=${event.type}, value=${event.value}`);\r\n\r\n        // Right now we are only triggering events for audio and video media type.\r\n        if ((event.mediaType !== Enums.MediaType.Audio && event.mediaType !== Enums.MediaType.Video)) {\r\n            return;\r\n        }\r\n\r\n        // Check call id for local source\r\n        if (event.objectType === Enums.ObjectType.Call && event.objectId !== this.slimcoreCallId) {\r\n            return;\r\n        }\r\n\r\n        const payload: QualityChangedEvent = {\r\n            type: SlimCoreElectronCall.convertQualityEventType(event.type),\r\n            value: SlimCoreElectronCall.convertQualityLevel(event.value),\r\n            mediaType: SlimCoreElectronCall.convertMediaType(event.mediaType),\r\n            isLocalSource: event.objectType === Enums.ObjectType.Call\r\n        };\r\n\r\n        // Check participant id for remote source\r\n        if (event.objectType === Enums.ObjectType.Participant) {\r\n            const participant = this._getParticipantByObjectId(event.objectId);\r\n            if (!participant) {\r\n                return;\r\n            }\r\n            payload.id = participant.id;\r\n        }\r\n\r\n        if (payload.type && payload.value) {\r\n            if (event.mediaType === Enums.MediaType.Audio && event.type === Enums.QualityEventType.RelayWhiteListing) {\r\n                this._isRelayWhiteListingIssue = true;\r\n                this.event('mediaConnectionWhitelistingWarning').raise();\r\n                this.event('mediaConnectionFailed').raise();\r\n            } else {\r\n                this.event('callQualityChanged').raise(payload);\r\n            }\r\n        }\r\n    }\r\n\r\n    private getContentSharing(contentSharingSlimCoreObjectId: number): SlimCoreCommon.ContentSharing {\r\n        const contentSharing = this._slimcoreInstance.getContentSharing(contentSharingSlimCoreObjectId);\r\n\r\n        if (!contentSharing) {\r\n            return null;\r\n        }\r\n\r\n        return SlimCoreCommon.wrap(contentSharing, this._settings);\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.CREATE_CONTENT_SHARING_SESSION, { waitFor: CALL_OPERATIONS_INTERNAL.ELECTRON_SLIMCORE_READY })\r\n    public createContentSharingSession(contentSharingGuid: string, contentSharingIdentity: string, subject?: string, initialContentSharingSessionState?: string): Promise<IContentSharingSession> {\r\n        return Promise.resolve().then(() => {\r\n            const contentSharingSlimCoreObjectId = this._slimcoreCallHandler.createContentSharing(this.slimcoreCallId, contentSharingGuid, contentSharingIdentity, subject, initialContentSharingSessionState);\r\n            if (!contentSharingSlimCoreObjectId) {\r\n                throw new Error('Failed to create ContentSharing SlimCore object');\r\n            }\r\n\r\n            const slimCoreContentSharing = this.getContentSharing(contentSharingSlimCoreObjectId);\r\n            if (!slimCoreContentSharing) {\r\n                throw new Error('Failed to create ContentSharing SlimCore native object');\r\n            }\r\n\r\n            const slimCoreElectronContentSharingSession = new SlimCoreElectronContentSharing(\r\n                this._logger,\r\n                this._settings,\r\n                this._slimcoreInstance,\r\n                this._slimcoreCallHandler,\r\n                contentSharingSlimCoreObjectId,\r\n                slimCoreContentSharing,\r\n                this._callTelemetry\r\n            );\r\n            this.contentSharingSessions.push(slimCoreElectronContentSharingSession);\r\n            this.event('contentSharingChanged').raise();\r\n\r\n            return slimCoreElectronContentSharingSession;\r\n        });\r\n    }\r\n\r\n    private _onContentSharingChanged() {\r\n        const contentSharingObjects: SlimCore.ObjectId[] = this._slimcoreCallHandler.getContentSharingSessions(this.slimcoreCallId);\r\n        let foundNewSessions: boolean = false;\r\n\r\n        // Filter out content sharing objects that do not belong to this call\r\n        _.remove(contentSharingObjects, contentSharingObjectId => {\r\n            const callObjectId = this._getIntProperty(this._slimcoreCallHandler, contentSharingObjectId, SlimCore.Enums.Property.ContentSharingCallId);\r\n            return callObjectId !== this.slimcoreCallId;\r\n        });\r\n\r\n        const contentSharingSessionsRemoved = _.remove(this.contentSharingSessions, session => {\r\n            return _.indexOf(contentSharingObjects, session.slimCoreContentSharingObjectId) === -1;\r\n        });\r\n\r\n        _.forEach(contentSharingObjects, objectId => {\r\n            const existingSession = _.find(this.contentSharingSessions, session => {\r\n                return session.slimCoreContentSharingObjectId === objectId;\r\n            });\r\n            if (!existingSession) {\r\n                const slimCoreContentSharing = this.getContentSharing(objectId);\r\n                if (slimCoreContentSharing) {\r\n                    const session = new SlimCoreElectronContentSharing(\r\n                        this._logger,\r\n                        this._settings,\r\n                        this._slimcoreInstance,\r\n                        this._slimcoreCallHandler,\r\n                        objectId,\r\n                        slimCoreContentSharing,\r\n                        this._callTelemetry\r\n                    );\r\n                    this.contentSharingSessions.push(session);\r\n                    this._logger.info(`Added new content sharing session with guid ${session.contentSharingGuid}`);\r\n                    foundNewSessions = true;\r\n                }\r\n            }\r\n        });\r\n\r\n        contentSharingSessionsRemoved.forEach(session => {\r\n            this._logger.info(`Removed content sharing session with guid ${session.contentSharingGuid}`);\r\n            session.setContentSharingStatus(ContentSharingStatus.Done);\r\n            session.dispose();\r\n        });\r\n\r\n        if (foundNewSessions || contentSharingSessionsRemoved.length) {\r\n            this.event('contentSharingChanged').raise();\r\n        }\r\n    }\r\n\r\n    private raiseChangedDeferred(): void {\r\n        if (!this._raiseChangedDefer) {\r\n            this._raiseChangedDefer = _.defer(() => {\r\n                delete this._raiseChangedDefer;\r\n                this.raiseChanged();\r\n            });\r\n        }\r\n    }\r\n\r\n    private _onParticipantJoinedOrRemovedDeferred(causeId = generateCauseId()): void {\r\n        if (!this._onParticipantJoinedOrRemovedDefer) {\r\n            this._onParticipantJoinedOrRemovedDefer = _.defer(() => {\r\n                delete this._onParticipantJoinedOrRemovedDefer;\r\n                this._onParticipantJoinedOrRemoved(causeId);\r\n            });\r\n        }\r\n    }\r\n\r\n    private _updateDominantSpeakerListDeferred(): void {\r\n        if (!this._updateDominantSpeakerListDefer) {\r\n            this._updateDominantSpeakerListDefer = _.defer(() => {\r\n                delete this._updateDominantSpeakerListDefer;\r\n                this._updateDominantSpeakerList();\r\n            });\r\n        }\r\n    }\r\n\r\n    public callStateCanToggleVideo(): boolean {\r\n        return this.state === CallState.Connected ||\r\n            this.state === CallState.LocalHold ||\r\n            this.state === CallState.RemoteHold ||\r\n            this.state === CallState.InLobby;\r\n    }\r\n\r\n    private async _startInitialVideoIfReady(causeId: CauseId): Promise<void> {\r\n        if (this.callStateCanToggleVideo() && this._videoRequestedOnWhileConnecting) {\r\n            this._logger.info(`[${causeId}]Call has been started; turning on video`);\r\n            this._videoRequestedOnWhileConnecting = false;\r\n            await this.startVideoSafe(causeId);\r\n            if (this._videoRequestedOffWhileConnecting) {\r\n                this._logger.info(`[${causeId}]Call has been started and video turned on; turning off video`);\r\n                this._videoRequestedOffWhileConnecting = false;\r\n                await this.stopVideo(causeId);\r\n            }\r\n        }\r\n    }\r\n\r\n    private static convertConnectionType(connectionType: ConnectionType): Enums.ConnectionType {\r\n        switch (connectionType) {\r\n            case ConnectionType.AllSupported:\r\n                return Enums.ConnectionType.AllSupported;\r\n            case ConnectionType.NoDirectConnection:\r\n                return Enums.ConnectionType.NoDirectConnection;\r\n            default:\r\n                return Enums.ConnectionType.AllSupported;\r\n        }\r\n    }\r\n\r\n    private static convertStatusToTerminatedReason(status: Enums.CallStatus): TerminatedReason {\r\n        switch (status) {\r\n            case Enums.CallStatus.Failed:\r\n                return TerminatedReason.CallSetupError;\r\n            case Enums.CallStatus.Finished:\r\n                return TerminatedReason.Success;\r\n            case Enums.CallStatus.Missed:\r\n                return TerminatedReason.Missed;\r\n            case Enums.CallStatus.Refused:\r\n                return TerminatedReason.Declined;\r\n            case Enums.CallStatus.Busy:\r\n                return TerminatedReason.Busy;\r\n            case Enums.CallStatus.Cancelled:\r\n            case Enums.CallStatus.Unplaced:\r\n                return TerminatedReason.Cancelled;\r\n            case Enums.CallStatus.Dropped:\r\n                return TerminatedReason.MediaDroppedError;\r\n            case Enums.CallStatus.DeniedInLobby:\r\n                return TerminatedReason.DeniedInLobby;\r\n            case Enums.CallStatus.TimedOutInLobby:\r\n                return TerminatedReason.TimedOutInLobby;\r\n            default:\r\n                return TerminatedReason.Undefined;\r\n        }\r\n    }\r\n\r\n    private static convertParticipantReasonToTerminatedReason(reason: ParticipantStateReason): TerminatedReason {\r\n        switch (reason) {\r\n            case ParticipantStateReason.None:\r\n                return TerminatedReason.Success;\r\n            case ParticipantStateReason.AddingFailed:\r\n            case ParticipantStateReason.Blocked:\r\n            case ParticipantStateReason.NotFriendOrAuthorized:\r\n            case ParticipantStateReason.CallLimitReached:\r\n            case ParticipantStateReason.ParticipantDoesNotExist:\r\n                return TerminatedReason.BadRequest;\r\n            case ParticipantStateReason.ConfParticipantCountLimitReached:\r\n                return TerminatedReason.ConfParticipantCountLimitReached;\r\n            case ParticipantStateReason.ConfLobbyParticipantCountLimitReached:\r\n                return TerminatedReason.ConfLobbyParticipantCountLimitReached;\r\n            case ParticipantStateReason.NoResponse:\r\n                return TerminatedReason.Missed;\r\n            case ParticipantStateReason.Declined:\r\n                return TerminatedReason.Declined;\r\n            case ParticipantStateReason.NotReachable:\r\n                return TerminatedReason.NoNgcEndpoint;\r\n            case ParticipantStateReason.CallNotFound:\r\n                return TerminatedReason.CallNotFound;\r\n            case ParticipantStateReason.NetworkError:\r\n                return TerminatedReason.NetworkError;\r\n            case ParticipantStateReason.MediaDroppedError:\r\n                return TerminatedReason.MediaDroppedError;\r\n            case ParticipantStateReason.PstnInsufficientFunds:\r\n                return TerminatedReason.PstnInsufficientFunds;\r\n            case ParticipantStateReason.OtherError:\r\n                return TerminatedReason.Undefined;\r\n            case ParticipantStateReason.PstnSkypeoutAccountBlocked:\r\n                return TerminatedReason.PstnSkypeoutAccountBlocked;\r\n            case ParticipantStateReason.PstnCouldNotConnectToSkypeProxy:\r\n                return TerminatedReason.PstnCouldNotConnectToSkypeProxy;\r\n            case ParticipantStateReason.PstnBlockedByUs:\r\n                return TerminatedReason.PstnBlockedByUs;\r\n            case ParticipantStateReason.PstnBlockedRegulatoryIndia:\r\n                return TerminatedReason.PstnBlockedRegulatoryIndia;\r\n            case ParticipantStateReason.PstnInvalidNumber:\r\n                return TerminatedReason.PstnInvalidNumber;\r\n            case ParticipantStateReason.PstnNumberForbidden:\r\n                return TerminatedReason.PstnNumberForbidden;\r\n            case ParticipantStateReason.Busy:\r\n                return TerminatedReason.Busy;\r\n            case ParticipantStateReason.PstnCallTerminated:\r\n                return TerminatedReason.PstnCallTerminated;\r\n            case ParticipantStateReason.PstnNumberUnavailable:\r\n                return TerminatedReason.PstnNumberUnavailable;\r\n            case ParticipantStateReason.PstnEmergencyCallDenied:\r\n                return TerminatedReason.PstnEmergencyCallDenied;\r\n            case ParticipantStateReason.PstnNoSubscriptionCover:\r\n                return TerminatedReason.PstnNoSubscriptionCover;\r\n            case ParticipantStateReason.PstnCreditExpired:\r\n                return TerminatedReason.PstnCreditExpired;\r\n            case ParticipantStateReason.PstnCreditExpiredButEnough:\r\n                return TerminatedReason.PstnCreditExpiredButEnough;\r\n            case ParticipantStateReason.EnterprisePstnForbidden:\r\n                return TerminatedReason.EnterprisePstnForbidden;\r\n            case ParticipantStateReason.EnterprisePstnInternalError:\r\n                return TerminatedReason.EnterprisePstnInternalError;\r\n            case ParticipantStateReason.EnterprisePstnInvalidNumber:\r\n                return TerminatedReason.EnterprisePstnInvalidNumber;\r\n            case ParticipantStateReason.EnterprisePstnUnavailable:\r\n                return TerminatedReason.EnterprisePstnUnavailable;\r\n            case ParticipantStateReason.EnterprisePstnMiscError:\r\n                return TerminatedReason.EnterprisePstnMiscError;\r\n            case ParticipantStateReason.Kicked:\r\n                return TerminatedReason.Kicked;\r\n            case ParticipantStateReason.NetworkRequestTimeoutError:\r\n                return TerminatedReason.NetworkRequestTimeoutError;\r\n            case ParticipantStateReason.CallDoesNotExist:\r\n                return TerminatedReason.CallDoesNotExist;\r\n            case ParticipantStateReason.MediaSetupFailure:\r\n                return TerminatedReason.MediaSetupFailure;\r\n            case ParticipantStateReason.ServiceUnavailable:\r\n                return TerminatedReason.ServiceUnavailable;\r\n            case ParticipantStateReason.SignalingError:\r\n                return TerminatedReason.SignalingError;\r\n            case ParticipantStateReason.ConversationEstablishmentFailed:\r\n                return TerminatedReason.ConversationEstablishmentFailed;\r\n            case ParticipantStateReason.TemporarilyUnavailable:\r\n                return TerminatedReason.TemporarilyUnavailable;\r\n            case ParticipantStateReason.CannotConnectToNetworkError:\r\n                return TerminatedReason.CannotConnectToNetworkError;\r\n            case ParticipantStateReason.NoSignalingFromPeer:\r\n                return TerminatedReason.NoSignalingFromPeer;\r\n            case ParticipantStateReason.Abandoned:\r\n                return TerminatedReason.Abandoned;\r\n            case ParticipantStateReason.AnonymousJoinDisabledByPolicy:\r\n                return TerminatedReason.AnonymousJoinDisabledByPolicy;\r\n            case ParticipantStateReason.NoLobbyForBroadcastJoin:\r\n                return TerminatedReason.NoLobbyForBroadcastJoin;\r\n            case ParticipantStateReason.NotAllowedDueToInformationBarrier:\r\n                return TerminatedReason.NotAllowedDueToInformationBarrier;\r\n            case ParticipantStateReason.BroadcastLimitReached:\r\n                return TerminatedReason.BroadcastLimitReached;\r\n            case ParticipantStateReason.B2bJoinDisabledByPolicy:\r\n                return TerminatedReason.B2bJoinDisabledByPolicy;\r\n            case ParticipantStateReason.LocationBasedRoutingError:\r\n                return TerminatedReason.LocationBasedRoutingError;\r\n            default:\r\n                return TerminatedReason.Undefined;\r\n        }\r\n    }\r\n\r\n    private static convertTerminatedReasonToFailureType(reason: TerminatedReason, callGotConnected: boolean, mediaGotConnected: boolean): FailureType {\r\n        switch (reason) {\r\n            case TerminatedReason.Undefined:\r\n            case TerminatedReason.Success:\r\n            case TerminatedReason.Missed:\r\n            case TerminatedReason.Declined:\r\n            case TerminatedReason.Busy:\r\n            case TerminatedReason.Cancelled:\r\n            case TerminatedReason.NoNgcEndpoint:\r\n            case TerminatedReason.ActionNotAllowed:\r\n                return FailureType.Undefined;\r\n            case TerminatedReason.NetworkError:\r\n            case TerminatedReason.BadRequest:\r\n            case TerminatedReason.CallEstablishmentTimeout:\r\n            case TerminatedReason.CallSetupError:\r\n            case TerminatedReason.NoPermission:\r\n            case TerminatedReason.PstnInsufficientFunds:\r\n            case TerminatedReason.PstnCreditExpired:\r\n            case TerminatedReason.PstnCreditExpiredButEnough:\r\n            case TerminatedReason.PstnSkypeoutAccountBlocked:\r\n            case TerminatedReason.PstnCouldNotConnectToSkypeProxy:\r\n            case TerminatedReason.PstnBlockedByUs:\r\n            case TerminatedReason.PstnBlockedRegulatoryIndia:\r\n            case TerminatedReason.PstnInvalidNumber:\r\n            case TerminatedReason.PstnNumberForbidden:\r\n            case TerminatedReason.PstnCallTerminated:\r\n            case TerminatedReason.PstnNumberUnavailable:\r\n            case TerminatedReason.PstnEmergencyCallDenied:\r\n            case TerminatedReason.Kicked:\r\n            case TerminatedReason.CallDoesNotExist:\r\n            case TerminatedReason.MediaSetupFailure:\r\n            case TerminatedReason.ServiceUnavailable:\r\n            case TerminatedReason.SignalingError:\r\n            case TerminatedReason.ConversationEstablishmentFailed:\r\n            case TerminatedReason.TemporarilyUnavailable:\r\n            case TerminatedReason.CannotConnectToNetworkError:\r\n            case TerminatedReason.MediaRelayWhiteListingIssue:\r\n            case TerminatedReason.NoSignalingFromPeer:\r\n            case TerminatedReason.DeniedInLobby:\r\n            case TerminatedReason.TimedOutInLobby:\r\n            case TerminatedReason.ConfParticipantCountLimitReached:\r\n            case TerminatedReason.ConfLobbyParticipantCountLimitReached:\r\n            case TerminatedReason.AnonymousJoinDisabledByPolicy:\r\n            case TerminatedReason.NoLobbyForBroadcastJoin:\r\n            case TerminatedReason.NotAllowedDueToInformationBarrier:\r\n            case TerminatedReason.BroadcastLimitReached:\r\n            case TerminatedReason.B2bJoinDisabledByPolicy:\r\n            case TerminatedReason.LocationBasedRoutingError:\r\n                return FailureType.CallSetupFailed;\r\n            case TerminatedReason.MediaDroppedError:\r\n                return callGotConnected && mediaGotConnected ? FailureType.CallDropped : FailureType.CallSetupFailed;\r\n            default:\r\n                return FailureType.Undefined;\r\n        }\r\n    }\r\n\r\n    private static convertToSlimCoreDtmfTone(dtmfTone: DtmfTone): Enums.DtmfTone {\r\n        switch (dtmfTone) {\r\n            case DtmfTone.Num0:\r\n                return Enums.DtmfTone.Num0;\r\n            case DtmfTone.Num1:\r\n                return Enums.DtmfTone.Num1;\r\n            case DtmfTone.Num2:\r\n                return Enums.DtmfTone.Num2;\r\n            case DtmfTone.Num3:\r\n                return Enums.DtmfTone.Num3;\r\n            case DtmfTone.Num4:\r\n                return Enums.DtmfTone.Num4;\r\n            case DtmfTone.Num5:\r\n                return Enums.DtmfTone.Num5;\r\n            case DtmfTone.Num6:\r\n                return Enums.DtmfTone.Num6;\r\n            case DtmfTone.Num7:\r\n                return Enums.DtmfTone.Num7;\r\n            case DtmfTone.Num8:\r\n                return Enums.DtmfTone.Num8;\r\n            case DtmfTone.Num9:\r\n                return Enums.DtmfTone.Num9;\r\n            case DtmfTone.Star:\r\n                return Enums.DtmfTone.Star;\r\n            case DtmfTone.Pound:\r\n                return Enums.DtmfTone.Pound;\r\n            case DtmfTone.A:\r\n                return Enums.DtmfTone.A;\r\n            case DtmfTone.B:\r\n                return Enums.DtmfTone.B;\r\n            case DtmfTone.C:\r\n                return Enums.DtmfTone.C;\r\n            case DtmfTone.D:\r\n                return Enums.DtmfTone.D;\r\n            case DtmfTone.Flash:\r\n                return Enums.DtmfTone.Flash;\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n\r\n    private static convertToSlimCoreAudioUsageMode(audioUsageMode: AudioUsageMode): Enums.AudioUsageMode {\r\n        switch (audioUsageMode) {\r\n            case AudioUsageMode.Default:\r\n                return Enums.AudioUsageMode.Default;\r\n            case AudioUsageMode.LongrangeSpeaker:\r\n                return Enums.AudioUsageMode.LongrangeSpeaker;\r\n            case AudioUsageMode.Auditorium:\r\n                return Enums.AudioUsageMode.Auditorium;\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n\r\n    private static convertQualityEventType(value: Enums.QualityEventType): QualityEventType {\r\n        switch (value) {\r\n            case Enums.QualityEventType.NetworkSendQuality:\r\n                return QualityEventType.NetworkSendQuality;\r\n            case Enums.QualityEventType.NetworkRecvQuality:\r\n                return QualityEventType.NetworkRecvQuality;\r\n            case Enums.QualityEventType.NetworkDelay:\r\n                return QualityEventType.NetworkDelay;\r\n            case Enums.QualityEventType.NetworkBandwidthLow:\r\n                return QualityEventType.NetworkBandwidthLow;\r\n            case Enums.QualityEventType.NetworkReconnect:\r\n                return QualityEventType.NetworkReconnect;\r\n            case Enums.QualityEventType.NetworkPacketLoss:\r\n                return QualityEventType.NetworkPacketLoss;\r\n            case Enums.QualityEventType.NetworkJitter:\r\n                return QualityEventType.NetworkJitter;\r\n            case Enums.QualityEventType.NetworkRateMatching:\r\n                return QualityEventType.NetworkRateMatching;\r\n            case Enums.QualityEventType.DeviceCaptureNotFunctioning:\r\n                return QualityEventType.DeviceCaptureNotFunctioning;\r\n            case Enums.QualityEventType.DeviceRenderNotFunctioning:\r\n                return QualityEventType.DeviceRenderNotFunctioning;\r\n            case Enums.QualityEventType.DeviceRenderGlitches:\r\n                return QualityEventType.DeviceRenderGlitches;\r\n            case Enums.QualityEventType.DeviceLowSNR:\r\n                return QualityEventType.DeviceLowSNR;\r\n            case Enums.QualityEventType.DeviceLowSpeechLevel:\r\n                return QualityEventType.DeviceLowSpeechLevel;\r\n            case Enums.QualityEventType.DeviceClipping:\r\n                return QualityEventType.DeviceClipping;\r\n            case Enums.QualityEventType.DeviceEcho:\r\n                return QualityEventType.DeviceEcho;\r\n            case Enums.QualityEventType.PresentationAudioQuality:\r\n                return QualityEventType.DeviceNearEndToEchoRatio;\r\n            case Enums.QualityEventType.DeviceHalfDuplexAec:\r\n                return QualityEventType.DeviceHalfDuplexAec;\r\n            case Enums.QualityEventType.DeviceMultipleEndpoints:\r\n                return QualityEventType.DeviceMultipleEndpoints;\r\n            case Enums.QualityEventType.DeviceHowling:\r\n                return QualityEventType.DeviceHowling;\r\n            case Enums.QualityEventType.DeviceRenderZeroVolume:\r\n                return QualityEventType.DeviceRenderZeroVolume;\r\n            case Enums.QualityEventType.DeviceRenderMute:\r\n                return QualityEventType.DeviceRenderMute;\r\n            case Enums.QualityEventType.NetworkSendCatastrophic:\r\n                return QualityEventType.NetworkSendCatastrophic;\r\n            case Enums.QualityEventType.NetworkRecvCatastrophic:\r\n                return QualityEventType.NetworkRecvCatastrophic;\r\n            case Enums.QualityEventType.CpuInsufficient:\r\n                return QualityEventType.CpuInsufficient;\r\n            case Enums.QualityEventType.DeviceCaptureMute:\r\n                return QualityEventType.DeviceCaptureMute;\r\n            case Enums.QualityEventType.DeviceCaptureNotMuteButSilent:\r\n                return QualityEventType.DeviceCaptureNotMuteButSilent;\r\n            case Enums.QualityEventType.DeviceSpeakWhileMuted:\r\n                return QualityEventType.DeviceSpeakWhileMuted;\r\n            case Enums.QualityEventType.VideoVbssRendered:\r\n                return QualityEventType.VideoVbssRendered;\r\n            case Enums.QualityEventType.NetworkEthernetInterfaceUsed:\r\n                return QualityEventType.NetworkEthernetInterfaceUsed;\r\n            case Enums.QualityEventType.NetworkWlanInterfaceUsed:\r\n                return QualityEventType.NetworkWlanInterfaceUsed;\r\n            case Enums.QualityEventType.NetworkWwanInterfaceUsed:\r\n                return QualityEventType.NetworkWwanInterfaceUsed;\r\n            case Enums.QualityEventType.RelayWhiteListing:\r\n                return QualityEventType.NetworkRelaysNotReachable;\r\n            case Enums.QualityEventType.VideoCapturerDeviceStartFailed:\r\n                return QualityEventType.VideoCapturerDeviceStartFailed;\r\n            case Enums.QualityEventType.VideoCapturerDeviceStartTimedOut:\r\n                return QualityEventType.VideoCapturerDeviceStartTimedOut;\r\n            case Enums.QualityEventType.VideoCapturerDeviceStartFailureLackSystemRes:\r\n                return QualityEventType.VideoCapturerDeviceStartFailureLackSystemRes;\r\n            case Enums.QualityEventType.VideoCapturerDeviceStartFailureMFResConflict:\r\n                return QualityEventType.VideoCapturerDeviceStartFailureMFResConflict;\r\n            case Enums.QualityEventType.ZeroCaptureDevicesEnumerated:\r\n                return QualityEventType.ZeroCaptureDevicesEnumerated;\r\n            case Enums.QualityEventType.ZeroRenderDevicesEnumerated:\r\n                return QualityEventType.ZeroRenderDevicesEnumerated;\r\n            case Enums.QualityEventType.NoNetwork:\r\n                return QualityEventType.NoNetwork;\r\n            case Enums.QualityEventType.NetworkNotWorking:\r\n                return QualityEventType.NetworkNotWorking;\r\n            case Enums.QualityEventType.DeviceCaptureNotFunctioningAudioSrvNotRunning:\r\n                return QualityEventType.DeviceCaptureNotFunctioningAudioSrvNotRunning;\r\n            case Enums.QualityEventType.DeviceRenderNotFunctioningAudioSrvNotRunning:\r\n                return QualityEventType.DeviceRenderNotFunctioningAudioSrvNotRunning;\r\n            case Enums.QualityEventType.DeviceCaptureNotFunctioningDeviceInUse:\r\n                return QualityEventType.DeviceCaptureNotFunctioningDeviceInUse;\r\n            case Enums.QualityEventType.DeviceRenderNotFunctioningDeviceInUse:\r\n                return QualityEventType.DeviceRenderNotFunctioningDeviceInUse;\r\n            case Enums.QualityEventType.VideoCaptureDeviceFreeze:\r\n                return QualityEventType.VideoCaptureDeviceFreeze;\r\n            case Enums.QualityEventType.AudioCapturePermissionDenied:\r\n                return QualityEventType.AudioCapturePermissionDenied;\r\n            case Enums.QualityEventType.VideoCapturePermissionDenied:\r\n                return QualityEventType.VideoCapturePermissionDenied;\r\n            case Enums.QualityEventType.VideoCaptureFreezeRecovered:\r\n                return QualityEventType.VideoCaptureFreezeRecovered;\r\n            case Enums.QualityEventType.DeviceRenderHowling:\r\n                return QualityEventType.DeviceRenderHowling;\r\n            case Enums.QualityEventType.LowFarEndInput:\r\n                return QualityEventType.LowFarEndInput;\r\n            case Enums.QualityEventType.RemoteNetworkConnectivityIssue:\r\n                return QualityEventType.RemoteNetworkConnectivityIssue;\r\n            case Enums.QualityEventType.PresentationAudioLoopbackDeviceState:\r\n                return QualityEventType.PresentationAudioLoopbackDeviceState;\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n\r\n    private static convertQualityLevel(value: Enums.QualityLevel): QualityLevel {\r\n        switch (value) {\r\n            case Enums.QualityLevel.Unknown:\r\n                return QualityLevel.Unknown;\r\n            case Enums.QualityLevel.Good:\r\n                return QualityLevel.Good;\r\n            case Enums.QualityLevel.Poor:\r\n                return QualityLevel.Poor;\r\n            case Enums.QualityLevel.Bad:\r\n                return QualityLevel.Bad;\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n\r\n    private static convertMediaType(value: Enums.MediaType): MediaType {\r\n        switch (value) {\r\n            case Enums.MediaType.Audio:\r\n                return MediaType.Audio;\r\n            case Enums.MediaType.Video:\r\n                return MediaType.Video;\r\n            case Enums.MediaType.PanoramicCamera:\r\n                return MediaType.PanoramicVideo;\r\n            case Enums.MediaType.AppSharing:\r\n                return MediaType.ScreenShare;\r\n            case Enums.MediaType.Data:\r\n                return MediaType.Data;\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n\r\n    private static toMediaDirection(value: MediaDirection): Enums.MediaDirection {\r\n        switch (value) {\r\n            case MediaDirection.Disabled:\r\n                return Enums.MediaDirection.Disabled;\r\n            case MediaDirection.Inactive:\r\n                return Enums.MediaDirection.Inactive;\r\n            case MediaDirection.SendOnly:\r\n                return Enums.MediaDirection.SendToPeer;\r\n            case MediaDirection.ReceiveOnly:\r\n                return Enums.MediaDirection.ReceiveFromPeer;\r\n            case MediaDirection.Bidirectional:\r\n                return Enums.MediaDirection.Bidirectional;\r\n            default:\r\n                return Enums.MediaDirection.Disabled;\r\n        }\r\n    }\r\n\r\n    private static toAnswerMediaType(value: AnswerMediaType): Enums.AnswerMediaType {\r\n        switch (value) {\r\n            case AnswerMediaType.AnswerWithAudioOnly:\r\n                return Enums.AnswerMediaType.AnswerWithAudioOnly;\r\n            case AnswerMediaType.AnswerWithAudioVideo:\r\n                return Enums.AnswerMediaType.AnswerWithAudioVideo;\r\n            case AnswerMediaType.AnswerWithScreenshareOnly:\r\n                return Enums.AnswerMediaType.AnswerWithScreenshareOnly;\r\n            default:\r\n                return Enums.AnswerMediaType.AnswerWithAudioOnly;\r\n        }\r\n    }\r\n\r\n    private static convertMuteScope(value: MuteScope): Enums.MuteScope {\r\n        switch (value) {\r\n            case MuteScope.All:\r\n                return Enums.MuteScope.All;\r\n            case MuteScope.Specified:\r\n                return Enums.MuteScope.Specified;\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n\r\n    private static convertToSlimCoreMediaPeerType(mediaPeerType: MediaPeerType): Enums.MediaPeerType {\r\n        switch (mediaPeerType) {\r\n            case MediaPeerType.ConsumerTwoParty:\r\n                return Enums.MediaPeerType.ConsumerTwoParty;\r\n            case MediaPeerType.ConsumerPstn:\r\n                return Enums.MediaPeerType.ConsumerPstn;\r\n            case MediaPeerType.ConsumerMultiParty:\r\n                return Enums.MediaPeerType.ConsumerMultiParty;\r\n            case MediaPeerType.EnterpriseTwoPartyOnlineOnly:\r\n                return Enums.MediaPeerType.EnterpriseTwoPartyOnlineOnly;\r\n            case MediaPeerType.EnterpriseTwoPartyHybrid:\r\n                return Enums.MediaPeerType.EnterpriseTwoPartyHybrid;\r\n            case MediaPeerType.EnterprisePstnOnlineOnly:\r\n                return Enums.MediaPeerType.EnterprisePstnOnlineOnly;\r\n            case MediaPeerType.EnterprisePstnHybrid:\r\n                return Enums.MediaPeerType.EnterprisePstnHybrid;\r\n            case MediaPeerType.EnterpriseMultiParty:\r\n                return Enums.MediaPeerType.EnterpriseMultiParty;\r\n            case MediaPeerType.EnterpriseFederated:\r\n                return Enums.MediaPeerType.EnterpriseFederated;\r\n            case MediaPeerType.EnterpriseUnknown:\r\n                return Enums.MediaPeerType.EnterpriseUnknown;\r\n            case MediaPeerType.EnterpriseMultiPartyBroadcasting:\r\n                return Enums.MediaPeerType.EnterpriseMultiPartyBroadcasting;\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n\r\n    private static convertPushHandlingResult(result: Enums.PushHandlingResult): CallAcknowledgeResult {\r\n        switch (result) {\r\n            case Enums.PushHandlingResult.BadNotificationPayload:\r\n                return { code: CallAcknowledgeResultCode.BadNotificationPayload, fatal: true };\r\n            case Enums.PushHandlingResult.CallSetupSucceeded:\r\n                return { code: CallAcknowledgeResultCode.CallSetupSucceeded, success: true };\r\n            case Enums.PushHandlingResult.BadNotificationEventType:\r\n                return { code: CallAcknowledgeResultCode.BadNotificationEventType, fatal: true };\r\n            case Enums.PushHandlingResult.CallSetupSucceededCallAlreadyExists:\r\n                return { code: CallAcknowledgeResultCode.CallAlreadyExists };\r\n            case Enums.PushHandlingResult.CallSetupFailedCannotConnect:\r\n                return { code: CallAcknowledgeResultCode.CallFailedCannotConnect, fatal: true };\r\n            case Enums.PushHandlingResult.CallSetupFailedNoSignaling:\r\n                return { code: CallAcknowledgeResultCode.CallFailedNoSignaling, fatal: true };\r\n            case Enums.PushHandlingResult.CallSetupFailedConflict:\r\n                return { code: CallAcknowledgeResultCode.CallFailedConflict };\r\n            case Enums.PushHandlingResult.CallSetupFailedPushIgnored:\r\n                return { code: CallAcknowledgeResultCode.CallFailedPushIgnored };\r\n            case Enums.PushHandlingResult.CallSetupFailedAnsweredElsewhere:\r\n                return { code: CallAcknowledgeResultCode.CallFailedAnsweredElsewhere };\r\n            case Enums.PushHandlingResult.CallSetupFailedAlreadyEnded:\r\n                return { code: CallAcknowledgeResultCode.CallFailedCallAlreadyEnded };\r\n            case Enums.PushHandlingResult.CallSetupProgress:\r\n                return { code: CallAcknowledgeResultCode.CallSetupInProgress, success: true };\r\n            case Enums.PushHandlingResult.CallSetupFailed:\r\n            case Enums.PushHandlingResult.CallSetupFailedNoPermission:\r\n            case Enums.PushHandlingResult.CallSetupFailedNoCommonCodec:\r\n            default:\r\n                return { code: CallAcknowledgeResultCode.CallSetupFailed, fatal: true };\r\n        }\r\n    }\r\n\r\n    public get origin() {\r\n        return this._origin;\r\n    }\r\n\r\n    public get isAudioStreamConnected(): boolean {\r\n        return this._isAudioStreamConnected;\r\n    }\r\n\r\n    public set isAudioStreamConnected(value: boolean) {\r\n        if (this._isAudioStreamConnected === value) {\r\n            return;\r\n        }\r\n\r\n        this._isAudioStreamConnected = value;\r\n        this._wasAudioStreamConnected = this._wasAudioStreamConnected || value;\r\n        this.raiseChanged();\r\n    }\r\n\r\n    public static isCallConnected(status: Enums.CallStatus): boolean {\r\n        return status === Enums.CallStatus.InProgress;\r\n    }\r\n\r\n    public static isObserving(status: Enums.CallStatus): boolean {\r\n        return status === Enums.CallStatus.Observing;\r\n    }\r\n\r\n    public static isCallRinging(status: Enums.CallStatus): boolean {\r\n        switch (status) {\r\n            case Enums.CallStatus.RingingOut:\r\n            case Enums.CallStatus.RingingIn:\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    public static isCallConnecting(status: Enums.CallStatus): boolean {\r\n        return status === Enums.CallStatus.Routing;\r\n    }\r\n\r\n    public static isCallEarlyMedia(status: Enums.CallStatus): boolean {\r\n        return status === Enums.CallStatus.EarlyMedia;\r\n    }\r\n\r\n    public static isCallInLobby(status: Enums.CallStatus): boolean {\r\n        return status === Enums.CallStatus.InLobby;\r\n    }\r\n\r\n    public static isCallPreheating(status: Enums.CallStatus): boolean {\r\n        return status === Enums.CallStatus.Preheating;\r\n    }\r\n\r\n    public static isCallPreheated(status: Enums.CallStatus): boolean {\r\n        return status === Enums.CallStatus.Preheated;\r\n    }\r\n\r\n    public static isCallTerminated(status: Enums.CallStatus): boolean {\r\n        switch (status) {\r\n            case Enums.CallStatus.Missed:\r\n            case Enums.CallStatus.Refused:\r\n            case Enums.CallStatus.Busy:\r\n            case Enums.CallStatus.Cancelled:\r\n            case Enums.CallStatus.Finished:\r\n            case Enums.CallStatus.Failed:\r\n            case Enums.CallStatus.Dropped:\r\n            case Enums.CallStatus.DeniedInLobby:\r\n            case Enums.CallStatus.TimedOutInLobby:\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    private async _cleanCallResources(causeId: CauseId): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger('cleanCallResources', causeId);\r\n        try {\r\n            const participantsCleanUpPromises = _.map(this.participants, p =>\r\n                SlimCoreCommon.forgetAndLog(p.stopVideos(), fnLogger, 'cleanCallResources: stopping participant videos failed'));\r\n            await Promise.all(participantsCleanUpPromises);\r\n            if (this._localScreenShareStream) {\r\n                await SlimCoreCommon.forgetAndLog(this.stopScreenSharing(false, causeId), fnLogger, 'cleanCallResources: LocalScreenShare stop failed');\r\n            }\r\n            if (this._localVideo) {\r\n                await SlimCoreCommon.forgetAndLog(this._localVideo.stop(causeId), fnLogger, 'cleanCallResources: LocalVideo stop failed');\r\n            }\r\n            this.contentSharingSessions.forEach(session => {\r\n                session.setContentSharingStatus(ContentSharingStatus.Done);\r\n                session.dispose(causeId);\r\n            });\r\n            this.contentSharingSessions = [];\r\n        } finally {\r\n            this.dispose(causeId);\r\n        }\r\n    }\r\n\r\n    public dispose(causeId: CauseId): void {\r\n        const fnLogger = this._logger.createFnLogger('dispose', causeId);\r\n        fnLogger.info('start');\r\n        if (this.subscriptions.length) {\r\n            fnLogger.info(`${this.subscriptions.length} subscriptions will be lost`);\r\n        }\r\n\r\n        if (this._slimCoreElectronRemoteManager) {\r\n            this._slimCoreElectronRemoteManager.dispose();\r\n        }\r\n        this.mediaStreams[StreamType.Video] = [];\r\n        this.mediaStreams[StreamType.ScreenSharing] = [];\r\n\r\n        if (this._localScreenShareStream) {\r\n            this._localScreenShareStream.dispose(causeId);\r\n            this._localScreenShareStream = null;\r\n        }\r\n\r\n        if (this._localVideo) {\r\n            this._localVideo.dispose(causeId);\r\n            this._localVideo = null;\r\n        }\r\n\r\n        // Dispose screenSharingControl before\r\n        // data channel since screenSharingControl\r\n        // needs to unregister source/sink on the channel\r\n        // first\r\n        if (this.screenSharingControl) {\r\n            this.screenSharingControl.dispose();\r\n            this.screenSharingControl = null;\r\n        }\r\n\r\n        if (this.dataChannelAdapter) {\r\n            this.dataChannelAdapter.dispose();\r\n            this.dataChannelAdapter = null;\r\n        }\r\n\r\n        if (this._dataChannel) {\r\n            this._dataChannel.dispose();\r\n            this._dataChannel = null;\r\n        }\r\n\r\n        if (this._dataChannelUsers) {\r\n            this._dataChannelUsers = null;\r\n        }\r\n\r\n        this.participants.forEach(p => p.dispose());\r\n\r\n        super.dispose(causeId);\r\n    }\r\n\r\n    public testTriggerMediaRelayWhiteListingIssue(): Promise<string> {\r\n        throw new Error('testTriggerMediaRelayWhiteListingIssue not implemented in electron call');\r\n    }\r\n\r\n    public testSetCallState(state: CallState): void {\r\n        this._logger.info(`Overwriting call state for test purposes: ${this.state} -> ${state}`);\r\n        this.state = state;\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS.ADD_GROUP_MODALITY, { waitFor: CALL_OPERATIONS_INTERNAL.ELECTRON_SLIMCORE_READY })\r\n    public addGroupModality(payload: AddGroupModalityPayload, @causeId causeId = generateCauseId()): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger(CALL_OPERATIONS.ADD_GROUP_MODALITY, causeId);\r\n\r\n        if (this.slimcoreCallId === 0) {\r\n            return Promise.reject(new Error('call is not initialized yet'));\r\n        }\r\n\r\n        let additionalData: string;\r\n        if (payload.additionalData) {\r\n            try {\r\n                additionalData = JSON.stringify(payload.additionalData);\r\n            } catch (error) {\r\n                fnLogger.logFailure(error);\r\n                throw error;\r\n            }\r\n        }\r\n\r\n        fnLogger.info(`threadId = ${payload.threadId} messageId = ${payload.messageId} additionalData = ${piiUtils.scrubMriOrOmit(additionalData)}`);\r\n\r\n        return Promise.resolve()\r\n            .then(() => this._slimcoreCallHandler.addGroupModality(this.slimcoreCallId, payload.threadId, payload.messageId, additionalData, causeId))\r\n            .catch(error => {\r\n                fnLogger.logFailure(error);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    public getMediaTelemetry(): Promise<void> {\r\n        return Promise.reject('Not supported');\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronCall.ts","\r\nimport {\r\n    DataChannelProtocolMessage, DataChannelProtocolType, ICallParticipant, IMediaDataChannel, IMediaDataChannelEvents, MediaDataChannelState, MediaType\r\n} from 'skype-calling-interface';\r\n\r\nimport * as async from '../../common/ts/async';\r\nimport AsyncOperationHandler from '../../common/ts/asyncOperationHandler';\r\nimport { CALL_OPERATIONS } from '../../common/ts/callConstants';\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\nimport SlimCoreElectronBase from './SlimCoreElectronBase';\r\nimport SlimCoreElectronCall from './SlimCoreElectronCall';\r\nimport SlimCoreElectronCallParticipant from './SlimCoreElectronCallParticipant';\r\n\r\n// From electron/typings/slimcore-enums.d.ts:\r\nimport Enums = SlimCore.Enums;\r\nimport { IInternalLogger } from '../../common/ts/internalLogger';\r\n\r\n// SourceID used for P2P\r\nexport const DATA_SOURCE_ID_ANY = 0xFFFFFFFE;\r\n\r\n// Interface implemented by users of the SlimCore.DataChannel\r\n// that share the Protocol source for sending protocol messages\r\nexport interface IMediaDataChannelUser {\r\n    setDataChannel(channel: SlimCoreElectronDataChannel): Promise<void>;\r\n    onDataChannelStatusChanged(dataChannelStatus: number): Promise<void>;\r\n    setProtocolDataSource(source: SlimCore.DataSource): Promise<void>;\r\n    processProtocolMessage(message: string, senderParticipant: ICallParticipant, senderParticipantId: string, senderSourceId: number): Promise<void>;\r\n}\r\n\r\nexport default class SlimCoreElectronDataChannel extends SlimCoreElectronBase<IMediaDataChannelEvents> implements IMediaDataChannel {\r\n\r\n    private _dataChannelActive: boolean = false;\r\n    private _protocolDataSource: SlimCore.DataSource = null;\r\n    private _protocolDataSink: SlimCore.DataSink = null;\r\n    private _dataChannelAdapterSetInternalSourceSink: Function = null;\r\n    public _lastDataChannelState: Enums.DataChannelStatus = Enums.DataChannelStatus.Unknown;\r\n    private _asyncOperationHandler: AsyncOperationHandler;\r\n\r\n    public constructor(\r\n        logger: IInternalLogger,\r\n        settings: SlimCoreCommon.Settings,\r\n        engine: SlimCoreCommon.Engine,\r\n        private _call: SlimCoreElectronCall,\r\n        private _slimcoreCallHandler: SlimCoreCommon.CallHandler,\r\n        private _dataChannel: SlimCore.DataChannel,\r\n        private _dataChannelUsers: IMediaDataChannelUser[],\r\n        public id: number\r\n    ) {\r\n\r\n        super(logger.createChild(() => `SlimCoreElectronDataChannel`), settings, engine);\r\n        this._asyncOperationHandler = new AsyncOperationHandler(this._logger);\r\n\r\n        // Initialize the array of data channel users - for now there's only screen sharing control\r\n        this._logger.info('Setting DataChannel on all users');\r\n        for (let i = 0; i < this._dataChannelUsers.length; i++) {\r\n            if (this._dataChannelUsers[i]) {\r\n                try {\r\n                    this._dataChannelUsers[i].setDataChannel(this);\r\n                } catch (error) {\r\n                    this._logger.error(`Exception calling setDataChannel for i=${i} error=${error}`);\r\n                }\r\n            }\r\n        }\r\n\r\n        // Listen for data channel status changes\r\n        this._hookSlimCorePropertyChangedEvents();\r\n    }\r\n\r\n    // Callback for adapter to mark protocol source sink since this file owns it\r\n    // Maybe add to dataChannelUser internal interface (force tscalling to expose source/sinks to client)\r\n    public setAdapterSourceSinkCallback(setSourceSink: Function) {\r\n        this._dataChannelAdapterSetInternalSourceSink = setSourceSink;\r\n    }\r\n\r\n    private _hookSlimCorePropertyChangedEvents() {\r\n        this._registerDisposable(this._slimcoreInstance.handle(\r\n            'object-property-changed',\r\n            { objectId: this.id, propKey: Enums.Property.DataChannelStatus },\r\n            data => this._onDataChannelStatusChanged(data.value as number)));\r\n\r\n        const dataChannelStatus = this._getIntProperty(this._slimcoreCallHandler, this.id, Enums.Property.DataChannelStatus);\r\n        this._onDataChannelStatusChanged(dataChannelStatus);\r\n    }\r\n\r\n    public start(negotiationTag?: string): Promise<void> {\r\n        if (this._dataChannelActive) {\r\n            this._logger.info('start() called when channel already active');\r\n            return Promise.resolve<void>();\r\n        }\r\n        if (this._asyncOperationHandler.hasPendingOperation(CALL_OPERATIONS.START_DATA_CHANNEL)) {\r\n            this._logger.info('start promise already exists, returning previous promise');\r\n        } else {\r\n            this._asyncOperationHandler.createPendingOperation(CALL_OPERATIONS.START_DATA_CHANNEL);\r\n            async.asap(() => this._startDataChannel(negotiationTag));\r\n        }\r\n        return this._asyncOperationHandler.waitForOperation(CALL_OPERATIONS.START_DATA_CHANNEL);\r\n    }\r\n\r\n    public stop(negotiationTag?: string): Promise<void> {\r\n        if (!this._dataChannelActive) {\r\n            this._logger.info('stop() called when channel not active');\r\n            return Promise.resolve<void>();\r\n        }\r\n        if (this._asyncOperationHandler.hasPendingOperation(CALL_OPERATIONS.STOP_DATA_CHANNEL)) {\r\n            this._logger.info('stop promise already exists, returning previous promise');\r\n        } else {\r\n            this._asyncOperationHandler.createPendingOperation(CALL_OPERATIONS.STOP_DATA_CHANNEL);\r\n            async.asap(() => this._stopDataChannel(negotiationTag));\r\n        }\r\n        return this._asyncOperationHandler.waitForOperation(CALL_OPERATIONS.STOP_DATA_CHANNEL);\r\n    }\r\n\r\n    public registerDataSource(dataSource: SlimCore.DataSource): Promise<void> {\r\n        return async.asap(() => this._dataChannel.registerDataSource(dataSource));\r\n    }\r\n\r\n    public unregisterDataSource(dataSource: SlimCore.DataSource): Promise<void> {\r\n        return async.asap(() => this._dataChannel.unregisterDataSource(dataSource));\r\n    }\r\n\r\n    public registerDataSink(dataSink: SlimCore.DataSink): Promise<void> {\r\n        return async.asap(() => this._dataChannel.registerDataSink(dataSink));\r\n    }\r\n\r\n    public unregisterDataSink(dataSink: SlimCore.DataSink): Promise<void> {\r\n        return async.asap(() => this._dataChannel.unregisterDataSink(dataSink));\r\n    }\r\n\r\n    public sendUserEvents(events: string, participantIds?: string[]): Promise<void> {\r\n        return async.asap(() => this._dataChannel.sendUserEvents(events, participantIds));\r\n    }\r\n\r\n    private _onDataChannelStatusChanged(dataChannelStatus: number) {\r\n        this._logger.info(`Data channel status = ${dataChannelStatus}`);\r\n        if (dataChannelStatus === Enums.DataChannelStatus.Active) {\r\n            this._asyncOperationHandler.maybeResolveOperation(CALL_OPERATIONS.START_DATA_CHANNEL);\r\n\r\n            try {\r\n                this._dataChannel.setDataDevices();\r\n            } catch (error) {\r\n                this._logger.error(`setDataDevices threw exception: ${error}`);\r\n            }\r\n\r\n            if (this._dataChannel && !this._dataChannelActive) {\r\n                this._dataChannelActive = true;\r\n\r\n                // Create and attach protocol devices\r\n                this._createAndAttachProtocolDevices();\r\n\r\n                if (this._dataChannelAdapterSetInternalSourceSink) {\r\n                    this._dataChannelAdapterSetInternalSourceSink(Enums.DataDeviceId.Protocol, this._protocolDataSource, this._protocolDataSink);\r\n                }\r\n                this._logger.info('Data channel ready');\r\n            }\r\n        } else if (dataChannelStatus === Enums.DataChannelStatus.Available) {\r\n            this._asyncOperationHandler.maybeResolveOperation(CALL_OPERATIONS.STOP_DATA_CHANNEL);\r\n            if (this._dataChannel && this._dataChannelActive) {\r\n                // reset some state\r\n                this._dataChannelActive = false;\r\n                // detach and delete protocol devices\r\n                this._detachAndDeleteProtocolDevices();\r\n                this._logger.info('Data channel disposed');\r\n            }\r\n        }\r\n\r\n        if (this._lastDataChannelState === Enums.DataChannelStatus.Starting && dataChannelStatus !== Enums.DataChannelStatus.Active) {\r\n            this._asyncOperationHandler.maybeRejectOperation(CALL_OPERATIONS.START_DATA_CHANNEL);\r\n        } else if (this._lastDataChannelState === Enums.DataChannelStatus.Stopping && dataChannelStatus !== Enums.DataChannelStatus.Available) {\r\n            this._asyncOperationHandler.maybeRejectOperation(CALL_OPERATIONS.STOP_DATA_CHANNEL);\r\n        }\r\n\r\n        for (let i = 0; i < this._dataChannelUsers.length; i++) {\r\n            try {\r\n                this._dataChannelUsers[i].onDataChannelStatusChanged(dataChannelStatus);\r\n            } catch (error) {\r\n                this._logger.error(`Exception calling onDataChannelStatusChanged for i=${i} error=${error}`);\r\n            }\r\n        }\r\n\r\n        if (this._lastDataChannelState !== dataChannelStatus) {\r\n            this.event('stateChange').raise(SlimCoreElectronDataChannel._mapDataChannelStatus(dataChannelStatus));\r\n            this._lastDataChannelState = dataChannelStatus;\r\n        }\r\n    }\r\n\r\n    private _updateProtocolDataSource(dataSource: SlimCore.DataSource) {\r\n        // Loop through all the data channel users, and update their\r\n        // protocol data source accordingly:\r\n        this._logger.info('Setting Protocol DataSource on all users');\r\n        for (let i = 0; i < this._dataChannelUsers.length; i++) {\r\n            if (this._dataChannelUsers[i]) {\r\n                try {\r\n                    this._dataChannelUsers[i].setProtocolDataSource(dataSource);\r\n                } catch (error) {\r\n                    this._logger.error(`Exception calling setProtocolDataSource for i=${i} error=${error}`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _createAndAttachProtocolDevices(): void {\r\n        this._logger.info('_createAndAttachProtocolDevices()');\r\n        if (!SlimCoreCommon.hasCreateDataSource(this._slimcoreInstance) || !SlimCoreCommon.hasCreateDataSink(this._slimcoreInstance)) {\r\n            this._logger.warn('createDataSource or createDataSink not implemented');\r\n            return;\r\n        }\r\n\r\n        if (this._dataChannel) {\r\n\r\n            // Create/register source/sink\r\n            if (!this._protocolDataSource) {\r\n                this._protocolDataSource = SlimCoreCommon.createDataSource(this._slimcoreInstance, Enums.DataDeviceId.Protocol);\r\n                try {\r\n                    this._dataChannel.registerDataSource(this._protocolDataSource);\r\n                    this._logger.info('created Protocol data source');\r\n                } catch (error) {\r\n                    this._logger.error(`registerDataSource threw exception: ${error}`);\r\n                }\r\n            }\r\n\r\n            if (!this._protocolDataSink) {\r\n                this._protocolDataSink = SlimCoreCommon.createDataSink(this._slimcoreInstance, Enums.DataDeviceId.Protocol);\r\n                try {\r\n                    this._dataChannel.registerDataSink(this._protocolDataSink);\r\n                    this._logger.info('created Protocol data sink');\r\n                } catch (error) {\r\n                    this._logger.error(`registerDataSink threw exception: ${error}`);\r\n                }\r\n            }\r\n\r\n            // Attach protocol callback\r\n            this._protocolDataSink.on('data', ((args: SlimCore.DataSink.Events.DataArgs) => {\r\n                try {\r\n                    const protocolMessage: DataChannelProtocolMessage = JSON.parse(SlimCoreCommon.bufferToString(args.data));\r\n                    if (protocolMessage.type !== DataChannelProtocolType.Adapter) { // Adapter can register own listener for protocol adapter messages, ignore (adapter does not implement processProtocol)\r\n                        if (protocolMessage.type >= this._dataChannelUsers.length) {\r\n                            this._logger.error(`Error calling processProtocolMessage i=${protocolMessage.type} error=Index out of bounds`);\r\n                        }\r\n                        try {\r\n                            // This message is meant for this data channel user, so invoke the process method on it\r\n                            const senderParticipant: ICallParticipant = this._call.mapDataChannelSourceIdToParticipant(args.sourceID);\r\n                            let senderParticipantId: string;\r\n\r\n                            if (senderParticipant) {\r\n                                const p: SlimCoreElectronCallParticipant = senderParticipant as SlimCoreElectronCallParticipant;\r\n                                senderParticipantId = p.getParticipantIdForSourceId(MediaType.Data, args.sourceID);\r\n                            }\r\n\r\n                            this._dataChannelUsers[protocolMessage.type].processProtocolMessage(protocolMessage.message, senderParticipant, senderParticipantId, args.sourceID);\r\n                        } catch (error) {\r\n                            this._logger.error(`Error calling processProtocolMessage i=${protocolMessage.type} error=${error}`);\r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    this._logger.error(`Error handling protocol message error=${error}`);\r\n                }\r\n            }));\r\n\r\n            // Set the procotol data source on all data channel users\r\n            this._updateProtocolDataSource(this._protocolDataSource);\r\n\r\n        } else {\r\n            this._logger.warn('_createAndAttachProtocolDevices() null dataChannel');\r\n        }\r\n    }\r\n\r\n    private _detachAndDeleteProtocolDevices(): void {\r\n        this._logger.info('_detachAndDeleteProtocolDevices()');\r\n\r\n        // Remove data callback\r\n        if (this._protocolDataSink) {\r\n            this._protocolDataSink.removeAllListeners('data');\r\n        }\r\n\r\n        if (this._dataChannel) {\r\n            // Unregister the source/sink\r\n            if (this._protocolDataSource) {\r\n                try {\r\n                    this._dataChannel.unregisterDataSource(this._protocolDataSource);\r\n                } catch (error) {\r\n                    this._logger.warn(`unregisterDataSource threw exception for protocol, call probably ended: ${error}`);\r\n                }\r\n                this._protocolDataSource = null;\r\n\r\n                // Set the procotol data source on all data channel users\r\n                this._updateProtocolDataSource(null);\r\n                this._logger.info('deleted Protocol data source');\r\n            }\r\n\r\n            if (this._protocolDataSink) {\r\n                try {\r\n                    this._dataChannel.unregisterDataSink(this._protocolDataSink);\r\n                } catch (error) {\r\n                    this._logger.warn(`unregisterDataSink threw exception for protocol, call probably ended: ${error}`);\r\n                }\r\n                this._protocolDataSink = null;\r\n                this._logger.info('deleted Protocol data sink');\r\n            }\r\n        } else {\r\n            this._logger.warn('_detachAndDeleteProtocolDevices() null dataChannel');\r\n        }\r\n\r\n    }\r\n\r\n    private _startDataChannel(negotiationTag?: string) {\r\n        this._logger.info('_startDataChannel()');\r\n\r\n        if (this._dataChannel) {\r\n            try {\r\n                this._dataChannel.start(negotiationTag);\r\n            } catch (error) {\r\n                this._logger.error(`_dataChannel.start threw exception: ${error}`);\r\n            }\r\n            this._logger.info('Data channel started');\r\n        }\r\n    }\r\n\r\n    private _stopDataChannel(negotiationTag?: string) {\r\n        this._logger.info('_stopDataChannel()');\r\n\r\n        if (this._dataChannel) {\r\n            try {\r\n                this._dataChannel.stop(negotiationTag);\r\n            } catch (error) {\r\n                this._logger.error(`_dataChannel.stop threw exception: ${error}`);\r\n            }\r\n            this._logger.info('Data channel stopping');\r\n        }\r\n    }\r\n\r\n    public static _mapDataChannelStatus(dataChannelStatus: number): MediaDataChannelState {\r\n        switch (dataChannelStatus) {\r\n            case Enums.DataChannelStatus.Available:\r\n                return MediaDataChannelState.Available;\r\n            case Enums.DataChannelStatus.Starting:\r\n                return MediaDataChannelState.Starting;\r\n            case Enums.DataChannelStatus.Active:\r\n                return MediaDataChannelState.Active;\r\n            case Enums.DataChannelStatus.Stopping:\r\n                return MediaDataChannelState.Stopping;\r\n            case Enums.DataChannelStatus.NotStarted:\r\n                return MediaDataChannelState.NotStarted;\r\n            case Enums.DataChannelStatus.Unknown:\r\n            default:\r\n                return MediaDataChannelState.Unknown;\r\n        }\r\n    }\r\n\r\n    public dispose() {\r\n        this._logger.info('SlimCoreElectronDataChannel.dispose()');\r\n\r\n        this._detachAndDeleteProtocolDevices();\r\n\r\n        this._call = null;\r\n        if (this._dataChannel) {\r\n            if (this._dataChannel.dispose) {\r\n                this._dataChannel.dispose();\r\n            }\r\n            this._dataChannel = null;\r\n        }\r\n\r\n        super.dispose();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronDataChannel.ts","import { pii } from '@skype/rt-js-bindings';\r\nimport { CallEndDiagnosticsInfo, CallingLogger, CallOrigin, CallState, CallType, CauseId, FailureType, ParticipantRosterRole, PreheatFlags, TerminatedReason } from 'skype-calling-interface';\r\nimport { generateCauseId } from './causeId';\r\nimport { getPIISafeObject } from './logUtils';\r\nimport { scrubMriOrOmit } from './piiUtils';\r\nimport { getTsCallingVersion } from './tsCallingVersionProvider';\r\n\r\nconst MAX_IN_CALL_EVENTS = 150;\r\n\r\nenum OperationStatus {\r\n    Pending = 'Pending',\r\n    Success = 'Success',\r\n    Failure = 'Failure'\r\n}\r\n\r\nenum EventType {\r\n    Event,\r\n    Operation\r\n}\r\n\r\nexport type IEvent = {\r\n    [key: string]: {\r\n        start: number;\r\n        duration: number;\r\n        status: OperationStatus;\r\n        result?: any;\r\n        data?: any;\r\n    };\r\n};\r\n\r\nexport interface ITelemetryEvent {\r\n    recordSuccess<T>(result: T, resultCauseId: string): void;\r\n    recordFailure(reason: any, resultCauseId: string): void;\r\n    isPending(): boolean;\r\n    getEvent(): IEvent;\r\n}\r\n\r\nclass Event implements ITelemetryEvent {\r\n    private result: any;\r\n    private status = OperationStatus.Pending;\r\n    private duration: number;\r\n    private eventStartTimestamp = new Date().getTime();\r\n    private data: any[] = [];\r\n    private resultCauseId: string;\r\n    private eventVariant: string;\r\n\r\n    constructor(\r\n        private eventName: string,\r\n        private eventStartTime: number,\r\n        private type: EventType,\r\n        private causeId: CauseId,\r\n        data?: any\r\n    ) {\r\n        if (this.type === EventType.Event) {\r\n            delete this.status;\r\n        }\r\n        if (data) {\r\n            this.data.push(data);\r\n        }\r\n    }\r\n\r\n    public set variant(value: string) {\r\n        this.eventVariant = value;\r\n    }\r\n\r\n    public recordSuccess(result: any, resultCauseId: string): void {\r\n        this.recordResult(true, result, resultCauseId);\r\n    }\r\n\r\n    public recordFailure(error: any, resultCauseId: string): void {\r\n        this.recordResult(false, error, resultCauseId);\r\n    }\r\n\r\n    public addData(data: any): void {\r\n        this.data.push(data);\r\n    }\r\n\r\n    public isPending() {\r\n        return this.status === OperationStatus.Pending;\r\n    }\r\n\r\n    public getEvent(): IEvent {\r\n        const rawEvent = {\r\n            start: this.eventStartTime,\r\n            duration: this.duration,\r\n            status: this.status,\r\n            result: this.result,\r\n            causeId: this.causeId,\r\n            resultCauseId: this.resultCauseId,\r\n            variant: this.eventVariant,\r\n            data: this.data\r\n                .map(d => this.prepareData(d, true))\r\n                .filter(d => !!d)\r\n        };\r\n\r\n        if (this.type === EventType.Event) {\r\n            delete rawEvent.status;\r\n        }\r\n        if (!rawEvent.data.length) {\r\n            delete rawEvent.data;\r\n        }\r\n        if (!rawEvent.causeId) {\r\n            delete rawEvent.causeId;\r\n        }\r\n        if (!rawEvent.resultCauseId) {\r\n            delete rawEvent.resultCauseId;\r\n        }\r\n        if (!rawEvent.result) {\r\n            delete rawEvent.result;\r\n        }\r\n        if (!rawEvent.variant) {\r\n            delete rawEvent.variant;\r\n        }\r\n\r\n        return {\r\n            [this.eventName]: rawEvent\r\n        };\r\n    }\r\n\r\n    private recordResult(success: boolean, result: any, resultCauseId: string) {\r\n        this.status = success ? OperationStatus.Success : OperationStatus.Failure;\r\n        this.result = this.prepareData(result);\r\n        if (this.causeId !== resultCauseId) {\r\n            this.resultCauseId = resultCauseId;\r\n        }\r\n        this.duration = new Date().getTime() - this.eventStartTimestamp;\r\n    }\r\n\r\n    private prepareData(data: any, returnFullObject = false): string {\r\n        const type = typeof data;\r\n        if (data === undefined || data === null) {\r\n            return '';\r\n        } else if (type === 'string') {\r\n            return scrubMriOrOmit(data);\r\n        } else if (type === 'number' || type === 'boolean') {\r\n            return String(data);\r\n        } else if (type === 'function') {\r\n            return '';\r\n        } else if (data instanceof Error) {\r\n            return data.toString();\r\n        } else {\r\n            try {\r\n                if (Object.keys(data).length) {\r\n                    return returnFullObject ? data : getPIISafeObject(data);\r\n                }\r\n                return '';\r\n            } catch (e) {\r\n                return 'invalid';\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport enum CALL_TERMINATING_END {\r\n    LOCAL = 'Local',\r\n    REMOTE = 'Remote'\r\n}\r\nexport enum RESULT_VALUE {\r\n    SUCCESS = 'Success',\r\n    FAILURE = 'Failure'\r\n}\r\nexport enum DIRECTION {\r\n    INCOMING = 'Incoming',\r\n    OUTGOING = 'Outgoing'\r\n}\r\n\r\nexport enum SELF_PARTICIPANT_ROLE {\r\n    CALLER = 'caller',\r\n    CALLEE = 'callee',\r\n    JOIN = 'join',\r\n    SUBSCRIBE = 'SUBSCRIBE'\r\n}\r\n\r\ntype BooleanToString = 'True' | 'False' | '';\r\ntype StackConfig = { [key: string]: string };\r\nexport type ICallTelemetryEvent = {\r\n    CorrelationId: string;\r\n    PreviousCorrelationId: string;\r\n    ConsultativeCallId: string;\r\n    EndpointId: string;\r\n    ParticipantId: string;\r\n    PreheatFlags: PreheatFlags;\r\n    CallType: CallType;\r\n    Direction: DIRECTION;\r\n    Origin: CallOrigin;\r\n    SelfParticipantRole: string;\r\n    IsAnonymous: BooleanToString;\r\n    ThreadId: string;\r\n    MessageId: string;\r\n    TenantId: string;\r\n    FailureType: FailureType;\r\n    IsCast: BooleanToString;\r\n    IsEmergency: BooleanToString;\r\n    TsCallingVersion: string;\r\n    TerminationState: CallState;\r\n    TerminationReason: TerminatedReason;\r\n    StackConfig: StackConfig;\r\n    EventTimestampBag: string;\r\n    HostName: string;\r\n    DiagnosticInfo: CallEndDiagnosticsInfo;\r\n};\r\n\r\nexport interface ITelemetryUtilities {\r\n    recordEvent(eventName: string, piiSafeData?: any, causeId?: CauseId): ITelemetryEvent;\r\n    recordOperationSuccess(eventName: string, piiSafeData?: any, eventId?: string, causeId?: CauseId): void;\r\n    recordOperationFailure(eventName: string, piiSafeData: any, eventId?: string, causeId?: CauseId): void;\r\n    maybeRecordOperationSuccess(eventName: string, piiSafeData?: any, eventId?: string, causeId?: CauseId): void;\r\n    maybeRecordOperationFailure(eventName: string, piiSafeData: any, eventId?: string, causeId?: CauseId): void;\r\n    recordOperation(eventName: string, causeId: CauseId, eventId?: string): ITelemetryEvent;\r\n    setOperationVariant(eventName: string, type: string, eventId?: string, causeId?: CauseId): void;\r\n    updateOperationData(eventName: string, piiSafeData: any, causeId: CauseId, eventId?: string): void;\r\n}\r\n\r\nexport interface ICallTelemetry extends ITelemetryUtilities {\r\n    setCallId(callId: string): void;\r\n    setConsultativeCallId(consultativeCallId: string): void;\r\n    setEndpointId(endpointId: string): void;\r\n    setParticipantId(participantId: string): void;\r\n    setThreadId(threadId: string): void;\r\n    setMesageId(messageId: string): void;\r\n    setTenantId(tenantId: string): void;\r\n    setFailureType(failureType: FailureType): void;\r\n    setIsCast(isCast: boolean): void;\r\n    setIsEmergency(isEmergency: boolean): void;\r\n    setRole(role: ParticipantRosterRole): void;\r\n    setCallType(callType: CallType): void;\r\n    setDirection(direction: DIRECTION): void;\r\n    setPreheatFlags(preheatFlags: PreheatFlags): void;\r\n    setCallOrigin(origin: CallOrigin): void;\r\n    setSelfParticipantRole(selfParticipantRole: SELF_PARTICIPANT_ROLE): void;\r\n    setTerminationState(terminationState: CallState): void;\r\n    setTerminationReason(terminationReason: TerminatedReason): void;\r\n    getEvent(skipPendingOperations?: boolean): ICallTelemetryEvent;\r\n    switchToInCallTelemetry(): void;\r\n    setStackConfig(config: StackConfig): void;\r\n    setCallEndDiagnosticInfo(diagnosticCode: CallEndDiagnosticsInfo): void;\r\n}\r\n\r\nexport class TelemetryUtilities implements ITelemetryUtilities {\r\n    protected recordedEvents: Event[] = [];\r\n    private ongoingOperations: { [operationName: string]: { [operationId: string]: ITelemetryEvent } | ITelemetryEvent } = {};\r\n\r\n    public constructor(\r\n        protected logger: CallingLogger,\r\n        protected startTime: number,\r\n        private maxEventsExceeded: () => boolean\r\n    ) {\r\n    }\r\n\r\n    public recordEvent(eventName: string, piiSafeData?: any, causeId = generateCauseId()): Event {\r\n        this.logger.debug('Event:', eventName, pii.Omit(piiSafeData));\r\n\r\n        const event: Event = new Event(eventName, this.getEventStartTime(), EventType.Event, causeId as CauseId, piiSafeData);\r\n        this.pushToRecordedEvents(event);\r\n        return event;\r\n    }\r\n\r\n    public recordOperationSuccess(eventName: string, piiSafeData: any = null, eventId?: string, causeId?: CauseId): void {\r\n        this.logger.info('Event success:', causeId, eventName, pii.Omit(eventId), pii.Omit(piiSafeData));\r\n        this.recordOperationResult(eventName, piiSafeData, true, eventId, causeId);\r\n    }\r\n\r\n    public recordOperationFailure(eventName: string, piiSafeData: any, eventId?: string, causeId?: CauseId): void {\r\n        this.logger.info('Event failure:', eventName, pii.Omit(eventId), piiSafeData);\r\n        this.recordOperationResult(eventName, piiSafeData, false, eventId, causeId);\r\n    }\r\n\r\n    public maybeRecordOperationSuccess(eventName: string, piiSafeData: any = null, eventId?: string, causeId?: CauseId): void {\r\n        if (this.hasOngoingEvent(eventName, eventId)) {\r\n            this.recordOperationSuccess(eventName, piiSafeData, eventId, causeId);\r\n        }\r\n    }\r\n\r\n    public maybeRecordOperationFailure(eventName: string, piiSafeData: any, eventId?: string, causeId?: CauseId): void {\r\n        if (this.hasOngoingEvent(eventName, eventId)) {\r\n            this.recordOperationFailure(eventName, piiSafeData, eventId, causeId);\r\n        }\r\n    }\r\n\r\n    private recordOperationResult(eventName: string, piiSafeData: any, success: boolean, eventId?: string, causeId?: CauseId): void {\r\n        if (!this.hasOngoingEvent(eventName, eventId)) {\r\n            this.recordOperation(eventName, causeId, eventId);\r\n        }\r\n\r\n        let event = this.ongoingOperations[eventName];\r\n        if (eventId) {\r\n            event = event[eventId];\r\n        }\r\n\r\n        if (success) {\r\n            (event as Event).recordSuccess(piiSafeData, causeId);\r\n        } else {\r\n            (event as Event).recordFailure(piiSafeData, causeId);\r\n        }\r\n\r\n        if (eventId) {\r\n            delete this.ongoingOperations[eventName][eventId];\r\n        } else {\r\n            delete this.ongoingOperations[eventName];\r\n        }\r\n    }\r\n\r\n    public recordOperation(eventName: string, causeId: CauseId, eventId?: string): Event {\r\n        this.logger.debug(`Event create: ${eventId}`, eventName, pii.Omit(eventId));\r\n\r\n        const event: Event = new Event(eventName, this.getEventStartTime(), EventType.Operation, causeId);\r\n        this.logger.debug(`Event create: ${getPIISafeObject(this.ongoingOperations)}`);\r\n        if (!this.ongoingOperations[eventName]) {\r\n            this.ongoingOperations[eventName] = {};\r\n        }\r\n        if (eventId) {\r\n            this.ongoingOperations[eventName][eventId] = event;\r\n        } else {\r\n            this.ongoingOperations[eventName] = event;\r\n        }\r\n\r\n        this.pushToRecordedEvents(event);\r\n        return event;\r\n    }\r\n\r\n    /*\r\n     * Set an arbitrary string as variant for an operation. This allows\r\n     * telemetry reports to look at particular variants separately.\r\n     */\r\n    public setOperationVariant(eventName: string, variant: string, eventId?: string): void {\r\n        let event: Event;\r\n        if (eventId) {\r\n            event = this.ongoingOperations[eventName][eventId];\r\n        } else {\r\n            event = this.ongoingOperations[eventName] as Event;\r\n        }\r\n        if (event) {\r\n            event.variant = variant;\r\n        } else {\r\n            this.logger.error(`Could not find operation ${eventName} to set variant ${variant}`);\r\n        }\r\n    }\r\n\r\n    public updateOperationData(eventName: string, piiSafeData: any, causeId: CauseId, eventId?: string): void {\r\n        try {\r\n            if (!this.ongoingOperations[eventName]) {\r\n                this.recordEvent(eventName, piiSafeData, causeId);\r\n                return;\r\n            }\r\n            if (eventId) {\r\n                if (this.ongoingOperations[eventName][eventId]) {\r\n                    (this.ongoingOperations[eventName][eventId] as Event).addData(piiSafeData);\r\n                }\r\n            } else {\r\n                (this.ongoingOperations[eventName] as Event).addData(piiSafeData);\r\n            }\r\n        } catch (e) {\r\n            this.logger.info(`Unable to update operation: ${eventName} data`);\r\n            return;\r\n        }\r\n    }\r\n\r\n    private pushToRecordedEvents(event: Event): void {\r\n        if (this.maxEventsExceeded && this.maxEventsExceeded()) {\r\n            this.recordedEvents.shift();\r\n        }\r\n        this.recordedEvents.push(event);\r\n    }\r\n\r\n    private hasOngoingEvent(eventName: string, eventId: string): boolean {\r\n        if (!this.ongoingOperations[eventName]) {\r\n            this.logger.warn(`Unable to find event for name ${eventName}`);\r\n            return false;\r\n        }\r\n        if (eventId && !this.ongoingOperations[eventName][eventId]) {\r\n            this.logger.warn(`Unable to find event for name\\\\id ${eventName}\\\\${pii.Omit(eventId)}`);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private getEventStartTime() {\r\n        return new Date().getTime() - this.startTime;\r\n    }\r\n\r\n    protected getEventTimestampBag(skipPendingOperations?: boolean) {\r\n        const eventTimestampBag = JSON.stringify({\r\n            eventStart: this.startTime,\r\n            events: this.recordedEvents\r\n                .filter(e => skipPendingOperations ? !e.isPending() : true)\r\n                .map(event => event.getEvent())\r\n        });\r\n        this.logger.info(`Call eventTimestampBag ${pii.Omit(eventTimestampBag)}`);\r\n        return eventTimestampBag;\r\n    }\r\n\r\n}\r\n\r\nexport default class CallTelemetry extends TelemetryUtilities implements ICallTelemetry {\r\n    private currentCallId: string;\r\n    private previousCallId: string;\r\n    private consultativeCallId: string;\r\n    private endpointId: string;\r\n    private participantId: string;\r\n    private origin: CallOrigin;\r\n    private callType: CallType;\r\n    private direction: DIRECTION;\r\n    private selfParticipantRole: SELF_PARTICIPANT_ROLE;\r\n    private isAnonymous: BooleanToString;\r\n    private terminationState: CallState;\r\n    private terminationReason: TerminatedReason;\r\n    private threadId: string;\r\n    private messageId: string;\r\n    private tenantId: string;\r\n    private failureType: FailureType;\r\n    private isCast: BooleanToString;\r\n    private isEmergency: BooleanToString;\r\n    private tsCallingVersion: string;\r\n    private inCallMode = false;\r\n    private stackConfig: StackConfig;\r\n    private callEndDiagnosticInfo: CallEndDiagnosticsInfo;\r\n    private preheatFlags: PreheatFlags;\r\n\r\n    constructor(\r\n        logger: CallingLogger,\r\n        callStartTime: number\r\n    ) {\r\n        super(logger, callStartTime, () => { return this.inCallMode && this.recordedEvents.length > MAX_IN_CALL_EVENTS; });\r\n        this.tsCallingVersion = getTsCallingVersion();\r\n        this.logger = logger.createChild('CallTelemetry');\r\n    }\r\n\r\n    public setCallId(callId: string): void {\r\n        if (this.currentCallId) {\r\n            this.previousCallId = this.currentCallId;\r\n        }\r\n        this.currentCallId = callId;\r\n    }\r\n\r\n    public setConsultativeCallId(consultativeCallId: string) {\r\n        this.consultativeCallId = consultativeCallId;\r\n    }\r\n\r\n    public setEndpointId(endpointId: string) {\r\n        this.endpointId = endpointId;\r\n    }\r\n\r\n    public setParticipantId(participantId: string) {\r\n        this.participantId = participantId;\r\n    }\r\n\r\n    public setPreheatFlags(preheatFlags: PreheatFlags) {\r\n        this.preheatFlags = preheatFlags;\r\n    }\r\n\r\n    public setCallOrigin(origin: CallOrigin) {\r\n        this.origin = origin;\r\n    }\r\n\r\n    public setThreadId(threadId: string) {\r\n        this.threadId = threadId;\r\n    }\r\n\r\n    public setMesageId(messageId: string) {\r\n        this.messageId = messageId;\r\n    }\r\n\r\n    public setTenantId(tenantId: string) {\r\n        this.tenantId = tenantId;\r\n    }\r\n\r\n    public setFailureType(failureType: FailureType) {\r\n        this.failureType = failureType;\r\n    }\r\n\r\n    public setIsCast(isCast: boolean) {\r\n        this.isCast = isCast ? 'True' : 'False';\r\n    }\r\n\r\n    public setIsEmergency(isEmergency: boolean) {\r\n        this.isEmergency = isEmergency ? 'True' : 'False';\r\n    }\r\n\r\n    public setRole(role: ParticipantRosterRole) {\r\n        this.isAnonymous = role === 'admin' ? 'False' : 'True';\r\n    }\r\n\r\n    public setCallType(callType: CallType) {\r\n        this.callType = callType;\r\n    }\r\n\r\n    public setDirection(direction: DIRECTION) {\r\n        this.direction = direction;\r\n    }\r\n\r\n    public setSelfParticipantRole(selfParticipantRole: SELF_PARTICIPANT_ROLE) {\r\n        this.selfParticipantRole = selfParticipantRole;\r\n    }\r\n\r\n    public setTerminationState(terminationState: CallState) {\r\n        this.terminationState = terminationState;\r\n    }\r\n\r\n    public setTerminationReason(terminationReason: TerminatedReason) {\r\n        this.terminationReason = terminationReason;\r\n    }\r\n\r\n    public setCallEndDiagnosticInfo(info: CallEndDiagnosticsInfo): void {\r\n        this.callEndDiagnosticInfo = info;\r\n    }\r\n\r\n    public setStackConfig(config: StackConfig): void {\r\n        this.stackConfig = config;\r\n    }\r\n\r\n    public getEvent(skipPendingOperations?: boolean): ICallTelemetryEvent {\r\n        const getValue = (v: any) => v === undefined ? '' : v;\r\n\r\n        return {\r\n            CorrelationId: getValue(this.currentCallId),\r\n            PreviousCorrelationId: getValue(this.previousCallId),\r\n            ConsultativeCallId: getValue(this.consultativeCallId),\r\n            EndpointId: getValue(this.endpointId),\r\n            ParticipantId: getValue(this.participantId),\r\n            PreheatFlags: getValue(this.preheatFlags),\r\n            CallType: getValue(this.callType),\r\n            Direction: getValue(this.direction),\r\n            Origin: getValue(this.origin),\r\n            SelfParticipantRole: getValue(this.selfParticipantRole),\r\n            IsAnonymous: getValue(this.isAnonymous),\r\n            ThreadId: getValue(this.threadId),\r\n            MessageId: getValue(this.messageId),\r\n            TenantId: getValue(this.tenantId),\r\n            FailureType: getValue(this.failureType),\r\n            IsCast: getValue(this.isCast),\r\n            IsEmergency: getValue(this.isEmergency),\r\n            TsCallingVersion: getValue(this.tsCallingVersion),\r\n            TerminationState: getValue(this.terminationState),\r\n            TerminationReason: getValue(this.terminationReason),\r\n            StackConfig: getValue(this.stackConfig),\r\n            EventTimestampBag: this.getEventTimestampBag(skipPendingOperations),\r\n            HostName: this.getHostName(),\r\n            DiagnosticInfo: this.callEndDiagnosticInfo\r\n        };\r\n    }\r\n\r\n    public switchToInCallTelemetry() {\r\n        this.recordedEvents = this.recordedEvents.filter(e => e.isPending());\r\n        this.inCallMode = true;\r\n    }\r\n\r\n    private getHostName = () => {\r\n        try {\r\n            return location.host;\r\n        } catch (e) {\r\n            return 'unknown';\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const getEndpointInformationForTelemetry = (endpointDetails: { endpointId: string; participantId?: string }[]) => {\r\n    if (!Array.isArray(endpointDetails)) {\r\n        return null;\r\n    }\r\n    return endpointDetails.map(endpoint => {\r\n        return { endpointId: endpoint.endpointId, participantId: endpoint.participantId };\r\n    });\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ../common/ts/callTelemetry.ts","import { CallStartOptions, CauseId, ICall, TerminatedReason } from 'skype-calling-interface';\r\nimport { CALL_OPERATIONS, CALL_OPERATIONS_INTERNAL, CONTENT_SHARING_OPERATIONS, PARTICIPANT_OPERATIONS } from './callConstants';\r\nimport { generateCauseId, validateCauseId } from './causeId';\r\nimport { noop } from './fn';\r\nimport OperationHandler from './operationHandler';\r\n\r\nexport enum OPERATION_TYPE {\r\n    CHAINED = 'Chained',\r\n    SYNC = 'Sync',\r\n    ASYNC = 'Async'\r\n}\r\n\r\nconst OPERATION_ID_INDEX = '_operationIdValue_';\r\nconst CAUSE_ID_INDEX = '_causeIdValue_';\r\nconst CALL_START_OPTIONS_INDEX = '_callStartOptionsValue_';\r\n\r\ntype OperationOptions = {\r\n    type?: OPERATION_TYPE.CHAINED | OPERATION_TYPE.ASYNC;\r\n    waitFor?: CALL_OPERATIONS | CALL_OPERATIONS_INTERNAL | PARTICIPANT_OPERATIONS | CONTENT_SHARING_OPERATIONS;\r\n    singular?: boolean;\r\n    triggerAttach?: boolean;\r\n    operationIdKey?: string;\r\n} | {\r\n    type?: OPERATION_TYPE.SYNC;\r\n    singular?: boolean;\r\n    triggerAttach?: boolean;\r\n    operationIdKey?: string;\r\n};\r\n\r\nexport interface ICallInternal extends ICall {\r\n    _callOperationHandler: OperationHandler;\r\n    _participantOperationHandler: OperationHandler;\r\n    processCallStartOptions(options: CallStartOptions, causeId: CauseId) : void;\r\n}\r\n\r\nenum OPERATION_HANDLER_TYPE {\r\n    CALL,\r\n    PARTICIPANT\r\n}\r\n\r\nexport function callOperation(operationName: string, options?: OperationOptions) {\r\n    return operationDecorator(OPERATION_HANDLER_TYPE.CALL, operationName, options);\r\n}\r\n\r\nexport function participantOperation(operationName: string, options?: OperationOptions) {\r\n    return operationDecorator(OPERATION_HANDLER_TYPE.PARTICIPANT, operationName, options);\r\n}\r\n\r\n/**\r\n * Use this decorator on parameter that will be used as a unique key for operation\r\n */\r\nexport const operationId = (target: any, key: string | symbol, index: number) => {\r\n    if (!target[key][OPERATION_ID_INDEX]) {\r\n        target[key][OPERATION_ID_INDEX] = index;\r\n    } else {\r\n        throw new Error('can not specify more than one operation id');\r\n    }\r\n};\r\n\r\n/**\r\n * Use this decorator on parameter that will be used as a causeId string\r\n * it'll be used in logging and telemetry for current operation\r\n */\r\nexport const causeId = (target: any, key: string | symbol, index: number) => {\r\n    if (!target[key][CAUSE_ID_INDEX]) {\r\n        target[key][CAUSE_ID_INDEX] = index;\r\n    } else {\r\n        throw new Error('can not specify more than one cause id');\r\n    }\r\n};\r\n\r\n/**\r\n * Use this decorator on parameter that will be used for call start options\r\n * it'll be used to process the options\r\n */\r\nexport const callStartOptions = (target: any, key: string | symbol, index: number) => {\r\n    if (!target[key][CALL_START_OPTIONS_INDEX]) {\r\n        target[key][CALL_START_OPTIONS_INDEX] = index;\r\n    } else {\r\n        throw new Error('can not specify options more than once');\r\n    }\r\n};\r\n\r\n/**\r\n * Define decorator factory, that returns method decorator\r\n *  There are 2 decorators exported - @callOperation and @participantOperation\r\n *  both create and handle operations using their own OperationHandlers\r\n *\r\n *  Every method should be identified by unique OPERATION_NAME that is passed as a 1st argument\r\n *  Additionally if operation may be executed in parallel this can be achieved by specifying operation ID\r\n *  An operation ID can be a unique string | number input parameter\r\n *  to define which input parameter will be used as operation id use @operationId decorator\r\n *\r\n *\r\n *  !!! NOTE !!!\r\n *  To use this decorator make sure your class has a private fields:\r\n *  _callOperationHandler - if you're using @callOperation decorator\r\n * _participantOperationHandler - if you're using @participantOperation\r\n *\r\n *\r\n *  example:\r\n *  1) @callOperation('AAA')\r\n *  private methodA(): void\r\n *\r\n *  2) @participantOperation('AAA') // different from above because uses own OperationHandler\r\n *  public anotherMethod(param1: number): void\r\n *\r\n *  example with specifying operationId\r\n *  3) @callOperation('AAA')\r\n *  public thisIsOperationA(@operationId thisIsUniqueKeyForThatOperation: string)\r\n *\r\n *  Assuming that 1/2/3 are async - subsequent call to any of 1/2/3 before they are finished ( fulfilled or rejected )\r\n *  will result in a return of a pending promise returned by previous call\r\n *\r\n *  Decorator can be configured through OPTIONS ( 2nd arg )\r\n *  - type: OPERATION_TYPE ( CHAINED | SYNC | ASYNC )\r\n *   -  CHAINED - will chain all operations called using that decorator ( either callOperation or participantOperation )\r\n *   -  SYNC - will handle operation as if it's synchronous - so it doesn't return pending promise but rather returns result or throws expcetion\r\n *   -  ASYNC - ( default ) - will handle operation as if it's async - it has to return promise, but it will also handle sync exception in execution\r\n *\r\n *  - waitFor: specify a name of another operation that ( if pending ) should finish ( resolve/reject ) before current operation will be executed\r\n *  - TODO validCallState: CallState[] - an array of call states - operation will return rejected promise if call is not in one of the states\r\n *  - TODO invalidCallState: CallState[] - an array of call states - operation will return rejected promise if call is in one of the states\r\n *  - singular: boolean - if true , operation a subsequent call to execute given operation before previous is finished wil result in rejection ( transfer scenarios )\r\n */\r\n\r\n // tslint:disable:no-invalid-this\r\n\r\nconst operationDecorator = (operationHandlerType: OPERATION_HANDLER_TYPE, operationName: string, options?: OperationOptions) => {\r\n    return (target: any, propertyKey: string, descriptor: PropertyDescriptor): any => {\r\n        const originalMethod = descriptor.value;\r\n        const operationIdIndex: number = target[propertyKey] && target[propertyKey][OPERATION_ID_INDEX];\r\n        const causeIdIndex: number = target[propertyKey] && target[propertyKey][CAUSE_ID_INDEX];\r\n        const callStartOptionsIndex: number = target[propertyKey] && target[propertyKey][CALL_START_OPTIONS_INDEX];\r\n        const operationType = (options && options.type) || OPERATION_TYPE.ASYNC;\r\n        descriptor.value = function (...args: any[]) {\r\n            const callInternal = (this as ICallInternal);\r\n\r\n            let operationId = operationIdIndex !== undefined ? args[operationIdIndex] : undefined;\r\n\r\n            if (operationId !== undefined) {\r\n                if (Array.isArray(operationId)) {\r\n                    try {\r\n                        // Build a single string containing a sorted list of array entries.\r\n                        const s = operationId.map(o => o.toString()).sort().concat().toString();\r\n                        operationId = getStringHash(s).toString();\r\n                    } catch {\r\n                        return Promise.reject(TerminatedReason.UnknownError);\r\n                    }\r\n                } else if (operationId && typeof operationId === 'object') {\r\n                    try {\r\n                        let temp = JSON.stringify(operationId);\r\n                        if (options && options.operationIdKey && operationId.hasOwnProperty(options.operationIdKey)) {\r\n                            temp = operationId[options.operationIdKey];\r\n                        }\r\n                        operationId = temp;\r\n                    } catch {\r\n                        return Promise.reject(TerminatedReason.UnknownError);\r\n                    }\r\n                }\r\n            }\r\n\r\n            let causeId = generateCauseId();\r\n            if (causeIdIndex !== undefined) {\r\n                if (args[causeIdIndex] && validateCauseId(args[causeIdIndex])) {\r\n                    causeId = args[causeIdIndex];\r\n                } else {\r\n                    args[causeIdIndex] = causeId;\r\n                }\r\n            }\r\n\r\n            const operationHandler = getOperationHandler(callInternal, operationHandlerType);\r\n            operationHandler.logOperation(causeId, operationName);\r\n\r\n            if (options && !!options.singular) {\r\n                if (operationHandler.hasPendingOperation(operationName)) {\r\n                    operationHandler.logOperation(causeId, operationName, 'Not allowed, pending operation exists');\r\n                    return Promise.reject(TerminatedReason.ActionNotAllowed);\r\n                }\r\n            }\r\n\r\n            try {\r\n                if (callStartOptionsIndex !== undefined && args[callStartOptionsIndex]) {\r\n                    callInternal.processCallStartOptions(args[callStartOptionsIndex], causeId);\r\n                }\r\n            } catch {\r\n                return Promise.reject(TerminatedReason.UnknownError);\r\n            }\r\n\r\n            const execute = () => {\r\n                if (operationType === OPERATION_TYPE.CHAINED) {\r\n                    return operationHandler.executeChained(originalMethod.bind(this, ...args), operationName, operationId, causeId);\r\n                } else if (operationType === OPERATION_TYPE.SYNC) {\r\n                    return operationHandler.executeSync(originalMethod.bind(this, ...args), operationName, operationId, causeId);\r\n                } else {\r\n                    return operationHandler.execute(originalMethod.bind(this, ...args), operationName, operationId, causeId);\r\n                }\r\n            };\r\n\r\n            if (operationName === CALL_OPERATIONS.START_CALL || operationName === CALL_OPERATIONS.JOIN_CALL) {\r\n                if (!operationHandler.hasPendingOperation(CALL_OPERATIONS_INTERNAL.CALL_START_OR_JOIN_INITIATED)) {\r\n                    operationHandler.createPendingOperation(CALL_OPERATIONS_INTERNAL.CALL_START_OR_JOIN_INITIATED).catch(noop);\r\n                }\r\n            }\r\n\r\n            if (options && options.triggerAttach) {\r\n                if (!operationHandler.hasPendingOperation(CALL_OPERATIONS_INTERNAL.ELECTRON_SLIMCORE_READY)) {\r\n                    operationHandler.createPendingOperation(CALL_OPERATIONS_INTERNAL.ELECTRON_SLIMCORE_READY).catch(noop);\r\n                }\r\n            }\r\n\r\n            if (options && options.type !== OPERATION_TYPE.SYNC) {\r\n                const waitFor = options && options.waitFor;\r\n                if (waitFor && operationHandler.hasPendingOperation(waitFor)) {\r\n                    return operationHandler.waitForOperation(waitFor, undefined, causeId).then(execute, execute);\r\n                }\r\n            }\r\n\r\n            return execute();\r\n        };\r\n        return descriptor;\r\n    };\r\n};\r\n\r\nconst getOperationHandler = (iCall: ICallInternal, operationHandlerType: OPERATION_HANDLER_TYPE): OperationHandler => {\r\n    if (operationHandlerType === OPERATION_HANDLER_TYPE.CALL) {\r\n        return iCall._callOperationHandler;\r\n    } else if (operationHandlerType === OPERATION_HANDLER_TYPE.PARTICIPANT) {\r\n        return iCall._participantOperationHandler;\r\n    } else {\r\n        throw new Error('Unsupported operation handler type!');\r\n    }\r\n};\r\n\r\nfunction getStringHash(s: string): number {\r\n    let hash = 0;\r\n    for (let i = 0; i < s.length; i++) {\r\n        const chr = s.charCodeAt(i);\r\n        hash = ((hash << 5) - hash) + chr;\r\n        hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../common/ts/operationDecorators.ts","import { CallingLogger, CauseId } from 'skype-calling-interface';\r\nimport * as piiUtils from '../../common/ts/piiUtils';\r\nimport AsyncOperationHandler from './asyncOperationHandler';\r\nimport { ICallTelemetry } from './callTelemetry';\r\nimport { generateCauseId } from './causeId';\r\nimport ChainedPromise from './chainedPromise';\r\nimport * as stopwatch from './stopwatch';\r\n\r\ntype SyncOperation<T> = () => T;\r\ntype AsyncOperation<T= undefined> = () => Promise<T>; export interface IOperationHandler {\r\n    resetOperationChain(causeId?: CauseId): void;\r\n    executeChained<T>(operation: AsyncOperation<T>, operationName: string, operationId?: string, causeId?: CauseId): Promise<T>;\r\n    executeSync<T>(operation: SyncOperation<T>, operationName: string, operationId?: string, causeId?: CauseId): T;\r\n    execute<T>(operation: AsyncOperation<T>, operationName: string, operationId?: string, causeId?: CauseId): Promise<T>;\r\n    logOperation(causeId: CauseId, operationName: string, ...args: any[]): void;\r\n}\r\n\r\nexport default class OperationHandler extends AsyncOperationHandler implements IOperationHandler {\r\n\r\n    private _chainedPromise: ChainedPromise;\r\n\r\n    constructor(logger: CallingLogger, private callTelemetry: ICallTelemetry) {\r\n        super(logger);\r\n        this._logger = logger.createChild(`[Operation]`);\r\n        this._chainedPromise = new ChainedPromise(this._logger.createChild('[Chained]'));\r\n    }\r\n\r\n    public resetOperationChain(causeId?: CauseId) {\r\n        this._chainedPromise.reset(causeId);\r\n    }\r\n\r\n    public executeSync<T= undefined>(operation: SyncOperation<T>, operationName: string, operationId?: string, causeId = generateCauseId()): T {\r\n        const operationInfo = this.getOperationInfoForLogging(causeId, operationName, operationId);\r\n        const operationStopwatch = stopwatch.build();\r\n        this._logger.info(`${operationInfo}API calledSync`);\r\n\r\n        const telemetryEvent = this.callTelemetry.recordOperation(operationName, causeId, operationId);\r\n\r\n        let operationResult: T;\r\n        try {\r\n            operationResult = operation();\r\n            telemetryEvent.recordSuccess<T>(operationResult, causeId);\r\n            this.logSuccess(operationInfo, operationResult, operationStopwatch);\r\n        } catch (e) {\r\n            telemetryEvent.recordFailure(e, causeId);\r\n            this.logFailure(operationInfo, e, operationStopwatch);\r\n        }\r\n\r\n        return operationResult;\r\n    }\r\n\r\n    public async executeChained<T= undefined>(operation: AsyncOperation<T>, operationName: string, operationId?: string, causeId = generateCauseId()): Promise<T> {\r\n        return this.checkPendingOperationAndExecute(operation, true, operationName, operationId, causeId);\r\n    }\r\n\r\n    public async execute<T= undefined>(operation: AsyncOperation<T>, operationName: string, operationId?: string, causeId = generateCauseId()): Promise<T> {\r\n        return this.checkPendingOperationAndExecute(operation, false, operationName, operationId, causeId);\r\n    }\r\n\r\n    public logOperation(causeId: CauseId, operationName: string, ...args: any[]) {\r\n        const argumentsToLog = args.length && args.map(a => this.stringifyForLogging(piiUtils.scrubMriOrOmit(a)));\r\n        this._logger.info(`[${causeId}][${operationName}]API called, ${argumentsToLog ? `with args=${argumentsToLog}` : ``}`);\r\n    }\r\n\r\n    private checkPendingOperationAndExecute<T= undefined>(operation: AsyncOperation<T>, chained: boolean, operationName: string, operationId?: string, causeId = generateCauseId()): Promise<T> {\r\n        const operationInfo = this.getOperationInfoForLogging(causeId, operationName, operationId);\r\n\r\n        let pendingOperation: Promise<T> = null;\r\n        let asyncOperation: Promise<T> = null;\r\n        if (this.hasPendingOperation(operationName, operationId)) {\r\n            this._logger.info(`${operationInfo}already pending, returning existing operation`);\r\n            pendingOperation = this.waitForOperation<T>(operationName, operationId, causeId);\r\n        } else {\r\n            asyncOperation = this.createPendingOperation(operationName, operationId, causeId);\r\n        }\r\n\r\n        if (chained) {\r\n            this._logger.info(`${operationInfo}chained`);\r\n            return this._chainedPromise.chainPromise<T>(() => {\r\n                return pendingOperation || this.executeInternal<T>(asyncOperation, causeId, operation, operationName, operationId);\r\n            }, operationName, causeId);\r\n        } else {\r\n            return pendingOperation || this.executeInternal<T>(asyncOperation, causeId, operation, operationName, operationId);\r\n        }\r\n\r\n    }\r\n\r\n    private async executeInternal<T= undefined>(asyncOperation: Promise<T>, causeId: CauseId, operation: AsyncOperation<T>, operationName: string, operationId?: string): Promise<T> {\r\n        const operationInfo = this.getOperationInfoForLogging(causeId, operationName, operationId);\r\n        this._logger.info(`${operationInfo} executing operation...`);\r\n        const operationStopwatch = stopwatch.build();\r\n        this.callTelemetry.recordOperation(operationName, causeId, operationId);\r\n        try {\r\n            const operationResult = await operation();\r\n            this.callTelemetry.maybeRecordOperationSuccess(operationName, operationResult, operationId);\r\n            this.logSuccess<T>(operationInfo, operationResult, operationStopwatch);\r\n            this.maybeResolveOperation(operationName, operationResult, operationId, causeId);\r\n        } catch (reason) {\r\n            this.callTelemetry.maybeRecordOperationFailure(operationName, reason, operationId);\r\n            this.logFailure(operationInfo, reason, operationStopwatch);\r\n            this.maybeRejectOperation(operationName, reason, operationId, causeId);\r\n        }\r\n\r\n        return asyncOperation;\r\n    }\r\n\r\n    private logSuccess = <T= undefined>(operationInfo: string, result: T, operationStopwatch: stopwatch.Stopwatch): void => {\r\n        this._logger.info(`${operationInfo} execution succeeded, result=${result ? this.stringifyForLogging(result) : 'void'}, time=${operationStopwatch.duration()}`);\r\n    }\r\n\r\n    private logFailure = (operationInfo: string, e: any, operationStopwatch: stopwatch.Stopwatch): void => {\r\n        this._logger.info(`${operationInfo} execution failed, reason=${this.stringifyForLogging(e)}, time=${operationStopwatch.duration()}`);\r\n    }\r\n\r\n    private stringifyForLogging = (data: any) => {\r\n        let output: any;\r\n\r\n        if (data instanceof Error) {\r\n            output = data.toString() || 'Unknown Error';\r\n\r\n        } else {\r\n            try {\r\n                output = JSON.stringify(data);\r\n            } catch (e) {\r\n                output = 'Unable to stringify data';\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../common/ts/operationHandler.ts","/**\r\n * ChainedPromise.ts\r\n * Author: Richard Speyer\r\n * Copyright: Microsoft 2016\r\n *\r\n * SyncTasks.Defer equivalent for ES6 Promises\r\n *\r\n * This class allows serialization of a set of promises without leaking the\r\n * result of one promise to subsequent ones\r\n */\r\n\r\nimport { CallingLogger } from 'skype-calling-interface';\r\nimport { generateCauseId } from './causeId';\r\n\r\n// The objective of promise chaining is to serialize asynchronous operations, but\r\n// not to cascade errors from one promise to the next. To handle this, we insert\r\n// a catch() that swallows any previous errors before invoking the next promise\r\n//\r\n// This is safe because the error has already been propogated out as a result of\r\n// its originating Promise, and hopefully handled accordingly\r\nexport default class ChainedPromise {\r\n    private _promise = Promise.resolve<any>(undefined);\r\n    private _actionQueue: string[] = [];\r\n\r\n    constructor(private _logger: CallingLogger) { }\r\n\r\n    public chainPromise<T>(promise: () => Promise<T>,\r\n            action: string | (() => string),\r\n            causeId = generateCauseId(),\r\n            reset = false): Promise<T> {\r\n        const startTime = Date.now();\r\n        const actionMsg = ((typeof action === 'function' ? action() : action) || '').toString();\r\n        this._actionQueue.push(actionMsg);\r\n        this._logger.info(`[${causeId}][${actionMsg}]enqueueing, queue=[${this._actionQueue}], reset=${reset}`);\r\n\r\n        const removeFromQueue = () => {\r\n            this._actionQueue = this._actionQueue.filter(a => a !== actionMsg);\r\n        };\r\n        if (reset) {\r\n            this.reset(causeId);\r\n        }\r\n\r\n        this._promise = this._promise\r\n        .catch(() => {\r\n            return undefined;\r\n        })\r\n        .then(() => {\r\n            const delayMs = Date.now() - startTime;\r\n            this._logger.info(`[${causeId}][${actionMsg}]begin, delayMs=${delayMs}`);\r\n            return promise();\r\n        });\r\n\r\n        // Intentionally separate so we pass up a promise that still rejects\r\n        this._promise.then(() => {\r\n            removeFromQueue();\r\n            const durationMs = Date.now() - startTime;\r\n            this._logger.info(`[${causeId}][${actionMsg}]success, durationMs=${durationMs}`);\r\n        }, error => {\r\n            removeFromQueue();\r\n            const durationMs = Date.now() - startTime;\r\n            this._logger.warn(`[${causeId}][${actionMsg}]failed=${error}, drationMs=${durationMs}`);\r\n        });\r\n\r\n        return this._promise;\r\n    }\r\n\r\n    public reset(causeId?: string): void {\r\n        this._logger.info(`[${causeId}] resetting`);\r\n        this._promise = Promise.resolve<any>(undefined);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../common/ts/chainedPromise.ts","import * as _ from 'lodash';\r\n\r\nimport { CallParticipantStreamMap, ICallParticipantStream, StreamType } from 'skype-calling-interface';\r\n\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\nimport SlimCoreElectronBase from './SlimCoreElectronBase';\r\nimport SlimCoreElectronRemoteStream, { SlimCoreElectronRemoteStreamContext } from './SlimCoreElectronRemoteStream';\r\n\r\n// From electron/typings/slimcore-enums.d.ts:\r\nimport Enums = SlimCore.Enums;\r\nimport { noop } from '../../common/ts/fn';\r\nimport { IInternalLogger } from '../../common/ts/internalLogger';\r\n\r\n// Manages remote streams for a participant and manages the roster state for creation/removal\r\n// Needs to be created per participant\r\nexport default class SlimCoreElectronRemoteStreamManager extends SlimCoreElectronBase<{}> {\r\n    private _onVideoCountChangedDefer: number;\r\n\r\n    public constructor(\r\n        logger: IInternalLogger,\r\n        settings: SlimCoreCommon.Settings,\r\n        engine: SlimCoreCommon.Engine,\r\n        private _callHandler: SlimCoreCommon.CallHandler,\r\n        private readonly _slimcoreParticipantObjectId: number,\r\n        private _streams: CallParticipantStreamMap,\r\n        private _streamContextMap: {[type: number]: SlimCoreElectronRemoteStreamContext},\r\n        isObserving: boolean = false\r\n    ) {\r\n        super(logger.createChild(() => `SlimCoreElectronRemoteStreamManager[${this._slimcoreParticipantObjectId}]`), settings, engine);\r\n        this._logger.info('constructor');\r\n\r\n        if (!SlimCoreCommon.hasFeature(Enums.Feature.RemoteVideosCountChanged)) {\r\n            // keeping it for legacy backward compat\r\n            this._registerDisposable(this._slimcoreInstance.handle(\r\n                'object-property-changed',\r\n                { objectId: this._slimcoreParticipantObjectId, propKey: Enums.Property.ParticipantVideoCountChanged },\r\n                data => this._onVideoCountChangedDeferred()));\r\n        }\r\n\r\n        this._registerDisposable(this._callHandler.handle(\r\n            'remote-videos-count-changed',\r\n            { participantObjectId: this._slimcoreParticipantObjectId },\r\n            data => this._onVideoCountChangedDeferred()));\r\n\r\n        if (!isObserving) {\r\n            this._onVideoCountChangedDeferred();\r\n        }\r\n    }\r\n\r\n    private _onVideoCountChangedDeferred(): void {\r\n        if (!this._onVideoCountChangedDefer) {\r\n            this._onVideoCountChangedDefer = _.defer(() => {\r\n                delete this._onVideoCountChangedDefer;\r\n                this._onVideoCountChanged();\r\n            });\r\n        }\r\n    }\r\n\r\n    private _onVideoCountChanged() {\r\n        const videoObjectIds: number[] = this._callHandler.callGetParticipantVideos(this._slimcoreParticipantObjectId);\r\n        if (!videoObjectIds) { return; }\r\n\r\n        const videoObjectsByType: { [type: number]: SlimCoreCommon.IVideoObjectChangedEventData[] } = {};\r\n        videoObjectsByType[Enums.VideoType.Video] = [];\r\n        videoObjectsByType[Enums.VideoType.ScreenShare] = [];\r\n\r\n        videoObjectIds.forEach(videoObjectId => {\r\n            const mediaType = this._getIntProperty(this._callHandler, videoObjectId, Enums.Property.VideoType);\r\n            const mediaStatus = this._getIntProperty(this._callHandler, videoObjectId, Enums.Property.VideoStatus);\r\n\r\n            // Ignore Augmented for now\r\n            if (mediaType === Enums.VideoType.Augmented) { return; }\r\n\r\n            videoObjectsByType[mediaType].push({\r\n                videoObjectId,\r\n                videoType: mediaType,\r\n                videoStatus: mediaStatus\r\n            });\r\n        });\r\n\r\n        this._handleVideoCountChanged(Enums.VideoType.Video, videoObjectsByType[Enums.VideoType.Video]);\r\n        this._handleVideoCountChanged(Enums.VideoType.ScreenShare, videoObjectsByType[Enums.VideoType.ScreenShare]);\r\n        this.raiseChanged();\r\n    }\r\n\r\n    // VIDEO streams OPERATIONS\r\n    private _handleVideoCountChanged(videoType: Enums.VideoType, videoObjects: SlimCoreCommon.IVideoObjectChangedEventData[]) {\r\n        const streamType = SlimCoreElectronRemoteStreamManager.SlimcoreVideoTypeToStreamType(videoType);\r\n        const streamsOfType = this._streams[streamType];\r\n        const removals = _.filter(streamsOfType, s => !_.some(videoObjects, v => v.videoObjectId === s.id));\r\n\r\n        _.each(removals, stream => {\r\n            this._logger.info(`_handleVideoCountChanged: removing stream ${stream.id} (stream type: ${streamType})`);\r\n            _.remove(streamsOfType, stream);\r\n            stream.dispose();\r\n        });\r\n\r\n        // create objects for the _streams that exist in slimcore\r\n        _.each(videoObjects, video => {\r\n            if (!_.some(streamsOfType, s => s.id === video.videoObjectId)) {\r\n                this._logger.info(`_handleVideoCountChanged: adding stream ${video.videoObjectId} (stream type: ${streamType})`);\r\n                const newStream = new SlimCoreElectronRemoteStream(\r\n                    this._logger,\r\n                    this._settings,\r\n                    this._slimcoreInstance,\r\n                    this._slimcoreParticipantObjectId,\r\n                    video.videoObjectId,\r\n                    streamType,\r\n                    this._callHandler,\r\n                    this._streamContextMap[streamType]\r\n                );\r\n                this._streams[streamType].push(newStream);\r\n                newStream.changed(() => this.raiseChanged());\r\n            }\r\n        });\r\n    }\r\n\r\n    public stopVideos(): Promise<void> {\r\n        this._logger.info('stopVideos');\r\n        const disposeStream = (stream: ICallParticipantStream): Promise<void> => {\r\n            return (stream as SlimCoreElectronRemoteStream).disposeInternal();\r\n        };\r\n        return Promise.all(_.flatMap(_.values(this._streams), streams => _.map(streams, disposeStream))).then(noop);\r\n    }\r\n\r\n    public dispose(): void {\r\n        this._logger.info('dispose');\r\n        _.each(_.values(this._streams), _streams => _.each(_streams, s => s.dispose()));\r\n        this._streams[StreamType.Video] = [];\r\n        this._streams[StreamType.ScreenSharing] = [];\r\n        super.dispose();\r\n    }\r\n\r\n    private static SlimcoreVideoTypeToStreamType(videoType: Enums.VideoType): StreamType {\r\n        switch (videoType) {\r\n            case Enums.VideoType.ScreenShare:\r\n                return StreamType.ScreenSharing;\r\n            case Enums.VideoType.Video:\r\n                return StreamType.Video;\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronRemoteStreamManager.ts","/// <reference path=\"../typings/slimcore-enums.d.ts\" />\r\n\r\nimport {\r\n    CallingLogger, CauseId, ICallParticipantStream, IRenderer, IRenderTarget, StartStreamOptions, StreamType\r\n} from 'skype-calling-interface';\r\n\r\nimport * as async from '../../common/ts/async';\r\nimport { generateCauseId } from '../../common/ts/causeId';\r\nimport ChainedPromise from '../../common/ts/chainedPromise';\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\nimport SlimCoreElectronBase from './SlimCoreElectronBase';\r\nimport SlimCoreElectronRemoteVideoRenderer, { SlimCoreElectronRemoteVideoRendererTracker } from './SlimCoreElectronRemoteVideoRenderer';\r\n\r\n// From electron/typings/slimcore-enums.d.ts:\r\nimport Enums = SlimCore.Enums;\r\nimport { IInternalLogger } from '../../common/ts/internalLogger';\r\nexport class SlimCoreElectronRemoteStreamContext {\r\n    public nrRunningStreams = 0;\r\n    public videoStoppedEvent = new SlimCoreCommon.VideoStateCancelEvent();\r\n    public constructor(logger: CallingLogger) { } // tslint:disable-line:no-empty\r\n}\r\n\r\nlet NEXT_RANK = 0;\r\n\r\nexport default class SlimCoreElectronRemoteStream extends SlimCoreElectronBase<{}> implements ICallParticipantStream, SlimCoreElectronRemoteVideoRendererTracker {\r\n    public rank: number;\r\n    public endpointId: string;\r\n    public participantId: string;\r\n    public negotiationTag: string;\r\n\r\n    private _remoteVideoId = 0;\r\n    private _videoStatus: Enums.VideoStatus = Enums.VideoStatus.None;\r\n    private _videoBinding: SlimCore.VideoBindingRenderer;\r\n\r\n    private _mediaType: Enums.VideoType;\r\n    private _stateCancelEvent = new SlimCoreCommon.VideoStateCancelEvent();\r\n    private _shouldRun = false;\r\n    private _isDisposed = false;\r\n    private _nrRenderers = 0;\r\n    private _nrOngoingStreamStarts = 0;\r\n    private _msi = 0;\r\n    private _chainedApiPromise: ChainedPromise;\r\n\r\n    public constructor(\r\n        logger: IInternalLogger,\r\n        settings: SlimCoreCommon.Settings,\r\n        engine: SlimCoreCommon.Engine,\r\n        private readonly _participantId: number,\r\n        public id: number,\r\n        public type: StreamType,\r\n        private _callHandler: SlimCoreCommon.CallHandler,\r\n        private _context: SlimCoreElectronRemoteStreamContext\r\n    ) {\r\n        super(logger.createChild(() => `RemoteStream(${this._context.nrRunningStreams})[${this._remoteVideoId}:${this.rank}:${this._mediaType}:${this._videoStatus}]`), settings, engine);\r\n        this._chainedApiPromise = new ChainedPromise(logger.createChild(() => `RemoteStreamChain(${this._context.nrRunningStreams})`));\r\n        this._remoteVideoId = id;\r\n        this.rank = NEXT_RANK++;\r\n\r\n        const props = this._getProperties(this._callHandler, this._remoteVideoId, {\r\n            endpointId: { propKey: Enums.Property.VideoEndpointId },\r\n            participantId: { propKey: Enums.Property.VideoParticipantLegId },\r\n            negotiationTag: { propKey: Enums.Property.VideoNegotiationTag }\r\n        }, {\r\n            mediaType: { propKey: Enums.Property.VideoType },\r\n            videoStatus: { propKey: Enums.Property.VideoStatus },\r\n            msi: { propKey: Enums.Property.VideoRank }\r\n        });\r\n\r\n        this._mediaType = props.mediaType;\r\n        this._videoStatus = props.videoStatus;\r\n        const causeId = generateCauseId();\r\n        this._logger.info(`constructor causeId: ${causeId}`);\r\n\r\n        // Subscribe to object changes\r\n        this._onVideoObjectPropertyChanged(Enums.Property.VideoStatus, data => this._onVideoObjectStateChanged(causeId));\r\n        this._onVideoObjectPropertyChanged(Enums.Property.VideoNegotiationTag, data => this._onVideoNegotiationTagChanged(data.value as string));\r\n\r\n        this.endpointId = props.endpointId;\r\n        this.participantId = props.participantId;\r\n        this._msi = props.msi;\r\n        this.negotiationTag = props.negotiationTag;\r\n    }\r\n\r\n    public getDiagnosticData(): string {\r\n        return JSON.stringify({\r\n            id: this.id,\r\n            rank: this.rank,\r\n            type: this.type,\r\n            isAvailable: this.isAvailable,\r\n            isStreaming: this.isStreaming,\r\n            negotiationTag: this.negotiationTag,\r\n            video_status: this._videoStatus,\r\n            msi: this._msi,\r\n            shouldRun: this._shouldRun,\r\n            nrRenderers: this._nrRenderers,\r\n            isDisposed: this._isDisposed\r\n        });\r\n    }\r\n\r\n    public get isAvailable(): boolean {\r\n        return SlimCoreCommon.isVideoAvailable(this._videoStatus);\r\n    }\r\n\r\n    public get isStreaming(): boolean {\r\n        return this._videoStatus === Enums.VideoStatus.Running;\r\n    }\r\n\r\n    public isActive(): boolean {\r\n        return this.isAvailable && this.isStreaming;\r\n    }\r\n\r\n    public async start(target: IRenderTarget, options?: StartStreamOptions): Promise<IRenderer> {\r\n        const startTime = Date.now();\r\n        let waitForAvailableDoneTime = startTime;\r\n        let startVideoDoneTime = startTime;\r\n        const causeId = generateCauseId();\r\n        this._shouldRun = true;\r\n        this._nrOngoingStreamStarts++;\r\n        this._logger.info(`start causeId: ${causeId}`);\r\n        try {\r\n            await SlimCoreCommon.waitForVideoObjectToBeAvailable(this._slimcoreInstance, this._callHandler, this._remoteVideoId, this._logger, 0, this._stateCancelEvent);\r\n            waitForAvailableDoneTime = Date.now();\r\n            const renderer = await this._chainedApiPromise.chainPromise(() => this._startVideo(causeId, target, options), this._chainActionFn('start'), causeId);\r\n            startVideoDoneTime = Date.now();\r\n            try {\r\n                this._throwIfDisposed(causeId, 'disposed while in start');\r\n                await SlimCoreCommon.waitForVideoObjectToBeRunning(this._slimcoreInstance, this._callHandler, this._remoteVideoId, this._logger, 0, this._stateCancelEvent);\r\n                this._updateVideoStatus(causeId);\r\n                const endTime = Date.now();\r\n                this._logger.info(`start causeId: ${causeId} successful. duration: ${endTime - startTime} (${waitForAvailableDoneTime - startTime}+${startVideoDoneTime - waitForAvailableDoneTime}+${endTime - startVideoDoneTime})`);\r\n                return renderer;\r\n            } catch (error) {\r\n                renderer.dispose();\r\n                throw error;\r\n            }\r\n        } catch (error) {\r\n            const endTime = Date.now();\r\n            this._logger.warn(`start causeId: ${causeId} failed. duration: ${endTime - startTime} (${waitForAvailableDoneTime - startTime}+${startVideoDoneTime - waitForAvailableDoneTime}+${endTime - startVideoDoneTime}) error: ${error}`);\r\n            throw error;\r\n        } finally {\r\n            this._nrOngoingStreamStarts--;\r\n        }\r\n    }\r\n\r\n    public async stop(): Promise<void> {\r\n        const causeId = generateCauseId();\r\n        await this._stopWithCauseId(this._chainActionFn('stop'), causeId);\r\n    }\r\n\r\n    public dispose(): void {\r\n        const causeId = generateCauseId();\r\n        this._disposeWithCauseId(this._chainActionFn('dispose'), causeId);\r\n    }\r\n\r\n    public async disposeInternal(): Promise<void> {\r\n        const causeId = generateCauseId();\r\n        await this._disposeWithCauseId(this._chainActionFn('disposeInternal'), causeId);\r\n    }\r\n\r\n    private async _stopWithCauseId(action: () => string, causeId: CauseId): Promise<void> {\r\n        this._shouldRun = false;\r\n        this._stateCancelEvent.fire(); // make all waits that happen during start to get rejected, this does not guarantee that previous start can not complete after stop was called\r\n        await this._chainedApiPromise.chainPromise(() => this._stopVideo(causeId, false), action, causeId);\r\n    }\r\n\r\n    public registerRenderer(object: SlimCoreElectronRemoteVideoRenderer): void {\r\n        this._nrRenderers++;\r\n    }\r\n\r\n    public unregisterRenderer(object: SlimCoreElectronRemoteVideoRenderer): void {\r\n        if (--this._nrRenderers === 0 && this._nrOngoingStreamStarts === 0) {\r\n            const causeId = generateCauseId();\r\n            this._stopWithCauseId(this._chainActionFn('renderers disposed'), causeId);\r\n        }\r\n    }\r\n\r\n    private _chainActionFn(action: string): () => string {\r\n        return () => `${action} [${this._participantId}:${this._remoteVideoId}:${this.rank}:${this._mediaType}:${this._videoStatus}]`;\r\n    }\r\n\r\n    private _isVideoStatusInStopping() : boolean {\r\n        return this._videoStatus === Enums.VideoStatus.Stopping;\r\n    }\r\n\r\n    private _updateVideoStatus(causeId: CauseId): void {\r\n        const videoStatus = this._getIntProperty(this._callHandler, this._remoteVideoId, Enums.Property.VideoStatus);\r\n        if (this._videoStatus !== videoStatus) {\r\n            this._logger.info(`VideoStateChanged: causeId: ${causeId} status: ${this._videoStatus} -> ${videoStatus}`);\r\n            this._videoStatus = videoStatus;\r\n            if (this._isVideoStatusInStopping()) {\r\n                this._videoWasStopped(causeId);\r\n            }\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private async _disposeWithCauseId(action: () => string, causeId: CauseId): Promise<void> {\r\n        this._isDisposed = true;\r\n        this._shouldRun = false;\r\n        this._stateCancelEvent.fire();\r\n        await this._chainedApiPromise.chainPromise(() => this._dispose(causeId), action, causeId);\r\n    }\r\n\r\n    private _onVideoObjectPropertyChanged(propKey: Enums.Property, listener: SlimCore.EventHandler<SlimCore.Engine.Events.ObjectPropertyChangedArgs>) {\r\n        this._onObjectPropertyChanged(this.id, propKey, listener);\r\n    }\r\n\r\n    private _onVideoObjectStateChanged(causeId: CauseId): void {\r\n        // video object status change callback is called with delay to the actual property changes, thus we will not use the status change value from the event but rather poll current value\r\n        // with this we can and will miss transitional states but we never get states from the past\r\n        this._updateVideoStatus(causeId);\r\n    }\r\n\r\n    private _onVideoNegotiationTagChanged(value: string): void {\r\n        if (this.negotiationTag !== value) {\r\n            this.negotiationTag = value;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _videoWasStopped(causeId: CauseId): void {\r\n        // we might get here because of stopping, currently we don't know if video was stopped by remote endpoint or because UI called stop this is indistinguishable\r\n        // on any case Stopping can only be taken from Starting or from Running\r\n        // note we do not fire cancel event and will not set _shouldRun to false like _stopWithCauseId does because we do not want to interrupt ongoing start that happened after proper stop as this event could be fired with delay\r\n        this._stopWithCauseId(this._chainActionFn('discovered video stopped'), causeId);\r\n    }\r\n\r\n    private _isRunning(): boolean {\r\n        return !!this._videoBinding;\r\n    }\r\n\r\n    private async _stopVideo(causeId: CauseId, force: boolean): Promise<void> {\r\n        //video status ends up stuck in stopping if remote endpoint stops sending video\r\n        if ((!this._shouldRun || force || this._isVideoStatusInStopping()) && this._isRunning()) {\r\n            this._logger.info(`_stopVideo causeId: ${causeId} force: ${force} will stop remote video now`);\r\n            this._slimcoreInstance.videoStop(this._remoteVideoId); // stop video before releasing binding to avoid #275535\r\n            // slimcore does not require that videoStop is called, it would call it itself when all bindings are released, but there is race in slimcore that on some circumstances when one remote video would internally stop the video sink\r\n            // and then immediately let the sink go and if then some other remote video comes and starts consuming the same sink fast enougth by starting sink then the sink stop completion event from previous remote video\r\n            // can land in new remote video and trigger there remote video STOPPING state transition, although it will need to go to RUNNING from STARTING...\r\n            await SlimCoreCommon.forgetAndLog(this._slimcoreInstance.videoReleaseBinding(this._remoteVideoId, this._videoBinding), this._logger, `_stopVideo causeId: ${causeId} videoReleaseBinding on remote video failed`);\r\n            this._videoBinding = null;\r\n            await SlimCoreCommon.waitForVideoObjectToBeStopped(this._slimcoreInstance, this._callHandler, this._remoteVideoId, this._logger);\r\n            this._context.nrRunningStreams--;\r\n            this._logger.info(`_stopVideo causeId: ${causeId} force: ${force} remote video is stopped`);\r\n            // note video Stop does change video status synchronously, otherwise we would need to wait until video status goes away from Running\r\n            // It is possible that the current _videoStatus is not updated yet, due to _onVideoObjectStateChanged is not invoked yet.\r\n            // In this case, if we resovle it right away, and check this.isActive(), it can still return true.\r\n            // Set the current video status here to avoid this.\r\n            this._updateVideoStatus(causeId);\r\n            this._context.videoStoppedEvent.fire(); // notify about video sink back available so that sink acquisition can from now on happen again\r\n        } else {\r\n            this._logger.info(`_stopVideo causeId: ${causeId} noop, force: ${force} should run: ${this._shouldRun} is running: ${this._isRunning()} already disposed: ${this._isDisposed}`);\r\n        }\r\n    }\r\n\r\n    private async _startVideo(causeId: CauseId, target: IRenderTarget, options?: StartStreamOptions): Promise<SlimCoreElectronRemoteVideoRenderer> {\r\n        const videoWasJustStarted = await this._getStartedVideo(causeId);\r\n        try {\r\n            // It is possible that the current _videoStatus is not set to Running, due to _onVideoObjectStateChanged is\r\n            // not invoked yet.\r\n            // In this case, if we resovle it right away, and check this.isActive(), it can still return false.\r\n            // Set the current video status here to avoid this.\r\n            this._updateVideoStatus(causeId);\r\n            this._logger.info(`_startVideo causeId: ${causeId} create renderer`);\r\n            return new SlimCoreElectronRemoteVideoRenderer(\r\n                this._logger,\r\n                this._settings,\r\n                null,\r\n                target,\r\n                this._mediaType,\r\n                this._videoBinding,\r\n                options,\r\n                this);\r\n        } catch (error) {\r\n            if (videoWasJustStarted) {\r\n                await SlimCoreCommon.forgetAndLog(this._stopVideo(causeId, true), this._logger, `_startVideo causeId: ${causeId} stopping remote video failed while got error while starting video`);\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    private async _dispose(causeId: CauseId): Promise<void> {\r\n        try {\r\n            await SlimCoreCommon.forgetAndLog(this._stopVideo(causeId, true), this._logger, `_dispose causeId: ${causeId} stopping remote video failed`);\r\n        } finally {\r\n            super.dispose();\r\n        }\r\n    }\r\n\r\n    private async _getStartedVideo(causeId: string): Promise<boolean> {\r\n        this._throwIfDisposed(causeId, 'disposed while in _getStartedVideo');\r\n        if (!this._shouldRun) {\r\n            throw new Error(`_getStartedVideo causeId: ${causeId} failing, should not run any more`);\r\n        }\r\n        if (!this._isRunning()) {\r\n            this._logger.info(`_getStartedVideo causeId: ${causeId} will start remote video now`);\r\n            const videoBinding = this._createVideoBindingRenderer(causeId);\r\n            this._slimcoreInstance.videoStart(this._remoteVideoId);\r\n            if (this._settings.enableRemoteStreamVideoBindingRetry) {\r\n                await this._videoCreateBinding(causeId, this._remoteVideoId, videoBinding);\r\n            } else {\r\n                await this._slimcoreInstance.videoCreateBinding(this._remoteVideoId, videoBinding);\r\n            }\r\n            this._context.nrRunningStreams++;\r\n            this._videoBinding = videoBinding;\r\n            this._logger.info(`_getStartedVideo causeId: ${causeId} remote video is started`);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private _throwIfDisposed(causeId: string, reason: string): void {\r\n        if (this._isDisposed) {\r\n            throw new Error(`_throwIfDisposed causeId: ${causeId} reason: ${reason}`);\r\n        }\r\n    }\r\n\r\n    private _createVideoBindingRenderer(causeId: string): SlimCore.VideoBindingRenderer {\r\n        // use new method if available\r\n        if (this._slimcoreInstance.createVideoBindingRenderer) {\r\n            this._logger.info(`_createVideoBindingRenderer causeId: ${causeId} createVideoBindingRenderer`);\r\n            return this._slimcoreInstance.createVideoBindingRenderer({\r\n                enableDXVA: this._settings.enableDXVA,\r\n                isLocalPreview: false\r\n            });\r\n        } else { // use old method for backwards compatibility\r\n            this._logger.info(`_createVideoBindingRenderer causeId: ${causeId} old createVideoBindingRenderer`);\r\n            return SlimCore.createVideoBindingRenderer();\r\n        }\r\n    }\r\n\r\n    private async _videoCreateBinding(causeId: string, videoObjectId: SlimCore.ObjectId, videoBinding: SlimCore.VideoBinding): Promise<void> {\r\n        // HACK: we don't know exactly how many remote videos (video sinks) can be runnning simultanously, thus when we have consumed all available sinks, then stopping one video and starting\r\n        // immediately another one could end up with SinkAcquisitionFailed error. We could add global synchronization but that would add penalty to all remote stream starts and stops as those starts and stops can happen in parallel\r\n        // until all sinks are consumed\r\n        const CREATE_BINDING_RETRY_COUNTER = 10;\r\n        const CREATE_BINDING_RETRY_DELAY_MS = 200;\r\n        // one cancel subsciption per create binding. This is for case when ui decides to stop stream while create binding tries to complete. On such case we can cancel (Reject promise) inbetween the retry\r\n        const stateCancelRejectionDeferred = async.defer<void>();\r\n        const stateCancelSub = this._stateCancelEvent.subscribe(() => {\r\n            // we could get state cancel event after binding was created, on such case _videoCreateBinding function must resolve successfully (or binding would not get released later)\r\n            stateCancelRejectionDeferred.reject(new Error(`_videoCreateBinding causeId: ${causeId} stateCancelEvent got signalled`));\r\n        });\r\n        let videoStoppedDeferred = async.defer<void>();\r\n        // to reduce number of subscriptions subscribe only once for video stopped event\r\n        const videoStoppedSub = this._context.videoStoppedEvent.subscribe(() => {\r\n            this._logger.info(`_videoCreateBinding causeId: ${causeId} one of the videos was stopped will wake up for binding retry`);\r\n            videoStoppedDeferred.resolve();\r\n        });\r\n        try {\r\n            const tryCreateBinding: (retryCount: number) => Promise<void> = async (retryCount: number) => {\r\n                // preconditions to create binding, we want to retry only for sink SinkAcquisitionFailed, but binding could also fail because of remote video not being in correct state\r\n                // throw if disposed is redundant but would bring us out sooner (otherwise _stateCancelEvent would fail after we do retry)\r\n                this._throwIfDisposed(causeId, `disposed while in _videoCreateBinding on retry attempt: ${retryCount}`);\r\n                if (!SlimCoreCommon.isVideoAvailable(this._videoStatus)) {\r\n                    throw new Error(`_videoCreateBinding causeId: ${causeId} video not available any more on retry attempt: ${retryCount}`);\r\n                }\r\n                const videoStoppedAlready = videoStoppedDeferred.promise;\r\n                videoStoppedDeferred = async.defer<void>(); // for next retry use new deferred, we also memorized if we got event already otherwise our deferred promise gets saturated and would not trigger new retry after doing it once\r\n                // with current implementation of videoStoppedAlready there is side effect where after first try, if wait race is won by videoStoppedDeferred then next race cycle would not wait but complete immediately because of videoStoppedAready\r\n                // gets assigned from resolved promise (from previously resolved videoStoppedDeferred). But we can survive this because we do not want to miss videoStoppedDeferred events and that could happen if we reset videoStoppedDeferred\r\n                // after promise race. I.e. consider case where async.delay would complete just before videoStoppedDeferred, then if we would reset videoStoppedDeferred in the then of promise race we would effectively miss one stopped event and wait for timeout\r\n                this._logger.info(`_videoCreateBinding causeId: ${causeId} try to create video binding from slimcore on retry attempt: ${retryCount}`);\r\n                try {\r\n                    await this._slimcoreInstance.videoCreateBinding(videoObjectId, videoBinding);\r\n                } catch (error) {\r\n                    // retry preconditions\r\n                    if (!(retryCount < CREATE_BINDING_RETRY_COUNTER)) {\r\n                        throw new Error(`_videoCreateBinding causeId: ${causeId} retry attempt: ${retryCount} exceed`);\r\n                    }\r\n                    await Promise.race([videoStoppedAlready, videoStoppedDeferred.promise, stateCancelRejectionDeferred.promise, async.delay(CREATE_BINDING_RETRY_DELAY_MS)]);\r\n                    await tryCreateBinding(retryCount + 1);\r\n                }\r\n            };\r\n            await tryCreateBinding(1);\r\n        } finally {\r\n            stateCancelSub.dispose();\r\n            videoStoppedSub.dispose();\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronRemoteStream.ts","import {\r\n    ParticipantStateReason, VideoEffectType\r\n} from 'skype-calling-interface';\r\n\r\nimport Enums = SlimCore.Enums;\r\n\r\nexport function convertVideoEffectType(value: VideoEffectType): Enums.VideoEffectType {\r\n    switch (value) {\r\n        case VideoEffectType.Off:\r\n            return Enums.VideoEffectType.Off;\r\n        case VideoEffectType.BackgroundBlurDefault:\r\n            return Enums.VideoEffectType.BackgroundBlurDefault;\r\n        case VideoEffectType.BackgroundBlurLight:\r\n            return Enums.VideoEffectType.BackgroundBlurLight;\r\n        case VideoEffectType.BackgroundBlurExperimental_1:\r\n            return Enums.VideoEffectType.BackgroundBlurExperimental_1;\r\n        case VideoEffectType.BackgroundBlurExperimental_2:\r\n            return Enums.VideoEffectType.BackgroundBlurExperimental_2;\r\n        case VideoEffectType.BackgroundReplacement:\r\n            return Enums.VideoEffectType.BackgroundReplacement;\r\n        case VideoEffectType.WhiteboardZoom:\r\n            return Enums.VideoEffectType.WhiteboardZoom;\r\n        case VideoEffectType.WhiteboardCleanup:\r\n            return Enums.VideoEffectType.WhiteboardCleanup;\r\n        case VideoEffectType.WhiteboardZoomAndCleanup:\r\n            return Enums.VideoEffectType.WhiteboardZoomAndCleanup;\r\n        default:\r\n            return Enums.VideoEffectType.Off;\r\n    }\r\n}\r\n\r\nexport function convertStatusAndFailureReasonToParticipantReason(status: Enums.CallStatus, reason: Enums.ParticipantFailureReason): ParticipantStateReason {\r\n    switch (status) {\r\n        case Enums.CallStatus.Busy:\r\n            return ParticipantStateReason.Busy;\r\n        case Enums.CallStatus.CallTimedOut:\r\n            return ParticipantStateReason.NetworkError;\r\n        case Enums.CallStatus.Cancelled:\r\n            return ParticipantStateReason.Cancelled;\r\n        case Enums.CallStatus.Dropped:\r\n            return ParticipantStateReason.MediaDroppedError;\r\n        case Enums.CallStatus.Refused:\r\n            return ParticipantStateReason.Declined;\r\n        case Enums.CallStatus.Missed:\r\n            return ParticipantStateReason.NoResponse;\r\n        case Enums.CallStatus.Failed:\r\n            return convertFailureReasonToParticipantReason(reason);\r\n        default:\r\n            return ParticipantStateReason.None;\r\n\r\n    }\r\n}\r\n\r\nexport function convertFailureReasonToParticipantReason(reason: Enums.ParticipantFailureReason): ParticipantStateReason {\r\n    switch (reason) {\r\n        case Enums.ParticipantFailureReason.NoFailure:\r\n        case Enums.ParticipantFailureReason.HostEndedConf:\r\n        case Enums.ParticipantFailureReason.AnsweredElsewhere:\r\n            return ParticipantStateReason.None;\r\n        case Enums.ParticipantFailureReason.RecipientUserNotFound:\r\n        case Enums.ParticipantFailureReason.RecipientNotOnline:\r\n        case Enums.ParticipantFailureReason.PstnCouldNotConnectToSkypeProxy:\r\n        case Enums.ParticipantFailureReason.CallNotificationDeliveryFailure:\r\n            return ParticipantStateReason.NotReachable;\r\n        case Enums.ParticipantFailureReason.RecipientBlocked:\r\n            return ParticipantStateReason.Blocked;\r\n        case Enums.ParticipantFailureReason.CallerNotFriend:\r\n        case Enums.ParticipantFailureReason.CallerNotAuthorized:\r\n            return ParticipantStateReason.NotFriendOrAuthorized;\r\n        case Enums.ParticipantFailureReason.ConfParticipantCountLimitReached:\r\n            return ParticipantStateReason.ConfParticipantCountLimitReached;\r\n        case Enums.ParticipantFailureReason.ConfLobbyParticipantCountLimitReached:\r\n            return ParticipantStateReason.ConfLobbyParticipantCountLimitReached;\r\n        case Enums.ParticipantFailureReason.PstnNoSkypeoutSubscription:\r\n            return ParticipantStateReason.CallLimitReached;\r\n        case Enums.ParticipantFailureReason.CallNotFound:\r\n            return ParticipantStateReason.CallNotFound;\r\n        case Enums.ParticipantFailureReason.PstnNetworkError:\r\n        case Enums.ParticipantFailureReason.PstnInternetConnectionLost:\r\n        case Enums.ParticipantFailureReason.TrouterError:\r\n        case Enums.ParticipantFailureReason.GeneralNetworkError:\r\n            return ParticipantStateReason.NetworkError;\r\n        case Enums.ParticipantFailureReason.MediaDroppedError:\r\n        case Enums.ParticipantFailureReason.SoundRecordingError:\r\n        case Enums.ParticipantFailureReason.SoundPlaybackError:\r\n            return ParticipantStateReason.MediaDroppedError;\r\n        case Enums.ParticipantFailureReason.PstnInsufficientFunds:\r\n            return ParticipantStateReason.PstnInsufficientFunds;\r\n        case Enums.ParticipantFailureReason.PstnCreditExpired:\r\n            return ParticipantStateReason.PstnCreditExpired;\r\n        case Enums.ParticipantFailureReason.PstnCreditExpiredButEnough:\r\n            return ParticipantStateReason.PstnCreditExpiredButEnough;\r\n        case Enums.ParticipantFailureReason.MiscError:\r\n        case Enums.ParticipantFailureReason.PstnMiscError:\r\n            return ParticipantStateReason.OtherError;\r\n        case Enums.ParticipantFailureReason.PstnSkypeoutAccountBlocked:\r\n            return ParticipantStateReason.PstnSkypeoutAccountBlocked;\r\n        case Enums.ParticipantFailureReason.PstnBlockedByUs:\r\n            return ParticipantStateReason.PstnBlockedByUs;\r\n        case Enums.ParticipantFailureReason.PstnBlockedRegulatoryIndia:\r\n            return ParticipantStateReason.PstnBlockedRegulatoryIndia;\r\n        case Enums.ParticipantFailureReason.PstnInvalidNumber:\r\n            return ParticipantStateReason.PstnInvalidNumber;\r\n        case Enums.ParticipantFailureReason.PstnNumberForbidden:\r\n            return ParticipantStateReason.PstnNumberForbidden;\r\n        case Enums.ParticipantFailureReason.PstnCallTimedOut:\r\n            return ParticipantStateReason.NoResponse;\r\n        case Enums.ParticipantFailureReason.PstnBusy:\r\n            return ParticipantStateReason.Busy;\r\n        case Enums.ParticipantFailureReason.PstnCallTerminated:\r\n            return ParticipantStateReason.PstnCallTerminated;\r\n        case Enums.ParticipantFailureReason.PstnNumberUnavailable:\r\n            return ParticipantStateReason.PstnNumberUnavailable;\r\n        case Enums.ParticipantFailureReason.PstnCallRejected:\r\n            return ParticipantStateReason.Declined;\r\n        case Enums.ParticipantFailureReason.PstnEmergencyCallDenied:\r\n            return ParticipantStateReason.PstnEmergencyCallDenied;\r\n        case Enums.ParticipantFailureReason.PstnNoSubscriptionCover:\r\n            return ParticipantStateReason.PstnNoSubscriptionCover;\r\n        case Enums.ParticipantFailureReason.EnterprisePstnForbidden:\r\n            return ParticipantStateReason.EnterprisePstnForbidden;\r\n        case Enums.ParticipantFailureReason.EnterprisePstnInternalError:\r\n            return ParticipantStateReason.EnterprisePstnInternalError;\r\n        case Enums.ParticipantFailureReason.EnterprisePstnUnavailable:\r\n            return ParticipantStateReason.EnterprisePstnUnavailable;\r\n        case Enums.ParticipantFailureReason.EnterprisePstnInvalidNumber:\r\n            return ParticipantStateReason.EnterprisePstnInvalidNumber;\r\n        case Enums.ParticipantFailureReason.EnterprisePstnMiscError:\r\n            return ParticipantStateReason.EnterprisePstnMiscError;\r\n        case Enums.ParticipantFailureReason.Kicked:\r\n            return ParticipantStateReason.Kicked;\r\n        case Enums.ParticipantFailureReason.NetworkRequestTimeoutError:\r\n            return ParticipantStateReason.NetworkRequestTimeoutError;\r\n        case Enums.ParticipantFailureReason.CallDoesNotExist:\r\n            return ParticipantStateReason.CallDoesNotExist;\r\n        case Enums.ParticipantFailureReason.MediaSetupFailure:\r\n            return ParticipantStateReason.MediaSetupFailure;\r\n        case Enums.ParticipantFailureReason.ServiceUnavailable:\r\n            return ParticipantStateReason.ServiceUnavailable;\r\n        case Enums.ParticipantFailureReason.SignalingError:\r\n            return ParticipantStateReason.SignalingError;\r\n        case Enums.ParticipantFailureReason.ConversationEstablishmentFailed:\r\n            return ParticipantStateReason.ConversationEstablishmentFailed;\r\n        case Enums.ParticipantFailureReason.TemporarilyUnavailable:\r\n            return ParticipantStateReason.TemporarilyUnavailable;\r\n        case Enums.ParticipantFailureReason.NetworkCannotConnectError:\r\n            return ParticipantStateReason.CannotConnectToNetworkError;\r\n        case Enums.ParticipantFailureReason.NoSignalingFromPeer:\r\n            return ParticipantStateReason.NoSignalingFromPeer;\r\n        case Enums.ParticipantFailureReason.AnonymousJoinDisabledByPolicy:\r\n            return ParticipantStateReason.AnonymousJoinDisabledByPolicy;\r\n        case Enums.ParticipantFailureReason.NoLobbyForBroadcastJoin:\r\n            return ParticipantStateReason.NoLobbyForBroadcastJoin;\r\n        case Enums.ParticipantFailureReason.NotAllowedDueToInformationBarrier:\r\n            return ParticipantStateReason.NotAllowedDueToInformationBarrier;\r\n        case Enums.ParticipantFailureReason.BroadcastLimitReached:\r\n            return ParticipantStateReason.BroadcastLimitReached;\r\n        case Enums.ParticipantFailureReason.B2bJoinDisabledByPolicy:\r\n            return ParticipantStateReason.B2bJoinDisabledByPolicy;\r\n        case Enums.ParticipantFailureReason.LocationBasedRoutingError:\r\n            return ParticipantStateReason.LocationBasedRoutingError;\r\n        case Enums.ParticipantFailureReason.Forbidden:\r\n            return ParticipantStateReason.NoPermission;\r\n        default:\r\n            return ParticipantStateReason.OtherError;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronEnumConverter.ts","import { CallingLogger, CallingLoggerPrefixFunction, CauseId } from 'skype-calling-interface';\r\nimport { getPrintableObject } from './logUtils';\r\n\r\ntype LogType = 'log' | 'debug' | 'info' | 'error' | 'warn';\r\n\r\nexport interface IInternalLogger extends CallingLogger {\r\n    createChild(namespace: string | CallingLoggerPrefixFunction, debug?: boolean): IInternalLogger;\r\n    createFnLogger(fnName: string, causeId: CauseId, ...additionalPrefix: string[]): IInternalLogger;\r\n    logSuccess(piiSafeResult: string): void;\r\n    logFailure(reason: string | number | boolean | Error): void;\r\n}\r\nexport default class InternalLogger implements IInternalLogger {\r\n\r\n    constructor(private _callingLogger: CallingLogger) { }\r\n\r\n    private _maybeLog = (type: LogType, ...args: string[]) => {\r\n        try {\r\n            this._callingLogger[type](...args);\r\n        } catch (e) {\r\n            this._callingLogger.info('[failed to log]', getPrintableObject(e));\r\n        }\r\n    }\r\n\r\n    private getPrefix(fnName?: string, causeId?: string) {\r\n        let prefix = '';\r\n        if (causeId) {\r\n            prefix += `[${causeId}]`;\r\n        }\r\n        if (fnName) {\r\n            prefix += `[${fnName}]`;\r\n        }\r\n        return prefix;\r\n    }\r\n\r\n    public createChild(namespace: string | CallingLoggerPrefixFunction, debug?: boolean): InternalLogger {\r\n        return new InternalLogger(this._callingLogger.createChild(namespace, debug));\r\n    }\r\n\r\n    public createFnLogger(fnName: string, causeId: CauseId, ...additionalPrefix: string[]): InternalLogger {\r\n        return new InternalLogger(this._callingLogger.createChild(this.getPrefix(fnName, causeId) + additionalPrefix.join(''), false));\r\n    }\r\n\r\n    public logSuccess(piiSafeResult: string): void {\r\n        this._maybeLog('info', `success=${piiSafeResult}}`);\r\n    }\r\n\r\n    public logFailure(reason: string | number | boolean | Error): void {\r\n        const message = getPrintableObject(reason);\r\n        this._maybeLog('info', `failed=${message}}`);\r\n    }\r\n\r\n    public log(...values: any[]): void {\r\n        this._maybeLog('log', ...values);\r\n    }\r\n\r\n    public debug(...values: any[]): void {\r\n        this._maybeLog('debug', ...values);\r\n    }\r\n\r\n    public info(...values: any[]): void {\r\n        this._maybeLog('info', ...values);\r\n    }\r\n\r\n    public warn(...values: any[]): void {\r\n        this._maybeLog('warn', ...values);\r\n    }\r\n\r\n    public error(...values: any[]): void {\r\n        this._maybeLog('error', ...values);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../common/ts/internalLogger.ts","/**\r\n * SlimCoreElectronEcsProvider.ts\r\n * Author: Richard Speyer\r\n * Copyright: Microsoft 2017\r\n *\r\n * SlimCore IECSProvider implementation\r\n */\r\n\r\nimport { EcsCallType, EcsConfig, IEcsProvider } from 'skype-calling-interface';\r\n\r\nimport * as async from '../../common/ts/async';\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\nimport Enums = SlimCore.Enums;\r\n\r\nexport default class SlimCoreElectronEcsProvider implements IEcsProvider {\r\n  public constructor(private _slimcoreInstance: SlimCoreCommon.Engine) { }\r\n\r\n  public setEcsConfig(config: EcsConfig): Promise<void> {\r\n    try {\r\n      this._slimcoreInstance.setEcsConfig(config.ecsBlob, config.userIdentity, config.etag, true);\r\n      return Promise.resolve<void>();\r\n    } catch (e) {\r\n      return Promise.reject(e);\r\n    }\r\n  }\r\n\r\n  public shouldTriggerCQF(username: string, callId: string, callType: EcsCallType): Promise<boolean> {\r\n    const block = (callType: EcsCallType) => {\r\n      let slimCoreCallType = Enums.CallType.CallTypeS2s;\r\n      if (callType === EcsCallType.CallTypeGroup) {\r\n        slimCoreCallType = Enums.CallType.CallTypeGroup;\r\n      } else if (callType === EcsCallType.CallTypePstn) {\r\n        slimCoreCallType = Enums.CallType.CallTypePstn;\r\n      } else if (callType === EcsCallType.CallTypeS2s) {\r\n        slimCoreCallType = Enums.CallType.CallTypeS2s;\r\n      }\r\n      return this._slimcoreInstance.shouldTriggerCQF(username, callId, slimCoreCallType);\r\n    };\r\n    return async.asap(() => block(callType));\r\n  }\r\n\r\n  public getEcsQueryParameters(): Promise<string> {\r\n    try {\r\n      return Promise.resolve<string>(this._slimcoreInstance.getEcsQueryParameters());\r\n    } catch (e) {\r\n      return Promise.reject(e);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronEcsProvider.ts","/**\r\n * SlimCoreElectronSetup.ts\r\n * Author: Richard Speyer\r\n * Copyright: Microsoft 2017\r\n *\r\n * SlimCore ISetup implementation\r\n */\r\n\r\nimport { ISetup } from 'skype-calling-interface';\r\n\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\n\r\nexport default class SlimCoreElectronSetup implements ISetup {\r\n  private _setup: SlimCore.Setup;\r\n\r\n  public constructor(private _slimcoreInstance: SlimCoreCommon.Engine, private _accountIdentity?: string) {}\r\n\r\n  private getSetup(): Promise<SlimCore.Setup> {\r\n    return new Promise((resolve, reject) => {\r\n      if (!SlimCoreCommon.hasFeature(SlimCore.Enums.Feature.MultiUserSupport)) {\r\n        reject(('No Multiuser support'));\r\n      } else {\r\n        if (!this._setup) {\r\n          this._setup = this._slimcoreInstance.getSetup(this._accountIdentity);\r\n        }\r\n        resolve(this._setup);\r\n      }\r\n    });\r\n  }\r\n\r\n  public setString(key: string, value: string): Promise<void> {\r\n      return this.getSetup()\r\n        .then(() => this._setup.setStr(key, value))\r\n        .catch(() => this._slimcoreInstance.setupSetStr(key, value));\r\n  }\r\n\r\n  public setNumber(key: string, value: number): Promise<void> {\r\n    return this.getSetup()\r\n      .then(() => this._setup.setInt(key, value))\r\n      .catch(() => this._slimcoreInstance.setupSetInt(key, value));\r\n  }\r\n\r\n  public getString(key: string): Promise<string> {\r\n    return this.getSetup()\r\n      .then(() => this._setup.getStr(key))\r\n      .catch(() => this._slimcoreInstance.setupGetStr(key));\r\n  }\r\n\r\n  public getNumber(key: string): Promise<number> {\r\n    return this.getSetup()\r\n      .then(() => this._setup.getInt(key))\r\n      .catch(() => this._slimcoreInstance.setupGetInt(key));\r\n  }\r\n\r\n  public delete(key: string): Promise<void> {\r\n    return this.getSetup()\r\n      .then(() => this._setup.delete(key))\r\n      .catch(() => this._slimcoreInstance.setupDelete(key));\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronSetup.ts","/**\r\n * events.ts\r\n * Author: Adrian Potra\r\n * Copyright: Microsoft 2016\r\n *\r\n * Event sources and subscriptions.\r\n */\r\n\r\nimport * as _ from 'lodash';\r\nimport { CallingLogger, CauseId, IDisposable } from 'skype-calling-interface';\r\n\r\n// Event subscriptions are disposable objects\r\nexport interface EventSubscription extends IDisposable { }\r\n\r\n// Defines the interface for event sources\r\nexport interface EventSource<E> extends IDisposable {\r\n    subscribe(eventHandler: E): EventSubscription;\r\n}\r\n\r\nexport class EventSourceImpl<E> implements EventSource<E> {\r\n    private eventLogger: CallingLogger | undefined;\r\n    constructor(logger?: CallingLogger) {\r\n        this.eventLogger = logger;\r\n    }\r\n    // Array of event subscriptions\r\n    protected subscriptions: EventSubscriptionImpl<E>[] = [];\r\n\r\n    public subscribe(eventHandler: E): EventSubscription {\r\n        return new EventSubscriptionImpl(this.subscriptions, eventHandler);\r\n    }\r\n\r\n    public dispose(causeId?: CauseId) {\r\n        this.subscriptions = [];\r\n    }\r\n\r\n    // Raise the specified event with the associated event data\r\n    protected raiseEvents(exec: (eventHandler: E) => void) {\r\n        const subscriptions = this.subscriptions.slice();\r\n        subscriptions.forEach(subscription => {\r\n            try {\r\n                subscription.eventHandler !== undefined && exec(subscription.eventHandler);\r\n            } catch (e) {\r\n                if (this.eventLogger && this.eventLogger.warn) {\r\n                    this.eventLogger.warn('Event handler exception caught!', e);\r\n                }\r\n\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nclass EventSubscriptionImpl<E> implements EventSubscription {\r\n    constructor(\r\n        private subscriptions: EventSubscriptionImpl<E>[],\r\n        public eventHandler: E | undefined) {\r\n\r\n        this.subscriptions.push(this);\r\n    }\r\n\r\n    public dispose() {\r\n        _.remove(this.subscriptions, subscription => subscription === this);\r\n        this.eventHandler = undefined;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../common/ts/events.ts","import * as _ from 'lodash';\r\nimport { CallingLogger, CauseId, TerminatedReason } from 'skype-calling-interface';\r\nimport { noop } from '../../common/ts/fn';\r\nimport * as piiUtils from '../../common/ts/piiUtils';\r\nimport * as async from './async';\r\nimport { generateCauseId } from './causeId';\r\nimport { getPrintableObject } from './logUtils';\r\n\r\ntype DeferredOperations<T> = { [key: string]: { deferred: async.Deferred<T>; causeId: CauseId } };\r\ntype DeferredOperationName = string;\r\ntype DeferredOperationId = string;\r\nexport default class AsyncOperationHandler {\r\n    private _endOperationDeferred: async.Deferred<void>;\r\n\r\n    private _deferredOperations: DeferredOperations<any>;\r\n    private _deferredOperationsWithOperationId: { [key: string]: { [key: string]: { deferred: async.Deferred<any>; causeId: CauseId } } };\r\n    private _deferredOperationsWithCauseId: { [causeId: string]: { [operationId: string]: async.Deferred<any> } };\r\n\r\n    protected _logger: CallingLogger;\r\n    private _disposed = false;\r\n\r\n    constructor(logger: CallingLogger) {\r\n        this._logger = logger.createChild('[ASYNC]');\r\n        this._endOperationDeferred = async.defer<void>();\r\n        this._endOperationDeferred.promise.catch(error => {\r\n            this._logger.info('Rejected all operations');\r\n        });\r\n        this._deferredOperations = {};\r\n        this._deferredOperationsWithOperationId = {};\r\n        this._deferredOperationsWithCauseId = {};\r\n        this._logger = logger;\r\n    }\r\n\r\n    public registerPromise(asyncOperationName: string, asyncOperation: Promise<void>) {\r\n        let asyncOperationDone = false;\r\n        const always = () => { asyncOperationDone = true; };\r\n        asyncOperation.then(always, always);\r\n\r\n        const endOperationPromise = this._endOperationDeferred.promise.catch(error => {\r\n            if (!asyncOperationDone) {\r\n                throw new Error(`Operation ${asyncOperationName} did not complete, reason:${error}`);\r\n            }\r\n        });\r\n        return Promise.race([endOperationPromise, asyncOperation]);\r\n    }\r\n\r\n    /*\r\n    update all occurances of operation with the new id.\r\n    */\r\n    public updateOperationId(previousId: string, newId: string) {\r\n        this._logger.info(`updateOperationId ${previousId} ${newId}`);\r\n\r\n        Object.keys(this._deferredOperationsWithOperationId).forEach(operationName => {\r\n            if (operationName && this._deferredOperationsWithOperationId[operationName]) {\r\n                this._logger.info(`_deferredOperationsWithOperationId ${operationName}`);\r\n                Object.keys(this._deferredOperationsWithOperationId[operationName]).forEach(id => {\r\n                    if (id && this._deferredOperationsWithOperationId[operationName][id]) {\r\n                        this._logger.info(`_deferredOperationsWithOperationId ${id} ${newId}`);\r\n                        if (id === previousId) {\r\n                            this._deferredOperationsWithOperationId[operationName][newId]\r\n                                = this._deferredOperationsWithOperationId[operationName][id];\r\n                            delete this._deferredOperationsWithOperationId[operationName][id];\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        Object.keys(this._deferredOperationsWithCauseId).forEach(causeId => {\r\n            if (causeId && this._deferredOperationsWithCauseId[causeId]) {\r\n                this._logger.info(`_deferredOperationsWithCauseId ${causeId}`);\r\n                Object.keys(this._deferredOperationsWithCauseId[causeId]).forEach(id => {\r\n                    if (id && this._deferredOperationsWithCauseId[causeId][id]) {\r\n                        this._logger.info(`_deferredOperationsWithCauseId ${id} ${newId}`);\r\n                        if (id === previousId) {\r\n                            this._deferredOperationsWithOperationId[causeId][newId]\r\n                                = this._deferredOperationsWithOperationId[causeId][id];\r\n                            delete this._deferredOperationsWithOperationId[causeId][id];\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    public createPendingOperation<T= undefined>(operationName: DeferredOperationName, operationId?: DeferredOperationId, causeId = generateCauseId()): Promise<T> {\r\n        const deferredOperation = async.defer<T>();\r\n        deferredOperation.promise.catch(noop);\r\n        const operationInfo = this.getOperationInfoForLogging(causeId, operationName, operationId);\r\n        this._logger.info(`${operationInfo}[creating...]`);\r\n        if (this._disposed) {\r\n            this._logger.info(`${operationInfo}[create failed, call is disposed]`);\r\n            return Promise.reject(TerminatedReason.ActionNotAllowed);\r\n        }\r\n        if (operationId) {\r\n            if (!this._deferredOperationsWithOperationId[operationName]) {\r\n                this._deferredOperationsWithOperationId[operationName] = {};\r\n            }\r\n            if (this._deferredOperationsWithOperationId[operationName][operationId]) {\r\n                this._logger.warn(`${operationInfo} Deferred operation with given name and operation id is already defined`);\r\n                return Promise.reject(new Error(`Deferred operation with given name is already defined:${operationName}/${piiUtils.scrubMriOrOmit(operationId)}`));\r\n            } else {\r\n                this._deferredOperationsWithOperationId[operationName][operationId] = { deferred: deferredOperation, causeId };\r\n                if (!this._deferredOperationsWithCauseId[causeId]) {\r\n                    this._deferredOperationsWithCauseId[causeId] = {};\r\n                }\r\n                this._deferredOperationsWithCauseId[causeId][operationId] = deferredOperation;\r\n            }\r\n\r\n        } else {\r\n            if (!this._deferredOperations[operationName]) {\r\n                if (!this._deferredOperationsWithCauseId[causeId]) {\r\n                    this._deferredOperationsWithCauseId[causeId] = {};\r\n                }\r\n                this._deferredOperationsWithCauseId[causeId][''] = deferredOperation;\r\n                this._deferredOperations[operationName] = { deferred: deferredOperation, causeId };\r\n            } else {\r\n                this._logger.warn(`${operationInfo} Deferred operation with given name is already defined`);\r\n                return Promise.reject(new Error(`Deferred operation with given name is already defined:${operationName}`));\r\n            }\r\n        }\r\n        const endOperationPromise = this._endOperationDeferred.promise.catch<T>(error => {\r\n            if (this.hasPendingOperation(operationName, operationId)) {\r\n                return Promise.reject(new Error(`Operation ${operationName} did not complete, reason:${error}`));\r\n            }\r\n\r\n            return Promise.resolve<T>(undefined);\r\n        });\r\n\r\n        return Promise.race<T>([endOperationPromise as Promise<T>, deferredOperation.promise]);\r\n    }\r\n\r\n    public hasPendingOperation(operationName: string, operationId?: string): boolean {\r\n        if (!operationId) {\r\n            return !!this._deferredOperations[operationName];\r\n        } else if (this._deferredOperationsWithOperationId[operationName]) {\r\n            return !!this._deferredOperationsWithOperationId[operationName][operationId];\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public hasPendingOperationWithCauseId(causeId: string, operationId?: string): boolean {\r\n        if (!operationId) {\r\n            operationId = ''; // tslint:disable-line:no-parameter-reassignment\r\n        }\r\n        return !!this._deferredOperationsWithCauseId[causeId][operationId];\r\n    }\r\n\r\n    public getPendingOperationWithCauseId<T = void>(causeId: string, operationId?: string): Promise<T> {\r\n        if (this.hasPendingOperationWithCauseId(causeId, operationId)) {\r\n            return this._deferredOperationsWithCauseId[causeId][operationId].promise;\r\n        }\r\n        return Promise.reject(`[${causeId}][${operationId}]: getPendingOperationWithCauseId for given causeId, operationId`);\r\n    }\r\n\r\n    public resolveOperationWithCauseId<T>(causeId: string, operationId?: string, resolveResult?: T): Promise<T> {\r\n        if (this.hasPendingOperationWithCauseId(causeId)) {\r\n            if (!operationId) {\r\n                operationId = ''; // tslint:disable-line:no-parameter-reassignment\r\n            }\r\n            const deferredPromise = this._deferredOperationsWithCauseId[causeId][operationId];\r\n            const promise = deferredPromise.promise;\r\n            deferredPromise.resolve(resolveResult);\r\n            this._logger.info(`[${causeId}][${operationId}] resolved, result=${getPrintableObject(resolveResult) || `void`}`);\r\n            delete this._deferredOperationsWithCauseId[causeId][operationId];\r\n            return promise;\r\n        }\r\n        return Promise.reject(`[${causeId}][${operationId}] resolveOperationWithCauseId failed, operation not found`);\r\n    }\r\n\r\n    public rejectOperationWithCauseId<T>(causeId: string, operationId?: string, resolveResult?: T): Promise<T> {\r\n        if (this.hasPendingOperationWithCauseId(causeId)) {\r\n            if (!operationId) {\r\n                operationId = ''; // tslint:disable-line:no-parameter-reassignment\r\n            }\r\n            const deferredPromise = this._deferredOperationsWithCauseId[causeId][operationId];\r\n            const promise = deferredPromise.promise;\r\n            promise.catch(noop);\r\n            deferredPromise.reject(resolveResult);\r\n            this._logger.info(`[${causeId}][${operationId}] rejected, result=${getPrintableObject(resolveResult) || `void`}`);\r\n            delete this._deferredOperationsWithCauseId[causeId][operationId];\r\n            return promise;\r\n        }\r\n        return Promise.reject(`[${causeId}][${operationId}] rejectOperationWithCauseId failed, operation not found`);\r\n    }\r\n\r\n    public maybeResolveOperationWithCauseId<T>(causeId: string, operationId?: string, resolveResult?: T): void {\r\n        if (this.hasPendingOperationWithCauseId(causeId, operationId)) {\r\n            this.resolveOperationWithCauseId(causeId, operationId, resolveResult).catch(e => {\r\n                this._logger.info(`${causeId}maybeResolveOperationWithCauseId failed, reason=${getPrintableObject(e)}`);\r\n            });\r\n        } else {\r\n            this._logger.info(`${causeId}maybeResolveOperationWithCauseId ignored, operation does not exist`);\r\n        }\r\n    }\r\n\r\n    public maybeRejectOperationWithCauseId<T>(causeId: string, operationId?: string, resolveResult?: T): void {\r\n        if (this.hasPendingOperationWithCauseId(causeId, operationId)) {\r\n            this.rejectOperationWithCauseId(causeId, operationId, resolveResult).catch(noop);\r\n        } else {\r\n            this._logger.info(`${causeId}maybeRejectOperationWithCauseId ignored, operation does not exist`);\r\n        }\r\n    }\r\n\r\n    public getPendingOperation<T = void>(operationName: string, operationId?: string, causeId = generateCauseId()): Promise<T> {\r\n        if (!operationId && this._deferredOperations[operationName]) {\r\n            return this._deferredOperations[operationName].deferred.promise;\r\n        } else if (this._deferredOperationsWithOperationId[operationName] &&\r\n                   this._deferredOperationsWithOperationId[operationName][operationId]) {\r\n            return this._deferredOperationsWithOperationId[operationName][operationId].deferred.promise;\r\n        }\r\n\r\n        return Promise.reject(`${this.getOperationInfoForLogging(causeId, operationName, operationId)}: Deferred operation with given name and operation does not exist`);\r\n    }\r\n\r\n    public waitForOperation<T = void>(operationName: string, operationId?: string, causeId = generateCauseId()): Promise<T> {\r\n        if (this.hasPendingOperation(operationName)) {\r\n            return this._deferredOperations[operationName].deferred.promise;\r\n\r\n        } else if (this.hasPendingOperation(operationName, operationId)) {\r\n            return this._deferredOperationsWithOperationId[operationName][operationId].deferred.promise;\r\n        }\r\n\r\n        return Promise.reject(`${this.getOperationInfoForLogging(causeId, operationName, operationId)}failed=wait failed, operation not found`);\r\n    }\r\n\r\n    public resolveOperation<T>(operationName: DeferredOperationName, resolveResult?: T, operationId?: DeferredOperationName, causeId = generateCauseId(), persistOperationData = false): Promise<T> {\r\n        if (!operationName) {\r\n            return Promise.reject('Unable to resolve deferred operation with empty name');\r\n        }\r\n\r\n        if (this.hasPendingOperation(operationName)) {\r\n            const operation = this._deferredOperations[operationName];\r\n            const promise = this._deferredOperations[operationName].deferred.promise;\r\n            this._deferredOperations[operationName].deferred.resolve(resolveResult);\r\n            this._logger.info(`${this.getOperationInfoForLogging(operation.causeId, operationName, operationId)}resolved, result=${getPrintableObject(resolveResult) || `void`}`);\r\n            if (!persistOperationData) {\r\n                delete this._deferredOperations[operationName];\r\n            }\r\n            return promise;\r\n        }\r\n\r\n        if (this.hasPendingOperation(operationName, operationId)) {\r\n            const operation = this._deferredOperationsWithOperationId[operationName][operationId];\r\n            const promise = operation.deferred.promise;\r\n            operation.deferred.resolve(resolveResult);\r\n            this._logger.info(`${this.getOperationInfoForLogging(operation.causeId, operationName, operationId)}resolved, result=${getPrintableObject(resolveResult) || `void`}`);\r\n            if (!persistOperationData) {\r\n                delete this._deferredOperationsWithOperationId[operationName][operationId];\r\n            }\r\n            return promise;\r\n        }\r\n        return Promise.reject(`${this.getOperationInfoForLogging(causeId, operationName, operationId)}failed=resolve failed, operation not found`);\r\n    }\r\n\r\n    public rejectOperation<T>(operationName: DeferredOperationName, reason?: T, operationId?: DeferredOperationId, causeId = generateCauseId()): Promise<T> {\r\n        if (!operationName) {\r\n            return Promise.reject('Unable to reject deferred operation with empty name');\r\n        }\r\n        if (this.hasPendingOperation(operationName)) {\r\n            const operation = this._deferredOperations[operationName];\r\n            const promise = operation.deferred.promise;\r\n            promise.catch(noop);\r\n            operation.deferred.reject(reason);\r\n            this._logger.info(`${this.getOperationInfoForLogging(operation.causeId, operationName, operationId)}rejected, reason=${getPrintableObject(reason) || `void`}`);\r\n            delete this._deferredOperations[operationName];\r\n            return promise;\r\n        }\r\n\r\n        if (this.hasPendingOperation(operationName, operationId)) {\r\n            const operation = this._deferredOperationsWithOperationId[operationName][operationId];\r\n            const promise = operation.deferred.promise;\r\n            promise.catch(noop);\r\n            operation.deferred.reject(reason);\r\n            this._logger.info(`${this.getOperationInfoForLogging(operation.causeId, operationName, operationId)}rejected, reason=${getPrintableObject(reason) || `void`}`);\r\n            delete this._deferredOperationsWithOperationId[operationName][operationId];\r\n            return promise;\r\n        }\r\n        return Promise.reject(`${this.getOperationInfoForLogging(causeId, operationName, operationId)}failed=reject failed, operation not found`);\r\n    }\r\n\r\n    public maybeResolveOperation(operationName: DeferredOperationName, resolveResult?: any, operationId?: DeferredOperationName, causeId = generateCauseId()): void {\r\n        const operationInfo = this.getOperationInfoForLogging(causeId, operationName, operationId);\r\n        if (this.hasPendingOperation(operationName, operationId)) {\r\n            this.resolveOperation(operationName, resolveResult, operationId, causeId).catch(e => {\r\n                this._logger.info(`${operationInfo}maybeResolveOperation failed, reason=${getPrintableObject(e)}`);\r\n            });\r\n        } else {\r\n            this._logger.info(`${operationInfo}maybeResolveOperation ignored, operation does not exist`);\r\n        }\r\n    }\r\n\r\n    public maybeRejectOperation(operationName: DeferredOperationName, reason?: any, operationId?: DeferredOperationName, causeId = generateCauseId()): void {\r\n        const operationInfo = this.getOperationInfoForLogging(causeId, operationName, operationId);\r\n        if (this.hasPendingOperation(operationName, operationId)) {\r\n            this.rejectOperation(operationName, reason, operationId, causeId).catch(noop);\r\n        } else {\r\n            this._logger.info(`${operationInfo}maybeRejectOperation ignored, operation does not exist`);\r\n        }\r\n    }\r\n\r\n    public rejectPendingOperations(reason: any, causeId = generateCauseId()): void {\r\n        this._disposed = true;\r\n        this._logger.info(`[${causeId}]rejectPendingOperations=${reason}`);\r\n        Object.keys(this._deferredOperations).forEach((operationName: string) => {\r\n            this.maybeRejectOperation(operationName, reason, undefined, causeId);\r\n            if (this._deferredOperationsWithOperationId[causeId]) {\r\n                delete this._deferredOperationsWithOperationId[causeId][''];\r\n            }\r\n        });\r\n        Object.keys(this._deferredOperationsWithOperationId).forEach((operationName: string) => {\r\n            Object.keys(this._deferredOperationsWithOperationId[operationName]).forEach((operationId: string) => {\r\n                this.maybeRejectOperation(operationName, reason, operationId, causeId);\r\n                if (this._deferredOperationsWithOperationId[causeId]) {\r\n                    delete this._deferredOperationsWithOperationId[causeId][operationId];\r\n                }\r\n            });\r\n        });\r\n        this._deferredOperations = {};\r\n        this._deferredOperationsWithOperationId = {};\r\n        this._endOperationDeferred.reject(reason);\r\n    }\r\n\r\n    protected getOperationInfoForLogging(causeId: CauseId, operationName: string, operationId = '') {\r\n        const operationInfo = operationId ? `[${piiUtils.scrubMriOrOmit(operationId)}]` : ``;\r\n        return `[${causeId}][${operationName}]${operationInfo}`;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../common/ts/asyncOperationHandler.ts","const MRI_ALIASES_REGEX: RegExp = /;aliases=.*$/i;\r\n\r\nexport const MRI_SKYPE_PREFIX = '8:';\r\nexport const MRI_ALIAS_PREFIX = ';aliases=';\r\nexport const MRI_SIP_PREFIX = '2:';\r\n\r\nexport function stripMriAliases(mri: string): string {\r\n    // For SfB interop we are introducing alias'd MRIs eg. 8:orgid:<org_id>;aliases=2:<sip_uri>,4:<asserted_phone_num>\r\n    // This is a temporary. Will be removed when Teams works on SfB interop item. Ping darsraj for Qs\r\n    if (mri) {\r\n        return mri.replace(MRI_ALIASES_REGEX, '');\r\n    }\r\n\r\n    return mri;\r\n}\r\n\r\nexport function generateAliasedMri(mri: string, sipUri?: string): string {\r\n    let aliasedMri = mri;\r\n\r\n    if (sipUri) {\r\n        aliasedMri += MRI_ALIAS_PREFIX + MRI_SIP_PREFIX + sipUri;\r\n    }\r\n\r\n    return aliasedMri;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../common/ts/mriUtils.ts","import * as _ from 'lodash';\r\n\r\nimport {\r\n    CallEndDiagnosticsInfo, CallParticipantBalanceUpdate, CallParticipantBalanceUpdateMap,\r\n    CallParticipantEndpoints, CallParticipantStreamMap, Capabilities, CauseId, EndpointMediaStreamInfo, ICallParticipant, MediaType,\r\n    MeetingRole, ParticipantContentSharingRole, ParticipantRosterRole, ParticipantState, ParticipantStateReason, StreamType\r\n} from 'skype-calling-interface';\r\nimport SlimCoreElectronBase from './SlimCoreElectronBase';\r\nimport SlimCoreElectronCall from './SlimCoreElectronCall';\r\nimport { DATA_SOURCE_ID_ANY } from './SlimCoreElectronDataChannel';\r\nimport { SlimCoreElectronRemoteStreamContext } from './SlimCoreElectronRemoteStream';\r\nimport SlimCoreElectronRemoteStreamManager from './SlimCoreElectronRemoteStreamManager';\r\n\r\nimport * as async from '../../common/ts/async';\r\nimport * as piiUtils from '../../common/ts/piiUtils';\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\nimport * as EnumConverter from './SlimCoreElectronEnumConverter';\r\n\r\n// From electron/typings/slimcore-enums.d.ts:\r\nimport Enums = SlimCore.Enums;\r\nimport { PARTICIPANT_OPERATIONS_INTERNAL } from '../../common/ts/callConstants';\r\nimport { getEndpointInformationForTelemetry, ICallTelemetry } from '../../common/ts/callTelemetry';\r\nimport { generateCauseId } from '../../common/ts/causeId';\r\nimport { IInternalLogger } from '../../common/ts/internalLogger';\r\nimport { stripMriAliases } from '../../common/ts/mriUtils';\r\nimport { getStreamInformationFromEndpoints } from './telemetry/helper';\r\n\r\nconst validStateTransitions: { [key: number]: ParticipantState[] } = {\r\n    // ParticipatnState.None to Participant.Hold is possible for lobby scenario.  A lobby user admitted to the conference would first creates\r\n    // the participants in the conference. Then it notices some participant in the conference is onhold when it tries to attachSlimcoreObjectId,\r\n    // and setState to be hold.\r\n    [ParticipantState.None]: [ParticipantState.Connecting, ParticipantState.Ringing, ParticipantState.Connected, ParticipantState.Disconnected, ParticipantState.EarlyMedia, ParticipantState.InLobby, ParticipantState.OnHold],\r\n    [ParticipantState.Connecting]: [ParticipantState.Ringing, ParticipantState.Connected, ParticipantState.Disconnected, ParticipantState.EarlyMedia, ParticipantState.InLobby, ParticipantState.None],\r\n    [ParticipantState.Ringing]: [ParticipantState.None, ParticipantState.Connecting, ParticipantState.Connected, ParticipantState.Disconnected, ParticipantState.EarlyMedia, ParticipantState.InLobby],\r\n    [ParticipantState.Connected]: [ParticipantState.Ringing, ParticipantState.Connecting, ParticipantState.Disconnected, ParticipantState.OnHold, ParticipantState.None, ParticipantState.InLobby],\r\n    [ParticipantState.Disconnected]: [ParticipantState.None],\r\n    [ParticipantState.OnHold]: [ParticipantState.Connected, ParticipantState.Disconnected, ParticipantState.None],\r\n    [ParticipantState.EarlyMedia]: [ParticipantState.Connected, ParticipantState.Disconnected, ParticipantState.None],\r\n    [ParticipantState.InLobby]: [ParticipantState.Connected, ParticipantState.Disconnected, ParticipantState.None]\r\n};\r\n\r\nexport const participantStrProps = {\r\n    displayName: { propKey: Enums.Property.ParticipantDisplayName },\r\n    role: { propKey: Enums.Property.ParticipantRole },\r\n    tenantId: { propKey: Enums.Property.ParticipantTenantId },\r\n    acceptedBy: { propKey: Enums.Property.ParticipantAcceptedBy },\r\n    endpointDetails: { propKey: Enums.Property.ParticipantEndpointDetails },\r\n    meetingRole: { propKey: Enums.Property.ParticipantMeetingRole }\r\n};\r\nexport const participantIntProps = {\r\n    isServerMuted: { propKey: Enums.Property.ParticipantIsServerMuted },\r\n    capabilities: { propKey: Enums.Property.ParticipantCapabilities, fallback: SlimCore.Enums.Capability.All },\r\n    contentRole: { propKey: Enums.Property.ParticipantContentRole, fallback: Enums.ContentSharingRole.None },\r\n    status: { propKey: Enums.Property.ParticipantStatus },\r\n    failure: { propKey: Enums.Property.ParticipantFailureReason }\r\n};\r\n\r\nexport interface CallParticipantData {\r\n    objectId: number;\r\n    mri: string;\r\n    props?: SlimCore.PropertyResults<typeof participantStrProps, typeof participantIntProps>;\r\n}\r\n\r\nexport default class SlimCoreElectronCallParticipant extends SlimCoreElectronBase<{}> implements ICallParticipant {\r\n    public streams: CallParticipantStreamMap = {\r\n        [StreamType.Video]: [],\r\n        [StreamType.ScreenSharing]: []\r\n    };\r\n    public slimcoreObjectId: number;\r\n\r\n    public voiceLevel = 0;\r\n    public isServerMuted = false;\r\n    public dominantSpeakerRank = 0;\r\n    public state = ParticipantState.None;\r\n    public stateReason: ParticipantStateReason;\r\n    public endpoints: CallParticipantEndpoints;\r\n    public id: string = null;\r\n    public role: ParticipantRosterRole = null;\r\n    public tenantId: string = null;\r\n    public displayName: string;\r\n    public contentSharingRole: ParticipantContentSharingRole;\r\n    public participantCapabilities: Capabilities;\r\n    public acceptedBy: string;\r\n    public balanceUpdates: CallParticipantBalanceUpdateMap = {};\r\n    public callEndDiagnosticsInfo?: CallEndDiagnosticsInfo;\r\n    public meetingRole?: MeetingRole;\r\n    public previousId?: string;\r\n\r\n    public enableParticipantLegToSourceIdMapping = true;\r\n\r\n    private _admitParticipantDeffered: async.Deferred<void>;\r\n    private _removeParticipantDeffered: async.Deferred<void>;\r\n    private _rawEndpoints: string;\r\n    private _rawCallEndDiagnosticsInfo: string;\r\n    private _slimCoreElectronRemoteStreamManager: SlimCoreElectronRemoteStreamManager;\r\n    private _raiseChangedDefer: number;\r\n\r\n    public constructor(\r\n        logger: IInternalLogger,\r\n        settings: SlimCoreCommon.Settings,\r\n        engine: SlimCoreCommon.Engine,\r\n        mri: string,\r\n        private _callHandler: SlimCoreCommon.CallHandler,\r\n        private _streamContextMap: { [type: number]: SlimCoreElectronRemoteStreamContext },\r\n        attachParticipantId: number = 0,\r\n        private _callTelemetry: ICallTelemetry,\r\n        isObserving: boolean = false,\r\n        data?: CallParticipantData\r\n    ) {\r\n        super(logger.createChild(() => `ICallParticipant[${piiUtils.scrubMriOrOmit(this.id)}][${this.state}][${this.slimcoreObjectId}]`), settings, engine);\r\n        this._logger.info('created');\r\n\r\n        this.id = stripMriAliases(mri);\r\n\r\n        this.participantCapabilities = SlimCoreElectronCallParticipant.convertCapabilities(SlimCore.Enums.Capability.All);\r\n\r\n        if (attachParticipantId && attachParticipantId !== 0) {\r\n            this.attachSlimcoreObjectId(attachParticipantId, 'ctor', isObserving, data);\r\n        }\r\n\r\n        if (this._slimcoreInstance.ecsGetSettingAsBool) {\r\n            this.enableParticipantLegToSourceIdMapping = this._slimcoreInstance.ecsGetSettingAsBool('SkypeCalling', 'enableParticipantLegToSourceIdMapping', true);\r\n        }\r\n        this._logger.info(`enableParticipantLegToSourceIdMapping = ${this.enableParticipantLegToSourceIdMapping}`);\r\n    }\r\n\r\n    public getDiagnosticData(): string {\r\n        return JSON.stringify({\r\n            id: this.id, // auf.pii.Mri(this.id)\r\n            slimcoreObjectId: this.slimcoreObjectId,\r\n            state: this.state,\r\n            isServerMuted: this.isServerMuted\r\n        });\r\n    }\r\n\r\n    public attachSlimcoreObjectId(attachParticipantId: number, causeId: CauseId, isObserving: boolean = false, data?: CallParticipantData) {\r\n        if (this.slimcoreObjectId && this.slimcoreObjectId !== 0) {\r\n            this._callTelemetry.recordEvent(PARTICIPANT_OPERATIONS_INTERNAL.ELECTRON_ATTACH_SLIMCORE_PARTICIPANT_FAILED, { attachParticipantId, reason: 'Participant already attached to a SlimCore object' }, causeId);\r\n            this._logger.debug('Attach called on existing participant');\r\n            return;\r\n        }\r\n\r\n        this.slimcoreObjectId = attachParticipantId;\r\n\r\n        const props = (data && data.props) || this._getProperties(this._callHandler, this.slimcoreObjectId, participantStrProps, participantIntProps);\r\n\r\n        this.displayName = props.displayName;\r\n        this.role = props.role as ParticipantRosterRole;\r\n        this.tenantId = props.tenantId;\r\n        this.participantCapabilities = SlimCoreElectronCallParticipant.convertCapabilities(props.capabilities);\r\n        this.acceptedBy = props.acceptedBy;\r\n        this.isServerMuted = !!props.isServerMuted;\r\n        this.meetingRole = props.meetingRole as MeetingRole;\r\n\r\n        this._slimCoreElectronRemoteStreamManager = new SlimCoreElectronRemoteStreamManager(\r\n            this._logger,\r\n            this._settings,\r\n            this._slimcoreInstance,\r\n            this._callHandler,\r\n            this.slimcoreObjectId,\r\n            this.streams,\r\n            this._streamContextMap,\r\n            isObserving);\r\n        this._slimCoreElectronRemoteStreamManager.changed(() => this.raiseChanged());\r\n\r\n        this._updateEndpointDetails(props.endpointDetails);\r\n\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantStatus, data => this._onStatusChanged(data.value as number));\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantIsServerMuted, data => this._onIsServerMuted(!!data.value));\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantFailureReason, data => this._onFailureReasonChange(data.value as number));\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantAdmitFailureReason, data => this._onAdmitFailureReasonChange(data.value as number));\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantRemoveFailureReason, data => this._onRemoveFailureReasonChange(data.value as number));\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantIsActiveSpeaker, data => this.setVoiceLevel(data.value as number));\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantDominantSpeakerRank, data => this._onDominantSpeakerRankChanged(data.value as number));\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantEndpointDetails, data => this._updateEndpointDetails(data.value as string));\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantCapabilities, data => this._onCapabilitiesChanged(data.value as number));\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantAcceptedBy, data => this._onAcceptedByChanged(data.value as string));\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantRole, data => this._onRoleChanged(data.value as string));\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantTenantId, data => this._onTenantIdChanged(data.value as string));\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantContentRole, data => this._onParticipantContentSharingRoleChanged(data.value as number));\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantBalanceUpdate, data => this._onBalanceUpdateChanged(data.value as string));\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantDiagnosticsCode, data => this._onParticipantDiagnosticsCodeChanged(data.value as string));\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantMeetingRole, data => this._onMeetingRoleChanged(data.value as string));\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantMriIdentity, data => this._onMriChanged(data.value as string));\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantDisplayName, data => this._onDisplayNameChanged(data.value as string));\r\n\r\n        this._onStatusChanged(props.status, false, props.failure);\r\n        this._onParticipantContentSharingRoleChanged(props.contentRole);\r\n    }\r\n\r\n    public getStrProperty(property: Enums.Property, fallback?: string): string {\r\n        return this._getStrProperty(this._callHandler, this.slimcoreObjectId, property, fallback);\r\n    }\r\n\r\n    public getIntProperty(property: Enums.Property, fallback?: number): number {\r\n        return this._getIntProperty(this._callHandler, this.slimcoreObjectId, property, fallback);\r\n    }\r\n\r\n    private _onParticipantPropertyChanged(propKey: Enums.Property, listener: SlimCore.EventHandler<SlimCore.Engine.Events.ObjectPropertyChangedArgs>) {\r\n        this._onObjectPropertyChanged(this.slimcoreObjectId, propKey, listener);\r\n    }\r\n\r\n    private _onCapabilitiesChanged(value: Enums.Capability) {\r\n        const caps = SlimCoreElectronCallParticipant.convertCapabilities(value);\r\n        if (caps !== this.participantCapabilities) {\r\n            this._logger.info(`Computed capabilities: ${JSON.stringify(caps)}`);\r\n            this.participantCapabilities = caps;\r\n            this.raiseChangedDeferred();\r\n        }\r\n    }\r\n\r\n    private _onAcceptedByChanged(acceptedEndpoint: string) {\r\n        if (acceptedEndpoint !== this.acceptedBy) {\r\n            this._logger.info(`Accepted by is set to ${piiUtils.scrubMriOrOmit(acceptedEndpoint)}`);\r\n            this.acceptedBy = acceptedEndpoint;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _onRoleChanged(role: string) {\r\n        if (role !== this.role) {\r\n            this._logger.info(`Role is set to ${role}`);\r\n            this.role = role as ParticipantRosterRole;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _onTenantIdChanged(tenantId: string) {\r\n        if (tenantId !== this.tenantId) {\r\n            this._logger.info(`TenantId is set to ${tenantId}`);\r\n            this.tenantId = tenantId;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _onMeetingRoleChanged(meetingRole: string) {\r\n        if (meetingRole !== this.meetingRole) {\r\n            this._logger.info(`_onMeetingRoleChanged meetingRole: ${meetingRole}`);\r\n            this.meetingRole = meetingRole as MeetingRole;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _onMriChanged(newMri: string) {\r\n        if (newMri !== this.id) {\r\n            // currently should only be called for RNL scenarios\r\n            this._logger.info(`_onMriChanged from old mri ${piiUtils.scrubMriOrOmit(this.id)} to new Mri: ${piiUtils.scrubMriOrOmit(newMri)}`);\r\n            this.previousId = this.id;\r\n            this.id = newMri;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _onDisplayNameChanged(displayName: string) {\r\n        if (displayName !== this.displayName) {\r\n            // currently should only be called for RNL scenarios\r\n            this._logger.info(`_onDisplayNameChanged new displayName: ${piiUtils.scrubMriOrOmit(displayName)}`);\r\n            this.displayName = displayName;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private raiseChangedDeferred(): void {\r\n        if (!this._raiseChangedDefer) {\r\n            this._raiseChangedDefer = _.defer(() => {\r\n                delete this._raiseChangedDefer;\r\n                this.raiseChanged();\r\n            });\r\n        }\r\n    }\r\n\r\n    private _getParticipantIdForSourceId(mediaType: MediaType, sourceId: number): string {\r\n        try {\r\n            if (this.endpoints != null) {\r\n                for (const endpointDetail of this.endpoints.endpointDetails) {\r\n                    if (endpointDetail != null && endpointDetail.mediaStreams != null) {\r\n                        for (const stream of endpointDetail.mediaStreams) {\r\n                            if (sourceId === stream.sourceId && SlimCoreCommon.mapMediaTypeStringToMediaType(stream.type) === mediaType) {\r\n                                return endpointDetail.participantId != null ? endpointDetail.participantId : null;  // being paranoid\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } catch (error) {\r\n            this._logger.error(`getSourceIdForMediaType caught exception error=${error}`);\r\n        }\r\n\r\n        return undefined;  // not found. null would indicate an entry for the sourceId with an invalid participantId\r\n    }\r\n\r\n    public getParticipantIdForSourceId(mediaType: MediaType, sourceId: number): string {\r\n\r\n        const participantId = this._getParticipantIdForSourceId(mediaType, sourceId);\r\n\r\n        if (!participantId) {\r\n            this._logger.warn(`participantId is ${participantId} for mediaType: ${mediaType}, sourceId: ${sourceId}`);\r\n        }\r\n\r\n        return participantId;\r\n    }\r\n\r\n    public hasSourceId(mediaType: MediaType, sourceId: number): boolean {\r\n\r\n        if (!this.enableParticipantLegToSourceIdMapping) {\r\n            return this.getSourceIdForMediaType(mediaType) === sourceId;\r\n        }\r\n\r\n        return this._getParticipantIdForSourceId(mediaType, sourceId) !== undefined;\r\n    }\r\n\r\n    // returns the first found source id for any of the users endpoints or DATA_SOURCE_ID_ANY if no endpoint defines mediaStreams\r\n    // Returns -1 if error\r\n    public getSourceIdForMediaType(mediaType: MediaType): number {\r\n        let sourceId: number = -1;\r\n\r\n        try {\r\n            if (this.endpoints) {\r\n                outerloop:\r\n                for (const endpointDetail of this.endpoints.endpointDetails) {\r\n                    if (endpointDetail !== null && endpointDetail.mediaStreams !== undefined) {\r\n                        for (const stream of endpointDetail.mediaStreams) {\r\n                            if (SlimCoreCommon.mapMediaTypeStringToMediaType(stream.type) === mediaType) {\r\n                                sourceId = stream.sourceId;\r\n                                break outerloop;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        // If there's no endpointDetailWithStreams, then it's a 1:1 call\r\n                        sourceId = DATA_SOURCE_ID_ANY;\r\n                    }\r\n                }\r\n            }\r\n        } catch (error) {\r\n            this._logger.error(`getSourceIdForMediaType caught exception error=${error}`);\r\n        }\r\n        return sourceId;\r\n    }\r\n\r\n    // returns -1 if modality isn't available and in case of errors\r\n    public getSourceId(participantId: string, mediaType: MediaType): number {\r\n\r\n        if (!this.enableParticipantLegToSourceIdMapping) {\r\n            return this.getSourceIdForMediaType(mediaType);\r\n        }\r\n\r\n        if (!this.endpoints) {\r\n            this._logger.warn('endpoints is invalid');\r\n            return -1;\r\n        }\r\n\r\n        try {\r\n            const participantLeg = _.find(this.endpoints.endpointDetails, endpointDetail => endpointDetail != null && endpointDetail.participantId === participantId);\r\n\r\n            if (!participantLeg) {\r\n                this._logger.warn(`participantId not found: ${participantId}`);\r\n                // TODO(robedum) we should probably not send any messages in this case.\r\n                // for now we fallback to old behavior to return the first found channel or DATA_SOURCE_ID_ANY if no endpoint defines mediaStreams\r\n                // they might go to the wrong endpoint.\r\n                return this.getSourceIdForMediaType(mediaType);\r\n            }\r\n\r\n            if (!participantLeg.mediaStreams) {\r\n                this._logger.warn(`participantLeg ${participantId} does not have valid mediaStreams`);\r\n                // TODO(robedum) we should find a more resilient way to determine if this is a 1-1 call and return DATA_SOURCE_ID_ANY.\r\n                // for now we fallback to old behavior to return the first found channel or DATA_SOURCE_ID_ANY if no endpoint defines mediaStreams\r\n                // they might go to the wrong endpoint.\r\n                return this.getSourceIdForMediaType(mediaType);\r\n            }\r\n\r\n            const stream = _.find(participantLeg.mediaStreams, stream => SlimCoreCommon.mapMediaTypeStringToMediaType(stream.type) === mediaType);\r\n\r\n            if (!stream) {\r\n                this._logger.warn(`participantLeg ${participantId} has no channel of type ${mediaType}`);\r\n                return -1;\r\n            }\r\n\r\n            return stream.sourceId;\r\n\r\n        } catch (error) {\r\n            this._logger.error(`getSourceId caught exception error=${error}`);\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    private _isScreenSharerStream(stream: EndpointMediaStreamInfo): boolean {\r\n        return stream.direction === 'sendonly' && stream.label === 'applicationsharing-video';\r\n    }\r\n\r\n    // this method assumes for 1-1 calls that a participant is actually sharing\r\n    public getSharingParticipantLeg(): string {\r\n\r\n        if (!this.endpoints || !this.endpoints.endpointDetails) {\r\n            this._logger.warn('endpoints are not defined');\r\n            return undefined;\r\n        }\r\n\r\n        if (this.endpoints.endpointDetails.length === 1) {\r\n            // we might not have stream information in a 1-1 call\r\n            return this.endpoints.endpointDetails[0].participantId;\r\n        }\r\n\r\n        const endpoint = _.find(this.endpoints.endpointDetails,\r\n            e => e != null && e.mediaStreams != null && _.some(e.mediaStreams,\r\n                s => this._isScreenSharerStream(s)));\r\n\r\n        if (!endpoint) {\r\n            this._logger.warn('could not find sharer');\r\n            return undefined;\r\n        }\r\n\r\n        if (!endpoint.participantId) {\r\n            this._logger.warn('invalid participantId');\r\n            return undefined;\r\n        }\r\n\r\n        return endpoint.participantId;\r\n    }\r\n\r\n    private static getEndpointDetailsLogString(endpoints: CallParticipantEndpoints): string {\r\n\r\n        if (!endpoints || !endpoints.endpointDetails) {\r\n            return '';\r\n        }\r\n\r\n        const result: any = [];\r\n\r\n        endpoints.endpointDetails.forEach(e => {\r\n            result.push({\r\n                participantId: e.participantId,\r\n                endpointId: e.endpointId,\r\n                clientVersion: e.clientVersion,\r\n                mediaStreams: e.mediaStreams\r\n            });\r\n        });\r\n\r\n        return JSON.stringify(result);\r\n    }\r\n\r\n    private _updateEndpointDetails(rawEndpointDetails: string) {\r\n        const causeId = generateCauseId();\r\n        if (this._rawEndpoints === rawEndpointDetails || !rawEndpointDetails) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            this.endpoints = JSON.parse(rawEndpointDetails) as CallParticipantEndpoints;\r\n            this._rawEndpoints = rawEndpointDetails;\r\n            this._logger.info(`Updating endpointDetails: ${SlimCoreElectronCallParticipant.getEndpointDetailsLogString(this.endpoints)}`);\r\n            this._callTelemetry.recordEvent(PARTICIPANT_OPERATIONS_INTERNAL.UPDATE_PARTICIPANT_STREAM, getStreamInformationFromEndpoints(this.endpoints), causeId);\r\n\r\n        } catch (e) {\r\n            this._logger.warn(`Failed to parse call member endpointDetails - ${e} -${rawEndpointDetails}`);\r\n            return;\r\n        }\r\n\r\n        this.raiseChanged();\r\n    }\r\n\r\n    private _onStatusChanged(value: Enums.CallStatus, updateEndpointDetails = true, failure?: number) {\r\n        const causeId = generateCauseId();\r\n        this._logger.info(`[${causeId}]Status changed ${value} (${Enums.CallStatus[value]})`);\r\n        const failureReason = failure !== undefined ? failure : this.getIntProperty(Enums.Property.ParticipantFailureReason);\r\n        const participantState = SlimCoreElectronCallParticipant.convertParticipantStatus(value);\r\n\r\n        if (participantState === undefined) {\r\n            this._logger.warn(`Unrecognized ${participantState}`);\r\n            return;\r\n        }\r\n\r\n        this.setState(\r\n            participantState, causeId,\r\n            EnumConverter.convertStatusAndFailureReasonToParticipantReason(value, failureReason), updateEndpointDetails);\r\n\r\n        if (this._admitParticipantDeffered && SlimCoreElectronCallParticipant.isParticipantActive(this.state)) {\r\n            this._admitParticipantDeffered.resolve();\r\n            this._admitParticipantDeffered = null;\r\n        }\r\n\r\n        if (this._removeParticipantDeffered && !SlimCoreElectronCallParticipant.isParticipantActive(this.state)) {\r\n            this._removeParticipantDeffered.resolve();\r\n            this._removeParticipantDeffered = null;\r\n        }\r\n    }\r\n\r\n    private _onParticipantContentSharingRoleChanged(value: Enums.ContentSharingRole) {\r\n        this._logger.info(`Content sharing role changed ${value} (${Enums.ContentSharingRole[value]})`);\r\n        this.setContentSharingRole(SlimCoreElectronCallParticipant.convertContentSharingRole(value));\r\n    }\r\n\r\n    private _onFailureReasonChange(value: Enums.ParticipantFailureReason) {\r\n        const causeId = generateCauseId();\r\n        this._logger.info(`[${causeId}]Failure reason changed ${value} (${Enums.ParticipantFailureReason[value]})`);\r\n        const state = this.getIntProperty(Enums.Property.ParticipantStatus);\r\n        this.setState(SlimCoreElectronCallParticipant.convertParticipantStatus(state), causeId,\r\n            EnumConverter.convertFailureReasonToParticipantReason(value));\r\n    }\r\n\r\n    private _onAdmitFailureReasonChange(value: Enums.ParticipantFailureReason) {\r\n        this._logger.info(`Admit failure reason changed ${value} (${Enums.ParticipantFailureReason[value]})`);\r\n\r\n        const reason = EnumConverter.convertFailureReasonToParticipantReason(value);\r\n        this.rejectAdmitParticipantDeferred(reason);\r\n    }\r\n\r\n    private _onRemoveFailureReasonChange(value: Enums.ParticipantFailureReason) {\r\n        this._logger.info(`Remove failure reason changed ${value} (${Enums.ParticipantFailureReason[value]})`);\r\n\r\n        const reason = EnumConverter.convertFailureReasonToParticipantReason(value);\r\n        this.rejectRemoveParticipantDeferred(reason);\r\n    }\r\n\r\n    public setVoiceLevel(value: number) {\r\n        if (this.voiceLevel === value) {\r\n            return;\r\n        }\r\n\r\n        this.voiceLevel = value;\r\n        this.raiseChanged();\r\n    }\r\n\r\n    private _onIsServerMuted(isServerMuted: boolean) {\r\n        if (isServerMuted !== this.isServerMuted) {\r\n            this.isServerMuted = isServerMuted;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _onDominantSpeakerRankChanged(value: number) {\r\n        if (this.dominantSpeakerRank === value) {\r\n            return;\r\n        }\r\n\r\n        this._logger.info(`DominantSpeakerRank changing from ${this.dominantSpeakerRank} to ${value}`);\r\n\r\n        this.dominantSpeakerRank = value;\r\n        this.raiseChanged();\r\n    }\r\n\r\n    private _onBalanceUpdateChanged(rawBalanceUpdate: string) {\r\n        // Balance updates can occur at a frequency of up to one per minute per\r\n        // remote endpoint.\r\n        if (_.isEmpty(rawBalanceUpdate)) {\r\n            if (!_.isEmpty(this.balanceUpdates)) {\r\n                this.balanceUpdates = {};\r\n                this.raiseChanged();\r\n            }\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const balanceUpdate: CallParticipantBalanceUpdate = JSON.parse(rawBalanceUpdate);\r\n\r\n            if (_.isEqual(this.balanceUpdates[balanceUpdate.sender.endpointId], balanceUpdate)) {\r\n                return;\r\n            }\r\n\r\n            this.balanceUpdates[balanceUpdate.sender.endpointId] = balanceUpdate;\r\n        } catch (e) {\r\n            this._logger.warn(`Failed to parse call member balanceUpdate - ${e} -${rawBalanceUpdate}`);\r\n            return;\r\n        }\r\n\r\n        this.raiseChanged();\r\n    }\r\n\r\n    private _onParticipantDiagnosticsCodeChanged(value: string) {\r\n        this._logger.info(`_onParticipantDiagnosticsCodeChanged diagnosticsCode: ${value}`);\r\n        this._updateDiagnosticsCode(value);\r\n    }\r\n\r\n    private _updateDiagnosticsCode(diagnosticsCode: string) {\r\n        if (this._rawCallEndDiagnosticsInfo === diagnosticsCode || !diagnosticsCode) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            this.callEndDiagnosticsInfo = JSON.parse(diagnosticsCode) as CallEndDiagnosticsInfo;\r\n            this._rawCallEndDiagnosticsInfo = diagnosticsCode;\r\n            this.raiseChanged();\r\n        } catch (err) {\r\n            this._logger.info(`Failed to parse raw diagnostis details. Error: ${err}, diagnosticsCode: ${diagnosticsCode}`);\r\n        }\r\n    }\r\n\r\n    public setContentSharingRole(role: ParticipantContentSharingRole): void {\r\n        if (this.contentSharingRole === role) {\r\n            return;\r\n        }\r\n\r\n        this.contentSharingRole = role;\r\n        this.raiseChanged();\r\n    }\r\n\r\n    public setState(state: ParticipantState, causeId: CauseId, reason?: ParticipantStateReason, updateEndpointDetails = true): void {\r\n        if (this.state === state) {\r\n            return;\r\n        }\r\n        const fnLogger = this._logger.createFnLogger('setState', causeId);\r\n        const validNextStates = validStateTransitions[this.state];\r\n        const isValidNextState = validNextStates.indexOf(state) >= 0;\r\n\r\n        const telemetryData = { state: this.state, reason: this.stateReason, endpoints: [] as any[] };\r\n        if (this.endpoints && this.endpoints.endpointDetails && this.endpoints.endpointDetails.length) {\r\n            telemetryData.endpoints = getEndpointInformationForTelemetry(this.endpoints.endpointDetails);\r\n        }\r\n\r\n        if (!isValidNextState) {\r\n            fnLogger.logFailure(`Invalid state transition ${this.state}->${state} attempted`);\r\n            this._callTelemetry.recordEvent(PARTICIPANT_OPERATIONS_INTERNAL.SET_PARTICIPANT_STATE_INVALID, telemetryData, causeId);\r\n            return;\r\n        }\r\n        fnLogger.info(`state=${this.state}->${state} reason=${this.stateReason}->${reason}`);\r\n        this._callTelemetry.recordEvent(PARTICIPANT_OPERATIONS_INTERNAL.SET_PARTICIPANT_STATE, telemetryData, causeId);\r\n        this.state = state;\r\n        this.stateReason = reason;\r\n\r\n        if (this.state === ParticipantState.Connected && updateEndpointDetails) {\r\n            const endpointDetails = this.getStrProperty(Enums.Property.ParticipantEndpointDetails);\r\n            this._updateEndpointDetails(endpointDetails);\r\n        } else if (this.state === ParticipantState.Disconnected) {\r\n            const diagnostics = this.getStrProperty(Enums.Property.ParticipantDiagnosticsCode);\r\n            this._updateDiagnosticsCode(diagnostics);\r\n        }\r\n\r\n        this.raiseChangedDeferred();\r\n    }\r\n\r\n    private static convertParticipantStatus(status: Enums.CallStatus) {\r\n        if (SlimCoreElectronCall.isCallRinging(status)) {\r\n            return ParticipantState.Ringing;\r\n        } else if (SlimCoreElectronCall.isCallTerminated(status)) {\r\n            return ParticipantState.Disconnected;\r\n        } else if (SlimCoreElectronCall.isCallConnected(status)) {\r\n            return ParticipantState.Connected;\r\n        } else if (SlimCoreElectronCall.isCallConnecting(status)) {\r\n            return ParticipantState.Connecting;\r\n        } else if (SlimCoreElectronCall.isCallEarlyMedia(status)) {\r\n            return ParticipantState.EarlyMedia;\r\n        } else if (SlimCoreElectronCall.isCallInLobby(status)) {\r\n            return ParticipantState.InLobby;\r\n        } else if (status === Enums.CallStatus.LocalHold || status === Enums.CallStatus.RemoteHold) {\r\n            return ParticipantState.OnHold;\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    public static isParticipantActive(state: ParticipantState) {\r\n        switch (state) {\r\n            case ParticipantState.Connected:\r\n            case ParticipantState.EarlyMedia:\r\n            case ParticipantState.OnHold:\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    private static convertContentSharingRole(role: Enums.ContentSharingRole) {\r\n        switch (role) {\r\n            case Enums.ContentSharingRole.Attendee:\r\n                return ParticipantContentSharingRole.Attendee;\r\n            case Enums.ContentSharingRole.Presenter:\r\n                return ParticipantContentSharingRole.Presenter;\r\n            default:\r\n                return ParticipantContentSharingRole.None;\r\n        }\r\n    }\r\n\r\n    private static convertCapabilities(caps: Enums.Capability): Capabilities {\r\n        return {\r\n            canConference: !!(caps & Enums.Capability.Conference),\r\n            canShareScreen: !!(caps & Enums.Capability.ShareScreen),\r\n            canMerge: !!(caps & Enums.Capability.Merge)\r\n        };\r\n    }\r\n\r\n    public addAdmitParticipantDeferred(admitParticipantDeffered: async.Deferred<void>): void {\r\n        this._admitParticipantDeffered = admitParticipantDeffered;\r\n    }\r\n\r\n    public rejectAdmitParticipantDeferred(terminatedReason: ParticipantStateReason): void {\r\n        if (this._admitParticipantDeffered) {\r\n            this._admitParticipantDeffered.reject(terminatedReason);\r\n            this._admitParticipantDeffered = null;\r\n        }\r\n    }\r\n\r\n    public addRemoveParticipantDeferred(removeParticipantDeffered: async.Deferred<void>): void {\r\n        this._removeParticipantDeffered = removeParticipantDeffered;\r\n    }\r\n\r\n    public rejectRemoveParticipantDeferred(terminatedReason: ParticipantStateReason): void {\r\n        if (this._removeParticipantDeffered) {\r\n            this._removeParticipantDeffered.reject(terminatedReason);\r\n            this._removeParticipantDeffered = null;\r\n        }\r\n    }\r\n\r\n    public stopVideos(): Promise<void> {\r\n        return this._slimCoreElectronRemoteStreamManager.stopVideos();\r\n    }\r\n\r\n    public dispose(): void {\r\n        if (this._slimCoreElectronRemoteStreamManager) {\r\n            this._slimCoreElectronRemoteStreamManager.dispose();\r\n        }\r\n        this.streams[StreamType.Video] = [];\r\n        this.streams[StreamType.ScreenSharing] = [];\r\n\r\n        if (this._admitParticipantDeffered) {\r\n            this._admitParticipantDeffered.resolve();\r\n            this._admitParticipantDeffered = null;\r\n        }\r\n\r\n        if (this._removeParticipantDeffered) {\r\n            this._removeParticipantDeffered.resolve();\r\n            this._removeParticipantDeffered = null;\r\n        }\r\n\r\n        this.slimcoreObjectId = 0;\r\n        super.dispose();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronCallParticipant.ts","/// <reference path=\"../typings/slimcore-enums.d.ts\" />\r\n\r\nimport { IRenderTarget, ScalingMode, StartStreamOptions } from 'skype-calling-interface';\r\n\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\nimport SlimCoreElectronVideoRenderer from './SlimCoreElectronVideoRenderer';\r\n\r\n// From electron/typings/slimcore-enums.d.ts:\r\nimport Enums = SlimCore.Enums;\r\nimport { IInternalLogger } from '../../common/ts/internalLogger';\r\nlet _instanceCount = 0;\r\n\r\nexport interface SlimCoreElectronRemoteVideoRendererTracker {\r\n    registerRenderer(object: SlimCoreElectronRemoteVideoRenderer): void;\r\n    unregisterRenderer(object: SlimCoreElectronRemoteVideoRenderer): void;\r\n}\r\n\r\nexport default class SlimCoreElectronRemoteVideoRenderer extends SlimCoreElectronVideoRenderer {\r\n    private readonly _id = _instanceCount++;\r\n\r\n    public get renderTarget() {\r\n        return this._renderTarget;\r\n    }\r\n\r\n    public constructor(\r\n        logger: IInternalLogger,\r\n        settings: SlimCoreCommon.Settings,\r\n        engine: SlimCoreCommon.Engine,\r\n        private _renderTarget: IRenderTarget,\r\n        private _videoType: Enums.VideoType,\r\n        videoBinding: SlimCore.VideoBindingRenderer,\r\n        private _options: StartStreamOptions,\r\n        private _rendererTracker: SlimCoreElectronRemoteVideoRendererTracker\r\n    ) {\r\n        super(logger.createChild(() => `RemoteVideoRenderer[${this._id}]`), settings, engine);\r\n        this._logger.info('constructor');\r\n\r\n        const isScreenShare = (_videoType === Enums.VideoType.ScreenShare);\r\n        this._videoBinding = videoBinding;\r\n\r\n        this._options = _options || {\r\n            scalingMode: isScreenShare ? ScalingMode.Fit : ScalingMode.Crop,\r\n            transparent: isScreenShare,\r\n            ignoreMirroring: false\r\n        };\r\n\r\n        this._createVideoRenderer(this._renderTarget, this._options, false);\r\n        this._rendererTracker.registerRenderer(this); //this has to be last because if constructor fails there is no way to dispose the instance\r\n    }\r\n\r\n    public clone(renderTarget: IRenderTarget): SlimCoreElectronRemoteVideoRenderer {\r\n        this._logger.info('clone');\r\n        return new SlimCoreElectronRemoteVideoRenderer(\r\n            this._logger,\r\n            this._settings,\r\n            this._slimcoreInstance,\r\n            renderTarget,\r\n            this._videoType,\r\n            this._videoBinding,\r\n            this._options,\r\n            this._rendererTracker\r\n        );\r\n    }\r\n\r\n    public dispose() {\r\n        this._logger.info('dispose');\r\n        try {\r\n            super.dispose();\r\n        } finally {\r\n            this._renderTarget = null;\r\n            if (this._rendererTracker) {\r\n                this._rendererTracker.unregisterRenderer(this);\r\n                this._rendererTracker = null; // to be sure we unregister once!\r\n            }\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronRemoteVideoRenderer.ts","/// <reference path=\"../typings/slimcore-enums.d.ts\" />\r\n\r\nimport * as _ from 'lodash';\r\nimport {\r\n    CauseId, ElectronElement, FrameType, IRenderer, IRendererError, IRendererEvents, IRenderTarget, IVideoFrame,\r\n    RendererErrorType, RendererStats, RendererType, ScalingMode, Size, StartStreamOptions\r\n} from 'skype-calling-interface';\r\nimport { IElectronVideoFrame } from '../typings/skype-calling-electron';\r\n\r\nimport * as async from '../../common/ts/async';\r\nimport SlimCoreElectronBase from './SlimCoreElectronBase';\r\n\r\nimport { generateCauseId } from '../../common/ts/causeId';\r\nimport { IInternalLogger } from '../../common/ts/internalLogger';\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\n\r\nconst VIDEO_ELEMENT_SIZE_POLL_INTERVAL = 2000;\r\n\r\nexport interface InternalRendererEvents extends IRendererEvents {\r\n    renderStarted(): void;\r\n    videoSizeChanged(width: number, height: number): void;\r\n}\r\n\r\nexport default class SlimCoreElectronVideoRenderer extends SlimCoreElectronBase<InternalRendererEvents> implements IRenderer {\r\n    public isRendering: boolean = false;\r\n    public streamSize: Size;\r\n\r\n    protected _videoBinding: SlimCore.VideoBindingRenderer;\r\n\r\n    private _renderer: SlimCore.VideoRenderer;\r\n    private _videoElement: HTMLVideoElement;\r\n    private _paused: boolean = false;\r\n    private _isFrameSinkSet = false;\r\n    private _videoElementSizeChangeIntervalHandle = 0;\r\n    private _isStartedLogged = false;\r\n\r\n    public constructor(logger: IInternalLogger, settings: SlimCoreCommon.Settings, engine: SlimCoreCommon.Engine) {\r\n        super(logger, settings, engine);\r\n    }\r\n\r\n    public dispose(causeId = generateCauseId()) {\r\n        this._disposeVideoRenderer(causeId);\r\n        super.dispose(causeId);\r\n    }\r\n\r\n    public get rendererType(): RendererType {\r\n        return RendererType.VideoElement;\r\n    }\r\n\r\n    public get frameType(): FrameType {\r\n        if (this._frameSink && this._frameSink.getFrameType) {\r\n            return convertFrameType(this._frameSink.getFrameType());\r\n        }\r\n\r\n        return FrameType.Unknown;\r\n    }\r\n\r\n    public get paused(): boolean {\r\n        return this._paused;\r\n    }\r\n\r\n    public set paused(value: boolean) {\r\n        if (this._settings.platform !== SlimCoreCommon.PlatformType.Electron) {\r\n            throw new Error('Only implemented for Electron renderer');\r\n        }\r\n\r\n        if (value === this._paused) { return; }\r\n        if (this._frameSink) {\r\n            this._controlFrameSink(!value);\r\n        }\r\n        this._paused = value;\r\n    }\r\n\r\n    public captureFrame(timeoutMs: number): Promise<IVideoFrame> {\r\n        if (!this._videoBinding) {\r\n            return Promise.resolve<IVideoFrame>();\r\n        }\r\n        return this._videoBinding.captureFrame({ timeout: timeoutMs })\r\n            .then(frame => new VideoFrame(SlimCoreCommon.convertImageData(frame.image), frame.mirror));\r\n    }\r\n\r\n    public getStats(): Promise<RendererStats> {\r\n        return async.asap(() => this._getStats());\r\n    }\r\n\r\n    public setScalingMode(scalingMode: ScalingMode): Promise<void> {\r\n        if (this._renderer) {\r\n            return this._renderer.setScalingMode(convertScalingMode(scalingMode));\r\n        }\r\n\r\n        if (this._videoElement) {\r\n            return new Promise<void>(() => {\r\n                this._videoElement.msZoom = (scalingMode === ScalingMode.Crop);\r\n            });\r\n        }\r\n\r\n        return Promise.reject('No video renderer');\r\n    }\r\n\r\n    public dumpVideoSourceImages(): Promise<number> {\r\n        return Promise.reject(new Error('Supposed to be overriden by preview video renderer. Not implemented for remote video renderer'));\r\n    }\r\n\r\n    protected _createVideoRenderer(target: IRenderTarget, options: StartStreamOptions, isLocalPreview: boolean) {\r\n        switch (this._settings.platform) {\r\n            case SlimCoreCommon.PlatformType.Electron:\r\n                return this._createVideoRendererElectron(target, options);\r\n\r\n            case SlimCoreCommon.PlatformType.Uwp:\r\n                return this._createVideoRendererUwp(target, options, isLocalPreview);\r\n\r\n            default:\r\n                throw new Error(`Unsupported platform: ${this._settings.platform}`);\r\n        }\r\n    }\r\n\r\n    private _createVideoRendererElectron(target: IRenderTarget, options: StartStreamOptions) {\r\n        if (isElectronElement(target)) {\r\n            this._renderer = target.renderer;\r\n        } else {\r\n            this._renderer = this._createVideoRendererImpl(target as HTMLElement, options);\r\n        }\r\n\r\n        this._renderer.on('video-size-changed', args => this._videoSizeChanged(args.width, args.height));\r\n\r\n        if (this._frameSink) {\r\n            this._frameSink.on('frame-type-changed', this._frameTypeChanged);\r\n            this._frameSink.on('frame-size-changed', this._frameSizeChanged);\r\n            this._frameSink.on('first-frame-rendered', this._firstFrameRendered);\r\n            this._frameSink.on('full-frame-render-required', this._fullFrameRenderRequired);\r\n            if (!_.isUndefined(options.ignoreMirroring) && this._frameSink.setIgnoreMirroring) {\r\n                this._frameSink.setIgnoreMirroring(options.ignoreMirroring);\r\n            }\r\n            this._controlFrameSink(true);\r\n        }\r\n    }\r\n\r\n    private _createVideoRendererUwp(target: IRenderTarget, options: StartStreamOptions, isLocalPreview: boolean) {\r\n        this._logger.info(`Creating uwp video renderer with uri ${this._videoBindingRT.uri}`);\r\n        this._videoBindingRT.on('video-uri-changed', this._videoUriChangedUwp);\r\n\r\n        const container = (target as HTMLElement);\r\n\r\n        this._videoElement = container.ownerDocument.createElement('video');\r\n        container.appendChild(this._videoElement);\r\n\r\n        this._videoElement.autoplay = true;\r\n        this._videoElement.msHorizontalMirror = !options.ignoreMirroring ? isLocalPreview : false;\r\n        this._videoElement.msZoom = (options.scalingMode === ScalingMode.Crop);\r\n        this._videoElement.style.backgroundColor = options.transparent ? '' : 'black';\r\n        this._videoElement.addEventListener('resize', this._videoResizedUwp);\r\n        this._videoElement.src = this._videoBindingRT.uri || '';\r\n        this._videoElement.addEventListener('pause', this._videoPausedUwp);\r\n\r\n        if (!isLocalPreview && this._videoBindingRT.setVideoPreference) {\r\n            let videoElementSize = { width: 0, height: 0 };\r\n            this._videoElementSizeChangeIntervalHandle = setInterval(() => {\r\n                const size: Size = { width: this._videoElement.offsetWidth, height: this._videoElement.offsetHeight };\r\n                if (!_.isEqual(videoElementSize, size)) {\r\n                    videoElementSize = size;\r\n                    this._videoBindingRT.setVideoPreference(size.width, size.height);\r\n                }\r\n            }, VIDEO_ELEMENT_SIZE_POLL_INTERVAL);\r\n        }\r\n    }\r\n\r\n    protected _disposeVideoRenderer(causeId: CauseId) {\r\n        if (this._frameSink) {\r\n            this._frameSink.removeListener('frame-type-changed', this._frameTypeChanged);\r\n            this._frameSink.removeListener('frame-size-changed', this._frameSizeChanged);\r\n            this._frameSink.removeListener('first-frame-rendered', this._firstFrameRendered);\r\n            this._frameSink.removeListener('full-frame-render-required', this._fullFrameRenderRequired);\r\n            this._controlFrameSink(false);\r\n        }\r\n\r\n        if (this._renderer) {\r\n            this._renderer.removeAllListeners();\r\n            this._renderer.dispose();\r\n            this._renderer = null;\r\n        }\r\n\r\n        if (this._videoBindingRT) {\r\n            this._videoBindingRT.removeListener('video-uri-changed', this._videoUriChangedUwp);\r\n        }\r\n\r\n        if (this._videoElementSizeChangeIntervalHandle) {\r\n            clearInterval(this._videoElementSizeChangeIntervalHandle);\r\n            this._videoElementSizeChangeIntervalHandle = 0;\r\n        }\r\n        if (this._videoElement) {\r\n            this._videoElement.removeEventListener('resize', this._videoResizedUwp);\r\n            this._videoElement.removeEventListener('pause', this._videoPausedUwp);\r\n            this._videoElement.remove();\r\n            this._videoElement = null;\r\n        }\r\n    }\r\n\r\n    protected get _frameSink() {\r\n        return this._renderer ? this._renderer.getFrameSink() : null;\r\n    }\r\n\r\n    private _videoSizeChanged(width: number, height: number) {\r\n        this._logger.info(`video-size-changed: ${width} x ${height}`);\r\n\r\n        this.streamSize = { width, height };\r\n        this.isRendering = width > 0 && height > 0;\r\n        if (!this._isStartedLogged && this.isRendering) {\r\n            this._logger.info('renderStarted');\r\n            this.event('renderStarted').raise();\r\n            this._isStartedLogged = true;\r\n        }\r\n        this.event('videoSizeChanged').raise(width, height);\r\n        this.raiseChanged();\r\n    }\r\n\r\n    private _frameTypeChanged = (args: SlimCore.FrameSink.Events.FrameTypeChangedArgs) => {\r\n        this._logger.info(`frame-type-changed: ${args.type}`);\r\n\r\n        this.event('frameTypeChanged').raise(convertFrameType(args.type));\r\n    }\r\n\r\n    private _frameSizeChanged = (args: SlimCore.FrameSink.Events.FrameSizeChangedArgs) => {\r\n        this._logger.info(`frame-size-changed: ${args.width} x ${args.height}`);\r\n    }\r\n\r\n    private _firstFrameRendered = (args: SlimCore.FrameSink.Events.FirstFrameRenderedArgs) => {\r\n        this._logger.info('first-frame-rendered');\r\n        this.event('firstFrameRendered').raise();\r\n    }\r\n\r\n    private _fullFrameRenderRequired = (args: SlimCore.FrameSink.Events.FullFrameRenderRequiredArgs) => {\r\n        this._logger.info(`full-frame-render-required: ${args.fullFrameRenderRequired}`);\r\n        this.event('fullFrameRenderRequired').raise(args.fullFrameRenderRequired);\r\n    }\r\n\r\n    private _getStats() {\r\n        if (!this._frameSink) {\r\n            throw new Error('Renderer is not initialized');\r\n        }\r\n\r\n        if (this._frameSink.getStats) {\r\n            return this._frameSink.getStats();\r\n        } else {\r\n            throw new Error('Renderer does not support stats');\r\n        }\r\n    }\r\n\r\n    public get frameSinkMetadata(): SlimCore.FrameSink.Metadata {\r\n        if (!this._frameSink || !this._frameSink.getMetadata) { return null; }\r\n        return this._frameSink.getMetadata();\r\n    }\r\n\r\n    private _createVideoRendererImpl(container: HTMLElement, options: StartStreamOptions): SlimCore.VideoRenderer {\r\n        const args: SlimCore.VideoRenderer.ConstructorArgs = {\r\n            container,\r\n            transparent: options.transparent,\r\n            scalingMode: convertScalingMode(options.scalingMode),\r\n            useBufferSharing: !!this._settings.enableBufferSharing,\r\n            useFirstFrameRender: !!this._settings.enableFirstFrameRender,\r\n            logger: this._logger\r\n        };\r\n\r\n        try {\r\n            const frameSink = SlimCore.createChromiumFrameSink\r\n                ? SlimCore.createChromiumFrameSink()\r\n                : SlimCore.createPepperFrameSink();\r\n            return VideoRenderer.createChromiumVideoRenderer(frameSink, args);\r\n        } catch (error) {\r\n            this._logger.error(`createChromiumVideoRenderer failed: ${error}`);\r\n            throw new SlimCoreElectronRendererError(error, convertRendererError(error));\r\n        }\r\n    }\r\n\r\n    private _videoUriChangedUwp = (args: SlimCoreRT.VideoBindingRenderer.Events.VideoUriChangedArgs) => {\r\n        if (this._videoElement) {\r\n            this._videoElement.src = args.uri || '';\r\n        }\r\n    }\r\n\r\n    private _videoResizedUwp = () => {\r\n        this._videoSizeChanged(this._videoElement.videoWidth, this._videoElement.videoHeight);\r\n    }\r\n\r\n    private _videoPausedUwp = () => {\r\n        if (this._videoElement) {\r\n            this._videoElement.src = this._videoBindingRT.uri || '';\r\n            this._videoElement.play();\r\n        }\r\n    }\r\n\r\n    private get _videoBindingRT(): SlimCoreRT.VideoBindingRenderer {\r\n        return this._videoBinding as SlimCoreRT.VideoBindingRenderer;\r\n    }\r\n\r\n    private _controlFrameSink(shouldBeSet: boolean): void {\r\n        // nothe this implementation does not check iff frame sink has changed or if binding has changed!\r\n        if (this._videoBinding && this._isFrameSinkSet !== shouldBeSet) {\r\n            this._isFrameSinkSet = shouldBeSet;\r\n            if (shouldBeSet) {\r\n                this._videoBinding.addFrameSink(this._frameSink);\r\n            } else {\r\n                this._videoBinding.removeFrameSink(this._frameSink);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass VideoFrame implements IElectronVideoFrame {\r\n    public constructor(private _imageData: ImageData, private _mirrored: boolean) {\r\n    }\r\n\r\n    public getSize(): Size {\r\n        return { width: this._imageData.width, height: this._imageData.height };\r\n    }\r\n\r\n    public isMirrored(): boolean {\r\n        return this._mirrored;\r\n    }\r\n\r\n    public getImageData(): ImageData {\r\n        return this._imageData;\r\n    }\r\n}\r\n\r\nclass SlimCoreElectronRendererError implements IRendererError {\r\n    public constructor(public reason: any, public errorType: RendererErrorType = RendererErrorType.Unknown) {\r\n    }\r\n\r\n    public toString() {\r\n        return `Reason=${this.reason}, errorType=${this.errorType}`;\r\n    }\r\n}\r\n\r\nfunction isElectronElement(target: IRenderTarget): target is ElectronElement {\r\n    return (target as ElectronElement).renderer !== undefined;\r\n}\r\n\r\nfunction convertFrameType(type: SlimCore.FrameSink.FrameType): FrameType {\r\n    switch (type) {\r\n        case SlimCore.FrameSink.FrameType.None:\r\n            return FrameType.None;\r\n        case SlimCore.FrameSink.FrameType.Software:\r\n            return FrameType.Software;\r\n        case SlimCore.FrameSink.FrameType.Hardware:\r\n            return FrameType.Hardware;\r\n        default:\r\n            return FrameType.Unknown;\r\n    }\r\n}\r\n\r\nfunction convertRendererError(error: Error): RendererErrorType {\r\n    const videoRendererError = error as SlimCore.VideoRendererError;\r\n\r\n    switch (videoRendererError.reason) {\r\n        case SlimCore.VideoRenderer.ErrorReason.ContextFailed:\r\n            return RendererErrorType.RendererFailedGpuContext;\r\n        case SlimCore.VideoRenderer.ErrorReason.Unavailable:\r\n            return RendererErrorType.RendererFailedUnavailable;\r\n        default:\r\n            return RendererErrorType.RendererFailed;\r\n    }\r\n}\r\n\r\nfunction convertScalingMode(scalingMode: ScalingMode): SlimCore.VideoRenderer.ScalingMode {\r\n    switch (scalingMode) {\r\n        case ScalingMode.Stretch:\r\n            return SlimCore.VideoRenderer.ScalingMode.Stretch;\r\n        case ScalingMode.Crop:\r\n            return SlimCore.VideoRenderer.ScalingMode.Crop;\r\n        case ScalingMode.Fit:\r\n            return SlimCore.VideoRenderer.ScalingMode.Fit;\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronVideoRenderer.ts","/// <reference path=\"../typings/slimcore.d.ts\" />\r\n/// <reference path=\"../typings/slimcore-enums.d.ts\" />\r\n\r\nimport {\r\n    CauseId, ISharingSource, IStream, SharingControlDisableReason, SharingSourceType, VideoDeviceDesc\r\n} from 'skype-calling-interface';\r\n\r\nimport * as _ from 'lodash';\r\nimport { ISlimCoreElectronApplicationHooks, ISlimCoreElectronControlInjector, Rectangle } from '../typings/skype-calling-electron';\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\nimport SlimCoreElectronBase from './SlimCoreElectronBase';\r\n\r\nimport SlimCoreElectronDeviceManager from './SlimCoreElectronDeviceManager';\r\nimport SlimCoreElectronScreenScraper from './SlimCoreElectronScreenScraper';\r\nimport SlimCoreElectronScreenSharingControl from './SlimCoreElectronScreenSharingControl';\r\n\r\n// From electron/typings/slimcore-enums.d.ts:\r\nimport Enums = SlimCore.Enums;\r\n\r\nimport MonitorInfo = SlimCore.MonitorInfo;\r\nimport WindowInfo = SlimCore.WindowInfo;\r\nimport VideoBindingScreenShare = SlimCore.VideoBindingScreenShare;\r\nimport { CALL_OPERATIONS_INTERNAL } from '../../common/ts/callConstants';\r\nimport { ICallTelemetry } from '../../common/ts/callTelemetry';\r\nimport { generateCauseId } from '../../common/ts/causeId';\r\nimport { IInternalLogger } from '../../common/ts/internalLogger';\r\nimport { callOperation } from '../../common/ts/operationDecorators';\r\nimport OperationHandler from '../../common/ts/operationHandler';\r\n\r\nconst VIDEO_OBJECT_WAIT_TIMEOUT_MS = 500;\r\n\r\ninterface SlimCoreElectronLocalScreenShareEvents {\r\n    sharingSourceLost: () => void; // tslint:disable-line:prefer-method-signature\r\n    windowClosed(): void;\r\n    scraperEvent(args: SlimCore.VideoBindingScreenShare.Events.ScraperEventArgs): void;\r\n}\r\n\r\nexport default class SlimCoreElectronLocalScreenShare extends SlimCoreElectronBase<SlimCoreElectronLocalScreenShareEvents> implements IStream {\r\n    public isStreaming = false;\r\n    public isAvailable = true;\r\n    public negotiationTag: string;\r\n\r\n    private _localVideoObjectId: number = 0;\r\n    private _previewVideoObjectId: number = 0;\r\n    private _videoBindingScreenShare: VideoBindingScreenShare;\r\n    private _screenScraper: SlimCoreElectronScreenScraper;\r\n    private _selectedMonitor: MonitorInfo;\r\n    private _selectedRegion: Rectangle;\r\n    private _selectedWindow: WindowInfo;\r\n    private _selectedCamera: VideoDeviceDesc;\r\n    private _editViewPPTWindowId: number = 0;\r\n    private _videoStatusChangedHandler: SlimCore.Disposable;\r\n    private _callOperationHandler: OperationHandler;\r\n\r\n    public constructor(\r\n        logger: IInternalLogger,\r\n        settings: SlimCoreCommon.Settings,\r\n        engine: SlimCoreCommon.Engine,\r\n        private _callObjectId: number,\r\n        private _callHandler: SlimCoreCommon.CallHandler,\r\n        private _deviceManager: SlimCoreElectronDeviceManager,\r\n        private _appHooks: ISlimCoreElectronApplicationHooks,\r\n        private _screenSharingControl: SlimCoreElectronScreenSharingControl,\r\n        private _callTelemetry: ICallTelemetry\r\n    ) {\r\n        super(logger.createChild(() => `LocalScreenShare[${this._localVideoObjectId}]`), settings, engine);\r\n        this._logger.info('constructor');\r\n        this._callOperationHandler = new OperationHandler(this._logger, this._callTelemetry);\r\n\r\n        try {\r\n            this._screenScraper = new SlimCoreElectronScreenScraper(this._slimcoreInstance);\r\n        } catch (error) {\r\n            this._logger.warn(`${error}`);\r\n        }\r\n\r\n        if (this._screenScraper) {\r\n            this._registerDisposable(this._appHooks.onDisplaysChanged(() => this.handleDisplaysChanged()));\r\n        }\r\n        // TODO: Register a callback for window closed\r\n    }\r\n\r\n    public isActive(): boolean {\r\n        return this.isAvailable && this.isStreaming;\r\n    }\r\n\r\n    private _showSharingIndicator(region: Rectangle) {\r\n\r\n        this._appHooks.showSharingIndicator(region);\r\n\r\n        const controlInjector: ISlimCoreElectronControlInjector = this._appHooks.getControlInjector();\r\n        if (controlInjector && controlInjector.setInjectionRect) {\r\n            controlInjector.setInjectionRect(region).catch(error => {\r\n                const errorDetails: string = JSON.stringify({ errorMsg: error, region });\r\n                this._screenSharingControl.enableScreenSharingControl(false, SharingControlDisableReason.SetInjectionFailed, errorDetails);\r\n                this._logger.error(`Set control Injector failure, disable screen sharing control. Error: ${error}`);\r\n            });\r\n        }\r\n    }\r\n\r\n    private _videoObjectChanged(value: Enums.VideoStatus) {\r\n        const causeId = generateCauseId();\r\n        this.isAvailable = SlimCoreCommon.isVideoAvailable(value);\r\n        this.isStreaming = false;\r\n        if (SlimCoreCommon.isVideoInState(value, [Enums.VideoStatus.Starting, Enums.VideoStatus.Running])) {\r\n            if (!this._selectedMonitor && !this._selectedWindow && !this._selectedCamera) {\r\n                // we're screen sharing but no monitor selected. stop screensharing\r\n                SlimCoreCommon.forgetAndLog(this.stop(causeId), this._logger, 'stopping screen sharing due to no monitor/camera being selected');\r\n            } else {\r\n                this.isStreaming = true;\r\n                if (!this._selectedCamera) {\r\n                    this._appHooks.showSharingIndicator(this._selectedRegion || (this._selectedMonitor && this._selectedMonitor.region) || (this._selectedWindow && this._selectedWindow.windowId));\r\n                }\r\n            }\r\n        }\r\n\r\n        if (SlimCoreCommon.isVideoInState(value, [Enums.VideoStatus.Paused])) {\r\n            this._appHooks.hideSharingIndicator();\r\n        }\r\n\r\n        this.raiseChanged();\r\n    }\r\n\r\n    private _setCaptureRegionAndWindow(region?: SlimCore.Region, windowId?: number) {\r\n        if (this._slimcoreInstance.setScreenCaptureRectangle) {\r\n            this._slimcoreInstance.setScreenCaptureRectangle(this._localVideoObjectId, region, undefined, windowId);\r\n            return;\r\n        }\r\n\r\n        if (this._videoBindingScreenShare) {\r\n            this._videoBindingScreenShare.setCaptureRegionAndWindow(region, windowId);\r\n            return;\r\n        }\r\n\r\n        throw new Error('Failed to set capture region / window');\r\n    }\r\n\r\n    private _handleScraperEvent(args: SlimCore.VideoBindingScreenShare.Events.ScraperEventArgs) {\r\n        this._logger.info(`Handle Scraper event, event = ${args.event} data = ${args.data}`);\r\n        const eventData = args.data;\r\n\r\n        switch (args.event) {\r\n            case Enums.ScraperEvent.PPTPresenterView_Enter:\r\n                this._editViewPPTWindowId = this._selectedWindow.windowId;\r\n                this._selectedWindow.windowId = eventData;\r\n                this._appHooks.showSharingIndicator(eventData);\r\n                this._setCaptureRegionAndWindow(undefined, eventData);\r\n                this._logger.info(`shared PPT entered presenter mode`);\r\n                break;\r\n            case Enums.ScraperEvent.PPTPresenterView_Exit:\r\n                this._selectedWindow.windowId = this._editViewPPTWindowId;\r\n                this._appHooks.showSharingIndicator(this._selectedWindow.windowId);\r\n                this._setCaptureRegionAndWindow(undefined, this._selectedWindow.windowId);\r\n                this._logger.info(`shared PPT exited presenter mode`);\r\n                break;\r\n            case Enums.ScraperEvent.WindowClosed:\r\n                // make sure that the window for the event matches the current window id\r\n                if (this._selectedWindow.windowId !== eventData) { return; }\r\n                this._logger.info(`Application window closed. Stopping the screenshare`);\r\n                this.event('windowClosed').raise();\r\n                break;\r\n            default:\r\n                this.event('scraperEvent').raise(args);\r\n        }\r\n    }\r\n\r\n    private _startPreviewVideoObject(): Promise<void> {\r\n        if (!this._shouldUseVideoBindingScreenShare()) {\r\n            return Promise.resolve<void>();\r\n        }\r\n        return this._deviceManager.getPreviewVideo(Enums.VideoType.ScreenShare)\r\n            .then(videoObjectId => {\r\n                return this._deviceManager.getScreenShareBindingManager().acquire(this, videoObjectId)\r\n                    .then(binding => {\r\n                        this._previewVideoObjectId = videoObjectId;\r\n                        this._videoBindingScreenShare = binding; // from now on we must release binding\r\n                        this._videoBindingScreenShare.on('scraper-event', args => this._handleScraperEvent(args));\r\n                    });\r\n            });\r\n    }\r\n\r\n    private _stopPreviewVideoObject(): Promise<void> {\r\n        if (!this._shouldUseVideoBindingScreenShare()) {\r\n            return Promise.resolve<void>();\r\n        } else if (this._previewVideoObjectId && this._videoBindingScreenShare) {\r\n            this._logger.info(`calling slimcore video release binding`);\r\n            this._videoBindingScreenShare.removeAllListeners('scraper-event');\r\n            const releasePromise = this._deviceManager.getScreenShareBindingManager().release(this, this._previewVideoObjectId)\r\n                .catch(error => this._logger.error(`Failed on releasing screen sharing binding. Error: ${error}`));\r\n            this._previewVideoObjectId = 0;\r\n            this._videoBindingScreenShare = null;\r\n            return releasePromise;\r\n        } else {\r\n            return Promise.resolve();\r\n        }\r\n    }\r\n\r\n    private _shouldUseVideoBindingScreenShare() {\r\n        return !this._slimcoreInstance.setScreenCaptureRectangle && this._deviceManager.hasVideoBindingScreenShare();\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS_INTERNAL.ELECTRON_START_SCREEN_SHARING, {waitFor: CALL_OPERATIONS_INTERNAL.ELECTRON_STOP_SCREEN_SHARING})\r\n    public start(causeId: CauseId, source?: ISharingSource, cropRegion?: Rectangle, negotiationTag?: string): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger(CALL_OPERATIONS_INTERNAL.ELECTRON_START_SCREEN_SHARING, causeId);\r\n        fnLogger.info(`local screen share start`);\r\n\r\n        const startPromise = Promise.resolve()\r\n            .then(async () => {\r\n                const sourceInfo = this.sourceToInfo(source);\r\n                if (!sourceInfo) {\r\n                    throw new Error('Unable to start sharing, source could not be found');\r\n                }\r\n\r\n                fnLogger.info(`calling slimcore create local video`);\r\n                const isCameraSource = !!source && source.getType() === SharingSourceType.Camera;\r\n                if (isCameraSource) {\r\n                    const deviceInfo = sourceInfo as VideoDeviceDesc;\r\n                    this._localVideoObjectId = this._slimcoreInstance.createLocalVideo(Enums.VideoType.ScreenShare, deviceInfo.label, deviceInfo.id);\r\n                } else {\r\n                    this._localVideoObjectId = this._slimcoreInstance.createLocalVideo(Enums.VideoType.ScreenShare, '', '');\r\n                }\r\n\r\n                this._videoStatusChangedHandler = this._slimcoreInstance.handle(\r\n                    'object-property-changed',\r\n                    { objectId: this._localVideoObjectId, propKey: Enums.Property.VideoStatus },\r\n                    eventData => this._videoObjectChanged(eventData.value as number));\r\n\r\n                const videoStatus = this._getIntProperty(this._callHandler, this._localVideoObjectId, Enums.Property.VideoStatus);\r\n                this._videoObjectChanged(videoStatus);\r\n\r\n                this._callHandler.callAttachSendVideo(this._callObjectId, this._localVideoObjectId);\r\n                fnLogger.info(`waiting for video object to be available`);\r\n                await SlimCoreCommon.waitForVideoObjectToBeAvailable(this._slimcoreInstance, this._callHandler, this._localVideoObjectId, this._logger, VIDEO_OBJECT_WAIT_TIMEOUT_MS);\r\n                if (!isCameraSource) {\r\n                    this._logger.info(`start preview video object`);\r\n                    await this._startPreviewVideoObject();\r\n                }\r\n                fnLogger.info(`calling slimcore video start`);\r\n                this.selectSource(source, sourceInfo, cropRegion);\r\n\r\n                this.negotiationTag = negotiationTag;\r\n                this._slimcoreInstance.videoStart(this._localVideoObjectId, negotiationTag);\r\n                this.isStreaming = true;\r\n                this.raiseChanged();\r\n            });\r\n\r\n        return this._callOperationHandler.registerPromise(CALL_OPERATIONS_INTERNAL.ELECTRON_START_SCREEN_SHARING, startPromise)\r\n            .catch((error: any) => {\r\n                fnLogger.logFailure(`Failed to start LocalScreenShare. Error: ${error}`);\r\n                this.stop(undefined, causeId);\r\n                Promise.reject(error);\r\n            });\r\n    }\r\n\r\n    public changeCropRegion(cropRegion: Rectangle): void {\r\n        const sourceInfo = this.sourceToInfo(null);\r\n        this.selectMonitorWithOptionalCrop(sourceInfo as MonitorInfo, cropRegion);\r\n    }\r\n\r\n    @callOperation(CALL_OPERATIONS_INTERNAL.ELECTRON_STOP_SCREEN_SHARING, {waitFor: CALL_OPERATIONS_INTERNAL.ELECTRON_START_SCREEN_SHARING})\r\n    public stop(causeId: CauseId, negotiationTag?: string): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger(CALL_OPERATIONS_INTERNAL.ELECTRON_STOP_SCREEN_SHARING, causeId);\r\n        const always = () => {\r\n            this._localVideoObjectId = 0;\r\n            this.isStreaming = false;\r\n            this._selectedMonitor = null;\r\n            this._selectedRegion = null;\r\n            this._selectedWindow = null;\r\n            this._selectedCamera = null;\r\n            this._editViewPPTWindowId = 0;\r\n            this._appHooks.hideSharingIndicator();\r\n\r\n            if (this._videoStatusChangedHandler) {\r\n                this._videoStatusChangedHandler.dispose();\r\n                this._videoStatusChangedHandler = null;\r\n            }\r\n\r\n            this.raiseChanged();\r\n        };\r\n\r\n        const stopPromise = Promise.resolve()\r\n            .then(() => this._stopPreviewVideoObject())\r\n            .then(() => {\r\n                if (this._localVideoObjectId !== 0) {\r\n                    fnLogger.info(`calling slimcore video stop`);\r\n                    this.negotiationTag = negotiationTag;\r\n                    this._slimcoreInstance.videoStop(this._localVideoObjectId, this.negotiationTag);\r\n                }\r\n            })\r\n            .then(always, error => {\r\n                fnLogger.logFailure(`Failed to stop LocalScreenShare. Error: ${error}`);\r\n                always();\r\n                throw error;\r\n            });\r\n        return this._callOperationHandler.registerPromise(CALL_OPERATIONS_INTERNAL.ELECTRON_STOP_SCREEN_SHARING, stopPromise);\r\n    }\r\n\r\n    public dispose(causeId: CauseId) {\r\n        this._logger.info('Disposing of LocalScreenShare');\r\n        if (this._localVideoObjectId !== 0 || this._previewVideoObjectId !== 0) {\r\n            this.stop(causeId);\r\n        }\r\n\r\n        if (this._videoStatusChangedHandler) {\r\n            this._videoStatusChangedHandler.dispose();\r\n            this._videoStatusChangedHandler = null;\r\n        }\r\n\r\n        super.dispose();\r\n    }\r\n\r\n    private selectSource(source: ISharingSource, sourceInfo: MonitorInfo | WindowInfo | VideoDeviceDesc, cropRegion?: Rectangle) {\r\n        if (source && source.getType() === SharingSourceType.Window) {\r\n            this.selectWindow(sourceInfo as WindowInfo);\r\n        } else if (source && source.getType() === SharingSourceType.Camera) {\r\n            this._selectedCamera = sourceInfo as VideoDeviceDesc;\r\n        } else {\r\n            this.selectMonitorWithOptionalCrop(sourceInfo as MonitorInfo, cropRegion);\r\n        }\r\n    }\r\n\r\n    private selectMonitorWithOptionalCrop(monitor: MonitorInfo, cropRegion?: Rectangle) {\r\n        const region = cropRegion || monitor.region;\r\n        this._logger.info(`Selected region with optional crop, x = ${region.x}, y = ${region.y}, width = ${region.width} height = ${region.height}`);\r\n        this._showSharingIndicator(region);\r\n        this._setCaptureRegionAndWindow(region);\r\n        this._selectedMonitor = monitor;\r\n        this._selectedRegion = cropRegion;\r\n    }\r\n\r\n    private selectWindow(window: WindowInfo) {\r\n        this._appHooks.showSharingIndicator(window.windowId);\r\n        this._setCaptureRegionAndWindow(undefined, window.windowId);\r\n        this._selectedWindow = window;\r\n    }\r\n\r\n    private handleDisplaysChanged() {\r\n        const causeId = generateCauseId();\r\n        const fnLogger = this._logger.createFnLogger('HandleDisplaysChanged', causeId);\r\n        if (!this._selectedMonitor) {\r\n            fnLogger.logFailure(`On display change, monitor not seleted yet`);\r\n            return;\r\n        }\r\n        const safeStringify = (inputSource: any) => {\r\n            try { return JSON.stringify(inputSource); } catch (e) { return 'unable to stringify'; }\r\n        };\r\n\r\n        fnLogger.info(`On display change, currenlty selected monitor: ${safeStringify(this._selectedMonitor)} selected region:  ${safeStringify(this._selectedRegion)}`);\r\n\r\n        if (!this._selectedRegion) {\r\n            const monitors = this._screenScraper.getMonitorList() || [];\r\n            for (const monitorInfo of monitors) {\r\n                fnLogger.info(`On display change, new listed monitor: ${safeStringify(monitorInfo)}`);\r\n            }\r\n            const monitor = SlimCoreCommon.selectMonitorForScreenSharing(this._selectedMonitor, monitors);\r\n            if (monitor) {\r\n                fnLogger.info(`On display change, re-selected monitor: ${safeStringify(monitor)}`);\r\n                this.selectMonitorWithOptionalCrop(monitor);\r\n                return;\r\n            }\r\n        }\r\n        fnLogger.info(`stopping screen share because displays changed and could not resolve monitor info`);\r\n        SlimCoreCommon.forgetAndLog(this.stop(causeId), fnLogger, 'stopping screen share because sharing source lost');\r\n        this.event('sharingSourceLost').raise();\r\n    }\r\n\r\n    private sourceToInfo(source: ISharingSource): MonitorInfo | WindowInfo | VideoDeviceDesc {\r\n        if (!source) {\r\n            if (!this._screenScraper) {\r\n                this._logger.error('ScreenShare has no way to recover primary monitor');\r\n                return null;\r\n            } else {\r\n                const sourceList = this._screenScraper.getMonitorList() || [];\r\n                return _.find(sourceList, screen => screen.isPrimary);\r\n            }\r\n        }\r\n\r\n        switch (source.getType()) {\r\n            case SharingSourceType.Window: {\r\n                const sourceList = this._screenScraper.getWindowList() || [];\r\n                return _.find(sourceList, application => {\r\n                    return application.windowId === source.getId();\r\n                });\r\n            }\r\n\r\n            case SharingSourceType.Monitor: {\r\n                if (!this._screenScraper) {\r\n                    // For platforms that do not support enumeration take the region from source at face value\r\n                    // as primary monitor dimensions intead of trying to recover the monitorInfo\r\n                    return {\r\n                        monitorId: 0,\r\n                        name: source.getDescription(),\r\n                        region: source.getBounds(),\r\n                        isPrimary: true,\r\n                        isInternal: true,\r\n                        isDuplicated: false\r\n                    };\r\n                }\r\n                const sourceList = this._screenScraper.getMonitorList() || [];\r\n                return _.find(sourceList, screen => {\r\n                    return screen.monitorId === source.getId() || _.isEqual(screen.region, source.getBounds());\r\n                });\r\n            }\r\n\r\n            case SharingSourceType.Camera: {\r\n                return this._deviceManager.getCamera(source.getDeviceId());\r\n            }\r\n\r\n            default:\r\n                throw new Error(`Invalid source type: ${source.getType()}`);\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronLocalScreenShare.ts","import * as SlimCoreCommon from './SlimCoreCommon';\r\n\r\nclass SlimCoreElectronScreenScraper {\r\n    private _screenScraper: SlimCore.ScreenScraper;\r\n\r\n    constructor(private _slimcoreInstance: SlimCoreCommon.Engine) {\r\n        if (this._slimcoreInstance.getMonitorList && this._slimcoreInstance.getWindowList) {\r\n            return;\r\n        }\r\n\r\n        const slimcore = SlimCoreCommon.isSlimCoreRTModuleAvailable() ? (SlimCoreRT as any).SlimCore as typeof SlimCore : SlimCore;\r\n        if (!slimcore.ScreenScraper) {\r\n            throw new Error('ScreenScraper not supported');\r\n        }\r\n\r\n        this._screenScraper = new slimcore.ScreenScraper();\r\n    }\r\n\r\n    public getMonitorList() {\r\n        if (this._slimcoreInstance.getMonitorList) {\r\n            return this._slimcoreInstance.getMonitorList();\r\n        } else if (this._screenScraper) {\r\n            return this._screenScraper.getMonitorList();\r\n        } else {\r\n            throw new Error('not supported');\r\n        }\r\n    }\r\n\r\n    public getMonitorPreview(monitorId: number, width: number, height: number, asImage: boolean, region: SlimCore.Region) {\r\n        if (this._slimcoreInstance.getMonitorSnapshot) {\r\n            return this._slimcoreInstance.getMonitorSnapshot(monitorId, { width, height, asImage }, region).then(SlimCoreCommon.convertImageData);\r\n        } else if (this._screenScraper) {\r\n            return this._screenScraper.getMonitorPreview(monitorId, width, height, asImage) as Promise<ImageData>;\r\n        } else {\r\n            return Promise.reject(new Error('not supported'));\r\n        }\r\n    }\r\n\r\n    public getWindowList() {\r\n        if (this._slimcoreInstance.getWindowList) {\r\n            return this._slimcoreInstance.getWindowList();\r\n        } else if (this._screenScraper) {\r\n            return this._screenScraper.getWindowList();\r\n        } else {\r\n            throw new Error('not supported');\r\n        }\r\n    }\r\n\r\n    public getWindowPreview(windowId: number, width: number, height: number, asImage: boolean) {\r\n        if (this._slimcoreInstance.getWindowSnapshot) {\r\n            return this._slimcoreInstance.getWindowSnapshot(windowId, { width, height, asImage }).then(SlimCoreCommon.convertImageData);\r\n        } else if (this._screenScraper) {\r\n            return this._screenScraper.getWindowPreview(windowId, width, height, asImage) as Promise<ImageData>;\r\n        } else {\r\n            return Promise.reject(new Error('not supported'));\r\n        }\r\n    }\r\n\r\n    public getWindowIcon(windowId: number, width: number, height: number, asImage: boolean) {\r\n        if (this._slimcoreInstance.getWindowIcon) {\r\n            return this._slimcoreInstance.getWindowIcon(windowId, { width, height, asImage }).then(SlimCoreCommon.convertImageData);\r\n        } else if (this._screenScraper) {\r\n            return this._screenScraper.getWindowIcon(windowId, width, height, asImage) as Promise<ImageData>;\r\n        } else {\r\n            return Promise.reject(new Error('not supported'));\r\n        }\r\n    }\r\n}\r\n\r\nexport default SlimCoreElectronScreenScraper;\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronScreenScraper.ts","/// <reference path=\"../typings/slimcore-enums.d.ts\" />\r\n\r\nimport {\r\n    CauseId, IDisposable, VideoDeviceDesc\r\n} from 'skype-calling-interface';\r\n\r\nimport * as _ from 'lodash';\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\nimport SlimCoreElectronBase from './SlimCoreElectronBase';\r\nimport SlimCoreElectronDeviceManager from './SlimCoreElectronDeviceManager';\r\n\r\n// From electron/typings/slimcore-enums.d.ts:\r\nimport Enums = SlimCore.Enums;\r\nimport { generateCauseId } from '../../common/ts/causeId';\r\nimport { IInternalLogger } from '../../common/ts/internalLogger';\r\nimport SlimCoreElectronCall from './SlimCoreElectronCall';\r\nconst VIDEO_OBJECT_WAIT_TIMEOUT = 500;\r\n\r\nexport default class SlimCoreElectronLocalVideo extends SlimCoreElectronBase<{}> implements IDisposable {\r\n\r\n    public id: number;\r\n    public negotiationTag: string;\r\n\r\n    private _videoObjectId = 0;\r\n    private _currentStartPromise: Promise<void>;\r\n    private _currentStopPromise: Promise<void>;\r\n    private _currentCamera: VideoDeviceDesc;\r\n    private _internalVideoStartPromise: Promise<void>;\r\n\r\n    public constructor(\r\n        logger: IInternalLogger,\r\n        settings: SlimCoreCommon.Settings,\r\n        engine: SlimCoreCommon.Engine,\r\n        private _call: SlimCoreElectronCall,\r\n        private _callObjectId: number,\r\n        private _callHandler: SlimCoreCommon.CallHandler,\r\n        private _deviceManager: SlimCoreElectronDeviceManager\r\n    ) {\r\n        super(logger.createChild(() => `LocalVideo[${this._videoObjectId}]`), settings, engine);\r\n        this._logger.info('constructor');\r\n\r\n        this._registerDisposable(this._deviceManager.on('devicesChanged', () => this._devicesChanged()));\r\n    }\r\n\r\n    private _devicesChanged() {\r\n        const causeId = generateCauseId();\r\n        const fnLogger = this._logger.createFnLogger('devicesChanged', causeId);\r\n        fnLogger.info('Devices changed - checking if video needs to be restarted');\r\n        const selectedDevices = this._deviceManager.getSelectedDevices();\r\n\r\n        if (this._currentCamera && selectedDevices.camera && selectedDevices.camera !== this._currentCamera.id) {\r\n            fnLogger.info(`Changing video device to ${selectedDevices.camera}`);\r\n\r\n            this.stop(undefined, causeId)\r\n                .then(() => this.start(causeId, this.negotiationTag))\r\n                .catch(e => {\r\n                    fnLogger.logFailure(`Caught error while trying to stop\\start local video after device change. Error: ${e}`);\r\n                });\r\n        }\r\n    }\r\n\r\n    private _executeOperationAndExpectVideoStateTransition(transitionTriggerFunc: Function, videoObjectId: number, expectedFinalVideoStates: number[], causeId: CauseId) {\r\n        const fnLogger = this._logger.createFnLogger('LocalVideoOperation', causeId);\r\n        return new Promise<void>((resolve, reject) => {\r\n            let done = false;\r\n            let videoStatusChangedCallback: IDisposable = null;\r\n\r\n            const onVideoObjectStateChanged = (value: Enums.VideoStatus) => {\r\n                fnLogger.info(`Video state changed for monitored video ID[${videoObjectId}] -> ${value} (${Enums.VideoStatus[value]})`);\r\n\r\n                if (!done && _.indexOf(expectedFinalVideoStates, value) !== -1) {\r\n                    done = true;\r\n                    if (videoStatusChangedCallback) {\r\n                        videoStatusChangedCallback.dispose();\r\n                        videoStatusChangedCallback = null;\r\n                    }\r\n                    resolve();\r\n                }\r\n            };\r\n\r\n            setTimeout(() => {\r\n                if (!done) {\r\n                    if (videoStatusChangedCallback) {\r\n                        videoStatusChangedCallback.dispose();\r\n                        videoStatusChangedCallback = null;\r\n                    }\r\n\r\n                    const currentState = this._getIntProperty(this._callHandler, videoObjectId, Enums.Property.VideoStatus);\r\n                    fnLogger.info(`_executeOperationAndExpectVideoStateTransition[${videoObjectId}] time out. Current State = ${currentState}.`);\r\n\r\n                    if (_.indexOf(expectedFinalVideoStates, currentState) !== -1) {\r\n                        resolve();\r\n                    } else {\r\n                        const errorMessage = `_executeOperationAndExpectVideoStateTransition[${videoObjectId}] time out. Video not in expected final state`;\r\n                        fnLogger.info(errorMessage);\r\n                        reject(errorMessage);\r\n                    }\r\n                }\r\n            }, VIDEO_OBJECT_WAIT_TIMEOUT);\r\n\r\n            // Subscribe to object changes\r\n            videoStatusChangedCallback = this._slimcoreInstance.handle(\r\n                'object-property-changed',\r\n                { objectId: videoObjectId, propKey: Enums.Property.VideoStatus },\r\n                data => onVideoObjectStateChanged(data.value as number));\r\n\r\n            transitionTriggerFunc();\r\n        });\r\n    }\r\n\r\n    private _startInternalVideo(negotiationTag: string, causeId: CauseId) {\r\n        if (this._internalVideoStartPromise) {\r\n            return this._internalVideoStartPromise;\r\n        }\r\n        const fnLogger = this._logger.createFnLogger('startInternalVideo', causeId);\r\n        this._internalVideoStartPromise = Promise.resolve<void>(undefined)\r\n            .then(() => {\r\n                const selectedCamera = this._deviceManager.getSelectedCamera();\r\n                if (!selectedCamera) { throw new Error('No camera selected to start video on'); }\r\n\r\n                fnLogger.info(`Starting local video using camera: ${JSON.stringify(selectedCamera)}`);\r\n\r\n                this._currentCamera = selectedCamera;\r\n\r\n                this._videoObjectId = this._slimcoreInstance.createLocalVideo(Enums.VideoType.Video, selectedCamera.label, selectedCamera.id);\r\n                if (this._videoObjectId === 0) {\r\n                    fnLogger.logFailure('SlimCore returned invalid video object ID 0');\r\n                    throw new Error('SlimCore returned invalid video object ID 0');\r\n                }\r\n\r\n                this._callHandler.callAttachSendVideo(this._callObjectId, this._videoObjectId);\r\n            })\r\n            .then(() => SlimCoreCommon.waitForVideoObjectToBeAvailable(this._slimcoreInstance, this._callHandler, this._videoObjectId, this._logger))\r\n            .then(() => {\r\n                fnLogger.info(`Local Video is AVAILABLE. Starting Video`);\r\n\r\n                // reject promise if local video does not go to Running state\r\n                return this._executeOperationAndExpectVideoStateTransition(() => {\r\n                    if (negotiationTag) {\r\n                        this.negotiationTag = negotiationTag;\r\n                    }\r\n                    this._slimcoreInstance.videoStart(this._videoObjectId, this.negotiationTag);\r\n                }, this._videoObjectId, [Enums.VideoStatus.Running, Enums.VideoStatus.Starting], causeId);\r\n            });\r\n\r\n        return this._internalVideoStartPromise;\r\n    }\r\n\r\n    public start(causeId: CauseId, negotiationIag?: string): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger('start', causeId);\r\n        fnLogger.info('Local video START requested');\r\n\r\n        if (!this._call.callStateCanToggleVideo()) {\r\n            fnLogger.logFailure('Local video start requested but call is not connected, skipping operation');\r\n            return Promise.resolve(null);\r\n        }\r\n\r\n        if (this._currentStartPromise) {\r\n            fnLogger.logSuccess(`Start requested but pending start exists. Returning previous promise`);\r\n            return this._currentStartPromise;\r\n        }\r\n\r\n        let initialPromise: Promise<void>;\r\n        // do a synchronous check to avoid start/stop deadlock, if there's a pending stop, wait for that to finish first\r\n        if (this._currentStopPromise) {\r\n            fnLogger.info(`Start requested but pending stop exists. Waiting for previous stop promise`);\r\n            initialPromise = this._currentStopPromise;\r\n        } else {\r\n            initialPromise = Promise.resolve<void>();\r\n        }\r\n\r\n        this._currentStartPromise = initialPromise\r\n            .then(() => this._startInternalVideo(negotiationIag, causeId))\r\n            .then(() => {\r\n                this._currentStartPromise = null;\r\n            })\r\n            .catch(error => {\r\n                fnLogger.logFailure(error);\r\n                this._currentStartPromise = null;\r\n                this.stop(undefined, causeId);\r\n                throw error;\r\n            });\r\n\r\n        return this._currentStartPromise;\r\n    }\r\n\r\n    public stop(causeId: CauseId, negotiationIag?: string): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger('stop', causeId);\r\n        fnLogger.info('Local video STOP requested');\r\n\r\n        const always = () => {\r\n\r\n            this._videoObjectId = 0;\r\n\r\n            this._currentCamera = null;\r\n            this._currentStopPromise = null;\r\n            this._currentStartPromise = null;\r\n            this._internalVideoStartPromise = null;\r\n        };\r\n\r\n        if (this._currentStopPromise) {\r\n            fnLogger.info(`Stop requested but pending stop exists. Returning previous promise`);\r\n            return this._currentStopPromise;\r\n        }\r\n\r\n        let initialPromise: Promise<void>;\r\n        // do a synchronous check to avoid start/stop deadlock, if there's a pending start, wait for that to finish first\r\n        if (this._currentStartPromise) {\r\n            fnLogger.info(`Waiting for start promise to finish.`);\r\n            initialPromise = this._currentStartPromise;\r\n        } else {\r\n            initialPromise = Promise.resolve<void>();\r\n        }\r\n\r\n        this._currentStopPromise = initialPromise\r\n            .then(() => {\r\n                this._logger.info('Stopping SlimCore video objects');\r\n\r\n                if (this._videoObjectId !== 0) {\r\n                    this.negotiationTag = negotiationIag;\r\n                    this._slimcoreInstance.videoStop(this._videoObjectId, this.negotiationTag);\r\n                }\r\n            })\r\n            .then(() => {\r\n                if (this._call.callStateCanToggleVideo()) {\r\n                    return SlimCoreCommon.waitForVideoObjectToBeAvailable(this._slimcoreInstance, this._callHandler, this._videoObjectId, this._logger);\r\n                } else {\r\n                    return Promise.resolve<void>();\r\n                }\r\n            })\r\n            .then(() => {\r\n                fnLogger.info('VideoBinding was released');\r\n            })\r\n            .then(always, error => {\r\n                fnLogger.logFailure(error);\r\n                always();\r\n                throw error;\r\n            });\r\n\r\n        return this._currentStopPromise;\r\n    }\r\n\r\n    public dumpVideoSourceImages(): Promise<number> {\r\n        if (this._videoObjectId === 0) {\r\n            return Promise.reject(new Error('Cannot dump video effects debug images when video is not created'));\r\n        }\r\n\r\n        return this._slimcoreInstance.dumpVideoSourceImages(this._videoObjectId);\r\n    }\r\n\r\n    public dispose(causeId: CauseId) {\r\n        const always = () => super.dispose();\r\n        Promise.resolve(() => this._videoObjectId !== 0 ? this.stop(undefined, causeId) : true)\r\n            .then(always).catch(always);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronLocalVideo.ts","/**\r\n * guid.ts\r\n * Author: Adrian Potra\r\n * Copyright: Microsoft 2016\r\n *\r\n * Simple GUID generator.\r\n */\r\n\r\nexport default function generateGuid(): string {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\r\n        const r = Math.random() * 16 | 0; /* #1237308 (Closed Won't Fix Bug) *//* tslint:disable-line:insecure-random no-single-line-block-comment */\r\n        const v = c === 'x' ? r : r & 3 | 8;\r\n        return v.toString(16);\r\n    });\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../common/ts/guid.ts","import {\r\n    AccountConfiguration, CallingIntent, CallingLogger, CallingStackInitOptions,\r\n    CallState, CauseId, ICall, ICallRegistry,\r\n    ICallRegistryEvents, IDisposable,\r\n    IEcsProvider, ISetup, ProxiedPushNotificationEvent, SkypeIdentity\r\n} from 'skype-calling-interface';\r\nimport { ISlimCoreElectronApplicationHooks, TelemetryService } from '../typings/skype-calling-electron';\r\n\r\nimport * as _ from 'lodash';\r\nimport * as async from '../../common/ts/async';\r\nimport { noop } from '../../common/ts/fn';\r\nimport generateGuid from '../../common/ts/guid';\r\nimport * as piiUtils from '../../common/ts/piiUtils';\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\nimport SlimCoreElectronBase from './SlimCoreElectronBase';\r\nimport SlimCoreElectronCall from './SlimCoreElectronCall';\r\nimport SlimCoreElectronDeviceManager from './SlimCoreElectronDeviceManager';\r\nimport SlimCoreElectronEcsProvider from './SlimCoreElectronEcsProvider';\r\nimport SlimCoreElectronSetup from './SlimCoreElectronSetup';\r\n\r\n// From electron/typings/slimcore-enums.d.ts:\r\nimport Enums = SlimCore.Enums;\r\nimport { generateCauseId } from '../../common/ts/causeId';\r\nimport InternalLogger, { IInternalLogger } from '../../common/ts/internalLogger';\r\n\r\nexport default class SlimCoreElectronCallRegistry extends SlimCoreElectronBase<ICallRegistryEvents> implements ICallRegistry {\r\n    public calls: SlimCoreElectronCall[] = [];\r\n    public identity: string;\r\n    private _skypeIdentity: SkypeIdentity;\r\n    private _slimcoreCallHandler: SlimCoreCommon.CallHandler;\r\n    private _loginPromiseDefered = async.defer<SlimCoreCommon.CallHandler>();\r\n    private _logoutPromiseDefered = async.defer<void>();\r\n    private _startSlimcorePromiseDefered = async.defer<SlimCoreCommon.CallHandler>();\r\n    public isDisposing = false;\r\n    private _disposedPromise = async.defer<void>();\r\n    private slimcoreInstanceStartCalled = false;\r\n    private libStatus: Enums.LibStatus;\r\n    private _setup: SlimCoreElectronSetup;\r\n    private _ecsProvider: SlimCoreElectronEcsProvider;\r\n    private _account: SlimCoreCommon.Account;\r\n\r\n    public constructor(\r\n        callingLogger: CallingLogger,\r\n        settings: SlimCoreCommon.Settings,\r\n        engine: SlimCoreCommon.Engine,\r\n        private _deviceManager: SlimCoreElectronDeviceManager,\r\n        private _appHooks: ISlimCoreElectronApplicationHooks,\r\n        private _telemetryService?: TelemetryService\r\n    ) {\r\n        super(new InternalLogger(callingLogger).createChild('CallRegistry'), settings, engine);\r\n        this._logger.info('constructor');\r\n\r\n        this._slimcoreInstance.setMaxListeners(0);\r\n        this._ecsProvider = new SlimCoreElectronEcsProvider(this._slimcoreInstance);\r\n    }\r\n\r\n    public async dispose(causeId = generateCauseId()): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger('dispose', causeId);\r\n        fnLogger.info('disposing call registry');\r\n\r\n        if (this.isDisposing) {\r\n            fnLogger.warn('call registry is already in disposing stage!');\r\n            return this._disposedPromise.promise;\r\n        }\r\n        this.isDisposing = true;\r\n\r\n        const always = () => {\r\n            this.calls = [];\r\n            if (this._slimcoreCallHandler) {\r\n                this._slimcoreCallHandler.dispose();\r\n                this._slimcoreCallHandler = undefined;\r\n            }\r\n            fnLogger.info('callhandler is disposed');\r\n            if (this._account) {\r\n                this._account.dispose();\r\n                this._account = undefined;\r\n            }\r\n            fnLogger.info('account is disposed');\r\n            this.event('disposed').raise();\r\n            super.dispose();\r\n            this._disposedPromise.resolve();\r\n        };\r\n\r\n        const callStopPromises = this.calls.map(call => call.stop());\r\n        const logout = () => this.logout(causeId);\r\n        Promise.all(callStopPromises).then(logout, logout).then(always, always);\r\n        return this._disposedPromise.promise;\r\n    }\r\n\r\n    public get loginPromise(): Promise<SlimCoreCommon.CallHandler> {\r\n        return this._loginPromiseDefered.promise;\r\n    }\r\n\r\n    public get disposePromise(): Promise<void> {\r\n        return this._disposedPromise.promise;\r\n    }\r\n\r\n    private _initCall(call: SlimCoreElectronCall, callObjectId: number, causeId: CauseId): void {\r\n        const fnLogger = this._logger.createFnLogger(`initCall[callId=${call.callId}][participantId=${call.participantId}]`, causeId);\r\n        fnLogger.info(`callObjectId=${callObjectId}`);\r\n        call.incomingCallInit(callObjectId, causeId);\r\n    }\r\n\r\n    private _incomingCallMonitor(data: SlimCore.Engine.Events.ObjectPropertyChangedArgs, causeId: CauseId) {\r\n        const fnLogger = this._logger.createFnLogger('incomingCallMonitor', causeId);\r\n        fnLogger.info(`_incomingCallMonitor for objectPropertyChange objectId=${data.objectId}`);\r\n        const callId = this._getStrProperty(this._slimcoreCallHandler, data.objectId, Enums.Property.CallName);\r\n        if (SlimCoreCommon.hasFeature(Enums.Feature.MultiUserSupport)) {\r\n            const userId = this._getStrProperty(this._slimcoreCallHandler, data.objectId, Enums.Property.CallAccountIdentity);\r\n            if (userId !== this.identity) {\r\n                fnLogger.info(`incoming call(${callId}) for user(${piiUtils.mriOrId(userId)}) but current user is ${piiUtils.mriOrId(this.identity)}`);\r\n                return;\r\n            }\r\n        }\r\n        const localParticipantId = this._getStrProperty(this._slimcoreCallHandler, data.objectId, Enums.Property.CallLegId);\r\n\r\n        if (!this._getCall(callId, localParticipantId, causeId)) {\r\n            fnLogger.logFailure(`getCall failed to find the call(callId: ${callId}, localParticipantId: ${localParticipantId})`);\r\n        }\r\n    }\r\n\r\n    public init(skypeIdentity: SkypeIdentity, initOptions: CallingStackInitOptions = { block: true }, causeId = generateCauseId()): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger('init', causeId);\r\n        fnLogger.info('init');\r\n\r\n        if (!initOptions.block && !SlimCoreCommon.hasFeature(Enums.Feature.AsyncStart)) {\r\n            initOptions.block = true;\r\n        }\r\n\r\n        let accountStatusCallback: IDisposable = null;\r\n\r\n        if (!this.slimcoreInstanceStartCalled) {\r\n            if (!initOptions.block) {\r\n\r\n                this._registerDisposable(this._slimcoreInstance.handle(\r\n                    'lib-status-changed',\r\n                    { libStatus: SlimCore.Enums.LibStatus.Running },\r\n                    data => this._onLibStatusChanged(data)));\r\n            }\r\n\r\n            this._slimcoreInstance.setupSetStr('*Lib/SCT/Telemetry/DiagnosticLevel', initOptions.telemetryDiagnosticLevel || '');\r\n\r\n            this._slimcoreInstance.start(initOptions.block);\r\n            fnLogger.info(`starting slimcoreInstance block=${initOptions.block}`);\r\n            this.slimcoreInstanceStartCalled = true;\r\n\r\n            if (initOptions.block) {\r\n                // Blocking call finished so we can resolve promise immediately,\r\n                // and manually set libstatus to running\r\n                this.libStatus = Enums.LibStatus.Running;\r\n                this._startSlimcorePromiseDefered.resolve();\r\n            }\r\n        } else {\r\n            fnLogger.info('skipping slimcoreInstance start, because it was already started');\r\n        }\r\n\r\n        this._skypeIdentity = skypeIdentity;\r\n        this.identity = skypeIdentity.id;\r\n        this._skypeIdentity.tokenProvider()\r\n            .then((token: string) => {\r\n                // Set up platform callbacks for AccountStatus\r\n                fnLogger.info('setting up stack callbacks');\r\n                accountStatusCallback = this._slimcoreInstance.handle('object-property-changed', { propKey: Enums.Property.AccountStatus, value: Enums.AccountStatus.LoggedIn }, () => {\r\n                    const callHandler = this._slimcoreInstance.createCallInterface();\r\n                    this._slimcoreCallHandler = SlimCoreCommon.wrap(callHandler, this._settings);\r\n                    fnLogger.info('createCallInterface returned');\r\n                    this._loginPromiseDefered.resolve(this._slimcoreCallHandler);\r\n\r\n                    if (accountStatusCallback) {\r\n                        accountStatusCallback.dispose();\r\n                        accountStatusCallback = null;\r\n                    }\r\n\r\n                    this._hookCallRegistryEvents();\r\n                });\r\n\r\n                this._slimcoreInstance.handle(\r\n                    'object-property-changed',\r\n                    { propKey: Enums.Property.CallStatus, value: Enums.CallStatus.RingingIn },\r\n                    eventData => this._incomingCallMonitor(eventData, causeId));\r\n\r\n                this._initializeSlimCore(token);\r\n                this._logger.info('initialize returned');\r\n            })\r\n            .catch((err: any) => {\r\n                fnLogger.logFailure(err);\r\n                this._loginPromiseDefered.reject(err);\r\n            });\r\n\r\n        return this.loginPromise.then(noop);\r\n    }\r\n\r\n    public uninit(): Promise<void> {\r\n        if (!this.slimcoreInstanceStartCalled) {\r\n            this._logoutPromiseDefered.reject(new Error('CallRegistry uninit called without slimcore::start()'));\r\n        } else if (this.libStatus !== Enums.LibStatus.Running) {\r\n            this._startSlimcorePromiseDefered.reject(new Error('Callregistry uninit called before slimcore reached Running state'));\r\n            this._logoutPromiseDefered.reject(new Error('Callregistry uninit called before slimcore reached Running state'));\r\n        }\r\n\r\n        let accountStatusCallback: IDisposable = null;\r\n        try {\r\n            this._logger.info('uninit: setting up stack callbacks');\r\n            accountStatusCallback = this._slimcoreInstance.handle('object-property-changed', { propKey: Enums.Property.AccountStatus, value: Enums.AccountStatus.LoggedOut }, () => {\r\n                this._logoutPromiseDefered.resolve();\r\n                if (accountStatusCallback) {\r\n                    accountStatusCallback.dispose();\r\n                    accountStatusCallback = null;\r\n                }\r\n            });\r\n            this._logger.info('uninit(): calling slimcore.logout()');\r\n            this._slimcoreInstance.logout();\r\n        } catch (e) {\r\n            this._logger.error('slimcore.logout() failed.', e);\r\n            this._logoutPromiseDefered.reject(e);\r\n        }\r\n\r\n        // reset the start bool, so that slimcore can be started again if necessary\r\n        this.slimcoreInstanceStartCalled = false;\r\n\r\n        return this._logoutPromiseDefered.promise.then(noop);\r\n    }\r\n\r\n    public login(skypeIdentity: SkypeIdentity, causeId = generateCauseId(), configuration?: string): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger('login', causeId);\r\n        fnLogger.info('login');\r\n\r\n        let accountStatusCallback: IDisposable = null;\r\n\r\n        this._skypeIdentity = skypeIdentity;\r\n        this.identity = skypeIdentity.id;\r\n        this._setup = new SlimCoreElectronSetup(this._slimcoreInstance, this.identity);\r\n\r\n        this._skypeIdentity.tokenProvider()\r\n            .then((token: string) => {\r\n                // Set up platform callbacks for AccountStatus\r\n                fnLogger.info('setting up stack callbacks');\r\n                accountStatusCallback = this._slimcoreInstance.handle(\r\n                    'object-property-changed', { propKey: Enums.Property.AccountStatus, value: Enums.AccountStatus.LoggedIn }, eventData => {\r\n                        if (SlimCoreCommon.hasFeature(Enums.Feature.MultiUserSupport)) {\r\n                            if (this._account.getObjectId() !== eventData.objectId) {\r\n                                fnLogger.error(`accountObjectId: ${this._account.getObjectId} does not match with ${eventData.objectId}`);\r\n                                return;\r\n                            }\r\n                        }\r\n                        const callHandler = this._createCallHandler();\r\n                        this._slimcoreCallHandler = SlimCoreCommon.wrap(callHandler, this._settings);\r\n                        fnLogger.info('createCallInterface returned');\r\n                        this._loginPromiseDefered.resolve(this._slimcoreCallHandler);\r\n\r\n                        if (accountStatusCallback) {\r\n                            accountStatusCallback.dispose();\r\n                            accountStatusCallback = null;\r\n                        }\r\n                        this._hookCallRegistryEvents();\r\n                    });\r\n\r\n                this._slimcoreInstance.handle(\r\n                    'object-property-changed',\r\n                    { propKey: Enums.Property.CallStatus, value: Enums.CallStatus.RingingIn },\r\n                    eventData => this._incomingCallMonitor(eventData, causeId));\r\n                this._login(token, skypeIdentity.displayName, fnLogger, configuration);\r\n            })\r\n            .catch((err: any) => {\r\n                fnLogger.logFailure(err);\r\n                this._loginPromiseDefered.reject(err);\r\n            });\r\n\r\n        return this.loginPromise.then(() => this.setAdditionalIdentities());\r\n    }\r\n\r\n    private _login(skypeToken: string, displayName: string, logger: IInternalLogger, configuration?: string): void {\r\n        if (SlimCoreCommon.hasFeature(Enums.Feature.MultiUserSupport)) {\r\n            // HODOR\r\n            // Facilitating the duplicate login for updating displayname till UI moves to updateDisplayName API\r\n            if (this._account) {\r\n                logger.info('already logged in. updating displayname and skypetoken!');\r\n                this._account.updateDisplayName(displayName);\r\n                this._account.updateSkypeToken(skypeToken);\r\n                return;\r\n            }\r\n            const account = this._slimcoreInstance.getAccount(this.identity);\r\n            this._account = SlimCoreCommon.wrap(account, this._settings);\r\n            this._account.login(skypeToken, displayName, SlimCoreCommon.mapToEmptyStrIfFalsy(configuration));\r\n        } else {\r\n            this._slimcoreInstance.login(this.identity, skypeToken, displayName);\r\n        }\r\n    }\r\n\r\n    private _createCallHandler(): SlimCore.CallHandler {\r\n        if (SlimCoreCommon.hasFeature(Enums.Feature.MultiUserSupport)) {\r\n            return this._slimcoreInstance.getCallHandler(this._account.getObjectId());\r\n        }\r\n        return this._slimcoreInstance.createCallInterface();\r\n    }\r\n\r\n    public logout(causeId = generateCauseId()): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger('logout', causeId);\r\n        fnLogger.info('logout');\r\n\r\n        let accountStatusCallback: IDisposable = null;\r\n        try {\r\n            fnLogger.info('setting up stack callbacks');\r\n            accountStatusCallback = this._slimcoreInstance.handle(\r\n                'object-property-changed', { propKey: Enums.Property.AccountStatus, value: Enums.AccountStatus.LoggedOut }, eventData => {\r\n                    if (SlimCoreCommon.hasFeature(Enums.Feature.MultiUserSupport)) {\r\n                        if (this._account.getObjectId() !== eventData.objectId) {\r\n                            return;\r\n                        }\r\n                    }\r\n                    this._logoutPromiseDefered.resolve();\r\n                    if (accountStatusCallback) {\r\n                        accountStatusCallback.dispose();\r\n                        accountStatusCallback = null;\r\n                    }\r\n                });\r\n            fnLogger.info('calling slimcore.logout()');\r\n            this._logout();\r\n        } catch (e) {\r\n            fnLogger.error('slimcore.logout() failed.', e);\r\n            this._logoutPromiseDefered.reject(e);\r\n        }\r\n        return this._logoutPromiseDefered.promise.then(noop);\r\n    }\r\n\r\n    private _logout(): void {\r\n        if (SlimCoreCommon.hasFeature(Enums.Feature.MultiUserSupport)) {\r\n            this._account.logout();\r\n        } else {\r\n            this._slimcoreInstance.logout();\r\n        }\r\n    }\r\n\r\n    public setRing(ring: string): Promise<void> {\r\n        return Promise.resolve().then(() => {\r\n            if (SlimCoreCommon.hasFeature(Enums.Feature.MultiUserSupport) && this._account) {\r\n                return this._account.setRing(ring);\r\n            } else {\r\n                //HODOR\r\n                return this._setup.setString('*Lib/Call/NG/Ring', ring);\r\n            }\r\n        });\r\n    }\r\n\r\n    public setTenantId(tenantId: string): Promise<void> {\r\n        return Promise.resolve().then(() => {\r\n            if (SlimCoreCommon.hasFeature(Enums.Feature.MultiUserSupport) && this._account) {\r\n                return this._account.setTenantId(tenantId);\r\n            } else {\r\n                //HODOR\r\n                return this._setup.setString('*Lib/Call/NG/TenantId', tenantId);\r\n            }\r\n        });\r\n    }\r\n\r\n    public setConfiguration(configuration: AccountConfiguration): Promise<void> {\r\n        return Promise.resolve().then(() => {\r\n            if (SlimCoreCommon.hasFeature(Enums.Feature.MultiUserSupport) && this._account &&\r\n                this._account.setConfiguration) {\r\n\r\n                this._account.setConfiguration(JSON.stringify(configuration));\r\n            }\r\n        });\r\n    }\r\n\r\n    public updateDisplayName(displayName: string): Promise<void> {\r\n        return Promise.resolve().then(() => {\r\n            if (SlimCoreCommon.hasFeature(Enums.Feature.MultiUserSupport) && this._account) {\r\n                return this._account.updateDisplayName(displayName);\r\n            } else {\r\n                return this._skypeIdentity.tokenProvider()\r\n                    .then(skypeToken => this._login(skypeToken, displayName, this._logger));\r\n            }\r\n        });\r\n    }\r\n\r\n    public updateSkypeToken(skypeToken: string): void {\r\n        if (SlimCoreCommon.hasFeature(Enums.Feature.MultiUserSupport) && this._account) {\r\n            this._account.updateSkypeToken(skypeToken);\r\n        } else {\r\n            this._slimcoreInstance.updateSkypeToken(skypeToken);\r\n        }\r\n    }\r\n\r\n    public fireIntent(intent: CallingIntent, identity?: string): Promise<void> {\r\n        return Promise.resolve().then(() => {\r\n            if (SlimCoreCommon.hasFeature(Enums.Feature.MultiUserSupport)) {\r\n                this._slimcoreInstance.fireIntent(Enums.Intent.CallPush, identity, undefined, this.identity);\r\n            }\r\n        });\r\n    }\r\n\r\n    public getSetup(): ISetup {\r\n        return this._setup;\r\n    }\r\n\r\n    public getEcsProvider(): IEcsProvider {\r\n        return this._ecsProvider;\r\n    }\r\n\r\n    public createCall(threadId: string, callId?: string, localParticipantId?: string, messageId?: string, causeId = generateCauseId()): ICall {\r\n        const fnLogger = this._logger.createFnLogger('createCall', causeId);\r\n        fnLogger.info(`threadId:${threadId}, callId:${callId}, localParticipantId: ${localParticipantId}, messageId:${messageId}`);\r\n\r\n        if (this._slimcoreCallHandler === null || this._slimcoreCallHandler === undefined) {\r\n            fnLogger.logFailure('Stack not initialized yet');\r\n            throw new Error('Stack not initialized yet');\r\n        }\r\n\r\n        // Make sure skype token is up-to-date before creating a new call\r\n        this._skypeIdentity.tokenProvider().then(token => {\r\n            if (token) {\r\n                fnLogger.info('Updating Skype Token...');\r\n                this.updateSkypeToken(token);\r\n                fnLogger.info('Token update complete');\r\n            }\r\n        });\r\n\r\n        let call = null;\r\n\r\n        // Within the same thread, a new call can be created only if the callId is different and if messageId is different\r\n        if (threadId) {\r\n            call = _.find(this.calls, call => call.threadId === threadId);\r\n            if (call) {\r\n                if (callId && call.callId === callId) {\r\n                    fnLogger.logFailure(`Call Registry already has an entry for callId: ${call.callId}, threadId: ${call.threadId}`);\r\n                    return call;\r\n                } else if (messageId && call.messageId === messageId) {\r\n                    fnLogger.logFailure(`Call Registry already has an entry for threadId: ${call.threadId}, messageId: ${call.messageId}`);\r\n                    return call;\r\n                }\r\n            }\r\n        }\r\n\r\n        call = this._getCall(callId, localParticipantId, causeId);\r\n        if (call) {\r\n            return call;\r\n        }\r\n\r\n        call = new SlimCoreElectronCall(\r\n            this._logger,\r\n            this._settings,\r\n            this._slimcoreInstance,\r\n            this._slimcoreCallHandler,\r\n            this._deviceManager,\r\n            this._appHooks,\r\n            threadId,\r\n            callId || generateGuid(),\r\n            this._skypeIdentity,\r\n            localParticipantId,\r\n            this._telemetryService,\r\n            messageId);\r\n\r\n        this.calls.push(call);\r\n        this.event('callAdded').raise(call);\r\n        this.raiseChanged();\r\n\r\n        return call;\r\n    }\r\n\r\n    public getCall(callId: string, localParticipantId: string, causeId = generateCauseId()): ICall {\r\n        return this._getCall(callId, localParticipantId, causeId);\r\n    }\r\n\r\n    private _getCall(callId: string, participantId: string, causeId: CauseId): SlimCoreElectronCall {\r\n        const fnLogger = this._logger.createFnLogger(`getCall[callId=${callId}][participantId=${participantId}]`, causeId);\r\n\r\n        if (!callId && !participantId) {\r\n            fnLogger.logFailure('callId & participantId is undefined');\r\n            return null;\r\n        }\r\n\r\n        if (this._slimcoreCallHandler === null || this._slimcoreCallHandler === undefined) {\r\n            fnLogger.logFailure('Stack not initialized yet');\r\n            throw new Error('Stack not initialized yet');\r\n        }\r\n\r\n        // Initing observing calls always so that if there is a ringing call in slimcore,\r\n        // it attaches and starts to process it. This optimizes the observing call + join flow.\r\n        let call = _.find(this.calls, call => call.callId === callId);\r\n        if (call) {\r\n            if (call.state === CallState.Observing) {\r\n                this._initCall(call, call.slimcoreCallId, causeId);\r\n                return call;\r\n            } else {\r\n                fnLogger.info(`Call Registry already has an entry for this call`);\r\n                return call;\r\n            }\r\n        }\r\n\r\n        const slimCoreCallObjectId = _.find(this._slimcoreCallHandler.getActiveCalls(), callObjectId => (this._slimcoreCallHandler.getStrProperty(callObjectId, Enums.Property.CallName) === callId) &&\r\n            (this._slimcoreCallHandler.getStrProperty(callObjectId, Enums.Property.CallLegId) === participantId));\r\n\r\n        if (!slimCoreCallObjectId) {\r\n            fnLogger.logFailure('slimCoreCallObjectId not found');\r\n            return null;\r\n        }\r\n\r\n        const threadId = this._slimcoreCallHandler.getStrProperty(slimCoreCallObjectId, Enums.Property.CallThreadId);\r\n        const messageId = this._slimcoreCallHandler.getStrProperty(slimCoreCallObjectId, Enums.Property.CallMessageId);\r\n\r\n        call = new SlimCoreElectronCall(\r\n            this._logger,\r\n            this._settings,\r\n            this._slimcoreInstance,\r\n            this._slimcoreCallHandler,\r\n            this._deviceManager,\r\n            this._appHooks,\r\n            threadId,\r\n            callId,\r\n            this._skypeIdentity,\r\n            participantId,\r\n            this._telemetryService,\r\n            messageId);\r\n\r\n        this._initCall(call, slimCoreCallObjectId, causeId);\r\n        this.calls.push(call);\r\n        this.event('callAdded').raise(call);\r\n        this.raiseChanged();\r\n        return call;\r\n    }\r\n\r\n    public deleteCall(call: ICall, final = true, causeId = generateCauseId()): boolean {\r\n        this._logger.info(`deleteCall ${call.callId}`);\r\n\r\n        let deletedCalls = false;\r\n        _.each(_.remove(this.calls, c => c === call), c => {\r\n            deletedCalls = true;\r\n            if (final) {\r\n                this.event('callRemoved').raise(call);\r\n                if (c.state !== CallState.Disconnected) {\r\n                    c.dispose(causeId);\r\n                }\r\n            }\r\n        });\r\n\r\n        if (deletedCalls) {\r\n            this.raiseChanged();\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public debugInformation(call?: ICall): Promise<string> {\r\n        let content = this._slimcoreCallHandler.getDebugInformation('/callinfo');\r\n        if (call && (!content || _.isEmpty(content))) {\r\n            content = `CallInformation\\n * CallId=${call.callId}`;\r\n        }\r\n\r\n        return Promise.resolve(content);\r\n    }\r\n\r\n    // Ideally to be set as soon as you login.\r\n    // Can be of the format - <rc_id1>:<userId1>;aliases=<rc_id2>:<userId2>,<rc_id3>:<userId3>\r\n    // Example: 8:identity;aliases=2:sipId@microsoft.com,4:+100000001\r\n    private setAdditionalIdentities(): Promise<void> {\r\n        return Promise.resolve().then(() => {\r\n            if (this._skypeIdentity.sipUri) {\r\n                const additionalIdentity = `2:${this._skypeIdentity.sipUri}`;\r\n                if (SlimCoreCommon.hasFeature(Enums.Feature.MultiUserSupport) && this._account) {\r\n                    this._account.setAdditionalIdentities(additionalIdentity);\r\n                } else {\r\n                    this._slimcoreInstance.setAdditionalIdentities(additionalIdentity);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private _initializeSlimCore(token: string) {\r\n        try {\r\n            this._startSlimcorePromiseDefered.promise.then(() => {\r\n                // LibStatus can be undefined if we made a blocking call to SlimCore.start(),\r\n                // but if it was async, then libStatus should be Running when we attempt to login\r\n                this._logger.info(`logging in to slimcore libStatus=${this.libStatus}`);\r\n                this._slimcoreInstance.login(this._skypeIdentity.id, token, this._skypeIdentity.displayName);\r\n            });\r\n        } catch (e) {\r\n            this._logger.error('initialization failed.', e);\r\n        }\r\n    }\r\n\r\n    private _onSkypeTokenRequired(eventData: SlimCore.Engine.Events.SkypeTokenRequiredArgs) {\r\n        this.event('skypeTokenRequired').raise(eventData.invalidToken);\r\n    }\r\n\r\n    private _onLibStatusChanged(eventData: SlimCore.Engine.Events.LibStatusChangedArgs) {\r\n        this._logger.info(`_onLibStatusChanged from ${this.libStatus} => ${eventData.libStatus}`);\r\n        if (eventData.libStatus === Enums.LibStatus.Running) {\r\n            this._startSlimcorePromiseDefered.resolve();\r\n        } else if (eventData.libStatus === Enums.LibStatus.FatalError &&\r\n            this.libStatus === Enums.LibStatus.Constructed) {\r\n            // Handle fatal error during setup\r\n            this._startSlimcorePromiseDefered.reject(new Error('Slimcore FatalError during start'));\r\n        }\r\n        this.libStatus = eventData.libStatus;\r\n    }\r\n\r\n    private _onProxiedPushNotification(eventData: SlimCore.Engine.Events.ProxiedPushNotificationArgs) {\r\n        const pushEvent: ProxiedPushNotificationEvent = {\r\n            eventId: eventData.eventId,\r\n            payload: eventData.payload\r\n        };\r\n\r\n        this.event('proxiedPushNotification').raise(pushEvent);\r\n    }\r\n\r\n    private _hookCallRegistryEvents() {\r\n        if (SlimCoreCommon.hasFeature(Enums.Feature.MultiUserSupport) && this._account) {\r\n            this._registerDisposable(this._account.handle('skype-token-required', undefined, data => this._onSkypeTokenRequired(data)));\r\n            this._registerDisposable(this._slimcoreCallHandler.handle('proxied-push-notification', undefined, data => this._onProxiedPushNotification(data)));\r\n        } else {\r\n            this._registerDisposable(this._slimcoreInstance.handle('skype-token-required', undefined, data => this._onSkypeTokenRequired(data)));\r\n            this._registerDisposable(this._slimcoreInstance.handle('proxied-push-notification', undefined, data => this._onProxiedPushNotification(data)));\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronCallRegistry.ts","import {\r\n    AudioDeviceDesc, CallingLogger, CameraPosition, CompositeAudioDeviceDesc, CompositeAudioDeviceFormFactor, DeviceAccess, DeviceDesc,\r\n    DeviceId, DeviceType, IDeviceManager, IDeviceManagerEvents, IRenderer, IRenderTarget, PreviewVideoSelection, SelectedDevices,\r\n    StartStreamOptions, VideoCaptureConfig, VideoDeviceDesc, VideoEffectType\r\n} from 'skype-calling-interface';\r\nimport { ISlimCoreElectronApplicationHooks } from '../typings/skype-calling-electron';\r\n\r\nimport * as _ from 'lodash';\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\nimport SlimCoreElectronBase from './SlimCoreElectronBase';\r\nimport { SlimCoreElectronBindingManager } from './SlimCoreElectronBindingManager';\r\nimport * as EnumConverter from './SlimCoreElectronEnumConverter';\r\nimport SlimCoreElectronLocalVideoPreview from './SlimCoreElectronLocalVideoPreview';\r\n\r\n// From electron/typings/slimcore-enums.d.ts:\r\nimport Enums = SlimCore.Enums;\r\nimport { generateCauseId } from '../../common/ts/causeId';\r\nimport { IInternalLogger } from '../../common/ts/internalLogger';\r\n\r\ntype BrowserAwareDeviceInfo = {\r\n    browserId?: string;\r\n};\r\n\r\nabstract class DeviceList<DeviceInfo extends SlimCore.DeviceInfo & BrowserAwareDeviceInfo> {\r\n    protected _list: DeviceInfo[] = [];\r\n    private _selectedDevice: DeviceId;\r\n\r\n    public constructor(protected _kind: DeviceType, private _logger: CallingLogger) {\r\n        this._logger.info('constructor');\r\n    }\r\n\r\n    public update(list: DeviceInfo[]) {\r\n        this._list = list;\r\n        this._logger.info(`update: ${JSON.stringify(this._list)}`);\r\n    }\r\n\r\n    public isAvailable(deviceId: string) {\r\n        return !!(deviceId && _.find(this._list, device => device.id === deviceId));\r\n    }\r\n\r\n    public getBestDevice(): DeviceId {\r\n        return this._getDeviceId(_.first(this._list));\r\n    }\r\n\r\n    public getSelectedDevice(): DeviceId {\r\n        if (this.isAvailable(this._selectedDevice)) {\r\n            this._logger.debug(`getSelectedDevice: ${this._selectedDevice}`);\r\n            return this._selectedDevice;\r\n        } else {\r\n            const deviceId = this.getBestDevice();\r\n            this._logger.debug(`getSelectedDevice - unknown device selected, returning preferred device: ${deviceId}`);\r\n            return deviceId;\r\n        }\r\n    }\r\n\r\n    public selectDevice(deviceId: DeviceId): void {\r\n        if (this.isAvailable(deviceId)) {\r\n            this._logger.info(`selectDevice: ${deviceId}`);\r\n            this._selectedDevice = deviceId;\r\n        } else {\r\n            this._logger.info(`selectDevice - unknown device selected, selecting preferred device`);\r\n            this._selectedDevice = null;\r\n        }\r\n    }\r\n\r\n    protected _getDeviceId(device: DeviceInfo): DeviceId {\r\n        return device ? device.id : null;\r\n    }\r\n\r\n    public abstract enumerate(): DeviceDesc[];\r\n}\r\n\r\nclass VideoDeviceList extends DeviceList<SlimCore.VideoDeviceInfo & BrowserAwareDeviceInfo> {\r\n\r\n    public getBestDevice(): DeviceId {\r\n        const externalCamera = this._findCamera(Enums.CameraFacing.External);\r\n        const frontCamera = this._findCamera(Enums.CameraFacing.Front);\r\n        const leftFrontCamera = this._findCamera(Enums.CameraFacing.LeftFront);\r\n        const rightFrontCamera = this._findCamera(Enums.CameraFacing.RightFront);\r\n        const nonVirtualCamera = this._findCamera();\r\n        const anyCamera = super.getBestDevice();\r\n\r\n        return externalCamera || frontCamera || leftFrontCamera || rightFrontCamera || nonVirtualCamera || anyCamera;\r\n    }\r\n\r\n    public enumerate(): VideoDeviceDesc[] {\r\n        return _.map(this._list, device => ({\r\n            id: device.id,\r\n            browserId: device.browserId,\r\n            label: device.label,\r\n            kind: this._kind,\r\n            position: this._getCameraPosition(device.cameraFacing)\r\n        }));\r\n    }\r\n\r\n    private _findCamera(facing?: Enums.CameraFacing): DeviceId {\r\n        const device = _.find(this._list, device =>\r\n            device.deviceType !== Enums.DeviceType.Virtual && (!facing || device.cameraFacing === facing));\r\n\r\n        return this._getDeviceId(device);\r\n    }\r\n\r\n    private _getCameraPosition(cameraFacing: Enums.CameraFacing): CameraPosition {\r\n        switch (cameraFacing) {\r\n            case Enums.CameraFacing.Front:\r\n                return CameraPosition.Front;\r\n            case Enums.CameraFacing.LeftFront:\r\n                return CameraPosition.LeftFront;\r\n            case Enums.CameraFacing.RightFront:\r\n                return CameraPosition.RightFront;\r\n            case Enums.CameraFacing.Back:\r\n                return CameraPosition.Back;\r\n            case Enums.CameraFacing.External:\r\n                return CameraPosition.External;\r\n            default:\r\n                return CameraPosition.Unknown;\r\n        }\r\n    }\r\n}\r\n\r\nclass AudioDeviceList extends DeviceList<SlimCore.AudioDeviceInfo & BrowserAwareDeviceInfo> {\r\n\r\n    public enumerate(): AudioDeviceDesc[] {\r\n        const defaultDevice = _.find(this._list, device => device.isSystemDefault) || _.first(this._list);\r\n        return _.map(this._list, device => ({\r\n            id: device.id,\r\n            browserId: device.browserId,\r\n            label: device.label,\r\n            kind: this._kind,\r\n            productId: `${device.productId || ''}`,\r\n            vendorId: `${device.vendorId || ''}`,\r\n            isSystemDefault: device === defaultDevice\r\n        }));\r\n    }\r\n}\r\n\r\nclass CompositeAudioDeviceList {\r\n    protected _list: SlimCore.CompositeAudioDeviceInfo[] = [];\r\n\r\n    public constructor(private _logger: CallingLogger) {\r\n        this._logger.info('constructor');\r\n    }\r\n\r\n    public update(list: SlimCore.CompositeAudioDeviceInfo[]) {\r\n        this._list = list;\r\n        this._logger.info(`update: ${JSON.stringify(this._list)}`);\r\n    }\r\n\r\n    public enumerate(): CompositeAudioDeviceDesc[] {\r\n        return _.map(this._list, device => ({\r\n            id: null,\r\n            browserId: null,\r\n            label: device.label,\r\n            kind: DeviceType.CompositeAudioDevice,\r\n            microphoneId: device.microphoneId,\r\n            speakerId: device.speakerId,\r\n            formFactor: this._getCompositeDeviceFormFactor(device.deviceType),\r\n            isPcInternalDevice: device.isPcInternalDevice\r\n        }));\r\n    }\r\n\r\n    private _getCompositeDeviceFormFactor(type: Enums.CompositeAudioDeviceType): CompositeAudioDeviceFormFactor {\r\n        switch (type) {\r\n            case Enums.CompositeAudioDeviceType.Speakers:\r\n                return CompositeAudioDeviceFormFactor.Speakers;\r\n            case Enums.CompositeAudioDeviceType.Headphones:\r\n                return CompositeAudioDeviceFormFactor.Headphones;\r\n            case Enums.CompositeAudioDeviceType.Headset:\r\n                return CompositeAudioDeviceFormFactor.Headset;\r\n            case Enums.CompositeAudioDeviceType.Handset:\r\n                return CompositeAudioDeviceFormFactor.Handset;\r\n            case Enums.CompositeAudioDeviceType.Speakerphone:\r\n                return CompositeAudioDeviceFormFactor.Speakerphone;\r\n            default:\r\n                return CompositeAudioDeviceFormFactor.Unknown;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction getMediaDeviceIdSubstring(mediaDeviceLabel: string, slimcoreDeviceLabel: string): string | undefined {\r\n    const devicePostfix = mediaDeviceLabel.split(slimcoreDeviceLabel)[1].trim();\r\n    const found = devicePostfix.match(/\\((.+):(.+)\\)/);\r\n    if (found) {\r\n        const [vid, pid] = found.slice(1);\r\n        return `vid_${vid}&pid_${pid}`;\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport default class SlimCoreElectronDeviceManager extends SlimCoreElectronBase<IDeviceManagerEvents> implements IDeviceManager {\r\n    private readonly _cameras: VideoDeviceList;\r\n    private readonly _microphones: AudioDeviceList;\r\n    private readonly _speakers: AudioDeviceList;\r\n    private readonly _compositeDevices: CompositeAudioDeviceList;\r\n    private _browserDevicesPromise: Promise<void>;\r\n    private readonly _devicesEnumeratedPromise: Promise<void>;\r\n    private _browserDevices: MediaDeviceInfo[] = [];\r\n    private _previewVideoManager: SlimCoreElectronBindingManager<void>;\r\n    private _rendererBindingManager: SlimCoreElectronBindingManager<SlimCore.VideoBindingRenderer>;\r\n    private _screenShareBindingManager: SlimCoreElectronBindingManager<SlimCore.VideoBindingScreenShare>;\r\n    private _haveStartedMedia = false;\r\n\r\n    public constructor(\r\n        logger: IInternalLogger,\r\n        settings: SlimCoreCommon.Settings,\r\n        engine: SlimCoreCommon.Engine,\r\n        private _mediaReadyPromise: Promise<SlimCore.Engine | SlimCore.CallHandler>,\r\n        private _appHooks: ISlimCoreElectronApplicationHooks\r\n    ) {\r\n        super(logger.createChild('DeviceManager'), settings, engine);\r\n        this._logger.info('constructor');\r\n\r\n        this._cameras = new VideoDeviceList(DeviceType.Camera, this._logger.createChild('cameras'));\r\n        this._microphones = new AudioDeviceList(DeviceType.Microphone, this._logger.createChild('microphones'));\r\n        this._speakers = new AudioDeviceList(DeviceType.Speaker, this._logger.createChild('speakers'));\r\n\r\n        this._compositeDevices = new CompositeAudioDeviceList(this._logger.createChild('compositeaudiodevices'));\r\n\r\n        this._devicesEnumeratedPromise = this._mediaReadyPromise\r\n            .then(() => this._updateBrowserDevices())\r\n            .then(() => {\r\n                this._updateAudioDevices();\r\n                this._updateVideoDevices();\r\n                this._handleDisplaysChanged();\r\n            });\r\n        this._previewVideoManager = new SlimCoreElectronBindingManager<void>(this._startPreviewVideo, this._stopPreviewVideo, this._logger);\r\n        this._rendererBindingManager = new SlimCoreElectronBindingManager<SlimCore.VideoBindingRenderer>(this._createRendererBinding, this._releaseRendererBinding, this._logger);\r\n        this._screenShareBindingManager = new SlimCoreElectronBindingManager<SlimCore.VideoBindingScreenShare>(this._createScreenShareBinding, this._releaseScreenShareBinding, this._logger);\r\n        // hook device changed event\r\n        this._registerDisposable(this._slimcoreInstance.handle('device-list-changed', undefined, eventData => this._slimCoreDevicesChangedHander(eventData)));\r\n        this._registerDisposable(this._appHooks.onDisplaysChanged(() => this._handleDisplaysChanged()));\r\n    }\r\n\r\n    public getRendererBindingManager(): SlimCoreElectronBindingManager<SlimCore.VideoBindingRenderer> {\r\n        return this._rendererBindingManager;\r\n    }\r\n\r\n    public getScreenShareBindingManager(): SlimCoreElectronBindingManager<SlimCore.VideoBindingScreenShare> {\r\n        return this._screenShareBindingManager;\r\n    }\r\n\r\n    public getPreviewVideo(type: Enums.VideoType, name?: string, path?: string): Promise<number> {\r\n        let videoObjectId = 0;\r\n        return this._mediaReadyPromise.then(slimcoreObject => {\r\n            videoObjectId = this._slimcoreInstance.createPreviewVideo(type, name, path);\r\n            if (videoObjectId === 0) {\r\n                throw new Error('SlimCore returned invalid video object ID 0');\r\n            }\r\n            this._logger.info(`Got preview video. Waiting for video to become AVAILABLE|STARTING|RUNNING`);\r\n            // todo: with current slimcore we could bail out immediately when preview video state goes to NOT_AVAILABLE, not sure about old cl though...\r\n            return SlimCoreCommon.waitForVideoObjectToBeAvailable(this._slimcoreInstance, slimcoreObject, videoObjectId, this._logger, SlimCoreCommon.videoObjectTimeout(this._settings));\r\n        }).then(() => videoObjectId);\r\n    }\r\n\r\n    public get isAudioOutputSelectionSupported(): boolean {\r\n        return true;\r\n    }\r\n\r\n    private _handleDisplaysChanged() {\r\n        try {\r\n            this._slimcoreInstance.setDeviceRotation(SlimCore.queryDeviceRotation());\r\n        } catch (err) {\r\n            this._logger.warn(`Displays Changed handling error: ${err}`);\r\n        }\r\n    }\r\n\r\n    private _updateVideoDevices() {\r\n        this._cameras.update(this._fillBrowserDeviceIds(this._slimcoreInstance.getCameraList(), 'videoinput'));\r\n    }\r\n\r\n    private _updateAudioDevices() {\r\n        this._microphones.update(this._fillBrowserDeviceIds(this._slimcoreInstance.getMicrophoneList(), 'audioinput'));\r\n        this._speakers.update(this._fillBrowserDeviceIds(this._slimcoreInstance.getSpeakerList(), 'audiooutput'));\r\n\r\n        if (this._slimcoreInstance.getCompositeAudioDevices) {\r\n            this._compositeDevices.update(this._slimcoreInstance.getCompositeAudioDevices());\r\n        }\r\n\r\n        this._selectAudioDevices();\r\n    }\r\n\r\n    private _updateBrowserDevices(): Promise<void> {\r\n        if (typeof navigator !== 'object') {\r\n            this._logger.warn('Browser-backed device list won\\'t be fetched as navigator is not available');\r\n            return Promise.resolve<void>();\r\n        }\r\n\r\n        // Guard against parallel calls\r\n        if (this._browserDevicesPromise) {\r\n            return this._browserDevicesPromise;\r\n        }\r\n        return this._browserDevicesPromise = navigator.mediaDevices.enumerateDevices().then((deviceList: MediaDeviceInfo[]) => {\r\n            this._browserDevices = deviceList;\r\n            this._browserDevicesPromise = undefined;\r\n        });\r\n    }\r\n\r\n    private _fillBrowserDeviceIds<DeviceInfo extends SlimCore.DeviceInfo & BrowserAwareDeviceInfo>(deviceList: DeviceInfo[], kind: string): DeviceInfo[] {\r\n        if (!deviceList) {\r\n            return deviceList;\r\n        }\r\n        for (const device of deviceList) {\r\n            const browserDevice = this._browserDevices.find(mediaDeviceInfo => {\r\n                if (mediaDeviceInfo.kind !== kind) {\r\n                    return false;\r\n                }\r\n                if (mediaDeviceInfo.label === device.label) {\r\n                    return true;\r\n                } else if (mediaDeviceInfo.label.indexOf(device.label) === 0) {\r\n                    // Check for Windows device identifier match: vid_046d&pid_0843\r\n                    const deviceIdSubstring = getMediaDeviceIdSubstring(mediaDeviceInfo.label, device.label);\r\n                    return device.id.indexOf(deviceIdSubstring) > -1;\r\n                } else {\r\n                    return false;\r\n                }\r\n            });\r\n            if (browserDevice) {\r\n                device.browserId = browserDevice.deviceId;\r\n            } else if (this._browserDevices.length > 0) {\r\n                this._logger.warn(`No browser device found for device ${device.label}`);\r\n            }\r\n        }\r\n        return deviceList;\r\n    }\r\n\r\n    private _selectAudioDevices() {\r\n        const microphone = this._microphones.getSelectedDevice();\r\n        const speaker = this._speakers.getSelectedDevice();\r\n\r\n        this._logger.info(`SlimCore - selectAudioDevices: ${microphone}, ${speaker}`);\r\n        this._slimcoreInstance.selectAudioDevices(microphone, speaker);\r\n    }\r\n\r\n    private _slimCoreDevicesChangedHander(args: SlimCore.Engine.Events.DeviceListChangedArgs) {\r\n        this._logger.info(`SlimCore Devices changed: ${JSON.stringify(args)}`);\r\n\r\n        this._updateBrowserDevices().then(() => {\r\n            if (args.video) {\r\n                this._updateVideoDevices();\r\n            } else {\r\n                this._updateAudioDevices();\r\n            }\r\n\r\n            this._raiseDevicesChanged();\r\n            this._logger.info(`Raised device changed notification: ${JSON.stringify(args)}`);\r\n        })\r\n        .catch(error => {\r\n            this._logger.error(`Failed to raise device changed notification, error = ${error}`);\r\n        });\r\n    }\r\n\r\n    private _raiseDevicesChanged() {\r\n        this.raiseChanged();\r\n        this.event('devicesChanged').raise(this._enumerateDevices());\r\n    }\r\n\r\n    private _enumerateDevices(): DeviceDesc[] {\r\n        const cameras = this._cameras.enumerate();\r\n        const microphones = this._microphones.enumerate();\r\n        const speakers = this._speakers.enumerate();\r\n        const compositeAudioDevices = this._compositeDevices.enumerate();\r\n\r\n        return [].concat(cameras, microphones, speakers, compositeAudioDevices);\r\n    }\r\n\r\n    public askDevicePermission(constraints?: DeviceAccess): Promise<DeviceAccess> {\r\n        return Promise.resolve().then(() => {\r\n            return { audio: true, video: true };\r\n        });\r\n    }\r\n\r\n    private _triggerMediaInitOnce() {\r\n        if (SlimCoreCommon.hasFeature(Enums.Feature.LazyMediaInit) && !this._haveStartedMedia) {\r\n            this._slimcoreInstance.fireIntent(Enums.Intent.MediaInit);\r\n            this._haveStartedMedia = true;\r\n        }\r\n    }\r\n\r\n    public enumerateDevicesAsync(): Promise<DeviceDesc[]> {\r\n        return new Promise((resolve, reject) => {\r\n            this._triggerMediaInitOnce();\r\n            this._devicesEnumeratedPromise.then(() => this._enumerateDevices()).then(resolve, reject);\r\n        });\r\n    }\r\n\r\n    public selectDevices(devices: SelectedDevices): void {\r\n        this._devicesEnumeratedPromise.then(() => {\r\n            this._selectDevices(devices);\r\n        });\r\n    }\r\n\r\n    public selectDevicesAsync(devices: SelectedDevices): Promise<void> {\r\n        return Promise.reject(new Error('Not implemented'));\r\n    }\r\n\r\n    private _selectDevices(devices: SelectedDevices): void {\r\n        this._logger.debug(`selectDevices - ${JSON.stringify(devices)}`);\r\n\r\n        if (devices.camera !== undefined) {\r\n            this._cameras.selectDevice(devices.camera);\r\n        }\r\n\r\n        if (devices.microphone !== undefined) {\r\n            this._microphones.selectDevice(devices.microphone);\r\n        }\r\n\r\n        if (devices.speaker !== undefined) {\r\n            this._speakers.selectDevice(devices.speaker);\r\n        }\r\n\r\n        this._selectAudioDevices();\r\n        this._raiseDevicesChanged();\r\n    }\r\n\r\n    public setVideoCaptureConfigAsync(deviceId: DeviceId, config: VideoCaptureConfig): Promise<void> {\r\n        return this._mediaReadyPromise\r\n            .then(() => {\r\n                if (this._slimcoreInstance.setVideoCaptureConfig) {\r\n                    this._slimcoreInstance.setVideoCaptureConfig(deviceId, config);\r\n                } else {\r\n                    this._logger.warn('setVideoCaptureConfig is not available');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this._logger.error(`Failed to set video capture config, Error = ${error}`);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    public setDeviceEffectsAsync(deviceId: DeviceId, type: VideoEffectType): Promise<void> {\r\n        return this._mediaReadyPromise\r\n            .then(() => {\r\n                if (this._slimcoreInstance.setDeviceEffects) {\r\n                    this._slimcoreInstance.setDeviceEffects(deviceId, EnumConverter.convertVideoEffectType(type));\r\n                } else {\r\n                    this._logger.warn('setDeviceEffects is not available');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this._logger.error(`Failed to set Video Effects, Error = ${error}`);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    public getDeviceEffectsCapabilityAsync(deviceId: DeviceId, mask?: number): Promise<number> {\r\n        return this._mediaReadyPromise\r\n            .then(() => {\r\n                if (this._slimcoreInstance.getDeviceEffectsCapability) {\r\n                    return this._slimcoreInstance.getDeviceEffectsCapability(deviceId, mask);\r\n                } else {\r\n                    this._logger.warn('getDeviceEffectsCapability is not available');\r\n                    return 0;\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this._logger.error(`Error in getDeviceEffectsCapabilityAsync, error = ${error}`);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    public setBackgroundImageAsync(deviceId: DeviceId, imagePath: string): Promise<void> {\r\n        return this._mediaReadyPromise\r\n            .then(() => {\r\n                if (this._slimcoreInstance.setBackgroundImage) {\r\n                    this._slimcoreInstance.setBackgroundImage(deviceId, imagePath);\r\n                } else {\r\n                    this._logger.warn('setBackgroundImage is not available');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this._logger.error(`Failed to set background image, Error = ${error}`);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    public getSelectedDevices(): SelectedDevices {\r\n        const result: SelectedDevices = {\r\n            camera: this._cameras.getSelectedDevice(),\r\n            microphone: this._microphones.getSelectedDevice(),\r\n            speaker: this._speakers.getSelectedDevice()\r\n        };\r\n\r\n        this._logger.debug(`getSelectedDevices - ${JSON.stringify(result)}`);\r\n        return result;\r\n    }\r\n\r\n    public getCamera(deviceId: DeviceId): VideoDeviceDesc {\r\n        return _.find(this._cameras.enumerate(), device => device.id === deviceId);\r\n    }\r\n\r\n    public getSelectedCamera(): VideoDeviceDesc {\r\n        const deviceId = this._cameras.getSelectedDevice();\r\n        const device = this.getCamera(deviceId);\r\n        this._logger.debug(`getSelectedCamera - ${JSON.stringify(device)}`);\r\n        return device;\r\n    }\r\n\r\n    public async createPreview(target: IRenderTarget, selection: PreviewVideoSelection, options?: StartStreamOptions, causeId = generateCauseId()): Promise<IRenderer> {\r\n        const renderer = new SlimCoreElectronLocalVideoPreview(\r\n            this._logger,\r\n            this._settings,\r\n            this._slimcoreInstance,\r\n            target,\r\n            this,\r\n            selection,\r\n            options,\r\n            causeId\r\n        );\r\n        await renderer.startVideoAsync(causeId);\r\n        return renderer;\r\n    }\r\n\r\n    public createPreviewRenderer(target: IRenderTarget, options?: StartStreamOptions, causeId = generateCauseId()): Promise<IRenderer> {\r\n        return this.createPreview(target, { kind: 'camera' }, options, causeId);\r\n    }\r\n\r\n    public createScreenSharingPreviewRenderer(target: IRenderTarget, options?: StartStreamOptions, causeId = generateCauseId()): Promise<IRenderer> {\r\n        return this.createPreview(target, { kind: 'sharing' }, options, causeId);\r\n    }\r\n\r\n    public getDeviceNameAsync(deviceId: DeviceId): Promise<string> {\r\n        return Promise.resolve()\r\n            .then(() => {\r\n                const device = _.find(this._enumerateDevices(), device => device.id === deviceId);\r\n                if (!device) {\r\n                    throw new Error(`Device with id: ${deviceId} not found`);\r\n                }\r\n                return device.label;\r\n            });\r\n    }\r\n\r\n    public getSpeakerVolume(): Promise<number> {\r\n        return this._mediaReadyPromise.then(() => this._slimcoreInstance.getSpeakerVolume());\r\n    }\r\n\r\n    public getSpeakerSystemVolume(): Promise<number> {\r\n        return this._mediaReadyPromise.then(() => this._slimcoreInstance.getSpeakerSystemVolume());\r\n    }\r\n\r\n    public setSpeakerVolume(volume: number): Promise<void> {\r\n        return this._mediaReadyPromise.then(() => this._slimcoreInstance.setSpeakerVolume(volume));\r\n    }\r\n\r\n    public setSpeakerSystemVolume(volume: number): Promise<void> {\r\n        return this._mediaReadyPromise.then(() => this._slimcoreInstance.setSpeakerSystemVolume(volume));\r\n    }\r\n\r\n    public unmuteMicrophone(): Promise<void> {\r\n        return this._mediaReadyPromise.then(() => this._slimcoreInstance.unmuteMicrophone());\r\n    }\r\n\r\n    public unmuteSpeaker(): Promise<void> {\r\n        return this._mediaReadyPromise.then(() => this._slimcoreInstance.unmuteSpeaker());\r\n    }\r\n\r\n    public getNrgLevelsForDeviceTuner(microphone: string): Promise<number> {\r\n        return this._mediaReadyPromise.then(() => this._slimcoreInstance.getNrgLevelsForDeviceTuner(microphone));\r\n    }\r\n\r\n    public getMicrophoneVolume(): Promise<number> {\r\n        return this._mediaReadyPromise.then(() => this._slimcoreInstance.getMicrophoneVolume());\r\n    }\r\n\r\n    public setMicrophoneVolume(volume: number): Promise<void> {\r\n        return this._mediaReadyPromise.then(() => this._slimcoreInstance.setMicrophoneVolume(volume));\r\n    }\r\n\r\n    public addProbeDevices(): Promise<boolean> {\r\n        return this._mediaReadyPromise\r\n            .then(() => {\r\n                if (this._slimcoreInstance.addProbeDevices) {\r\n                    return this._slimcoreInstance.addProbeDevices();\r\n                } else {\r\n                    this._logger.warn('addProbeDevices is not available');\r\n                    return Promise.reject(false);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this._logger.error(`Error in addProbeDevices, Error = ${error}`);\r\n                return Promise.reject(false);\r\n            });\r\n    }\r\n\r\n    private _startPreviewVideo = (videoObjectId: number) => {\r\n        // in AVAILABLE state video is fully stopped and no bindings on it\r\n        return this._mediaReadyPromise.then(slimcoreObject => {\r\n            this._logger.info(`Wait AVAILABLE for preview video ${videoObjectId}`);\r\n            return SlimCoreCommon.waitForVideoObjectState({\r\n                slimcoreInstance: this._slimcoreInstance,\r\n                slimcoreObject,\r\n                videoObjectId,\r\n                logger: this._logger,\r\n                resolveStates: [Enums.VideoStatus.Available],\r\n                rejectStates: [Enums.VideoStatus.NotAvailable],\r\n                timeout: SlimCoreCommon.videoObjectTimeout(this._settings)\r\n            })\r\n                .then(() => {\r\n                    this._logger.info(`Starting preview video ${videoObjectId}`);\r\n                    this._slimcoreInstance.videoStart(videoObjectId);\r\n                })\r\n                // in order to perform full stop that would bring video state back to AVAILABLE we need to wait for state\r\n                // that is not AVAILABLE best place doing this is after start (alternativley could also be done before stop)\r\n                .then(() => SlimCoreCommon.waitForVideoObjectState({\r\n                    slimcoreInstance: this._slimcoreInstance,\r\n                    slimcoreObject,\r\n                    videoObjectId,\r\n                    logger: this._logger,\r\n                    resolveStates: [Enums.VideoStatus.Starting, Enums.VideoStatus.Running],\r\n                    rejectStates: [Enums.VideoStatus.NotAvailable],\r\n                    timeout: SlimCoreCommon.videoObjectTimeout(this._settings)\r\n                }))\r\n                .then(() => this._logger.info(`Now can use preview video ${videoObjectId}`));\r\n        });\r\n    }\r\n\r\n    private _stopPreviewVideo = (videoObjectId: number) => {\r\n        return Promise.resolve().then(() => {\r\n            this._logger.info(`Stopping preview video ${videoObjectId}`);\r\n            this._slimcoreInstance.videoStop(videoObjectId);\r\n        });\r\n    }\r\n\r\n    private _createRendererBinding = (videoObjectId: number) => {\r\n        let binding: SlimCore.VideoBindingRenderer;\r\n        return this._previewVideoManager.acquire(this._rendererBindingManager, videoObjectId)\r\n            .then(() => {\r\n                // use new method if available\r\n                if (this._slimcoreInstance.createVideoBindingRenderer) {\r\n                    binding = this._slimcoreInstance.createVideoBindingRenderer({\r\n                        enableDXVA: this._settings.enableDXVA,\r\n                        isLocalPreview: true\r\n                    });\r\n                } else { // use old method for backwards compatibility\r\n                    binding = SlimCore.createVideoBindingRenderer();\r\n                }\r\n                this._logger.info(`Create rendering binding for preview video ${videoObjectId}`);\r\n                return this._slimcoreInstance.videoCreateBinding(videoObjectId, binding);\r\n            }).then(() => {\r\n                this._logger.info(`Created rendering binding for preview video ${videoObjectId}`);\r\n                return binding;\r\n            });\r\n    }\r\n\r\n    private _releaseRendererBinding = (videoObjectId: number, binding: SlimCore.VideoBindingRenderer) => {\r\n        return Promise.resolve().then(() => {\r\n            this._logger.info(`Release rendering binding for preview video ${videoObjectId}`);\r\n            return this._slimcoreInstance.videoReleaseBinding(videoObjectId, binding);\r\n        }).then(() => {\r\n            this._logger.info(`Released rendering binding for preview video ${videoObjectId}`);\r\n            return this._previewVideoManager.release(this._rendererBindingManager, videoObjectId);\r\n        });\r\n    }\r\n\r\n    private _createScreenShareBinding = (videoObjectId: number) => {\r\n        let binding: SlimCore.VideoBindingScreenShare;\r\n        return this._previewVideoManager.acquire(this._screenShareBindingManager, videoObjectId)\r\n            .then(() => {\r\n                binding = this._createVideoBindingScreenShare();\r\n                this._logger.info(`Create screenshare binding for preview video ${videoObjectId}`);\r\n                return this._slimcoreInstance.videoCreateBinding(videoObjectId, binding);\r\n            }).then(() => {\r\n                this._logger.info(`Created screenshare binding for preview video ${videoObjectId}`);\r\n                return binding;\r\n            });\r\n    }\r\n\r\n    private _releaseScreenShareBinding = (videoObjectId: number, binding: SlimCore.VideoBindingScreenShare) => {\r\n        return Promise.resolve().then(() => {\r\n            this._logger.info(`Release screenshare binding for preview video ${videoObjectId}`);\r\n            return this._slimcoreInstance.videoReleaseBinding(videoObjectId, binding);\r\n        }).then(() => {\r\n            this._logger.info(`Released screenshare binding for preview video ${videoObjectId}`);\r\n            return this._previewVideoManager.release(this._screenShareBindingManager, videoObjectId);\r\n        });\r\n    }\r\n\r\n    public hasVideoBindingScreenShare() {\r\n        return !!(this._slimcoreInstance.createVideoBindingScreenShare || SlimCore.createVideoBindingScreenShare);\r\n    }\r\n\r\n    private _createVideoBindingScreenShare() {\r\n        if (this._slimcoreInstance.createVideoBindingScreenShare) {\r\n            return this._slimcoreInstance.createVideoBindingScreenShare();\r\n        } else {\r\n            return SlimCore.createVideoBindingScreenShare();\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronDeviceManager.ts","/// <reference path=\"../typings/slimcore.d.ts\" />\r\n/// <reference path=\"../typings/slimcore-enums.d.ts\" />\r\n\r\nimport * as _ from 'lodash';\r\nimport {\r\n    CauseId, IRenderTarget, PreviewVideoSelection, ScalingMode, StartStreamOptions, VideoDeviceDesc\r\n} from 'skype-calling-interface';\r\nimport ChainedPromise from '../../common/ts/chainedPromise';\r\n\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\nimport SlimCoreElectronDeviceManager from './SlimCoreElectronDeviceManager';\r\nimport SlimCoreElectronVideoRenderer from './SlimCoreElectronVideoRenderer';\r\n\r\n// From electron/typings/slimcore-enums.d.ts:\r\nimport Enums = SlimCore.Enums;\r\nimport { IInternalLogger } from '../../common/ts/internalLogger';\r\nlet _instanceCount = 0;\r\n\r\nexport default class SlimCoreElectronLocalVideoPreview extends SlimCoreElectronVideoRenderer {\r\n    private readonly _id = _instanceCount++;\r\n\r\n    private _previewVideoObjectId = 0;\r\n    private _shouldRun = false;\r\n\r\n    private _currentCamera: VideoDeviceDesc;\r\n    private _chainedApiPromise: ChainedPromise;\r\n\r\n    public constructor(\r\n        logger: IInternalLogger,\r\n        settings: SlimCoreCommon.Settings,\r\n        engine: SlimCoreCommon.Engine,\r\n        private _currentTarget: IRenderTarget,\r\n        private _deviceManager: SlimCoreElectronDeviceManager,\r\n        private _selection: PreviewVideoSelection,\r\n        private _options: StartStreamOptions,\r\n        causeId: CauseId\r\n    ) {\r\n        super(logger.createChild(() => `LocalVideoPreview[${this._id}][${this._selection.kind}][${this._previewVideoObjectId}]`), settings, engine);\r\n        this._logger.info(`constructor device? ${this._selection.device} causeId: ${causeId}`);\r\n        if (this._selection.kind !== 'camera' && (this._selection.kind !== 'sharing' || !_.isUndefined(this._selection.device))) {\r\n            throw new Error(`invalid selection parameters causeId: ${causeId}`);\r\n        }\r\n        this._chainedApiPromise = new ChainedPromise(logger.createChild(() => `LocalVideoPreview[${this._id}][${this._selection.kind}][${this._previewVideoObjectId}]`));\r\n        if (this._selection.kind === 'camera' && _.isUndefined(this._selection.device)) {\r\n            this._registerDisposable(this._deviceManager.on('devicesChanged', () => this._devicesChanged(causeId)));\r\n        }\r\n    }\r\n\r\n    private _devicesChanged(causeId: CauseId): void {\r\n        this._logger.info(`_devicesChanged causeId: ${causeId}`);\r\n        this._chainedApiPromise.chainPromise(() => this._swapVideoDevice(causeId), 'swapVideoDevice', causeId);\r\n    }\r\n\r\n    public startVideoAsync(causeId: CauseId): Promise<void> {\r\n        this._logger.info(`startVideoAsync causeId: ${causeId}`);\r\n        this._shouldRun = true;\r\n        return this._chainedApiPromise.chainPromise(() => this._startVideo(causeId), 'startVideoAsync', causeId);\r\n    }\r\n\r\n    public stop(causeId: CauseId): Promise<void> {\r\n        this._logger.info(`stop causeId: ${causeId}`);\r\n        this._shouldRun = false;\r\n        return this._chainedApiPromise.chainPromise(() => this._stopVideo(causeId, false), 'stopVideoAsync', causeId);\r\n    }\r\n\r\n    public dumpVideoSourceImages(): Promise<number> {\r\n        if (!this._previewVideoObjectId) {\r\n            return Promise.reject(new Error('Cannot dump video fx debug images when there is no preview video'));\r\n        }\r\n        return this._slimcoreInstance.dumpVideoSourceImages(this._previewVideoObjectId);\r\n    }\r\n\r\n    public dispose(causeId: CauseId): void {\r\n        this._logger.info(`dispose causeId: ${causeId}`);\r\n        this._shouldRun = false;\r\n        this._chainedApiPromise.chainPromise(() => this._dispose(causeId), 'dispose', causeId);\r\n    }\r\n\r\n    private _isRunning(): boolean {\r\n        return (this._previewVideoObjectId !== 0 && !!this._videoBinding);\r\n    }\r\n\r\n    private _dispose(causeId: CauseId): Promise<void> {\r\n        return SlimCoreCommon.forgetAndLog(this._stopVideo(causeId, true), this._logger, `dispose causeId: ${causeId} stopping video preview failed`).then(() => {\r\n            this._currentTarget = null;\r\n            super.dispose(causeId);\r\n        });\r\n    }\r\n\r\n    private async _swapVideoDevice(causeId: CauseId): Promise<void> {\r\n        if (this._shouldRun && this._isRunning() && !!this._currentTarget) {\r\n            const selectedCamera = this._deviceManager.getSelectedCamera();\r\n            if (selectedCamera && this._currentCamera && selectedCamera.id !== this._currentCamera.id) {\r\n                this._logger.info(`_swapVideoDevice causeId: ${causeId} will change video preview device: ${this._currentCamera.id} -> ${selectedCamera.id}`);\r\n                await this._stopVideo(causeId, true);\r\n                await this._startVideo(causeId);\r\n            }\r\n        } else {\r\n            this._logger.info(`_swapVideoDevice causeId: ${causeId} noop, should run: ${this._shouldRun} is running: ${this._isRunning()} has target: ${!!this._currentTarget}`);\r\n        }\r\n    }\r\n\r\n    private async _startVideo(causeId: CauseId): Promise<void> {\r\n        if (this._shouldRun && !this._isRunning() && !!this._currentTarget) {\r\n            let name = '';\r\n            let path = '';\r\n            let videoType = Enums.VideoType.ScreenShare;\r\n            if (this._selection.kind === 'camera') {\r\n                if (_.isUndefined(this._selection.device)) {\r\n                    this._currentCamera = this._deviceManager.getSelectedCamera();\r\n                } else {\r\n                    this._currentCamera = this._deviceManager.getCamera(this._selection.device);\r\n                }\r\n                if (!this._currentCamera) {\r\n                    throw new Error(`_startVideo causeId: ${causeId} no camera to start video preview`);\r\n                }\r\n                videoType = Enums.VideoType.Video;\r\n                name = this._currentCamera.label;\r\n                path = this._currentCamera.id;\r\n            }\r\n            this._logger.info(`_startVideo causeId: ${causeId} will start video preview now for device name: ${name} path: ${path}`);\r\n            this._previewVideoObjectId = await this._deviceManager.getPreviewVideo(videoType, name, path);\r\n            this._videoBinding = await this._deviceManager.getRendererBindingManager().acquire(this, this._previewVideoObjectId);\r\n\r\n            const options = this._options || {\r\n                scalingMode: ScalingMode.Crop,\r\n                transparent: false\r\n            };\r\n            await this._createVideoRenderer(this._currentTarget, options, true);\r\n        } else {\r\n            this._logger.info(`_startVideo causeId: ${causeId} noop, should run: ${this._shouldRun} is running: ${this._isRunning()} has target: ${!!this._currentTarget}`);\r\n        }\r\n    }\r\n\r\n    private async _stopVideo(causeId: CauseId, force: boolean): Promise<void> {\r\n        if ((!this._shouldRun || force) && this._isRunning()) {\r\n            this._logger.info(`_stopVideo causeId: ${causeId} force: ${force} will stop video preview now`);\r\n            try {\r\n                this._disposeVideoRenderer(causeId);\r\n            } catch (error) {\r\n                this._logger.warn(`_stopVideo causeId: ${causeId} _disposeVideoRenderer error: ${error} falied @ ${new Error().stack}`);\r\n            }\r\n            const releasePromise = this._deviceManager.getRendererBindingManager().release(this, this._previewVideoObjectId);\r\n            this._previewVideoObjectId = 0;\r\n            this._videoBinding = null;\r\n            await releasePromise;\r\n        } else {\r\n            this._logger.info(`_stopVideo causeId: ${causeId} noop, force: ${force} should run: ${this._shouldRun} is running: ${this._isRunning()} has target: ${!!this._currentTarget}`);\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronLocalVideoPreview.ts","import {\r\n    CallingLogger, DeviceType, ImageInfo, IScreenSharingManager, IScreenSharingManagerEvents, ISharingSource, Rectangle, SharingSourceType, VideoDeviceDesc\r\n} from 'skype-calling-interface';\r\nimport { ISlimCoreElectronApplicationHooks } from '../typings/skype-calling-electron';\r\n\r\nimport * as _ from 'lodash';\r\nimport * as async from '../../common/ts/async';\r\nimport { IInternalLogger } from '../../common/ts/internalLogger';\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\nimport SlimCoreElectronBase from './SlimCoreElectronBase';\r\nimport SlimCoreElectronDeviceManager from './SlimCoreElectronDeviceManager';\r\nimport SlimCoreElectronScreenScraper from './SlimCoreElectronScreenScraper';\r\n\r\nexport default class SlimCoreElectronScreenSharingManager extends SlimCoreElectronBase<IScreenSharingManagerEvents> implements IScreenSharingManager {\r\n    private _screenScraper: SlimCoreElectronScreenScraper;\r\n\r\n    public constructor(\r\n        logger: IInternalLogger,\r\n        settings: SlimCoreCommon.Settings,\r\n        engine: SlimCoreCommon.Engine,\r\n        private _appHooks: ISlimCoreElectronApplicationHooks,\r\n        private _deviceManager : SlimCoreElectronDeviceManager\r\n    ) {\r\n        super(logger.createChild('ScreenSharingManager'), settings, engine);\r\n        this._logger.info('constructor');\r\n\r\n        try {\r\n            this._screenScraper = new SlimCoreElectronScreenScraper(this._slimcoreInstance);\r\n        } catch (error) {\r\n            this._logger.warn(`${error}`);\r\n        }\r\n\r\n        this._registerDisposable(this._appHooks.onDisplaysChanged(() => this._raiseScreensChanged()));\r\n    }\r\n\r\n    public enumerateScreensAsync(): Promise<ISharingSource[]> {\r\n        return async.asap(() => this._enumerateScreens());\r\n    }\r\n\r\n    public enumerateWindowsAsync(): Promise<ISharingSource[]> {\r\n        return async.asap(() => this._enumerateWindows());\r\n    }\r\n\r\n    public enumerateCamerasAsync(): Promise<ISharingSource[]> {\r\n        try {\r\n            if (this._deviceManager) {\r\n                return this._deviceManager.enumerateDevicesAsync()\r\n                    .then(devices => {\r\n                        const cameras = devices.filter(device => device.kind === DeviceType.Camera);\r\n                        this._logger.debug(`enumerateCameras() result: ${JSON.stringify(cameras)}`);\r\n                        return _.map(cameras, camera => new SlimcoreElectronCameraSharingSource(camera as VideoDeviceDesc));\r\n                    });\r\n            } else {\r\n                return Promise.resolve([]);\r\n            }\r\n        } catch (error) {\r\n            this._logger.error(`enumerateCameras() failed: ${error}`);\r\n            return Promise.reject(`enumerateCameras() failed: ${error}`);\r\n        }\r\n    }\r\n\r\n    private _enumerateScreens(): ISharingSource[] {\r\n        try {\r\n            const monitors = this._screenScraper && this._screenScraper.getMonitorList() || [];\r\n            this._logger.debug(`ScreenScraper.getMonitorList() result: ${JSON.stringify(monitors)}`);\r\n\r\n            return _.map(monitors, monitorInfo => new SlimCoreElectronScreenSharingSource(monitorInfo, this._logger, this._screenScraper));\r\n        } catch (error) {\r\n            this._logger.error(`ScreenScraper.getMonitorList() failed: ${error}`);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    private _enumerateWindows(): ISharingSource[] {\r\n        try {\r\n            const windows = this._screenScraper && this._screenScraper.getWindowList() || [];\r\n            this._logger.debug(`ScreenScraper.getWindowList() result: ${JSON.stringify(windows)}`);\r\n\r\n            return _.map(windows, windowInfo => new SlimcoreElectronWindowSharingSource(windowInfo, this._logger, this._screenScraper));\r\n        } catch (error) {\r\n            this._logger.error(`ScreenScraper.getWindowList() failed: ${error}`);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    private _raiseScreensChanged() {\r\n        this._logger.debug('raising onScreensChanged');\r\n        this.event('screensChanged').raise();\r\n    }\r\n}\r\n\r\nclass SlimCoreElectronScreenSharingSource implements ISharingSource {\r\n    public constructor(private _monitorInfo: SlimCore.MonitorInfo, private _logger: CallingLogger, private _screenScraper: SlimCoreElectronScreenScraper) {\r\n    }\r\n\r\n    public getId(): number {\r\n        return this._monitorInfo.monitorId;\r\n    }\r\n\r\n    public getDeviceId(): string {\r\n        return String(this._monitorInfo.monitorId);\r\n    }\r\n\r\n    public getType(): SharingSourceType {\r\n        return SharingSourceType.Monitor;\r\n    }\r\n\r\n    public getPreview(width?: number, height?: number, asImage?: boolean): Promise<ImageInfo> {\r\n        return Promise.reject('not implemented');\r\n    }\r\n\r\n    public getPreviewAsync(width?: number, height?: number, asImage?: boolean): Promise<ImageData> {\r\n        return new Promise<ImageData>(resolve => {\r\n            resolve(this._screenScraper.getMonitorPreview(this.getId(), width, height, asImage, this._monitorInfo.region));\r\n        })\r\n            .then(result => {\r\n                this._logger.debug(`ScreenScraper.getMonitorPreview(${this.getId()}) result: ${result.width}x${result.height}`);\r\n                return result;\r\n            }, error => {\r\n                this._logger.error(`ScreenScraper.getMonitorPreview(${this.getId()}) failed: ${error}`);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    public getDescription(): string {\r\n        return this._monitorInfo.name;\r\n    }\r\n\r\n    public getIcon(width?: number, height?: number): Promise<ImageData> {\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n    public getBounds(): Rectangle {\r\n        return {\r\n            x: this._monitorInfo.region.x,\r\n            y: this._monitorInfo.region.y,\r\n            width: this._monitorInfo.region.width,\r\n            height: this._monitorInfo.region.height\r\n        };\r\n    }\r\n}\r\n\r\nclass SlimcoreElectronWindowSharingSource implements ISharingSource {\r\n    public constructor(private _windowInfo: SlimCore.WindowInfo, private _logger: CallingLogger, private _screenScraper: SlimCoreElectronScreenScraper) {\r\n    }\r\n\r\n    public getId(): number {\r\n        return this._windowInfo.windowId;\r\n    }\r\n\r\n    public getDeviceId(): string {\r\n        return String(this._windowInfo.windowId);\r\n    }\r\n\r\n    public getType(): SharingSourceType {\r\n        return SharingSourceType.Window;\r\n    }\r\n\r\n    public getPreview(width?: number, height?: number, asImage?: boolean): Promise<ImageInfo> {\r\n        return Promise.reject('not implemented');\r\n    }\r\n\r\n    public getPreviewAsync(width?: number, height?: number, asImage?: boolean): Promise<ImageData> {\r\n        return new Promise<ImageData>(resolve => {\r\n            resolve(this._screenScraper.getWindowPreview(this.getId(), width, height, asImage));\r\n        })\r\n            .then(result => {\r\n                this._logger.debug(`ScreenScraper.getWindowPreview(${this.getId()}) result: ${result.width}x${result.height}`);\r\n                return result;\r\n            }, error => {\r\n                this._logger.error(`ScreenScraper.getWindowPreview(${this.getId()}) failed: ${error}`);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    public getDescription(): string {\r\n        return this._windowInfo.title;\r\n    }\r\n\r\n    public getAppName(): string {\r\n        return this._windowInfo.applicationName;\r\n    }\r\n\r\n    public getIcon(width?: number, height?: number, asImage?: boolean): Promise<ImageData> {\r\n        return new Promise<ImageData>(resolve => {\r\n            resolve(this._screenScraper.getWindowIcon(this.getId(), width, height, asImage));\r\n        })\r\n            .then(result => {\r\n                this._logger.debug(`ScreenScraper.getWindowIcon(${this.getId()}) result: ${result.width}x${result.height}`);\r\n                return result;\r\n            }, error => {\r\n                this._logger.error(`ScreenScraper.getWindowIcon(${this.getId()}) failed: ${error}`);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    public getBounds(): Rectangle {\r\n        return undefined;\r\n    }\r\n}\r\n\r\nclass SlimcoreElectronCameraSharingSource implements ISharingSource {\r\n    public constructor(private _cameraDescription: VideoDeviceDesc) {\r\n    }\r\n\r\n    public getId(): number {\r\n        return null;\r\n    }\r\n\r\n    public getDeviceId(): string {\r\n        return this._cameraDescription.id;\r\n    }\r\n\r\n    public getType(): SharingSourceType {\r\n        return SharingSourceType.Camera;\r\n    }\r\n\r\n    public getPreview(width?: number, height?: number, asImage?: boolean): Promise<ImageInfo> {\r\n        return Promise.reject('not implemented');\r\n    }\r\n\r\n    public getPreviewAsync(width?: number, height?: number, asImage?: boolean): Promise<ImageData> {\r\n        return Promise.reject('not implemented');\r\n    }\r\n\r\n    public getDescription(): string {\r\n        return this._cameraDescription.label;\r\n    }\r\n\r\n    public getIcon(width?: number, height?: number, asImage?: boolean): Promise<ImageData> {\r\n        return Promise.reject('not implemented');\r\n    }\r\n\r\n    public getBounds(): Rectangle {\r\n        return undefined;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronScreenSharingManager.ts","import {\r\n    AccountConfiguration, CallingIntent, CallingStackInitOptions, CallSupport, E911Info, ICallingStack, ICallingStackError,\r\n    ICallingStackEvents, IDeviceManager, IEcsProvider, IScreenSharingManager, ISetup, MediaConfiguration, MediaStatus, SkypeIdentity\r\n} from 'skype-calling-interface';\r\nimport { ISlimCoreElectronApplicationHooks, ISlimCoreElectronStackFactory, ISlimCoreUwpStackFactory, SlimCoreElectronStackConfig, SlimCoreSettings, TelemetryService } from '../typings/skype-calling-electron';\r\n\r\nimport * as _ from 'lodash';\r\nimport * as async from '../../common/ts/async';\r\nimport * as piiUtils from '../../common/ts/piiUtils';\r\nimport { getOvb, getTsCallingVersion } from '../../common/ts/tsCallingVersionProvider';\r\nimport { deinitLogging, initDelegate, patchLogger } from './logging/electronInitLogging';\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\nimport SlimCoreElectronBase from './SlimCoreElectronBase';\r\nimport SlimCoreElectronCallRegistry from './SlimCoreElectronCallRegistry';\r\nimport SlimCoreElectronDeviceManager from './SlimCoreElectronDeviceManager';\r\nimport SlimCoreElectronEcsProvider from './SlimCoreElectronEcsProvider';\r\nimport SlimCoreElectronScreenSharingManager from './SlimCoreElectronScreenSharingManager';\r\nimport SlimCoreElectronSetup from './SlimCoreElectronSetup';\r\nimport { UwpEngineWrapped } from './SlimCoreUwpEventWrapper';\r\n\r\n// From electron/typings/slimcore-enums.d.ts:\r\nimport Enums = SlimCore.Enums;\r\nimport { generateCauseId } from '../../common/ts/causeId';\r\nimport { noop } from '../../common/ts/fn';\r\nimport InternalLogger from '../../common/ts/internalLogger';\r\n\r\nconst REQUIRED_API_VERSION = 7;\r\n\r\nclass SlimCoreElectronStackError extends Error implements ICallingStackError {\r\n    public readonly callSupport: CallSupport;\r\n\r\n    public constructor(message: string, callSupport: CallSupport = CallSupport.BrowserNotSupported) {\r\n        super(message);\r\n        this.callSupport = callSupport;\r\n    }\r\n}\r\n\r\nexport class SlimCoreElectronStack extends SlimCoreElectronBase<ICallingStackEvents> implements ICallingStack {\r\n    public callRegistries: SlimCoreElectronCallRegistry[] = [];\r\n    private _deviceManager: SlimCoreElectronDeviceManager;\r\n    private _screenSharingManager: SlimCoreElectronScreenSharingManager;\r\n    private _setup: SlimCoreElectronSetup;\r\n    private _ecsProvider: SlimCoreElectronEcsProvider;\r\n    private _startSlimcorePromiseDefered = async.defer<SlimCoreCommon.Engine>();\r\n    private _libStatus: Enums.LibStatus;\r\n    private _appHooks: ISlimCoreElectronApplicationHooks;\r\n    private _telemetryService: TelemetryService;\r\n    private _stackLoginPromise = async.defer<SlimCoreCommon.CallHandler>();\r\n    private _mediaStartDeferredPromise = async.defer<SlimCoreCommon.Engine>();\r\n\r\n    public constructor(config: SlimCoreElectronStackConfig) {\r\n        super(new InternalLogger(config.logger).createChild('CallingStack'),\r\n            _.assign<SlimCoreSettings, { platform: SlimCoreCommon.PlatformType }>(config.settings, { platform: SlimCoreCommon.PlatformType.Electron }),\r\n            SlimCoreCommon.wrap(config.slimCoreInstance, config.settings));\r\n        if (!isModuleAvailable()) {\r\n            throw new SlimCoreElectronStackError('slimcore module is not available', CallSupport.BrowserNotSupported);\r\n        }\r\n\r\n        if (getApiVersion() < REQUIRED_API_VERSION) {\r\n            throw new SlimCoreElectronStackError(`slimcore module API version ${getApiVersion()} incompatible with required ${REQUIRED_API_VERSION}`, CallSupport.IncompatibleVersions);\r\n        }\r\n\r\n        if (config.settings.enableTsCallingULLogging) {\r\n            initDelegate(this._slimcoreInstance, config);\r\n        }\r\n        this._appHooks = config.appHooks;\r\n        this._telemetryService = config.telemetryService;\r\n\r\n        this._setup = new SlimCoreElectronSetup(this._slimcoreInstance);\r\n        this._ecsProvider = new SlimCoreElectronEcsProvider(this._slimcoreInstance);\r\n\r\n        //HODOR\r\n        this._stackLoginPromise.promise.then(() => this._startSlimcorePromiseDefered.resolve(this._slimcoreInstance));\r\n\r\n        const internalLogger = new InternalLogger(config.logger);\r\n        const initPromise: Promise<SlimCoreCommon.CallHandler | SlimCoreCommon.Engine> = SlimCoreCommon.hasFeature(Enums.Feature.MultiUserSupport) ? this._startSlimcorePromiseDefered.promise : this._stackLoginPromise.promise;\r\n        //by contract media init promise could complete before slimcore init promise, thus having guard in here (kind of paranoia, but we are guaranteed that slimcore is running and media is ready)\r\n        const mediaReadyPromise = SlimCoreCommon.hasFeature(Enums.Feature.LazyMediaInit) ? initPromise.then(() => this._mediaStartDeferredPromise.promise) : initPromise;\r\n        this._deviceManager = new SlimCoreElectronDeviceManager(internalLogger, this._settings, this._slimcoreInstance, mediaReadyPromise, config.appHooks);\r\n        this._screenSharingManager = new SlimCoreElectronScreenSharingManager(internalLogger, this._settings, this._slimcoreInstance, config.appHooks, this._deviceManager);\r\n        this._registerDisposable(this._slimcoreInstance.handle('e911-info-changed', undefined, data => this._onE911Info(data)));\r\n        this._registerDisposable(this._slimcoreInstance.handle('media-status-changed', undefined, data => this._onMediaStatus(data)));\r\n        this._registerDisposable(this._slimcoreInstance.handle('probe-devices-status-changed', undefined, data => this._onProbeDevicesStatusChanged(data)));\r\n    }\r\n\r\n    public dispose(causeId = generateCauseId()) {\r\n        const fnLogger = this._logger.createFnLogger('dispose', causeId);\r\n        fnLogger.info(`dispose`);\r\n\r\n        if (this._libStatus !== Enums.LibStatus.Running) {\r\n            this._startSlimcorePromiseDefered.reject(new Error('CallingStack dispose called before slimcore reached Running state'));\r\n        }\r\n        this._mediaStartDeferredPromise.reject(new Error('CallingStack dispose called before media was initialized'));\r\n\r\n        const always = () => {\r\n            this.callRegistries = [];\r\n            fnLogger.info('call registries are disposed');\r\n            this._screenSharingManager.dispose(causeId);\r\n            this._screenSharingManager = undefined;\r\n            fnLogger.info('screensharing manager is disposed');\r\n            this._deviceManager.dispose(causeId);\r\n            this._deviceManager = undefined;\r\n            fnLogger.info('device manager is disposed');\r\n            deinitLogging();\r\n            this._slimcoreInstance.dispose();\r\n            this._slimcoreInstance = undefined;\r\n            fnLogger.info('slimcore instance is disposed');\r\n            super.dispose();\r\n        };\r\n        const callRegistryDisposePromises = this.callRegistries.map(callRegistry => callRegistry.dispose(causeId));\r\n        Promise.all(callRegistryDisposePromises).then(always, always);\r\n    }\r\n\r\n    public async init(initOptions: CallingStackInitOptions = { block: true }, causeId = generateCauseId()): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger('init', causeId);\r\n        fnLogger.info(`init`);\r\n\r\n        if (!this._slimcoreInstance) {\r\n            return Promise.reject(new Error('slimcore instance is already disposed'));\r\n        }\r\n\r\n        if (!SlimCoreCommon.hasFeature(Enums.Feature.AsyncStart)) {\r\n            initOptions.block = true;\r\n        }\r\n\r\n        if (!initOptions.block) {\r\n            this._registerDisposable(this._slimcoreInstance.handle(\r\n                'lib-status-changed',\r\n                { libStatus: SlimCore.Enums.LibStatus.Running },\r\n                data => this._onLibStatusChanged(data)));\r\n        }\r\n\r\n        await Promise.all([\r\n            this.getSetup().setNumber('*Lib/LazyMediaInit',\r\n                SlimCoreCommon.hasFeature(Enums.Feature.LazyMediaInit) && !!initOptions.lazyMediaInit  ? 1 : 0),\r\n            this.getSetup().setString('*Lib/SCT/Telemetry/DiagnosticLevel', initOptions.telemetryDiagnosticLevel || '')\r\n        ]);\r\n\r\n        this._slimcoreInstance.start(initOptions.block);\r\n        fnLogger.info(`starting slimcoreInstance block=${initOptions.block}`);\r\n\r\n        if (initOptions.block) {\r\n            // Blocking call finished so we can resolve promise immediately,\r\n            // and manually set libstatus to running\r\n            this._libStatus = Enums.LibStatus.Running;\r\n            this._startSlimcorePromiseDefered.resolve(this._slimcoreInstance);\r\n        }\r\n        return this._startSlimcorePromiseDefered.promise.then(noop);\r\n    }\r\n\r\n    private _onLibStatusChanged(eventData: SlimCore.Engine.Events.LibStatusChangedArgs) {\r\n        this._logger.info(`_onLibStatusChanged from ${this._libStatus} => ${eventData.libStatus}`);\r\n        if (eventData.libStatus === Enums.LibStatus.Running) {\r\n            this._startSlimcorePromiseDefered.resolve(this._slimcoreInstance);\r\n        } else if (eventData.libStatus === Enums.LibStatus.FatalError &&\r\n            this._libStatus === Enums.LibStatus.Constructed) {\r\n            // Handle fatal error during setup\r\n            this._startSlimcorePromiseDefered.reject(new Error('Slimcore FatalError during start'));\r\n        }\r\n        this._libStatus = eventData.libStatus;\r\n    }\r\n\r\n    public getCallRegistry(identity?: SkypeIdentity, causeId = generateCauseId(), configuration?: AccountConfiguration): any {\r\n        const id = identity ? piiUtils.mriOrId(identity.id) : undefined;\r\n        const fnLogger = this._logger.createFnLogger(`getCallRegistry[identity=${id}]`, causeId);\r\n\r\n        // old way of getCallRegistry(): ICallRegistry\r\n        if (!identity) {\r\n            fnLogger.info('returning default callRegistry');\r\n            if (this.callRegistries[0]) {\r\n                return this.callRegistries[0];\r\n            }\r\n            return this.createCallRegistry();\r\n        }\r\n\r\n        let callRegistry = this.callRegistries.find(callRegistry => callRegistry.identity === identity.id);\r\n        if (callRegistry && !callRegistry.isDisposing) {\r\n            fnLogger.info(`callRegistry already exists for ${piiUtils.mriOrId(identity.id)}`);\r\n            return Promise.resolve(callRegistry);\r\n        }\r\n\r\n        const disposePromise = callRegistry && callRegistry.isDisposing ? callRegistry.disposePromise : Promise.resolve().then(noop);\r\n\r\n        return this._startSlimcorePromiseDefered.promise\r\n            .then(async () => {\r\n                await disposePromise;\r\n                callRegistry = this.createCallRegistry();\r\n                await callRegistry.login(identity, causeId, SlimCoreCommon.mapToEmptyStrIfFalsy(JSON.stringify(configuration))).catch(() => callRegistry.dispose(causeId));\r\n                return callRegistry;\r\n            });\r\n    }\r\n\r\n    private createCallRegistry() : SlimCoreElectronCallRegistry {\r\n        const callRegistry = new SlimCoreElectronCallRegistry(this._logger, this._settings, this._slimcoreInstance, this._deviceManager, this._appHooks, this._telemetryService);\r\n        callRegistry.on('disposed', () => { this.callRegistries.splice(this.callRegistries.indexOf(callRegistry), 1); });\r\n        callRegistry.loginPromise.then(this._stackLoginPromise.resolve, this._stackLoginPromise.reject);\r\n        this.callRegistries.push(callRegistry);\r\n        return callRegistry;\r\n    }\r\n\r\n    public getDeviceManager(): IDeviceManager {\r\n        return this._deviceManager;\r\n    }\r\n\r\n    public getScreenSharingManager(): IScreenSharingManager {\r\n        return this._screenSharingManager;\r\n    }\r\n\r\n    public getSetup(): ISetup {\r\n        return this._setup;\r\n    }\r\n\r\n    public getEcsProvider(): IEcsProvider {\r\n        return this._ecsProvider;\r\n    }\r\n\r\n    public fireIntent(callingIntent: CallingIntent, identity?: string) {\r\n        if (!this._slimcoreInstance) {\r\n            return;\r\n        }\r\n\r\n        const slimcoreIntent = SlimCoreElectronStack._callingIntentToSlimcoreIntent(callingIntent);\r\n        if (!slimcoreIntent) {\r\n            return;\r\n        }\r\n\r\n        this._slimcoreInstance.fireIntent(slimcoreIntent, identity);\r\n    }\r\n\r\n    public getVersion() {\r\n        return {\r\n            build: getTsCallingVersion(),\r\n            ovb: getOvb()\r\n        };\r\n    }\r\n\r\n    private static _callingIntentToSlimcoreIntent(callingIntent: CallingIntent): Enums.Intent {\r\n        switch (callingIntent) {\r\n            case CallingIntent.Incoming:\r\n                return Enums.Intent.CallPush;\r\n            case CallingIntent.Outgoing:\r\n                return Enums.Intent.CallUser;\r\n            case CallingIntent.WarmPush:\r\n                return Enums.Intent.CallPreheat;\r\n            case CallingIntent.MediaInit:\r\n                return Enums.Intent.MediaInit;\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n\r\n    private _slimcoreMediaStatusToCallingMediaStatus(slMediaStatus: Enums.MediaStatus): MediaStatus {\r\n        switch (slMediaStatus) {\r\n            case Enums.MediaStatus.Initialized:\r\n                return MediaStatus.Initialized;\r\n            case Enums.MediaStatus.NotAvailable:\r\n                return MediaStatus.NotAvailable;\r\n            case Enums.MediaStatus.Failed:\r\n                return MediaStatus.Failed;\r\n            case Enums.MediaStatus.Uninitialized:\r\n                return MediaStatus.Uninitialized;\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n\r\n    public getMediaStatus(): MediaStatus {\r\n        return this._slimcoreMediaStatusToCallingMediaStatus(this._slimcoreInstance.getMediaStatus());\r\n    }\r\n\r\n    public setMediaConfig(configuration: MediaConfiguration) : Promise<void> {\r\n        return new Promise(resolve => {\r\n            // allow to call this before slimcore starts (then all config values get applied before csa can create new conference)\r\n            this._setMediaConfig(configuration, this._startSlimcorePromiseDefered.promise);\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    private _setMediaConfig(configuration: MediaConfiguration, mediaReady: Promise<SlimCoreCommon.Engine>) : void {\r\n\r\n        const mediaConfigApi = !!this._slimcoreInstance.setMediaConfig;\r\n\r\n        if (mediaConfigApi) {\r\n            this._logger.info('Set Media Configuration, using setMediaConfig');\r\n            this._slimcoreInstance.setMediaConfig(configuration as any);\r\n        } else {\r\n            // following slimcore methods can be called before slimcore started\r\n            const mediaPortRangesApi = !!this._slimcoreInstance.setMediaPortRanges;\r\n            const enableMediaQosApi = !!this._slimcoreInstance.enableMediaQoS;\r\n            const createMediaConfigApi = !!this._slimcoreInstance.createMediaConfig;\r\n            const openCameraApi = !!this._slimcoreInstance.setOpenCameraInMaxResolution;\r\n            // following slimcore methods must be called after slimcore started!\r\n            const enableTtySupportApi = !!this._slimcoreInstance.enableTtySupport;\r\n            const enableAGCApi = !!this._slimcoreInstance.enableAGC;\r\n\r\n            const hasPortRanges = configuration.hasOwnProperty('mediaPortRanges');\r\n            const hasQos = configuration.hasOwnProperty('enableMediaQoS');\r\n            const hasSetOpenCamera = configuration.hasOwnProperty('openCameraInMaxResolution');\r\n            const hasEnableTtySupport = configuration.hasOwnProperty('enableTtySupport');\r\n            const hasEnableAGC = configuration.hasOwnProperty('enableAGC');\r\n\r\n            if (openCameraApi && hasSetOpenCamera) {\r\n                this._logger.info('Set Media Configuration, using OpenCameraInMaxResolution');\r\n                this._slimcoreInstance.setOpenCameraInMaxResolution(configuration.openCameraInMaxResolution);\r\n            }\r\n            if (hasQos || hasPortRanges) {\r\n                if (enableMediaQosApi && mediaPortRangesApi) {\r\n                    if (hasQos) {\r\n                        this._logger.info('Set Media Configuration, using set enableMediaQos');\r\n                        this._slimcoreInstance.enableMediaQoS(configuration.enableMediaQoS);\r\n                    }\r\n                    if (hasPortRanges) {\r\n                        this._logger.info('Set Media Configuration, using set Media port ranges');\r\n                        this._slimcoreInstance.setMediaPortRanges(configuration.mediaPortRanges);\r\n                    }\r\n                } else if (createMediaConfigApi) {\r\n                    this._logger.info('Set Media Configuration, using CreateMediaConfig');\r\n                    const mediaConfig = this._slimcoreInstance.createMediaConfig();\r\n                    if (hasQos) {\r\n                        mediaConfig.enableMediaQoS(configuration.enableMediaQoS);\r\n                    }\r\n                    if (hasPortRanges) {\r\n                        mediaConfig.setMediaPortRanges(configuration.mediaPortRanges);\r\n                    }\r\n                } else {\r\n                    this._logger.error('Set Media Configuration, failed no suitable methods found for qos or port ranges');\r\n                }\r\n            }\r\n            if (hasEnableTtySupport || hasEnableAGC) {\r\n                //will apply following settings only after media gets initialized, or they fail inside slimcore\r\n                this._logger.info('Set Media Configuration, queuing operation to run when media is ready');\r\n                mediaReady.then(() => {\r\n                    if (hasEnableTtySupport) {\r\n                        if (enableTtySupportApi) {\r\n                            this._logger.info('Set Media Configuration, using enableTtySupport');\r\n                            this._slimcoreInstance.enableTtySupport(configuration.enableTtySupport);\r\n                        } else if (createMediaConfigApi) {\r\n                            const mediaConfig = this._slimcoreInstance.createMediaConfig();\r\n                            if (mediaConfig.enableTtySupport) {\r\n                                this._logger.info('Set Media Configuration, using CreateMediaConfig.enableTtySupport');\r\n                                mediaConfig.enableTtySupport(configuration.enableTtySupport);\r\n                            } else {\r\n                                this._logger.error('Set Media Configuration, failed no suitable methods found for enableTtySupport on CreateMediaConfig');\r\n                            }\r\n                        } else {\r\n                            this._logger.error('Set Media Configuration, failed no suitable methods found for enableTtySupport');\r\n                        }\r\n                    }\r\n                    if (hasEnableAGC && enableAGCApi) {\r\n                        this._logger.info('Set Media Configuration, using enableAGC');\r\n                        this._slimcoreInstance.enableAGC(configuration.enableAGC);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    public getE911Info(): Promise<E911Info> {\r\n        if (!this._slimcoreInstance) {\r\n            return Promise.reject(new Error('slimcore instance is already disposed'));\r\n        }\r\n\r\n        if (!this._slimcoreInstance.getE911Info) {\r\n            return Promise.reject(new Error('getE911Info is not available'));\r\n        }\r\n\r\n        return this._startSlimcorePromiseDefered.promise.then(() => {\r\n            const infoJson = this._slimcoreInstance.getE911Info();\r\n            try {\r\n                return JSON.parse(infoJson) as E911Info;\r\n\r\n            } catch (e) {\r\n                return Promise.reject(new Error('failed to parse e911Info'));\r\n            }\r\n        });\r\n    }\r\n\r\n    private _onE911Info(eventData: SlimCore.Engine.Events.E911InfoArgs) {\r\n        let info: E911Info;\r\n        try {\r\n            info = JSON.parse(eventData.info) as E911Info;\r\n        } catch (e) {\r\n            this._logger.error('failed to parse e911Info');\r\n            return;\r\n        }\r\n        this.event('e911InfoChanged').raise(info);\r\n    }\r\n\r\n    private _onMediaStatus(eventData: SlimCore.Engine.Events.MediaStatusChangedArgs) {\r\n        const status = this._slimcoreMediaStatusToCallingMediaStatus(eventData.mediaStatus);\r\n        this.event('mediaStatusChanged').raise(status);\r\n        if (status === MediaStatus.Initialized) {\r\n            this._mediaStartDeferredPromise.resolve(this._slimcoreInstance);\r\n        } else if (status === MediaStatus.Failed) {\r\n            this._mediaStartDeferredPromise.reject(new Error('Media initialization FatalError'));\r\n        }\r\n    }\r\n\r\n    private _onProbeDevicesStatusChanged(eventData: SlimCore.Engine.Events.ProbeDevicesStatusChangedArgs) {\r\n        this.event('probeDevicesStatusChanged').raise(eventData.ready);\r\n    }\r\n}\r\n\r\nexport class SlimCoreUwpStack extends SlimCoreElectronBase<ICallingStackEvents> implements ICallingStack {\r\n    public callRegistries: SlimCoreElectronCallRegistry[] = [];\r\n    private _deviceManager: SlimCoreElectronDeviceManager;\r\n    private _setup: SlimCoreElectronSetup;\r\n    private _screenSharingManager: SlimCoreElectronScreenSharingManager;\r\n    private _startSlimcorePromiseDefered = async.defer<SlimCoreCommon.Engine>();\r\n    private _libStatus: Enums.LibStatus;\r\n    private _appHooks: ISlimCoreElectronApplicationHooks;\r\n    private _telemetryService: TelemetryService;\r\n    private _stackLoginPromise = async.defer<SlimCoreCommon.CallHandler>(); //HODOR\r\n    private _mediaStartDeferredPromise = async.defer<SlimCoreCommon.Engine>();\r\n\r\n    public constructor(config: SlimCoreElectronStackConfig) {\r\n        super(new InternalLogger(config.logger).createChild('CallingStack', true),\r\n            _.assign<SlimCoreSettings, { platform: SlimCoreCommon.PlatformType }>(config.settings, { platform: SlimCoreCommon.PlatformType.Uwp }),\r\n            SlimCoreCommon.wrap(new UwpEngineWrapped(config.slimCoreInstance).objectAsWrapped, config.settings));\r\n\r\n        if (!SlimCoreCommon.isSlimCoreRTModuleAvailable()) {\r\n            throw new SlimCoreElectronStackError('slimcore module is not available', CallSupport.BrowserNotSupported);\r\n        }\r\n        this._appHooks = config.appHooks;\r\n        this._telemetryService = config.telemetryService;\r\n        this._setup = new SlimCoreElectronSetup(this._slimcoreInstance);\r\n\r\n        // HODOR\r\n        this._stackLoginPromise.promise.then(() => this._startSlimcorePromiseDefered.resolve(this._slimcoreInstance));\r\n\r\n        const initPromise: Promise<SlimCoreCommon.CallHandler | SlimCoreCommon.Engine> = SlimCoreCommon.hasFeature(Enums.Feature.MultiUserSupport) ? this._startSlimcorePromiseDefered.promise : this._stackLoginPromise.promise;\r\n        const mediaReadyPromise = SlimCoreCommon.hasFeature(Enums.Feature.LazyMediaInit) ? initPromise.then(() => this._mediaStartDeferredPromise.promise) : initPromise;\r\n        this._deviceManager = new SlimCoreElectronDeviceManager(this._logger, this._settings, this._slimcoreInstance, mediaReadyPromise, config.appHooks);\r\n        this._screenSharingManager = new SlimCoreElectronScreenSharingManager(this._logger, this._settings, this._slimcoreInstance, config.appHooks, this._deviceManager);\r\n        this._registerDisposable(this._slimcoreInstance.handle('media-status-changed', undefined, data => this._onMediaStatus(data)));\r\n    }\r\n\r\n    public dispose(causeId = generateCauseId()) {\r\n        const fnLogger = this._logger.createFnLogger('dispose', causeId);\r\n        fnLogger.info(`dispose`);\r\n\r\n        if (this._libStatus !== Enums.LibStatus.Running) {\r\n            this._startSlimcorePromiseDefered.reject(new Error('CallingStack dispose called before slimcore reached Running state'));\r\n        }\r\n        this._mediaStartDeferredPromise.reject(new Error('CallingStack dispose called before media was initialized'));\r\n\r\n        const always = () => {\r\n            this.callRegistries = [];\r\n            fnLogger.info('call registries are disposed');\r\n            this._screenSharingManager.dispose(causeId);\r\n            this._screenSharingManager = undefined;\r\n            fnLogger.info('screensharing manager is disposed');\r\n            this._deviceManager.dispose(causeId);\r\n            this._deviceManager = undefined;\r\n            fnLogger.info('device manager is disposed');\r\n            this._slimcoreInstance.dispose();\r\n            this._slimcoreInstance = undefined;\r\n            fnLogger.info('slimcore instance is disposed');\r\n            super.dispose();\r\n        };\r\n        const callRegistryDisposePromises = this.callRegistries.map(callRegistry => callRegistry.dispose(causeId));\r\n        Promise.all(callRegistryDisposePromises).then(always, always);\r\n    }\r\n\r\n    public async init(initOptions: CallingStackInitOptions = { block: true }, causeId = generateCauseId()): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger('init', causeId);\r\n        fnLogger.info(`init`);\r\n\r\n        if (!this._slimcoreInstance) {\r\n            return Promise.reject(new Error('slimcore instance is already disposed'));\r\n        }\r\n\r\n        if (!SlimCoreCommon.hasFeature(Enums.Feature.AsyncStart)) {\r\n            initOptions.block = true;\r\n        }\r\n\r\n        if (!initOptions.block) {\r\n            this._registerDisposable(this._slimcoreInstance.handle(\r\n                'lib-status-changed',\r\n                { libStatus: SlimCore.Enums.LibStatus.Running },\r\n                data => this._onLibStatusChanged(data)));\r\n        }\r\n\r\n        await Promise.all([\r\n            this.getSetup().setNumber('*Lib/LazyMediaInit',\r\n                SlimCoreCommon.hasFeature(Enums.Feature.LazyMediaInit) && !!initOptions.lazyMediaInit  ? 1 : 0),\r\n            this.getSetup().setString('*Lib/SCT/Telemetry/DiagnosticLevel', initOptions.telemetryDiagnosticLevel || '')\r\n        ]);\r\n\r\n        this._slimcoreInstance.start(initOptions.block);\r\n        fnLogger.info(`starting slimcoreInstance block=${initOptions.block}`);\r\n\r\n        if (initOptions.block) {\r\n            // Blocking call finished so we can resolve promise immediately,\r\n            // and manually set libstatus to running\r\n            this._libStatus = Enums.LibStatus.Running;\r\n            this._startSlimcorePromiseDefered.resolve(this._slimcoreInstance);\r\n        }\r\n        return this._startSlimcorePromiseDefered.promise.then(noop);\r\n    }\r\n\r\n    private _onLibStatusChanged(eventData: SlimCore.Engine.Events.LibStatusChangedArgs) {\r\n        this._logger.info(`_onLibStatusChanged from ${this._libStatus} => ${eventData.libStatus}`);\r\n        if (eventData.libStatus === Enums.LibStatus.Running) {\r\n            this._startSlimcorePromiseDefered.resolve(this._slimcoreInstance);\r\n        } else if (eventData.libStatus === Enums.LibStatus.FatalError &&\r\n            this._libStatus === Enums.LibStatus.Constructed) {\r\n            // Handle fatal error during setup\r\n            this._startSlimcorePromiseDefered.reject(new Error('Slimcore FatalError during start'));\r\n        }\r\n        this._libStatus = eventData.libStatus;\r\n    }\r\n\r\n    public getCallRegistry(identity?: SkypeIdentity, causeId = generateCauseId(), configuration?: AccountConfiguration): any {\r\n        const id = identity ? piiUtils.mriOrId(identity.id) : undefined;\r\n        const fnLogger = this._logger.createFnLogger(`getCallRegistry[identity=${id}]`, causeId);\r\n\r\n        // old way of getCallRegistry(): ICallRegistry\r\n        if (!identity) {\r\n            fnLogger.info('returning default callRegistry');\r\n            if (this.callRegistries[0]) {\r\n                return this.callRegistries[0];\r\n            }\r\n            return this.createCallRegistry();\r\n        }\r\n        let callRegistry = this.callRegistries.find(callRegistry => callRegistry.identity === identity.id);\r\n        if (callRegistry && !callRegistry.isDisposing) {\r\n            fnLogger.info(`callRegistry already exists for ${piiUtils.mriOrId(identity.id)}`);\r\n            return Promise.resolve(callRegistry);\r\n        }\r\n\r\n        const disposePromise = callRegistry && callRegistry.isDisposing ? callRegistry.disposePromise : Promise.resolve().then(noop);\r\n\r\n        return this._startSlimcorePromiseDefered.promise\r\n            .then(async () => {\r\n                await disposePromise;\r\n                callRegistry = this.createCallRegistry();\r\n                await callRegistry.login(identity, causeId, SlimCoreCommon.mapToEmptyStrIfFalsy(JSON.stringify(configuration))).catch(() => callRegistry.dispose(causeId));\r\n                return callRegistry;\r\n            });\r\n    }\r\n\r\n    private createCallRegistry() : SlimCoreElectronCallRegistry {\r\n        const callRegistry = new SlimCoreElectronCallRegistry(this._logger, this._settings, this._slimcoreInstance, this._deviceManager, this._appHooks, this._telemetryService);\r\n        callRegistry.on('disposed', () => { this.callRegistries.splice(this.callRegistries.indexOf(callRegistry), 1); });\r\n        callRegistry.loginPromise.then(this._stackLoginPromise.resolve, this._stackLoginPromise.reject);\r\n        this.callRegistries.push(callRegistry);\r\n        return callRegistry;\r\n    }\r\n\r\n    public getDeviceManager(): IDeviceManager {\r\n        this._logger.info('retrieving device manager');\r\n        return this._deviceManager;\r\n    }\r\n\r\n    public getScreenSharingManager(): IScreenSharingManager {\r\n        // TODO: implement, waiting for support in wrapper\r\n        return this._screenSharingManager;\r\n    }\r\n\r\n    public getSetup(): ISetup {\r\n        return this._setup;\r\n    }\r\n\r\n    public getEcsProvider(): IEcsProvider {\r\n        // TODO: implement, waiting for support in wrapper\r\n        return null;\r\n    }\r\n\r\n    public fireIntent(callingIntent: CallingIntent, identity?: string) {\r\n        // TODO: implement once wrapper supports this\r\n    }\r\n\r\n    public getVersion() {\r\n        return {\r\n            build: getTsCallingVersion(),\r\n            ovb: getOvb()\r\n        };\r\n    }\r\n\r\n    public getMediaStatus(): MediaStatus {\r\n        return null;\r\n    }\r\n\r\n    public setMediaConfig(configuration: MediaConfiguration): Promise<void> {\r\n        return new Promise(resolve => {\r\n            // allow to call this before slimcore starts (then all config values get applied before csa can create new conference)\r\n            this._logger.info('Set Media Configuration, using new default method');\r\n            this._slimcoreInstance.setMediaConfig(configuration as any);\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    private _slimcoreMediaStatusToCallingMediaStatus(slMediaStatus: Enums.MediaStatus): MediaStatus {\r\n        switch (slMediaStatus) {\r\n            case Enums.MediaStatus.Initialized:\r\n                return MediaStatus.Initialized;\r\n            case Enums.MediaStatus.NotAvailable:\r\n                return MediaStatus.NotAvailable;\r\n            case Enums.MediaStatus.Failed:\r\n                return MediaStatus.Failed;\r\n            case Enums.MediaStatus.Uninitialized:\r\n                return MediaStatus.Uninitialized;\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n\r\n    private _onMediaStatus(eventData: SlimCore.Engine.Events.MediaStatusChangedArgs) {\r\n        const status = this._slimcoreMediaStatusToCallingMediaStatus(eventData.mediaStatus);\r\n        this.event('mediaStatusChanged').raise(status);\r\n        if (status === MediaStatus.Initialized) {\r\n            this._mediaStartDeferredPromise.resolve(this._slimcoreInstance);\r\n        } else if (status === MediaStatus.Failed) {\r\n            this._mediaStartDeferredPromise.reject(new Error('Media initialization FatalError'));\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const slimCoreElectronStackFactory: ISlimCoreElectronStackFactory = {\r\n    build(config: SlimCoreElectronStackConfig): Promise<ICallingStack> {\r\n        return Promise.resolve()\r\n            .then(() => {\r\n                if (config.settings.enableTsCallingULLogging) {\r\n                    patchLogger(config);\r\n                }\r\n                return new SlimCoreElectronStack(config);\r\n            }).catch((error: Error) => {\r\n                if (error instanceof SlimCoreElectronStackError) {\r\n                    throw error;\r\n                } else {\r\n                    throw new SlimCoreElectronStackError(`${error}`);\r\n                }\r\n            });\r\n    },\r\n    getVersion() {\r\n        return {\r\n            build: getTsCallingVersion(),\r\n            ovb: getOvb()\r\n        };\r\n    }\r\n};\r\n\r\nexport const slimCoreUwpStackFactory: ISlimCoreUwpStackFactory = {\r\n    build(config: SlimCoreElectronStackConfig): Promise<ICallingStack> {\r\n        return Promise.resolve()\r\n            .then(() => new SlimCoreUwpStack(config))\r\n            .catch((error: Error) => {\r\n                if (error instanceof SlimCoreElectronStackError) {\r\n                    throw error;\r\n                } else {\r\n                    throw new SlimCoreElectronStackError(`${error}`);\r\n                }\r\n            });\r\n    },\r\n    getVersion() {\r\n        return {\r\n            build: getTsCallingVersion(),\r\n            ovb: getOvb()\r\n        };\r\n    }\r\n};\r\n\r\nfunction getApiVersion(): number {\r\n    return SlimCore.getApiVersion && SlimCore.getApiVersion();\r\n}\r\n\r\nfunction isModuleAvailable(): boolean {\r\n    return !!(SlimCore && SlimCore.getVersion);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronStack.ts","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/webpack/buildin/global.js\n// module id = 38\n// module chunks = 0","/**\r\n * observableBase.ts\r\n * Author: Adrian Potra\r\n * Copyright: Microsoft 2016\r\n *\r\n * Implementation for observable objects.\r\n */\r\n\r\nimport { CallingLogger, CauseId, EventCallback, IDisposable, IObservableObject, ObservableChangedCallback } from 'skype-calling-interface';\r\nimport { EventSourceImpl } from './events';\r\n\r\nexport interface ObservableEventCallback {\r\n    name: string;\r\n    handler: EventCallback;\r\n}\r\n\r\nexport interface Callback {\r\n    changed: ObservableChangedCallback | undefined;\r\n    on: ObservableEventCallback | undefined;\r\n}\r\n\r\nexport default class ObservableBase<T> extends EventSourceImpl<Callback> implements IObservableObject<T> {\r\n    constructor(logger?: CallingLogger) {\r\n        super(logger);\r\n    }\r\n\r\n    public changed(callback: ObservableChangedCallback): IDisposable {\r\n        return this.subscribe({\r\n            changed: callback,\r\n            on: undefined\r\n        });\r\n    }\r\n\r\n    public on<P extends keyof T>(eventName: P, callback: T[P]): IDisposable {\r\n        return this.subscribe({\r\n            changed: undefined,\r\n            on: {\r\n                name: String(eventName),\r\n                handler: this._toEventCallback<P>(callback)\r\n            }\r\n        });\r\n    }\r\n\r\n    public once<P extends keyof T>(eventName: P, callback: T[P], causeId?: CauseId): IDisposable {\r\n        let subscription: IDisposable;\r\n        const onceSubscription = (...args: any[]) => {\r\n            subscription.dispose(causeId);\r\n            this._toEventCallback<P>(callback)(...args);\r\n        };\r\n\r\n        return subscription = this.on(eventName, this._fromEventCallback<P>(onceSubscription));\r\n    }\r\n\r\n    protected raiseChanged(): void {\r\n        this.raiseEvents(callback => callback.changed && callback.changed());\r\n    }\r\n\r\n    protected event<P extends keyof T>(eventName: P): { raise: T[P] } {\r\n        return {\r\n            raise: this._fromEventCallback<P>((...args: any[]) => this._raiseEventImpl(String(eventName), ...args))\r\n        };\r\n    }\r\n\r\n    protected _raiseEventImpl(eventName: string, ...args: any[]): void {\r\n        this.raiseEvents(callback => callback.on && callback.on.name === eventName && callback.on.handler(...args));\r\n    }\r\n\r\n    private _toEventCallback<P extends keyof T>(callback: T[P]): EventCallback {\r\n        return callback as any;\r\n    }\r\n\r\n    private _fromEventCallback<P extends keyof T>(callback: EventCallback): T[P] {\r\n        return callback as any;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../common/ts/observableBase.ts","export class Stopwatch {\r\n    public msElapsed = 0;\r\n    public isPaused = false;\r\n    public get startTime() {\r\n        return this._startTime;\r\n    }\r\n\r\n    private _startTime = new Date().getTime();\r\n\r\n    public pause = (): void => {\r\n        if (!this.isPaused) {\r\n            this.msElapsed += new Date().getTime() - this._startTime;\r\n            this.isPaused = true;\r\n        }\r\n    }\r\n\r\n    public resume = (): void => {\r\n        if (this.isPaused) {\r\n            this.isPaused = false;\r\n            this._startTime = new Date().getTime();\r\n        }\r\n    }\r\n\r\n    public duration = (): number => {\r\n        if (this.isPaused) {\r\n            return this.msElapsed;\r\n        }\r\n        return this.msElapsed + new Date().getTime() - this._startTime;\r\n    }\r\n\r\n    public durationInMinutes = (): number => {\r\n        const mins = this.duration() / 60000;\r\n        return Math.ceil(mins);\r\n    }\r\n\r\n    public durationInSeconds = (): number => {\r\n        const seconds = this.duration() / 1000;\r\n        return Math.ceil(seconds);\r\n    }\r\n}\r\n\r\nexport function build(): Stopwatch {\r\n    return new Stopwatch();\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../common/ts/stopwatch.ts","// Set of constants used by both pluginless and electron\r\n\r\nexport const CONSTANTS = {\r\n    CODE: {\r\n        CLIENT_ERROR_CODE: 499\r\n    },\r\n    SUB_CODE: {\r\n        ACTION_NOT_ALLOWED: 3548\r\n    }\r\n\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ../common/ts/constants.ts","\r\nimport { CallState } from 'skype-calling-interface';\r\n\r\nexport function callStateIsAnyOf(currentState: CallState, states: CallState[]): boolean {\r\n    return states.indexOf(currentState) !== -1;\r\n}\r\n\r\nexport const validStateTransitions: { [state: number]: CallState[] } = {\r\n    [CallState.None]: [CallState.Notified, CallState.Connecting, CallState.Observing, CallState.Disconnecting, CallState.InLobby, CallState.Preheating],\r\n    [CallState.Notified]: [CallState.Connecting, CallState.Disconnecting, CallState.Disconnected, CallState.InLobby],\r\n    [CallState.Connecting]: [CallState.Notified, CallState.Connected, CallState.Disconnecting, CallState.Disconnected, CallState.EarlyMedia, CallState.InLobby],\r\n    [CallState.Connected]: [CallState.Disconnecting, CallState.Disconnected, CallState.LocalHold, CallState.RemoteHold, CallState.InLobby],\r\n    [CallState.Observing]: [CallState.Notified, CallState.Preheating, CallState.InLobby, CallState.Connecting, CallState.Disconnecting, CallState.Disconnected],\r\n    [CallState.LocalHold]: [CallState.Disconnecting, CallState.Disconnected, CallState.Connected, CallState.RemoteHold, CallState.InLobby],\r\n    [CallState.RemoteHold]: [CallState.Disconnecting, CallState.Disconnected, CallState.Connected, CallState.LocalHold, CallState.InLobby],\r\n    [CallState.EarlyMedia]: [CallState.Connected, CallState.Disconnecting, CallState.Disconnected, CallState.InLobby],\r\n    [CallState.InLobby]: [CallState.Connected, CallState.Disconnecting, CallState.Disconnected, CallState.EarlyMedia, CallState.LocalHold, CallState.RemoteHold],\r\n    [CallState.Preheating]: [CallState.Preheated, CallState.Notified, CallState.Connecting, CallState.Disconnecting, CallState.Disconnected],\r\n    [CallState.Preheated]: [CallState.Connecting, CallState.Disconnecting, CallState.Disconnected],\r\n    [CallState.Disconnecting]: [CallState.Disconnected],\r\n    [CallState.Disconnected]: []\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ../common/ts/state.ts","import { CallParticipantEndpoints } from 'skype-calling-interface';\r\n\r\nexport const getStreamInformationFromEndpoints = (endpoints: CallParticipantEndpoints) => {\r\n        const data: { [key: string]: any } = [];\r\n        if (!endpoints || !endpoints.endpointDetails.length) {\r\n            return null;\r\n        }\r\n        try {\r\n            endpoints.endpointDetails\r\n                .filter(endpoint => !!endpoint.mediaStreams && endpoint.mediaStreams.length)\r\n                .forEach(endpoint => {\r\n                    const streams = endpoint.mediaStreams.reduce((acc, stream) => {\r\n                        acc[stream.type] = stream.direction;\r\n                        return acc;\r\n                    }, {});\r\n                    data.push({\r\n                        endpointId: endpoint.endpointId,\r\n                        participantId: endpoint.participantId,\r\n                        ...streams\r\n                    });\r\n                });\r\n        } catch (e) {\r\n            return [];\r\n        }\r\n        return data;\r\n    };\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/telemetry/helper.ts","import {\r\n    ContentSharingStatus, IContentSharingSession, SessionTerminatedReason, TerminatedReason\r\n} from 'skype-calling-interface';\r\nimport * as async from '../../common/ts/async';\r\nimport { CONTENT_SHARING_OPERATIONS as OPERATION } from '../../common/ts/callConstants';\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\n\r\nimport { ContentSharingPlatformImpl, ContentSharingSession } from '../../common/ts/contentSharingSession';\r\nimport SlimCoreElectronBase from './SlimCoreElectronBase';\r\n\r\n// From electron/typings/slimcore-enums.d.ts:\r\nimport Enums = SlimCore.Enums;\r\nimport { ICallTelemetry } from '../../common/ts/callTelemetry';\r\nimport { generateCauseId } from '../../common/ts/causeId';\r\nimport { IInternalLogger } from '../../common/ts/internalLogger';\r\nimport { callOperation, causeId, OPERATION_TYPE } from '../../common/ts/operationDecorators';\r\nimport OperationHandler from '../../common/ts/operationHandler';\r\n\r\nexport default class SlimCoreElectronContentSharing extends SlimCoreElectronBase<{}> implements IContentSharingSession, ContentSharingPlatformImpl {\r\n    public contentSharingState: string;\r\n    public contentSharingStatus: ContentSharingStatus;\r\n    public contentSharingTerminationReason: SessionTerminatedReason;\r\n    public contentSharingIdentity: string;\r\n    public contentSharingGuid: string;\r\n\r\n    public noFailureReason = SlimCore.Enums.ContentSharingFailureReason.NoFailure;\r\n    private _callOperationHandler: OperationHandler;\r\n    private _session: ContentSharingSession;\r\n\r\n    public constructor(\r\n        logger: IInternalLogger,\r\n        settings: SlimCoreCommon.Settings,\r\n        engine: SlimCoreCommon.Engine,\r\n        private _slimcoreCallHandler: SlimCoreCommon.CallHandler,\r\n        public slimCoreContentSharingObjectId: SlimCore.ObjectId,\r\n        private _nativeContentSharing: SlimCoreCommon.ContentSharing,\r\n        private callTelemetry: ICallTelemetry\r\n    ) {\r\n        super(logger.createChild(() => `ContentSharing[${this.slimCoreContentSharingObjectId}]`), settings, engine);\r\n        this._logger.info('constructor');\r\n\r\n        this._session = new ContentSharingSession(this, this._logger);\r\n        this._callOperationHandler = new OperationHandler(this._logger, this.callTelemetry);\r\n        this._onContentSharingPropertyChanged(SlimCore.Enums.Property.ContentSharingStatus, data => this._onContentSharingStatusChanged(data.value as number));\r\n        this._onContentSharingPropertyChanged(SlimCore.Enums.Property.ContentSharingState, data => this._onContentSharingStateChanged(data.value as string));\r\n        this._onContentSharingPropertyChanged(SlimCore.Enums.Property.ContentSharingFailureReason, data => this._onContentSharingResultCodeChanged(data.value as number));\r\n\r\n        this.contentSharingStatus = this.convertContentSharingStatus(this.getIntProperty(SlimCore.Enums.Property.ContentSharingStatus));\r\n        this.contentSharingGuid = this.getStrProperty(SlimCore.Enums.Property.ContentSharingId);\r\n        this.contentSharingState = this.getStrProperty(SlimCore.Enums.Property.ContentSharingState);\r\n        this.contentSharingIdentity = this.getStrProperty(SlimCore.Enums.Property.ContentSharingIdentity);\r\n        this._logger.info(`Session created with status ${this.contentSharingStatus}, guid ${this.contentSharingGuid}`);\r\n\r\n        this._registerDisposable(this._nativeContentSharing.handle('update-session-state-result', undefined, data => this._onSessionStateResult(data)));\r\n        this._registerDisposable(this._nativeContentSharing.handle('take-control-result', undefined, data => this._onTakeControlResult(data)));\r\n        this._registerDisposable(this._nativeContentSharing.handle('update-participant-state-result', undefined, data => this._onUpdateParticipantStateResult(data)));\r\n        this._registerDisposable(this._nativeContentSharing.handle('join-result', undefined, data => this._onJoinResult(data)));\r\n    }\r\n\r\n    private _onContentSharingPropertyChanged(propKey: Enums.Property, listener: SlimCore.EventHandler<SlimCore.Engine.Events.ObjectPropertyChangedArgs>) {\r\n        this._onObjectPropertyChanged(this.slimCoreContentSharingObjectId, propKey, listener);\r\n    }\r\n\r\n    public setContentSharingStatus(status: ContentSharingStatus) {\r\n        this._logger.info(`setContentSharingStatus. currentStatus: ${this.contentSharingStatus} newStatus: ${status}`);\r\n        if (this.contentSharingStatus === status) {\r\n            return;\r\n        }\r\n\r\n        // Check if we are already in the final state\r\n        if (this.contentSharingStatus === ContentSharingStatus.Done || this.contentSharingStatus === ContentSharingStatus.Failed) {\r\n            return;\r\n        }\r\n\r\n        this._logger.info(`Changing content sharing status to: ${status}`);\r\n        this.contentSharingStatus = status;\r\n\r\n        if (status === ContentSharingStatus.Done ||\r\n            status === ContentSharingStatus.Failed) {\r\n\r\n            if (this.contentSharingTerminationReason && this.contentSharingTerminationReason.terminatedReason !== TerminatedReason.Undefined) {\r\n                return;\r\n            }\r\n\r\n            const failure = this.getIntProperty(Enums.Property.ContentSharingFailureReason);\r\n            const code = this.getIntProperty(Enums.Property.ContentSharingFailureCode);\r\n            const subCode = this.getIntProperty(Enums.Property.ContentSharingFailureSubCode);\r\n            const reason = this.convertFailureReason(failure);\r\n\r\n            this._logger.info(`setting failure reason for content sharing session. reason: ${reason}`);\r\n\r\n            this.contentSharingTerminationReason = {\r\n                terminatedReason: reason,\r\n                terminatedReasonCode: code,\r\n                terminatedReasonSubCode: subCode,\r\n                errorMessage: 'Session is terminated'\r\n            };\r\n        }\r\n\r\n        this._session.statusChanged(status);\r\n\r\n        this.raiseChanged();\r\n    }\r\n\r\n    private getStrProperty(property: Enums.Property, fallback?: string): string {\r\n        return this._getStrProperty(this._slimcoreCallHandler, this.slimCoreContentSharingObjectId, property, fallback);\r\n    }\r\n\r\n    private getIntProperty(property: Enums.Property, fallback?: number): number {\r\n        return this._getIntProperty(this._slimcoreCallHandler, this.slimCoreContentSharingObjectId, property, fallback);\r\n    }\r\n\r\n    private _onContentSharingStatusChanged(value: Enums.ContentSharingStatus) {\r\n        this._logger.info(`_onContentSharingStateChanged called`);\r\n        this.setContentSharingStatus(this.convertContentSharingStatus(value));\r\n    }\r\n\r\n    private _onContentSharingStateChanged(value: string) {\r\n        this._logger.info(`_onContentSharingStateChanged called`);\r\n        this.contentSharingState = value;\r\n        this.raiseChanged();\r\n    }\r\n\r\n    private _onContentSharingResultCodeChanged(value: Enums.ContentSharingFailureReason) {\r\n        this._logger.info(`_onContentSharingResultCodeChanged called`);\r\n\r\n        if (this.contentSharingTerminationReason && this.contentSharingTerminationReason.terminatedReason !== TerminatedReason.Undefined) {\r\n            return;\r\n        }\r\n\r\n        const code = this.getIntProperty(Enums.Property.ContentSharingFailureCode);\r\n        const subCode = this.getIntProperty(Enums.Property.ContentSharingFailureSubCode);\r\n        const reason = this.convertFailureReason(value);\r\n\r\n        this._logger.info(`setting failure reason for content sharing session. reason: ${reason}`);\r\n\r\n        this.contentSharingTerminationReason = {\r\n            terminatedReason: reason,\r\n            terminatedReasonCode: code,\r\n            terminatedReasonSubCode: subCode,\r\n            errorMessage: 'Session is terminated'\r\n        };\r\n    }\r\n\r\n    public convertContentSharingStatus(slimCoreContentSharingStatus: Enums.ContentSharingStatus): ContentSharingStatus {\r\n        switch (slimCoreContentSharingStatus) {\r\n            case Enums.ContentSharingStatus.Routing:\r\n                return ContentSharingStatus.Connecting;\r\n            case Enums.ContentSharingStatus.Ringing:\r\n                return ContentSharingStatus.Ringing;\r\n            case Enums.ContentSharingStatus.Connected:\r\n                return ContentSharingStatus.Connected;\r\n            case Enums.ContentSharingStatus.Presenting:\r\n                return ContentSharingStatus.Presenting;\r\n            case Enums.ContentSharingStatus.Viewing:\r\n                return ContentSharingStatus.Viewing;\r\n            case Enums.ContentSharingStatus.Finishing:\r\n                return ContentSharingStatus.Finishing;\r\n            case Enums.ContentSharingStatus.Done:\r\n            case Enums.ContentSharingStatus.Failed:\r\n            case Enums.ContentSharingStatus.TimedOut:\r\n                return ContentSharingStatus.Done;\r\n            default:\r\n                return ContentSharingStatus.None;\r\n        }\r\n    }\r\n\r\n    // Start a new content sharing session\r\n    @callOperation(OPERATION.START_CONTENT_SHARING)\r\n    public startContentSharing(@causeId causeId = generateCauseId()): Promise<void> {\r\n        return this._session.startContentSharing(causeId);\r\n    }\r\n\r\n    // Join an incoming content sharing session\r\n    @callOperation(OPERATION.JOIN_CONTENT_SHARING)\r\n    public joinContentSharing(@causeId causeId = generateCauseId()): Promise<void> {\r\n        return this._session.joinContentSharing(causeId);\r\n    }\r\n\r\n    // Update content sharing participant state for an incoming session. This will cause the\r\n    // endpoint to appear as viewer for the session in the roster update to other participants\r\n    @callOperation(OPERATION.UPDATE_PARTICIPANT_STATE)\r\n    public updateContentSharingParticipantStateToViewer(@causeId causeId = generateCauseId()): Promise<void> {\r\n        return this._session.updateContentSharingParticipantStateToViewer(causeId);\r\n    }\r\n\r\n    // Update metadata for the session if presenting\r\n    @callOperation(OPERATION.UPDATE_CONTENT_SHARING_SESSION_STATE, { type: OPERATION_TYPE.CHAINED })\r\n    public updateContentSharingSessionState(id: string, sessionState: string, @causeId causeId = generateCauseId()): Promise<void> {\r\n        return this._session.updateContentSharingSessionState(id, sessionState, causeId);\r\n    }\r\n\r\n    // Take control of the session to become a presenter if you are currently an attendee\r\n    @callOperation(OPERATION.TAKE_CONTENT_SHARING_CONTROL)\r\n    public takeContentSharingControl(@causeId causeId = generateCauseId()): Promise<void> {\r\n        return this._session.takeContentSharingControl(causeId);\r\n    }\r\n    // Stop the session\r\n    @callOperation(OPERATION.STOP_CONTENT_SHARING, { waitFor: OPERATION.START_CONTENT_SHARING })\r\n    public stopContentSharing(@causeId causeId = generateCauseId()): Promise<void> {\r\n        return this._session.stopContentSharing(causeId);\r\n    }\r\n    private _onJoinResult(eventData: SlimCore.ContentSharing.Events.ContentSharingResultArgs) {\r\n        this._session.onJoinResultEvent(eventData);\r\n    }\r\n\r\n    private _onUpdateParticipantStateResult(eventData: SlimCore.ContentSharing.Events.ContentSharingResultArgs) {\r\n        this._session.onUpdateParticipantStateResultEvent(eventData);\r\n    }\r\n\r\n    private _onSessionStateResult(eventData: SlimCore.ContentSharing.Events.ContentSharingSessionStateUpdateResultArgs) {\r\n        this._session.onSessionStateResultEvent(eventData);\r\n    }\r\n\r\n    private _onTakeControlResult(eventData: SlimCore.ContentSharing.Events.ContentSharingResultArgs) {\r\n        this._session.onTakeControlResultEvent(eventData);\r\n    }\r\n\r\n    // calls to native\r\n    public callStartContentSharing(): Promise<void> {\r\n        return async.asap(() => this._nativeContentSharing.startContentSharing());\r\n    }\r\n    public callStopContentSharing(): Promise<void> {\r\n        return async.asap(() => this._nativeContentSharing.stopContentSharing());\r\n    }\r\n    public callUpdateContentSharingSessionState(commandId: string, sessionState: string): Promise<void> {\r\n        return async.asap(() => this._nativeContentSharing.updateContentSharingSessionState(commandId, sessionState));\r\n    }\r\n    public callTakeContentSharingControl(): Promise<void> {\r\n        return async.asap(() => this._nativeContentSharing.takeContentSharingControl());\r\n    }\r\n    public callUpdateContentSharingParticipantState(): Promise<void> {\r\n        return async.asap(() => this._nativeContentSharing.updateContentSharingParticipantState());\r\n    }\r\n\r\n    public convertFailureReason(reason: Enums.ContentSharingFailureReason): TerminatedReason {\r\n        switch (reason) {\r\n            case Enums.ContentSharingFailureReason.NoFailure:\r\n                return TerminatedReason.Success;\r\n            case Enums.ContentSharingFailureReason.SessionNotFound:\r\n                return TerminatedReason.SessionNotFound;\r\n            case Enums.ContentSharingFailureReason.SessionTimedOut:\r\n                return TerminatedReason.SessionTimedOut;\r\n            case Enums.ContentSharingFailureReason.NetworkError:\r\n                return TerminatedReason.NetworkError;\r\n            case Enums.ContentSharingFailureReason.NetworkCannotConnectError:\r\n                return TerminatedReason.CannotConnectToNetworkError;\r\n            case Enums.ContentSharingFailureReason.ServiceFailure:\r\n                return TerminatedReason.ServiceUnavailable;\r\n            case Enums.ContentSharingFailureReason.RequestTimedOut:\r\n                return TerminatedReason.NetworkRequestTimeoutError;\r\n            case Enums.ContentSharingFailureReason.AuthFailure:\r\n                return TerminatedReason.SkypeTokenError;\r\n            case Enums.ContentSharingFailureReason.ActionNotAllowed:\r\n                return TerminatedReason.ActionNotAllowed;\r\n            case Enums.ContentSharingFailureReason.Forbidden:\r\n                return TerminatedReason.NoPermission;\r\n            case Enums.ContentSharingFailureReason.Failure:\r\n                return TerminatedReason.UnknownError;\r\n            default:\r\n                return TerminatedReason.UnknownError;\r\n        }\r\n    }\r\n\r\n    private _getCallEndOperation = (): Promise<void> => {\r\n        // waiting for stop content sharing\r\n        if (this._callOperationHandler.hasPendingOperation(OPERATION.STOP_CONTENT_SHARING)) {\r\n            return this._callOperationHandler.waitForOperation(OPERATION.STOP_CONTENT_SHARING);\r\n        } else {\r\n            return Promise.resolve<void>();\r\n        }\r\n    }\r\n\r\n    public dispose(causeId = generateCauseId()): void {\r\n        const rejectReason: SessionTerminatedReason = this.contentSharingTerminationReason ? this.contentSharingTerminationReason :\r\n        {\r\n            terminatedReason: TerminatedReason.Cancelled,\r\n            terminatedReasonCode: 0,\r\n            terminatedReasonSubCode: 0,\r\n            errorMessage: 'Call ended'\r\n        };\r\n        this.slimCoreContentSharingObjectId = 0;\r\n        this._getCallEndOperation().then(() => {\r\n            this._callOperationHandler.rejectPendingOperations(rejectReason, causeId);\r\n            super.dispose(causeId);\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronContentSharing.ts","import * as _ from 'lodash';\r\nimport {\r\n    CallingLogger,\r\n    CauseId,\r\n    ContentSharingStatus,\r\n    SessionTerminatedReason,\r\n    TerminatedReason\r\n} from 'skype-calling-interface';\r\n\r\nimport * as async from '../../common/ts/async';\r\nimport InternalLogger, { IInternalLogger } from './internalLogger';\r\n\r\ninterface ContentSharingResultEvent {\r\n    failureReason: number;\r\n    code: number;\r\n    subCode: number;\r\n}\r\n\r\ninterface ContentSharingSessionStateUpdateResultEvent {\r\n    id: string;\r\n    failureReason: number;\r\n    code: number;\r\n    subCode: number;\r\n}\r\n\r\nconst CONSTANTS = {\r\n    CANCELED_TERMINATION_REASON: {\r\n        terminatedReason: TerminatedReason.Cancelled,\r\n        terminatedReasonCode: 0,\r\n        terminatedReasonSubCode: 0,\r\n        errorMessage: 'Content sharing is disconnected'\r\n    },\r\n    ACTION_NOT_ALLOWED: (errorMessage: string) => {\r\n        return {\r\n            terminatedReason: TerminatedReason.ActionNotAllowed,\r\n            terminatedReasonCode: 0,\r\n            terminatedReasonSubCode: 0,\r\n            errorMessage\r\n        };\r\n    }\r\n};\r\n\r\nexport interface ContentSharingPlatformImpl {\r\n    noFailureReason: number;\r\n    contentSharingStatus: ContentSharingStatus;\r\n    contentSharingGuid: string;\r\n    contentSharingTerminationReason: SessionTerminatedReason;\r\n    convertFailureReason(reason: number): TerminatedReason;\r\n    convertContentSharingStatus(status: number): ContentSharingStatus;\r\n\r\n    callStartContentSharing(): Promise<void>;\r\n    callStopContentSharing(): Promise<void>;\r\n    callUpdateContentSharingSessionState(commandId: string, sessionState: string): Promise<void>;\r\n    callTakeContentSharingControl(): Promise<void>;\r\n    callUpdateContentSharingParticipantState(): Promise<void>;\r\n}\r\n\r\nexport class ContentSharingSession {\r\n    private _pendingDeferreds: async.Deferred<void>[] = [];\r\n    private _updateContentSharingSessionStateDeferredPromises: { [id: string]: async.Deferred<void> } = {};\r\n    private _takeControlDeferredPromise: async.Deferred<void>;\r\n    private _updateParticipantStateDeferredPromise: async.Deferred<void>;\r\n    private _stopContentSharingDeferredPromise: async.Deferred<void>;\r\n    private _joinContenSharingDeferredPromise: async.Deferred<void>;\r\n    private _startContentSharingDeferredPromise: async.Deferred<void>;\r\n    private _logger: IInternalLogger;\r\n    public constructor(\r\n        private _platformImpl: ContentSharingPlatformImpl,\r\n        logger: CallingLogger) {\r\n            this._logger = new InternalLogger(logger);\r\n        }\r\n\r\n    public statusChanged(status: ContentSharingStatus): void {\r\n        if (status === ContentSharingStatus.Done || status === ContentSharingStatus.Failed) {\r\n            if (this._stopContentSharingDeferredPromise) {\r\n                this._invokeDeferred(this._stopContentSharingDeferredPromise);\r\n            }\r\n\r\n            if (this._startContentSharingDeferredPromise) {\r\n                const terminatedReason = this._platformImpl.contentSharingTerminationReason && this._platformImpl.contentSharingTerminationReason.terminatedReason !== TerminatedReason.Undefined ?\r\n                    this._platformImpl.contentSharingTerminationReason :\r\n                    CONSTANTS.CANCELED_TERMINATION_REASON;\r\n                this._rejectDeferred(this._startContentSharingDeferredPromise, terminatedReason);\r\n            }\r\n\r\n            this._logger.info('Content sharing is disconnected');\r\n            this._rejectPendingPromises(CONSTANTS.CANCELED_TERMINATION_REASON);\r\n        } else if (status === ContentSharingStatus.Ringing || status === ContentSharingStatus.Viewing || status === ContentSharingStatus.Connected) {\r\n\r\n            if (this._stopContentSharingDeferredPromise) {\r\n                const errorMessage = 'Content sharing cannot be ended when not presenting';\r\n                const terminatedReason = CONSTANTS.ACTION_NOT_ALLOWED(errorMessage);\r\n                this._logger.error(errorMessage);\r\n                this._rejectDeferred(this._stopContentSharingDeferredPromise, terminatedReason);\r\n            }\r\n        } else if (status === ContentSharingStatus.Presenting) {\r\n            if (this._startContentSharingDeferredPromise) {\r\n                this._invokeDeferred(this._startContentSharingDeferredPromise);\r\n            }\r\n\r\n            if (this._takeControlDeferredPromise) {\r\n                this._invokeDeferred(this._takeControlDeferredPromise);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Start a new content sharing session\r\n    public startContentSharing(causeId: CauseId): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger('startContentSharing', causeId);\r\n        if (this._startContentSharingDeferredPromise) {\r\n            return this._startContentSharingDeferredPromise.promise;\r\n        }\r\n\r\n        // Ensure we are in the initial state\r\n        if (this._platformImpl.contentSharingStatus !== ContentSharingStatus.None) {\r\n            const errorMessage = 'Content sharing cannot be started as it is not in the initial state';\r\n            const terminatedReason = CONSTANTS.ACTION_NOT_ALLOWED(errorMessage);\r\n            fnLogger.logFailure(errorMessage);\r\n            return Promise.reject(terminatedReason);\r\n        }\r\n\r\n        fnLogger.info(`Start content sharing for : ${this._platformImpl.contentSharingGuid}`);\r\n\r\n        this._startContentSharingDeferredPromise = async.defer<void>();\r\n        const always = () => {\r\n            this._startContentSharingDeferredPromise = null;\r\n        };\r\n        this._startContentSharingDeferredPromise.promise.then(always, always);\r\n\r\n        // Promise resolves when we go to presenting state\r\n        return Promise.resolve(undefined)\r\n            .then(() => this._platformImpl.callStartContentSharing())\r\n            .then(() => this._pendingDeferreds.push(this._startContentSharingDeferredPromise))\r\n            .then(() => this._startContentSharingDeferredPromise.promise)\r\n            .catch(error => {\r\n                this.handleContentSharingOperationError(error, 'startContentSharing', fnLogger);\r\n            });\r\n    }\r\n\r\n    // Join an incoming content sharing session\r\n    public joinContentSharing(causeId: CauseId): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger('joinContentSharing', causeId);\r\n        if (this._joinContenSharingDeferredPromise) {\r\n            return this._joinContenSharingDeferredPromise.promise;\r\n        }\r\n\r\n        // Ensure we are in the ringing state\r\n        if (this._platformImpl.contentSharingStatus !== ContentSharingStatus.Ringing) {\r\n            const errorMessage = 'Content sharing cannot be joined as it is not in ringing state';\r\n            const terminatedReason = CONSTANTS.ACTION_NOT_ALLOWED(errorMessage);\r\n            fnLogger.logFailure(errorMessage);\r\n            return Promise.reject(terminatedReason);\r\n        }\r\n\r\n        fnLogger.info(`Join content sharing for : ${this._platformImpl.contentSharingGuid}`);\r\n\r\n        this._joinContenSharingDeferredPromise = async.defer<void>();\r\n        const always = () => {\r\n            this._joinContenSharingDeferredPromise = null;\r\n        };\r\n        this._joinContenSharingDeferredPromise.promise.then(always, always);\r\n\r\n        // Promise resolves when join status result comes back and state goes to connected\r\n        return Promise.resolve(undefined)\r\n            .then(() => this._platformImpl.callStartContentSharing())\r\n            .then(() => this._pendingDeferreds.push(this._joinContenSharingDeferredPromise))\r\n            .then(() => this._joinContenSharingDeferredPromise.promise)\r\n            .catch(error => {\r\n                this.handleContentSharingOperationError(error, 'joinContentSharing', fnLogger);\r\n            });\r\n    }\r\n\r\n    public onJoinResultEvent = (event: ContentSharingResultEvent) => {\r\n        if (!this._joinContenSharingDeferredPromise) {\r\n            this._logger.warn(`No pending promise for join. Event data: ${event}`);\r\n            return;\r\n        }\r\n\r\n        this._logger.info(`JoinContentSharing completed for: ${this._platformImpl.contentSharingGuid}, status: ${JSON.stringify(event)}`);\r\n\r\n        if (event.failureReason === this._platformImpl.noFailureReason) {\r\n            this._invokeDeferred(this._joinContenSharingDeferredPromise);\r\n        } else {\r\n            const terminatedReasonCode = event.code;\r\n            const terminatedReasonSubCode = event.subCode;\r\n            const terminatedReason = this._platformImpl.convertFailureReason(event.failureReason);\r\n            const errorMessage = `Join failed with reason ${terminatedReason}`;\r\n            this._logger.error(errorMessage);\r\n            this._rejectDeferred(this._joinContenSharingDeferredPromise, { terminatedReason, terminatedReasonCode, terminatedReasonSubCode, errorMessage });\r\n        }\r\n    }\r\n\r\n    // Update content sharing participant state for an incoming session. This will cause the\r\n    // endpoint to appear as viewer for the session in the roster update to other participants\r\n    public updateContentSharingParticipantStateToViewer(causeId: CauseId): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger('updateContentSharingParticipantStateToViewer', causeId);\r\n        if (this._updateParticipantStateDeferredPromise) {\r\n            return this._updateParticipantStateDeferredPromise.promise;\r\n        }\r\n\r\n        // Ensure we are in the connected state\r\n        if (this._platformImpl.contentSharingStatus !== ContentSharingStatus.Connected) {\r\n            const errorMessage = 'Cannot update participant state as content sharing is not in connected state';\r\n            const terminatedReason = CONSTANTS.ACTION_NOT_ALLOWED(errorMessage);\r\n            fnLogger.logFailure(errorMessage);\r\n            return Promise.reject(terminatedReason);\r\n        }\r\n\r\n        fnLogger.info(`Update content sharing participant state for : ${this._platformImpl.contentSharingGuid}`);\r\n\r\n        this._updateParticipantStateDeferredPromise = async.defer<void>();\r\n        const always = () => {\r\n            this._updateParticipantStateDeferredPromise = null;\r\n        };\r\n        this._updateParticipantStateDeferredPromise.promise.then(always, always);\r\n\r\n        // Promise resolves when result comes back and state goes to viewing\r\n        return Promise.resolve(undefined)\r\n            .then(() => this._platformImpl.callUpdateContentSharingParticipantState())\r\n            .then(() => this._pendingDeferreds.push(this._updateParticipantStateDeferredPromise))\r\n            .then(() => this._updateParticipantStateDeferredPromise.promise)\r\n            .catch(error => {\r\n                this.handleContentSharingOperationError(error, 'joinContentSharing', fnLogger);\r\n            });\r\n    }\r\n\r\n    public onUpdateParticipantStateResultEvent = (event: ContentSharingResultEvent) => {\r\n        if (!this._updateParticipantStateDeferredPromise) {\r\n            this._logger.warn(`No pending promise for update participant state. Event data: ${event}`);\r\n            return;\r\n        }\r\n\r\n        this._logger.info(`UpdateContentSharingParticipantStateToViewer completed for: ${this._platformImpl.contentSharingGuid}, status: ${JSON.stringify(event)}`);\r\n        if (event.failureReason === this._platformImpl.noFailureReason) {\r\n            this._invokeDeferred(this._updateParticipantStateDeferredPromise);\r\n        } else {\r\n            const terminatedReasonCode = event.code;\r\n            const terminatedReasonSubCode = event.subCode;\r\n            const terminatedReason = this._platformImpl.convertFailureReason(event.failureReason);\r\n            const errorMessage = `Update participant state failed with reason ${terminatedReason}`;\r\n            this._logger.error(errorMessage);\r\n            this._rejectDeferred(this._updateParticipantStateDeferredPromise, { terminatedReason, terminatedReasonCode, terminatedReasonSubCode, errorMessage });\r\n        }\r\n    }\r\n\r\n    // Update metadata for the session if presenting\r\n    public updateContentSharingSessionState(id: string, sessionState: string, causeId: CauseId): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger('updateContentSharingSessionState', causeId);\r\n        if (this._updateContentSharingSessionStateDeferredPromises[id]) {\r\n            return this._updateContentSharingSessionStateDeferredPromises[id].promise;\r\n        }\r\n\r\n        // Ensure we are in the presenting state\r\n        if (this._platformImpl.contentSharingStatus !== ContentSharingStatus.Presenting) {\r\n            const errorMessage = 'Cannot update session state as content sharing is not in presenting state';\r\n            const terminatedReason = CONSTANTS.ACTION_NOT_ALLOWED(errorMessage);\r\n            fnLogger.logFailure(errorMessage);\r\n            return Promise.reject(terminatedReason);\r\n        }\r\n\r\n        const deferred = async.defer<void>();\r\n        this._updateContentSharingSessionStateDeferredPromises[id] = deferred;\r\n        const always = () => {\r\n            delete this._updateContentSharingSessionStateDeferredPromises[id];\r\n        };\r\n        this._updateContentSharingSessionStateDeferredPromises[id].promise.then(always, always);\r\n\r\n        fnLogger.info(`Update content sharing session state for : ${this._platformImpl.contentSharingGuid}`);\r\n\r\n        // Promise resolves when result comes back\r\n        return Promise.resolve(undefined)\r\n            .then(() => this._platformImpl.callUpdateContentSharingSessionState(id, sessionState))\r\n            .then(() => this._updateContentSharingSessionStateDeferredPromises[id].promise)\r\n            .catch(error => {\r\n                this.handleContentSharingOperationError(error, 'updateContentSharingSessionState', fnLogger);\r\n            });\r\n    }\r\n\r\n    public onSessionStateResultEvent = (event: ContentSharingSessionStateUpdateResultEvent) => {\r\n        this._logger.info(`UpdateContentSharingSessionState completed for: ${this._platformImpl.contentSharingGuid}, status: ${JSON.stringify(event)}`);\r\n\r\n        if (this._updateContentSharingSessionStateDeferredPromises.hasOwnProperty(event.id)) {\r\n            if (event.failureReason === this._platformImpl.noFailureReason) {\r\n                this._updateContentSharingSessionStateDeferredPromises[event.id].resolve();\r\n            } else {\r\n                const terminatedReasonCode = event.code;\r\n                const terminatedReasonSubCode = event.subCode;\r\n                const terminatedReason = this._platformImpl.convertFailureReason(event.failureReason);\r\n                const errorMessage = `Update SessionState failed with reason ${terminatedReason}`;\r\n                this._logger.error(errorMessage);\r\n                this._updateContentSharingSessionStateDeferredPromises[event.id].reject({ terminatedReason, terminatedReasonCode, terminatedReasonSubCode, errorMessage });\r\n            }\r\n        }\r\n    }\r\n\r\n    // Take control of the session to become a presenter if you are currently an attendee\r\n    public takeContentSharingControl(causeId: CauseId): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger('takeContentSharingControl', causeId);\r\n        if (this._takeControlDeferredPromise) {\r\n            return this._takeControlDeferredPromise.promise;\r\n        }\r\n\r\n        // Ensure we are in the viewing state\r\n        if (this._platformImpl.contentSharingStatus !== ContentSharingStatus.Viewing) {\r\n            const errorMessage = 'Cannot take control of content sharing as it is not in viewing state';\r\n            const terminatedReason = CONSTANTS.ACTION_NOT_ALLOWED(errorMessage);\r\n            fnLogger.logFailure(errorMessage);\r\n            return Promise.reject(terminatedReason);\r\n        }\r\n\r\n        fnLogger.info(`Taking control of content sharing for : ${this._platformImpl.contentSharingGuid}`);\r\n\r\n        this._takeControlDeferredPromise = async.defer<void>();\r\n        const always = () => {\r\n            this._takeControlDeferredPromise = null;\r\n        };\r\n        this._takeControlDeferredPromise.promise.then(always, always);\r\n\r\n        // Promise resolves when result comes back or when we go to presenting state\r\n        return Promise.resolve(undefined)\r\n            .then(() => this._platformImpl.callTakeContentSharingControl())\r\n            .then(() => this._pendingDeferreds.push(this._takeControlDeferredPromise))\r\n            .then(() => this._takeControlDeferredPromise.promise)\r\n            .catch(error => {\r\n                this.handleContentSharingOperationError(error, 'takeContentSharingControl', fnLogger);\r\n            });\r\n    }\r\n\r\n    public onTakeControlResultEvent = (event: ContentSharingResultEvent) => {\r\n        if (!this._takeControlDeferredPromise) {\r\n            this._logger.warn(`No pending promise for take control. Event data: ${event}`);\r\n            return;\r\n        }\r\n\r\n        this._logger.info(`TakeContentSharingControl completed for: ${this._platformImpl.contentSharingGuid}, ${JSON.stringify(event)}`);\r\n\r\n        if (event.failureReason === this._platformImpl.noFailureReason) {\r\n            this._invokeDeferred(this._takeControlDeferredPromise);\r\n        } else {\r\n            const terminatedReasonCode = event.code;\r\n            const terminatedReasonSubCode = event.subCode;\r\n            const terminatedReason = this._platformImpl.convertFailureReason(event.failureReason);\r\n            const errorMessage = `Take content sharing control failed with reason ${terminatedReason}`;\r\n            this._logger.error(errorMessage);\r\n            this._rejectDeferred(this._takeControlDeferredPromise, { terminatedReason, terminatedReasonCode, terminatedReasonSubCode, errorMessage });\r\n        }\r\n    }\r\n\r\n    // Stop the session\r\n    public stopContentSharing(causeId: CauseId): Promise<void> {\r\n        const fnLogger = this._logger.createFnLogger('stopContentSharing', causeId);\r\n        if (this._stopContentSharingDeferredPromise) {\r\n            return this._stopContentSharingDeferredPromise.promise;\r\n        }\r\n\r\n        // Ensure we are not in the viewing/ringing/connected state\r\n        if (this._platformImpl.contentSharingStatus === ContentSharingStatus.Ringing ||\r\n            this._platformImpl.contentSharingStatus === ContentSharingStatus.Connected ||\r\n            this._platformImpl.contentSharingStatus === ContentSharingStatus.Viewing) {\r\n            const errorMessage = 'Incoming content sharing cannot be stopped';\r\n            const terminatedReason = CONSTANTS.ACTION_NOT_ALLOWED(errorMessage);\r\n            fnLogger.logFailure(errorMessage);\r\n            return Promise.reject(terminatedReason);\r\n        }\r\n\r\n        this._stopContentSharingDeferredPromise = async.defer<void>();\r\n        const always = () => {\r\n            this._stopContentSharingDeferredPromise = null;\r\n        };\r\n        this._stopContentSharingDeferredPromise.promise.then(always, always);\r\n\r\n        fnLogger.info(`Stop content sharing for : ${this._platformImpl.contentSharingGuid}`);\r\n\r\n        // Promise resolves when we go to finished state\r\n        return Promise.resolve(undefined)\r\n            .then(() => this._platformImpl.callStopContentSharing())\r\n            .then(() => this._pendingDeferreds.push(this._stopContentSharingDeferredPromise))\r\n            .then(() => this._stopContentSharingDeferredPromise.promise)\r\n            .catch(error => {\r\n                this.handleContentSharingOperationError(error, 'stopContentSharing', fnLogger);\r\n            });\r\n    }\r\n\r\n    private handleContentSharingOperationError(error: any, functionName: string, fnLogger: IInternalLogger) {\r\n        const errorMessage = (error instanceof Error) ? error.toString() : JSON.stringify(error);\r\n        fnLogger.logFailure(`Error in ${functionName}(), contentSharingGuid = ${this._platformImpl.contentSharingGuid}, error = ${errorMessage}`);\r\n        if (error && error.hasOwnProperty('terminatedReason')) {\r\n            throw error;\r\n        } else {\r\n            throw CONSTANTS.ACTION_NOT_ALLOWED(errorMessage);\r\n        }\r\n    }\r\n\r\n    private _rejectPendingPromises(reason: SessionTerminatedReason) {\r\n        this._logger.info('rejectPendingPromises');\r\n\r\n        this._pendingDeferreds.forEach(deferred => {\r\n            deferred.reject(reason);\r\n        });\r\n        this._pendingDeferreds = [];\r\n\r\n        _.forEach(this._updateContentSharingSessionStateDeferredPromises, deferred => {\r\n            deferred.reject(reason);\r\n        });\r\n        this._updateContentSharingSessionStateDeferredPromises = {};\r\n    }\r\n\r\n    private _invokeDeferred(deferred: async.Deferred<void>) {\r\n        this._logger.info('_invokeDeferred');\r\n\r\n        if (deferred) {\r\n            _.pull(this._pendingDeferreds, deferred);\r\n            deferred.resolve();\r\n        }\r\n    }\r\n\r\n    private _rejectDeferred(deferred: async.Deferred<void>, terminatedReason: SessionTerminatedReason) {\r\n        this._logger.info('_rejectDeferred');\r\n\r\n        if (deferred) {\r\n            _.pull(this._pendingDeferreds, deferred);\r\n            deferred.reject(terminatedReason);\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../common/ts/contentSharingSession.ts","import { CallingLogger, DataSendFunction, ICallParticipant, IDataChannelAdapter, IDataChannelHandler } from 'skype-calling-interface';\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\nimport SlimCoreElectronDataChannel, { IMediaDataChannelUser } from './SlimCoreElectronDataChannel';\r\ninterface HandlerMap {\r\n    [dataId: number]: HandlerDetails;\r\n}\r\n\r\n// Holder object for data channel\r\nclass HandlerDetails {\r\n    public dataSource: SlimCore.DataSource;\r\n    public dataSink: SlimCore.DataSink;\r\n    public isAttached: boolean = false;\r\n    public listener: SlimCore.EventHandler<SlimCore.DataSink.Events.DataArgs>;\r\n    public constructor(public readonly dataId: number, public handler: IDataChannelHandler, public readonly sourceSinkInternallyCreated: boolean) {\r\n\r\n    }\r\n}\r\n\r\nexport interface IInternalDataChannelAdapter extends IDataChannelAdapter {\r\n    setInternalSourceSink(dataId: number, dataSource: SlimCore.DataSource, dataSink: SlimCore.DataSink): void;\r\n}\r\n\r\n// Adapter class to expose an interface for the clients to\r\n// manage data channel implementations at their end rather than having to add business logic at this layer\r\nexport default class SlimCoreElectronDataChannelAdapter implements IMediaDataChannelUser, IInternalDataChannelAdapter {\r\n    private _dataChannel: SlimCoreElectronDataChannel = null;\r\n    private _dataChannelStatus: number = SlimCore.Enums.DataChannelStatus.Unknown;\r\n    private _handlers: HandlerMap = {};\r\n    private _availableHandlers = 0; // Should track complete details\r\n    private _dataChannelStartCalled = false;\r\n    private _negotiationTag: string;\r\n\r\n    public constructor(private logger: CallingLogger, private _slimcoreInstance: SlimCoreCommon.Engine) {\r\n        this.setInternalSourceSink = this.setInternalSourceSink.bind(this);\r\n    }\r\n    // Client requests for the data channel handler to be added\r\n    public addHandler(dataId: number, handler: IDataChannelHandler, skipDataSourceSinkCreation: boolean = false, negotiationTag?: string): Promise<void> {\r\n        if (dataId < 0 || dataId >= 64) {\r\n            return Promise.reject(new Error(`Data Id ${dataId} is outside the valid range of 0-63`));\r\n        }\r\n        if (this._handlers.hasOwnProperty(dataId) && this._handlers[dataId].handler) {\r\n            return Promise.reject(new Error(`Data Id ${dataId} is already registered to a non-null handler`));\r\n        }\r\n\r\n        this.logger.info(`Adding handler to dataId: ${dataId}, ${skipDataSourceSinkCreation ? 'skipping source sink creation' : 'making source sink'}`);\r\n\r\n        let details: HandlerDetails = null;\r\n        let shouldAttach = false;\r\n        if (dataId in this._handlers) { // if handlerDetails exists, it was added internally\r\n            details = this._handlers[dataId];\r\n            details.handler = handler;\r\n            shouldAttach = true;\r\n        } else {\r\n            details = new HandlerDetails(dataId, handler, skipDataSourceSinkCreation);\r\n            this._handlers[dataId] = details;\r\n            if (!skipDataSourceSinkCreation) {\r\n                shouldAttach = true;\r\n            }\r\n        }\r\n\r\n        if (shouldAttach) { // if we've completed a handler\r\n            this._availableHandlers++;\r\n\r\n            // This may be the first handler after data channel became available, we should start data channel\r\n            // - note that once we start the data channel, the handler(s) will be attached in onDataChannelStatusChanged()\r\n            if (this._isDataChannelAvailable) {\r\n                // Only the last negotiationTag is cached even if addHandler is called multiple times. The negotiationTag\r\n                // is anyway generated by the client and data channel is never stopped and restarted in a call so this should be OK.\r\n                // So essentially if data channel is never started, then the tag used will be from the first call to addHandler.\r\n                // If data channel is already started then the last cached tag is used. The client must ensure to update the tag\r\n                // any time the tag changes.\r\n                this._negotiationTag = negotiationTag;\r\n                this.start();\r\n            }\r\n\r\n            // If the data channel is already active, just attach this handler\r\n            if (this._isDataChannelActive) {\r\n                return this._attachHandler(details);\r\n            }\r\n        }\r\n        return Promise.resolve<void>();\r\n    }\r\n\r\n    // Client requests for the data channel handler to be removed and stop the data channel once thee are no more attached handlers!\r\n    public removeHandler(dataId: number): Promise<void> {\r\n        const details = this._handlers[dataId];\r\n        if (!details) {\r\n            return Promise.reject(new Error(`Handler associated with Data Id ${dataId} wasn't attached in the first place`));\r\n        }\r\n\r\n        this._detachHandler(details);\r\n        delete this._handlers[dataId];\r\n        this._availableHandlers--;\r\n\r\n        // Ideally client should be responsible for handling start and stop of data channel. As of now if call is ending, then calling stop would be redundant.\r\n        // This can end up slowing down ending call as stopping data channel would be queued on media stack and media stack will try and generate an offer which\r\n        // it will soon throw away anyway because call is ending. This can block wasting time that could've been used to end the call.If we can find a better way\r\n        // to avoid the above scenario, then we should check here if the LAST handler has just been removed, and then stop data channel.\r\n        // this.stop();\r\n\r\n        return Promise.resolve<void>();\r\n    }\r\n\r\n    public updateNegotiationTag(negotiationTag: string): Promise<void> {\r\n        this._negotiationTag = negotiationTag;\r\n        return Promise.resolve<void>();\r\n    }\r\n\r\n    public dispose() {\r\n        this._detachAllHandlers();\r\n        if (this._dataChannel) {\r\n            this._dataChannel = null;\r\n        }\r\n    }\r\n\r\n    public setDataChannel(channel: SlimCoreElectronDataChannel): Promise<void> {\r\n        if (!!this._dataChannel) {\r\n            throw new Error('Unexpected setting of data channel when we already have one');\r\n        }\r\n\r\n        this._dataChannel = channel;\r\n        return Promise.resolve<void>();\r\n    }\r\n\r\n    // Attaches or detaches the handlers in response to the data channel status change.\r\n    // If the data channel becomes available (only when not previously active), and there are some handlers that we'd like to attach, we'll also start the data channel.\r\n    public onDataChannelStatusChanged(dataChannelStatus: number): Promise<void> {\r\n        if (dataChannelStatus === SlimCore.Enums.DataChannelStatus.Active && !this._isDataChannelActive) {\r\n            this._attachAllHandlers()\r\n                .catch(error => {\r\n                    this.logger.error(`Failed to attach all handlers error: ${error}`);\r\n                });\r\n        } else if (dataChannelStatus === SlimCore.Enums.DataChannelStatus.Available) {\r\n            if (this._isDataChannelActive || this._isDataChannelStopping) {\r\n                this._dataChannelStartCalled = false; // reset\r\n                // Becoming available when it was already active - remove previously attached handlers\r\n                this._detachAllHandlers();\r\n            } else {\r\n\r\n                // If tag is changing for any reason, the client must pass the updated tag by calling updateDataChannelTag.\r\n                // Becoming available when it wasn't active before (data channel has just become available, let's start it)\r\n                // Note: the handlers will be attached when this method is called again (as at that point the channel is expected to become Active)\r\n                if (this._availableHandlers > 0) {\r\n                    this.start();\r\n                }\r\n            }\r\n        }\r\n\r\n        this._dataChannelStatus = dataChannelStatus;\r\n\r\n        return Promise.resolve<void>();\r\n    }\r\n\r\n    public setProtocolDataSource(source: SlimCore.DataSource): Promise<void> {\r\n        // Not used\r\n        return Promise.resolve<void>();\r\n    }\r\n\r\n    public processProtocolMessage(message: string, senderParticipant: ICallParticipant, senderParticipantId: string, senderSourceId: number): Promise<void> {\r\n        // Not used\r\n        return Promise.resolve<void>();\r\n    }\r\n\r\n    private get _isDataChannelAvailable() {\r\n        return !!this._dataChannel && this._dataChannelStatus === SlimCore.Enums.DataChannelStatus.Available;\r\n    }\r\n\r\n    private get _isDataChannelActive() {\r\n        return !!this._dataChannel && this._dataChannelStatus === SlimCore.Enums.DataChannelStatus.Active;\r\n    }\r\n\r\n    private get _isDataChannelStopping() {\r\n        return !!this._dataChannel && this._dataChannelStatus === SlimCore.Enums.DataChannelStatus.Stopping;\r\n    }\r\n\r\n    private _attachAllHandlers(): Promise<void[]> {\r\n        return Promise.all(Object.keys(this._handlers).map(dataId => {\r\n            const details = this._handlers[dataId];\r\n            // if internal, only attach if details completed\r\n            if (details && ((details.handler && details.dataSource && details.dataSink) || !details.sourceSinkInternallyCreated)) {\r\n                return this._attachHandler(details);\r\n            } else {\r\n                return Promise.resolve(null);\r\n            }\r\n        }));\r\n    }\r\n\r\n    // Other ts-calling sources and sinks can be exposed to the public through this internal dictionary (Namely, protocol)\r\n    public setInternalSourceSink(dataId: number, dataSource: SlimCore.DataSource, dataSink: SlimCore.DataSink): void {\r\n        if (dataId < 0 || dataId >= 64) {\r\n            throw new Error(`Data Id ${dataId} is outside the valid range of 0-63`);\r\n        }\r\n        if (this._handlers.hasOwnProperty(dataId) && (this._handlers[dataId].dataSource || this._handlers[dataId].dataSink)) {\r\n            this.logger.info(`Data Id ${dataId} for internal source sink is already registered`);\r\n            return;\r\n        }\r\n\r\n        this.logger.info(`Setting internal source sink for dataId: ${dataId}`);\r\n        if (dataId in this._handlers) { // A handler is already associated (added via adapter)\r\n            this._handlers[dataId].dataSource = dataSource;\r\n            this._handlers[dataId].dataSink = dataSink;\r\n            // We've completed the details, attach\r\n            this.logger.info(`Completed adapter details for dataId: ${dataId}`);\r\n            this._availableHandlers++; // Protocol handler attaches through onDataChannelStatusChanged, other handlers should attach themselves\r\n        } else { // No handler yet\r\n            const internalDetails = new HandlerDetails(dataId, null, true);\r\n            internalDetails.dataSource = dataSource;\r\n            internalDetails.dataSink = dataSink;\r\n            this._handlers[dataId] = internalDetails;\r\n        }\r\n    }\r\n\r\n    private _attachHandler(details: HandlerDetails): Promise<void> {\r\n        if (details.isAttached) {\r\n            return Promise.resolve<void>();\r\n        }\r\n\r\n        try {\r\n            this.logger.info(`Attaching handler for dataId: ${details.dataId}, ${details.sourceSinkInternallyCreated ? 'skipping source sink creation' : 'making source sink'}`);\r\n\r\n            if (!details.sourceSinkInternallyCreated) { // Internal details should not register more source sinks\r\n                details.dataSource = SlimCoreCommon.createDataSource(this._slimcoreInstance, details.dataId);\r\n                this._dataChannel.registerDataSource(details.dataSource);\r\n\r\n                details.dataSink = SlimCoreCommon.createDataSink(this._slimcoreInstance, details.dataId);\r\n                this._dataChannel.registerDataSink(details.dataSink);\r\n            } else if (!details.dataSource || !details.dataSink) {\r\n                this.logger.error('Attaching handler with null datasource or datasink');\r\n                return Promise.reject(new Error('Attaching handler with null datasource or datasink'));\r\n            }\r\n\r\n            details.listener = (args: SlimCore.DataSink.Events.DataArgs) => {\r\n                try {\r\n                    details.handler.onDataReceived(details.dataId, args.data, args.sourceID);\r\n                } catch (error) {\r\n                    this.logger.error(`Exception thrown from onDataReceived for data id ${details.dataId}, error: ${error}`);\r\n                }\r\n            };\r\n            details.dataSink.on('data', details.listener);\r\n\r\n            const sendFunction: DataSendFunction = (data: Uint8Array, recipients?: number[]): Promise<void> => {\r\n                try {\r\n                    details.dataSource.sendData(data, recipients);\r\n                    return Promise.resolve<void>();\r\n                } catch (error) {\r\n                    return Promise.reject(error);\r\n                }\r\n            };\r\n\r\n            details.isAttached = true;\r\n            details.handler.onStarted(details.dataId, sendFunction);\r\n            return Promise.resolve<void>();\r\n        } catch (error) {\r\n            this.logger.error(`Attaching handler for data id ${details.dataId} threw exception: ${error}`);\r\n            return Promise.reject(error);\r\n        }\r\n    }\r\n\r\n    private _detachAllHandlers() {\r\n        Object.keys(this._handlers).forEach(dataId => {\r\n            this._detachHandler(this._handlers[dataId]);\r\n        });\r\n    }\r\n\r\n    private _detachHandler(details: HandlerDetails) {\r\n        if (!details.isAttached) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            this.logger.info(`Detaching data handler dataid: ${details.dataId}`);\r\n\r\n            if (details.handler) {\r\n                details.handler.onStopped(details.dataId)\r\n                    .catch(error => {\r\n                        this.logger.warn(`Error in handler onStopped :${error}`);\r\n                    });\r\n            }\r\n\r\n            if (details.sourceSinkInternallyCreated) {  // if internal, adapter may not interfere with source/sink/other listeners\r\n                if (!!details.dataSink) {\r\n                    try {\r\n                        details.dataSink.removeListener('data', details.listener);\r\n                    } catch (error) {\r\n                        this.logger.warn(`Error removing internal listener, call probably ended: ${error}`);\r\n                    }\r\n                }\r\n            } else {\r\n                if (!!details.dataSource) {\r\n                    this._dataChannel.unregisterDataSource(details.dataSource)\r\n                        .catch(error => {\r\n                            this.logger.warn(`Failed to unregister data source, call probably ended: ${error}`);\r\n                        })\r\n                        .then(() => {\r\n                            details.dataSource.dispose();\r\n                            details.dataSource = null;\r\n                        });\r\n                }\r\n\r\n                if (!!details.dataSink) {\r\n                    details.dataSink.removeAllListeners('data');\r\n                    this._dataChannel.unregisterDataSink(details.dataSink)\r\n                        .catch(error => {\r\n                            this.logger.warn(`Failed to unregister data sink, call probably ended: ${error}`);\r\n                        })\r\n                        .then(() => {\r\n                            details.dataSink.dispose();\r\n                            details.dataSink = null;\r\n                        });\r\n                }\r\n            }\r\n            details.isAttached = false;\r\n\r\n        } catch (error) {\r\n            this.logger.error(`Exception thrown while detaching handler for data id ${details.dataId}, error: ${error}`);\r\n        }\r\n    }\r\n\r\n    // Start/Stop functionalities have been intentionally kept private in order to be managed\r\n    // internally by public APIs add/remove handlers.\r\n    private start(): Promise<void> {\r\n        this.logger.info('Data channel start called from adapter');\r\n        if (!this._dataChannel) {\r\n            return Promise.reject(new Error('Attempted to call start without a data channel'));\r\n        } else if (this._dataChannelStartCalled) { // if data channel is still transitioning from available to active and we put in multiple starts\r\n            this.logger.warn('Data channel start called more than once');\r\n            return Promise.resolve();\r\n        } else {\r\n            this._dataChannelStartCalled = true;\r\n            return this._dataChannel.start(this._negotiationTag);\r\n        }\r\n    }\r\n\r\n    // Not calling stop on data channel anymore... Refer to the above comment around the same.\r\n    // private stop(): Promise<void> {\r\n    //     if (!this._dataChannel) {\r\n    //         return Promise.reject(new Error('Attempted to call stop without a data channel'));\r\n    //     }\r\n    //     return this._dataChannel.stop();\r\n    // }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronDataChannelAdapter.ts","/**\r\n * SlimCoreElectronScreenSharingControl.ts\r\n * Author: Michael Tsu\r\n * Copyright: Microsoft 2017\r\n *\r\n * SlimCore IScreenSharingControl implementation\r\n */\r\nimport {\r\n    AvailableHandshakeStatus, AvailableHandshakeTerminatedReason, CallingLogger, CallState, ControlState, ControlTerminatedReason, CtrlCaptureEvent,\r\n    CtrlCaptureMode, CtrlKbdData, CtrlMouseData, DataChannelProtocolMessage, DataChannelProtocolType, ICall, ICallParticipant, IDisposable,\r\n    IRenderer, IRenderTarget, IScreenSharingControl, IScreenSharingControlEvents, ISlimCoreElectronControlCapturerEvents, MediaDataChannelState, MediaType,\r\n    ParticipantState, SharingControlCapability, SharingControlDisableReason, SharingControlError, SharingControlErrorReason, SharingControlInfo, SharingControlRole\r\n} from 'skype-calling-interface';\r\nimport { ISlimCoreElectronControlCapturer, SlimCoreElectronControlCapturer } from 'skype-calling-utilities';\r\nimport { EventSubscription } from '../../common/ts/events';\r\nimport { InjectorConfig, InjectorMode, ISlimCoreElectronControlInjector, TelemetryService } from '../typings/skype-calling-electron';\r\nimport SlimCoreElectronCallParticipant from './SlimCoreElectronCallParticipant';\r\nimport SlimCoreElectronDataChannel, { DATA_SOURCE_ID_ANY, IMediaDataChannelUser } from './SlimCoreElectronDataChannel';\r\n\r\nimport * as _ from 'lodash';\r\nimport * as async from '../../common/ts/async';\r\nimport { TelemetryUtilities } from '../../common/ts/callTelemetry';\r\nimport generateGuid from '../../common/ts/guid';\r\nimport { IInternalLogger } from '../../common/ts/internalLogger';\r\nimport * as piiUtils from '../../common/ts/piiUtils';\r\nimport { getTsCallingVersion } from '../../common/ts/tsCallingVersionProvider';\r\n\r\nimport { RootToolsManager } from '@skype/rt-js-bindings';\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\nimport SlimCoreElectronBase from './SlimCoreElectronBase';\r\nimport SlimCoreElectronRemoteVideoRenderer from './SlimCoreElectronRemoteVideoRenderer';\r\n\r\n// Timeout when waiting for control request\r\nconst CONTROL_REQUEST_WAIT_TIMEOUT = 30000;\r\n\r\n// Timeout when waiting for control acks\r\nconst CONTROL_ACK_WAIT_TIMEOUT = 10000;\r\nconst AVAILABLE_ACK_WAIT_TIMEOUT = 2000;\r\n// Timeout when waiting for bulky bubbling input raw errors\r\nconst INPUT_RAW_ERROR_REPORTING_WAIT_TIMEOUT = 10000;\r\nconst AVAILABLE_RETRY_LIMIT = 6;\r\n\r\n// Local participant mri\r\nconst LOCAL_PARTICIPANT_MRI = '';\r\n\r\nexport const enum ControlAction {\r\n    Available,\r\n    ControlRequest,\r\n    CancelControlRequest,\r\n    AcceptRequest,\r\n    RejectRequest,\r\n    Ack,\r\n    GiveControl,\r\n    TerminateNoAck,\r\n    Terminate,\r\n    AvailableAck,\r\n    AvailableNack,\r\n    RenderedAtViewer\r\n}\r\n\r\ntype ControlDataChannelStatus = {\r\n    id: number;\r\n    readyForControl: boolean;\r\n    state: MediaDataChannelState;\r\n};\r\n\r\nexport type ControlMessage = {\r\n    action: ControlAction;\r\n    terminatedReason: ControlTerminatedReason;\r\n    handshakeId?: string;\r\n};\r\n\r\n// Used to map between a participant leg (connected endpoint) and data sourceId here.\r\n// note: sourceId for data might not be known when the participant is determined and it might change during retargets.\r\n// therefore we look up the data sourceId when needed.\r\n// The opposite is possible as well: we might know the sourceId from incoming data messages\r\n// but can't map it to a participant / participantId due to a late roster update / stream info.\r\n// For the available handshake this is currently mitigated via retries from the sender/viewer\r\n// since the sharer would simply drop messages from unknown sourceIds.\r\n// One could instead store the sourceId and try to identify it when we get a roster update.\r\ntype ParticipantLeg = {\r\n    participant: ICallParticipant;\r\n    participantState: ParticipantState;\r\n    participantId: string;  // this refers to the connected endpoint while the participant includes all participant legs\r\n};\r\n\r\nenum VIEWER_CONTROL_SESSION_OPERATIONS {\r\n    INITIATED = 'Initiated',\r\n    CALL_STATE = 'CallState',\r\n    SHARING_STARTED = 'SharingStarted',\r\n    DATA_CHANNEL_AVAILABLE = 'DataChannelAvailable',\r\n    DATA_CHANNEL_UNAVAILABLE = 'DataChannelUnavailable',\r\n    AVAILABLE_HANDSHAKE = 'AvailableHandshake',\r\n    SESSION_SHUTDOWN = 'Shutdown',\r\n    SESSION_SHUTDOWN_BY_ANOTHER_SESSION = 'ShutdownByOtherSession'\r\n}\r\n\r\nenum SHARER_CONTROL_SESSION_OPERATIONS {\r\n    INITIATED = 'Initiated',\r\n    CALL_STATE = 'CallState',\r\n    DATA_CHANNEL_AVAILABLE = 'DataChannelAvailable',\r\n    DATA_CHANNEL_UNAVAILABLE = 'DataChannelUnavailable',\r\n    CONTROL_REQUEST = 'ControlRequest',\r\n    SESSION_SHUTDOWN = 'Shutdown',\r\n    SESSION_SHUTDOWN_BY_ANOTHER_SESSION = 'ShutdownByOtherSession'\r\n}\r\n\r\ntype SharerControlSessionEvent = {\r\n    CorrelationId: string;\r\n    ParticipantId: string;\r\n    EndpointId: string;\r\n    NegotiationTag: string;\r\n    TsCallingVersion: string;\r\n    TenantId: string;\r\n    EventTimestampBag: string;\r\n    ProtocolMessages: string;\r\n};\r\n\r\ntype ViewerControlSessionEvent = {\r\n    CorrelationId: string;\r\n    ParticipantId: string;\r\n    EndpointId: string;\r\n    NegotiationTag: string;\r\n    TsCallingVersion: string;\r\n    TenantId: string;\r\n    SharerParticipantId: string;\r\n    SharerClientVersion: string;\r\n    EventTimestampBag: string;\r\n    ProtocolMessages: string;\r\n};\r\n\r\nclass ControlSessionTelemetryBase extends TelemetryUtilities {\r\n    protected tsCallingVersion: string;\r\n    protected tenantId: string;\r\n    public messagesFromUnknownSender: {[sourceId: number]: number};\r\n\r\n    constructor(\r\n        logger: CallingLogger,\r\n        callStartTime: number,\r\n        public negotiationTag: string,\r\n        protected callId: string,\r\n        protected participantId: string,\r\n        protected endpointId: string\r\n    ) {\r\n        super(logger, callStartTime, () => { return this.recordedEvents.length > 100; });\r\n\r\n        this.messagesFromUnknownSender = {};\r\n        this.tsCallingVersion = getTsCallingVersion();\r\n    }\r\n\r\n    public recordProtocolMessage(sender: ICallParticipant, sourceId: number) {\r\n        if (!sender) {\r\n            if (!(sourceId in this.messagesFromUnknownSender)) {\r\n                this.messagesFromUnknownSender[sourceId] = 0;\r\n            }\r\n            this.messagesFromUnknownSender[sourceId]++;\r\n        }\r\n    }\r\n\r\n    public setCallId(callId: string) {\r\n        this.callId = callId;\r\n    }\r\n\r\n    public setEndpointId(endpointId: string) {\r\n        this.endpointId = endpointId;\r\n    }\r\n\r\n    public setParticipantId(participantId: string) {\r\n        this.participantId = participantId;\r\n    }\r\n\r\n    public setTenantId(tenantId: string): void {\r\n        this.tenantId = tenantId;\r\n    }\r\n}\r\n\r\nclass ViewerControlSessionTelemetry extends ControlSessionTelemetryBase {\r\n    private sharerClientVersion: string;\r\n    private sharerParticipantId: string;\r\n\r\n    public constructor(\r\n        logger: CallingLogger,\r\n        callStartTime: number,\r\n        negotiationTag: string,\r\n        callId: string,\r\n        participantId: string,\r\n        endpointId: string,\r\n        sharer: SlimCoreElectronCallParticipant\r\n    ) {\r\n        super(logger, callStartTime, negotiationTag, callId, participantId, endpointId);\r\n        const sharerParticipantId = sharer.getSharingParticipantLeg();\r\n        if (sharerParticipantId) {\r\n            this.sharerParticipantId = sharerParticipantId;\r\n            const d = _.find(sharer.endpoints.endpointDetails, e => e.participantId === sharerParticipantId);\r\n            if (d) {\r\n                this.sharerClientVersion = d.clientVersion;\r\n            }\r\n        }\r\n    }\r\n\r\n    public getEvent(): ViewerControlSessionEvent {\r\n        const getValue = (v: any) => v === undefined ? '' : v;\r\n        return {\r\n            CorrelationId: getValue(this.callId),\r\n            ParticipantId: getValue(this.participantId),\r\n            EndpointId: getValue(this.endpointId),\r\n            NegotiationTag: getValue(this.negotiationTag),\r\n            TsCallingVersion: getValue(this.tsCallingVersion),\r\n            TenantId: getValue(this.tenantId),\r\n            SharerParticipantId: getValue(this.sharerParticipantId),\r\n            SharerClientVersion: getValue(this.sharerClientVersion),\r\n            EventTimestampBag: super.getEventTimestampBag(),\r\n            ProtocolMessages: JSON.stringify({UnknownSender: this.messagesFromUnknownSender})\r\n        };\r\n    }\r\n}\r\n\r\nclass SharerControlSessionTelemetry extends ControlSessionTelemetryBase {\r\n    public constructor(\r\n        logger: CallingLogger,\r\n        callStartTime: number,\r\n        negotiationTag: string,\r\n        callId: string,\r\n        participantId: string,\r\n        endpointId: string\r\n    ) {\r\n        super(logger, callStartTime, negotiationTag, callId, participantId, endpointId);\r\n    }\r\n\r\n    public getEvent(): SharerControlSessionEvent {\r\n        const getValue = (v: any) => v === undefined ? '' : v;\r\n        return {\r\n            CorrelationId: getValue(this.callId),\r\n            ParticipantId: getValue(this.participantId),\r\n            EndpointId: getValue(this.endpointId),\r\n            NegotiationTag: getValue(this.negotiationTag),\r\n            TsCallingVersion: getValue(this.tsCallingVersion),\r\n            TenantId: getValue(this.tenantId),\r\n            EventTimestampBag: super.getEventTimestampBag(),\r\n            ProtocolMessages: JSON.stringify({UnknownSender: this.messagesFromUnknownSender})\r\n        };\r\n    }\r\n}\r\n\r\nexport default class SlimCoreElectronScreenSharingControl extends SlimCoreElectronBase<IScreenSharingControlEvents>\r\n    implements IScreenSharingControl, IMediaDataChannelUser {\r\n\r\n    public controlState: ControlState = ControlState.None;\r\n    public role: SharingControlRole = SharingControlRole.Unknown;\r\n    public controlDataChannelStatus: ControlDataChannelStatus = { id: null, readyForControl: false, state: MediaDataChannelState.Unknown };\r\n\r\n    private _enabled: boolean = false;\r\n    private _availableAckEnabled: boolean = true;\r\n    private _allowControlForUser: Function;\r\n    private _dataChannel: SlimCoreElectronDataChannel;\r\n    private _dataChannelActive: boolean = false;\r\n    private _dataChannelAvailableSent: boolean = false;\r\n    private _protocolDataSource: SlimCore.DataSource = null;\r\n    private _controlDataSource: SlimCore.DataSource = null;\r\n    private _controlDataSink: SlimCore.DataSink = null;\r\n    private _controlRequest: ParticipantLeg = null;\r\n    private _controlRequestSubscription: IDisposable = null;\r\n    private _controllerParticipant: ParticipantLeg = null;\r\n    private _controllerParticipantSubscription: IDisposable = null;\r\n    private _screenSharingVideoRenderer: SlimCoreElectronRemoteVideoRenderer = null;\r\n    private _screenSharingVideoRendererSubscriptions: IDisposable[] = [];\r\n    private _sharerParticipant: ICallParticipant = null; //TODO(robedum) this should be a ParticipantLeg. see initControlForViewer\r\n    private _controlCapturer: ISlimCoreElectronControlCapturer = null;\r\n    private _captureEventSubscription: EventSubscription = null;\r\n    private _mouseControlEventSubscription: EventSubscription = null;\r\n    private _keyboardControlEventSubscription: EventSubscription = null;\r\n    private _requestControlTimer: number = null;\r\n    private _grantControlTimer: number = null;\r\n    private _acceptControlTimer: number = null;\r\n    private _terminateControlTimer: number = null;\r\n    private _availableAckTimer: number = null;\r\n    private _retryAttempt: number = 0;\r\n    private _injectRawInputErrorTimer: number = null;\r\n    private _lastInjectRawInputErrorCount: number = 0;\r\n    private _raiseRenderedAtViewer: Function = null;\r\n    private _participantSubscriptions: { [id: string]: IDisposable } = {};\r\n\r\n    private _enableControlSessionTelemetry: boolean;\r\n    private _currentViewerSessionTelemetry: ViewerControlSessionTelemetry;\r\n    private _currentNegotiationTag: string;\r\n    private _completedViewerSessions: string[] = [];\r\n    private _currentSharerSessionTelemetry: SharerControlSessionTelemetry;\r\n    private _callId: string;\r\n    private _participantId: string;\r\n    private _endpointId: string;\r\n    private _callState: CallState;\r\n\r\n    private _terminateAvailableHandshake: (reason?: AvailableHandshakeTerminatedReason, ackHandshakeId?: string) => void;\r\n\r\n    // viewer's action promise\r\n    private _requestControlPromise: async.Deferred<void>;\r\n\r\n    // sharer's action promise\r\n    private _grantControlPromise: async.Deferred<void>;\r\n    private _acceptControlPromise: async.Deferred<void>;\r\n\r\n    // both viewer's and sharer's promise\r\n    private _terminateControlPromise: async.Deferred<void>;\r\n\r\n    public constructor(\r\n        logger: IInternalLogger,\r\n        settings: SlimCoreCommon.Settings,\r\n        engine: SlimCoreCommon.Engine,\r\n        call: ICall,\r\n        private _controlInjector: ISlimCoreElectronControlInjector,\r\n        private _telemetryService: TelemetryService\r\n    ) {\r\n        super(logger.createChild(() => `SlimCoreElectronScreenSharingControl`), settings, engine);\r\n        this._logger.info('constructor');\r\n\r\n        this._callId = call.callId;\r\n        call.on('callIdChanged', (id: string) => {\r\n            this._callId = id;\r\n            if (this._currentViewerSessionTelemetry) {\r\n                this._currentViewerSessionTelemetry.setCallId(id);\r\n            }\r\n            if (this._currentSharerSessionTelemetry) {\r\n                this._currentSharerSessionTelemetry.setCallId(id);\r\n            }\r\n        });\r\n        this._participantId = call.participantId;\r\n        call.on('callLegIdChanged', (id: string) => {\r\n            this._participantId = id;\r\n            if (this._currentViewerSessionTelemetry) {\r\n                this._currentViewerSessionTelemetry.setParticipantId(id);\r\n            }\r\n            if (this._currentSharerSessionTelemetry) {\r\n                this._currentSharerSessionTelemetry.setParticipantId(id);\r\n            }\r\n        });\r\n        this._endpointId = call.endpointId;\r\n\r\n        if (this._slimcoreInstance.ecsGetSettingAsBool) {\r\n            this._enableControlSessionTelemetry = this._slimcoreInstance.ecsGetSettingAsBool('MediaAgent', 'EnableGtcTelemetry', false);\r\n        } else {\r\n            this._enableControlSessionTelemetry = false;\r\n        }\r\n    }\r\n\r\n    // this is the function on the sharer side to turn on/off the available ack\r\n    public enableScreenSharingControl(enabled: boolean, reason?: SharingControlDisableReason, detail?: any, _allowControlForUser?: Function) {\r\n        if (this._availableAckEnabled === enabled && this._allowControlForUser === _allowControlForUser) {\r\n            return;\r\n        }\r\n        this._allowControlForUser = _allowControlForUser;\r\n\r\n        if (!enabled) {\r\n            if (reason === SharingControlDisableReason.SetInjectionFailed) {\r\n                const controlError: SharingControlError = {\r\n                    reason: SharingControlErrorReason.SetInjectionRectError,\r\n                    detail\r\n                };\r\n                this.event('sharingControlError').raise(controlError);\r\n            }\r\n            this._raiseScreenSharingControlCapableEvent(false, LOCAL_PARTICIPANT_MRI);\r\n        } else {\r\n            this._raiseScreenSharingControlCapableEvent(true, LOCAL_PARTICIPANT_MRI);\r\n        }\r\n        this._availableAckEnabled = enabled;\r\n    }\r\n\r\n    public setRaiseRenderedAtViewer(_raiseRenderedAtViewer: Function) {\r\n        this._raiseRenderedAtViewer = _raiseRenderedAtViewer;\r\n    }\r\n\r\n    // feature flag\r\n    public setScreenSharingControlFeatureFlag(enabled: boolean) {\r\n        this._enabled = enabled;\r\n        this._availableAckEnabled = enabled;\r\n    }\r\n\r\n    public isScreenSharingControlEnabled(): boolean {\r\n        return this._enabled;\r\n    }\r\n\r\n    private _disposeRenderer() {\r\n        this._disposeControlCapturer();\r\n        for (const s of this._screenSharingVideoRendererSubscriptions) {\r\n            s.dispose();\r\n        }\r\n        this._screenSharingVideoRendererSubscriptions = [];\r\n        this._screenSharingVideoRenderer = null;\r\n    }\r\n\r\n    public setRenderer(renderer: IRenderer, target?: IRenderTarget): Promise<void> {\r\n        this._disposeRenderer();\r\n\r\n        if (!renderer) { return Promise.resolve<void>(); }\r\n\r\n        const videoRenderer = renderer as SlimCoreElectronRemoteVideoRenderer;\r\n        const container = (!!target ? target : videoRenderer.renderTarget) as HTMLElement;\r\n        //jyr: remove renderTarget prop from SlimCoreElectronRemoteVideoRenderer when target is made mandatonary\r\n        return async.asap(() => this._setViewingRenderer(videoRenderer, container));\r\n    }\r\n\r\n    public setDataChannel(channel: SlimCoreElectronDataChannel): Promise<void> {\r\n        return async.asap(() => this._setDataChannel(channel));\r\n    }\r\n\r\n    private _setDataChannel(channel: SlimCoreElectronDataChannel): void {\r\n        this._logger.info(`Setting DataChannel ${channel && channel.id}`);\r\n        if (this._dataChannel && !channel) {\r\n            this._detachAndDeleteControlDevices();\r\n        }\r\n        this._dataChannel = channel;\r\n        if (channel) {\r\n            this.controlDataChannelStatus = {\r\n                id: channel.id,\r\n                readyForControl: false,\r\n                state: SlimCoreElectronDataChannel._mapDataChannelStatus(channel._lastDataChannelState)\r\n            };\r\n            this.event('controlDataChannelStateChanged').raise(this.controlDataChannelStatus);\r\n        }\r\n    }\r\n\r\n    public setProtocolDataSource(source: SlimCore.DataSource): Promise<void> {\r\n        return async.asap(() => this._setProtocolDataSource(source));\r\n    }\r\n\r\n    private _setProtocolDataSource(source: SlimCore.DataSource): void {\r\n        this._protocolDataSource = source;\r\n    }\r\n\r\n    private _raiseScreenSharingControlCapableEvent(isCapable: boolean, participantId: string, disabledBySharer?: boolean): void {\r\n        if (this._enabled) {\r\n            // Notify app that local participant can use the control/pointer feature\r\n            this._logger.info(`_raiseScreenSharingControlCapableEvent() enabled is true, raising control capability, capable=${isCapable}`);\r\n            const capable: SharingControlCapability = { capable: isCapable, id: participantId, disabledBySharer };\r\n            this.event('sharingControlCapable').raise(capable);\r\n        } else {\r\n            this._logger.info('_raiseScreenSharingControlCapableEvent() enabled is false, disabling control capability');\r\n            const capable: SharingControlCapability = { capable: false, id: participantId };\r\n            this.event('sharingControlCapable').raise(capable);\r\n        }\r\n    }\r\n\r\n    public initControlForSharer(negotiationTag: string): void {\r\n        this._logger.info('initControlForSharer()');\r\n\r\n        // Reset some state\r\n        this._resetControlState();\r\n\r\n        // Sharer doesn't need renderer / capturer:\r\n        this._screenSharingVideoRenderer = null;\r\n        this._disposeControlCapturer();\r\n\r\n        this.role = SharingControlRole.Sharer;\r\n        this._dataChannelAvailableSent = false; // this is a viewer only flag, should be false for sharer\r\n\r\n        // Set seamless mode which tells injector\r\n        // we want multiple cursors\r\n        // @TODO: for now, set to disabled until we\r\n        // enable pointing\r\n        this._setInjectorMode(InjectorMode.Disabled);\r\n\r\n        // Notify app that local participant can use the control/pointer feature\r\n        this._raiseScreenSharingControlCapableEvent(true, LOCAL_PARTICIPANT_MRI);\r\n\r\n        this._initiateSharerSessionTelemetry(negotiationTag);\r\n\r\n    }\r\n\r\n    public shutdownControlForSharer(): void {\r\n        this._logger.info('shutdownControlForSharer()');\r\n\r\n        // Check if there is any pending control requests...reject them here:\r\n        if (this._controlRequest) {\r\n            this._logger.warn('Rejecting pending control requests');\r\n\r\n            const controlRequesterSourceId = this._getDataSourceIdForParticipantLeg(this._controlRequest);\r\n            const controlRequest = this._controlRequest;\r\n            this._clearControlRequest();\r\n            this._raiseControlRequestCanceled(controlRequest);\r\n\r\n            this._sendRequest(\r\n                { action: ControlAction.RejectRequest, terminatedReason: ControlTerminatedReason.SharerTerminated }, controlRequesterSourceId);\r\n        }\r\n\r\n        this.role = SharingControlRole.Unknown;\r\n\r\n        if (this._controllerParticipant) {\r\n            // Notify app\r\n            const controlInfo: SharingControlInfo = {\r\n                inControl: false,\r\n                id: this._controllerParticipant.participant.id,\r\n                terminatedReason: ControlTerminatedReason.SharerTerminated\r\n            };\r\n            this.event('sharingControlChanged').raise(controlInfo);\r\n        }\r\n\r\n        this._finalizeSharerSessionTelemetry(SHARER_CONTROL_SESSION_OPERATIONS.SESSION_SHUTDOWN);\r\n\r\n        // Reset some state\r\n        this._teardownSharerRemoteControl();\r\n        this._resetControlState();\r\n        this._resetParticipantSubscriptions();\r\n        this._availableAckEnabled = this._enabled;\r\n    }\r\n\r\n    private _resetParticipantSubscriptions(): void {\r\n        this._logger.info('resetParticipantSubscriptions(): Stopping tracking all participant state changes');\r\n        _.each(this._participantSubscriptions, id => { id.dispose(); });\r\n        this._participantSubscriptions = {};\r\n    }\r\n\r\n    private _initiateViewerSessionTelemetry(sharer: ICallParticipant, negotiationTag: string, alwaysCreate: boolean): ViewerControlSessionTelemetry {\r\n        if (!alwaysCreate && !negotiationTag) {\r\n            return null;\r\n        }\r\n        if (!alwaysCreate && _.find(this._completedViewerSessions, s => negotiationTag === s)) {\r\n            return null;\r\n        }\r\n        if (this._currentViewerSessionTelemetry) {\r\n            if (this._currentViewerSessionTelemetry.negotiationTag === negotiationTag) {\r\n                return null;\r\n            }\r\n            this._finalizeViewerSessionTelemetry(VIEWER_CONTROL_SESSION_OPERATIONS.SESSION_SHUTDOWN_BY_ANOTHER_SESSION);\r\n        }\r\n\r\n        this._logger.info(`initiating new viewer session telemetry for ${negotiationTag}`);\r\n        this._currentViewerSessionTelemetry = new ViewerControlSessionTelemetry(\r\n            this._logger,\r\n            new Date().getTime(),\r\n            negotiationTag,\r\n            this._callId,\r\n            this._participantId,\r\n            this._endpointId,\r\n            (sharer as SlimCoreElectronCallParticipant)\r\n        );\r\n\r\n        this._currentViewerSessionTelemetry.recordEvent(VIEWER_CONTROL_SESSION_OPERATIONS.CALL_STATE, {state: this._callState});\r\n        if (this._dataChannel && this._dataChannelActive) {\r\n            this._currentViewerSessionTelemetry.recordEvent(VIEWER_CONTROL_SESSION_OPERATIONS.DATA_CHANNEL_AVAILABLE);\r\n        }\r\n        return this._currentViewerSessionTelemetry;\r\n    }\r\n\r\n    private _recordViewerSessionTelemetry(f: (t: ViewerControlSessionTelemetry) => void, shouldHaveExistingSession: boolean = true): void {\r\n        if (!this._currentViewerSessionTelemetry) {\r\n            if (shouldHaveExistingSession) {\r\n                this._logger.error(`Cannot record telemetry without current session`);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (f) {\r\n            f(this._currentViewerSessionTelemetry);\r\n        }\r\n    }\r\n\r\n    private _finalizeViewerSessionTelemetry(reason: VIEWER_CONTROL_SESSION_OPERATIONS) : void {\r\n        if (!this._currentViewerSessionTelemetry) {\r\n            return;\r\n        }\r\n        this._currentViewerSessionTelemetry.recordEvent(reason);\r\n        const event: ViewerControlSessionEvent = this._currentViewerSessionTelemetry.getEvent();\r\n        this._sendTelemetryEvent('mdsc_gtc_viewer_session', event);\r\n        if (this._currentViewerSessionTelemetry.negotiationTag) {\r\n            this._completedViewerSessions.push(this._currentViewerSessionTelemetry.negotiationTag);\r\n        }\r\n        if (this._currentViewerSessionTelemetry.messagesFromUnknownSender &&\r\n            Object.keys(this._currentViewerSessionTelemetry.messagesFromUnknownSender).length) {\r\n            RootToolsManager.logExternalForDDL(`ScreenSharingControl: messages received from unkonwn sender => ${event.ProtocolMessages}`);\r\n        }\r\n        this._currentViewerSessionTelemetry = null;\r\n    }\r\n\r\n    private _initiateSharerSessionTelemetry(negotiationTag: string): void {\r\n        if (this._currentSharerSessionTelemetry) {\r\n            if (this._currentSharerSessionTelemetry.negotiationTag === negotiationTag) {\r\n                return null;\r\n            }\r\n            this._finalizeSharerSessionTelemetry(SHARER_CONTROL_SESSION_OPERATIONS.SESSION_SHUTDOWN_BY_ANOTHER_SESSION);\r\n        }\r\n\r\n        this._logger.info(`initiating new sharer session telemetry for ${negotiationTag}`);\r\n        this._currentSharerSessionTelemetry = new SharerControlSessionTelemetry(\r\n            this._logger,\r\n            new Date().getTime(),\r\n            negotiationTag,\r\n            this._callId,\r\n            this._participantId,\r\n            this._endpointId);\r\n        if (this._dataChannel && this._dataChannelActive) {\r\n            this._currentSharerSessionTelemetry.recordEvent(SHARER_CONTROL_SESSION_OPERATIONS.DATA_CHANNEL_AVAILABLE);\r\n        }\r\n    }\r\n\r\n    private _recordSharerSessionTelemetry(f: (t: SharerControlSessionTelemetry) => void, shouldHaveExistingSession: boolean = true): void {\r\n        if (!this._currentSharerSessionTelemetry) {\r\n            if (shouldHaveExistingSession) {\r\n                this._logger.error(`Cannot record telemetry without current session`);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (f) {\r\n            f(this._currentSharerSessionTelemetry);\r\n        }\r\n    }\r\n\r\n    private _finalizeSharerSessionTelemetry(reason: SHARER_CONTROL_SESSION_OPERATIONS) : void {\r\n        if (!this._currentSharerSessionTelemetry) {\r\n            return;\r\n        }\r\n        this._currentSharerSessionTelemetry.recordEvent(reason);\r\n        const event: SharerControlSessionEvent = this._currentSharerSessionTelemetry.getEvent();\r\n        this._sendTelemetryEvent('mdsc_gtc_sharer_session', event);\r\n\r\n        if (this._currentSharerSessionTelemetry.messagesFromUnknownSender &&\r\n            Object.keys(this._currentSharerSessionTelemetry.messagesFromUnknownSender).length) {\r\n            RootToolsManager.logExternalForDDL(`ScreenSharingControl: messages received from unkonwn sender => ${event.ProtocolMessages}`);\r\n        }\r\n        this._currentSharerSessionTelemetry = null;\r\n    }\r\n\r\n    private _sendTelemetryEvent(eventName: string, event: any): void {\r\n        if (this._enableControlSessionTelemetry) {\r\n            this._logger.info(`sending event ${eventName}: `);\r\n        } else {\r\n            this._logger.info(`${eventName}: `);\r\n        }\r\n        Object.keys(event).forEach(\r\n            key  => {\r\n                this._logger.info(`     ${key} => ${event[key]}`);\r\n            }\r\n        );\r\n        if (this._enableControlSessionTelemetry && this._telemetryService) {\r\n            this._telemetryService.sendEvent(eventName, event);\r\n        }\r\n    }\r\n\r\n    private _recordProtocolMessage(sender: ICallParticipant, sourceId: number): void {\r\n        if (this._currentViewerSessionTelemetry) {\r\n            this._currentViewerSessionTelemetry.recordProtocolMessage(sender, sourceId);\r\n        }\r\n        if (this._currentSharerSessionTelemetry) {\r\n            this._currentSharerSessionTelemetry.recordProtocolMessage(sender, sourceId);\r\n        }\r\n    }\r\n\r\n    public reportSharingSessionChangeForViewer(sharer: ICallParticipant, negotiationTag: string): void {\r\n        if (negotiationTag) {\r\n            this._initiateViewerSessionTelemetry(sharer, negotiationTag, false);\r\n        }\r\n    }\r\n\r\n    public initControlForViewer(sharer: ICallParticipant, negotiationTag: string): void {\r\n        this._logger.info(`initControlForViewer(${negotiationTag})`);\r\n\r\n        const newSharingSession = (!this._sharerParticipant || this._sharerParticipant && this._sharerParticipant.id !== sharer.id || negotiationTag !== this._currentNegotiationTag);\r\n\r\n        this._currentNegotiationTag = negotiationTag;\r\n        this.role = SharingControlRole.Viewer;\r\n\r\n        // TODO(robedum) this should be based on participantId (the caller could pass in the sharer's IStream).\r\n        // we should determine the sharing participant leg once and stick with it until the participant leg changes.\r\n        // for now we attempt to determine the sharer's data source id on the fly when we need it.\r\n\r\n        // Check if sharer has changed and needs to be updated\r\n        if (this._sharerParticipant) {\r\n            if (this._sharerParticipant.id !== sharer.id) {\r\n                this._recordViewerSessionTelemetry(e => e.recordEvent(VIEWER_CONTROL_SESSION_OPERATIONS.SESSION_SHUTDOWN_BY_ANOTHER_SESSION, null, negotiationTag));\r\n\r\n                this._logger.info(`initControlForViewer() sharer switched, new sharer id=${piiUtils.scrubMriOrOmit(sharer.id)}`);\r\n                // Sharer switched, we should send ControlAction.Available to the new sharer\r\n                this._dataChannelAvailableSent = false;\r\n\r\n                // And give up control if we had it\r\n                if (this.controlState === ControlState.LocalControlling) {\r\n                    this._terminateControl(false);\r\n                }\r\n\r\n                // TBC: no _resetControlState here, if data channel is not active, _sharerParticipant not changed, is it intentional?\r\n            }\r\n        } else {\r\n            this._logger.info(`initControlForViewer() setting sharer to id=${piiUtils.scrubMriOrOmit(sharer.id)}`);\r\n            this._sharerParticipant = sharer;\r\n            this._dataChannelAvailableSent = false;\r\n        }\r\n\r\n        this._initiateViewerSessionTelemetry(sharer, negotiationTag, true);\r\n        if (newSharingSession) {\r\n            this._recordViewerSessionTelemetry(e => e.recordEvent(VIEWER_CONTROL_SESSION_OPERATIONS.SHARING_STARTED));\r\n        }\r\n\r\n        if (this._dataChannel && this._dataChannelActive && !this._dataChannelAvailableSent) {\r\n            // Reset some state\r\n            this._resetControlState();\r\n\r\n            this.role = SharingControlRole.Viewer;\r\n            this._sharerParticipant = sharer;\r\n\r\n            // Remote participant started screen sharing\r\n            // Send an 'Available' message to sharer\r\n            this._logger.info('initControlForViewer() sending Available message to sharer');\r\n            this._startAvailableHandshake();\r\n        }\r\n    }\r\n\r\n    public shutdownControlForViewer(sharer?: ICallParticipant): void {\r\n        this._logger.info('shutdownControlForViewer()');\r\n\r\n        let shouldShutdownControlForViewer: boolean = false;\r\n        if (!sharer ||\r\n            (this._sharerParticipant && sharer.id === this._sharerParticipant.id)) {\r\n            // We should shutdown control for viewer if sharer param is null, or\r\n            // sharer matches our sharer\r\n            this._logger.info('shutdownControlForViewer: setting shouldShutdownControlForViewer to true');\r\n            shouldShutdownControlForViewer = true;\r\n        }\r\n\r\n        if (shouldShutdownControlForViewer && this._isViewing()) {\r\n\r\n            if (this.controlState === ControlState.RequestSent) {\r\n\r\n                if (this._sharerParticipant) {\r\n                    const sharerSourceId: number = this._getSharerDataSourceId();\r\n                    this._sendRequest(\r\n                        { action: ControlAction.CancelControlRequest, terminatedReason: ControlTerminatedReason.ViewerTerminated }, sharerSourceId);\r\n                } else {\r\n                    this._logger.warn('shutdownControlForViewer: sharer participant is null');\r\n                }\r\n\r\n                // Raise an event notifying that the request was 'cancelled'\r\n                const controlInfo: SharingControlInfo = {\r\n                    inControl: false,\r\n                    id: LOCAL_PARTICIPANT_MRI, // local participant\r\n                    terminatedReason: ControlTerminatedReason.ViewerTerminated\r\n                };\r\n\r\n                if (this._requestControlPromise) {\r\n                    this._requestControlPromise.reject(new Error(JSON.stringify({ controlInfo, details: '' })));\r\n                } else {\r\n                    this._logger.error('Unexpected, no promise could be resolved - state =ControlState.RequestSent action =shutdownControlForViewer');\r\n                }\r\n            } else if (this.controlState === ControlState.LocalControlling) {\r\n                // Notify app\r\n                const controlInfo: SharingControlInfo = {\r\n                    inControl: false,\r\n                    id: LOCAL_PARTICIPANT_MRI,\r\n                    terminatedReason: ControlTerminatedReason.ViewerTerminated\r\n                };\r\n                this.event('sharingControlChanged').raise(controlInfo);\r\n            }\r\n\r\n            // Reset some state\r\n            this._teardownViewerRemoteControl();\r\n            this._resetControlState();\r\n\r\n            this._screenSharingVideoRenderer = null;\r\n            this._disposeControlCapturer();\r\n            if (this._terminateAvailableHandshake) {\r\n                this._terminateAvailableHandshake(AvailableHandshakeTerminatedReason.Shutdown);\r\n            }\r\n\r\n            this._dataChannelAvailableSent = false;\r\n\r\n            this._finalizeViewerSessionTelemetry(VIEWER_CONTROL_SESSION_OPERATIONS.SESSION_SHUTDOWN);\r\n\r\n            // Raise an event indicating that local user cannot do control/pointers\r\n            this._raiseScreenSharingControlCapableEvent(false, LOCAL_PARTICIPANT_MRI);\r\n        }\r\n    }\r\n\r\n    private _resetControlRequest(request: ParticipantLeg): void {\r\n        this._clearControlRequest();\r\n        this._controlRequest = request;\r\n        this._registerParticipantListener(request);\r\n        // there may be a race where the participant has not yet been set to connected\r\n        // even though the data channel has made a control request. Wait until we are connected\r\n        // to notify\r\n        if (request.participantState === ParticipantState.Connected) {\r\n            this.event('sharingIncomingControlRequest').raise(request.participant.id);\r\n        }\r\n    }\r\n\r\n    private _clearControlRequest(): void {\r\n        this._stopListeningToParticipantChanges(this._controlRequest);\r\n        this._controlRequest = null;\r\n    }\r\n\r\n    private _stopListeningToParticipantChanges(previousRequest: ParticipantLeg): void {\r\n        if (this._controlRequestSubscription) {\r\n            this._logger.info(`_stopListeningToParticipantChanges: stopping tracking changes for ${previousRequest.participant.id}`);\r\n            this._controlRequestSubscription.dispose();\r\n            this._controlRequestSubscription = null;\r\n        }\r\n    }\r\n\r\n    private _registerParticipantListener(request: ParticipantLeg): void {\r\n        this._logger.info(`_registerParticipantListener: tracking changes for ${request.participant.id}`);\r\n        this._controlRequestSubscription = request.participant.changed(() => {\r\n            if (request.participant.state !== request.participantState) {\r\n                request.participantState = request.participant.state;\r\n                switch (request.participantState) {\r\n                    case ParticipantState.Connected:\r\n                        this.event('sharingIncomingControlRequest').raise(request.participant.id);\r\n                        break;\r\n                    case ParticipantState.None:\r\n                    case ParticipantState.OnHold:\r\n                    case ParticipantState.Disconnected:\r\n                        this.denyControlRequest().catch(err => {\r\n                            this._logger.info(`it is ok if denyControlRequest rejects here as screensharing may have just been stopped. Err is ${err}`);\r\n                        });\r\n                        this._logger.info(`_registerParticipantListener: participant ${request.participant.id} is no longer connected. resetting`);\r\n                        this._clearControlRequest();\r\n                        this._raiseControlRequestCanceled(request);\r\n                        break;\r\n                    case ParticipantState.Connecting:\r\n                    case ParticipantState.Ringing:\r\n                    case ParticipantState.EarlyMedia:\r\n                    case ParticipantState.InLobby:\r\n                        break;\r\n                    default:\r\n                        this._logger.error(`unexpected participantState {request.participantState} unhandled`);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private _resetControllerParticipant(participantLeg?: ParticipantLeg): void {\r\n        if (this._controllerParticipantSubscription) {\r\n            this._logger.info(`_resetControllerParticipant: stopping tracking changes for ${this._controllerParticipant.participant.id}`);\r\n            this._controllerParticipantSubscription.dispose();\r\n            this._controllerParticipantSubscription = null;\r\n        }\r\n        if (participantLeg) {\r\n            this._logger.info(`_resetControllerParticipant: tracking changes for ${participantLeg.participant.id}`);\r\n            this._controllerParticipantSubscription = participantLeg.participant.changed(() => {\r\n                if (participantLeg.participant.state !== ParticipantState.Connected) {\r\n                    this.handleParticipantRemoved(participantLeg.participant.id);\r\n                }\r\n            });\r\n        }\r\n        this._controllerParticipant = participantLeg;\r\n    }\r\n\r\n    public handleParticipantRemoved(participantId: string): void {\r\n        if (this._participantSubscriptions[participantId]) {\r\n            this._logger.info(`handleParticipantRemoved(): Stopping tracking state changes for ${participantId}`);\r\n            this._participantSubscriptions[participantId].dispose();\r\n            delete this._participantSubscriptions[participantId];\r\n        }\r\n\r\n        // A participant was removed, check if it is controller and if so, teardown the control session\r\n        if (this._isSharing()) {\r\n            if (this._controllerParticipant && this._controllerParticipant.participant.id === participantId) {  // note: this is not the per endpoint participantId but MRI\r\n                this._logger.info('handleParticipantRemoved: controller left call, tearing down control session');\r\n                // The controller left the call, teardown the control session\r\n                this._teardownSharerRemoteControl();\r\n                this.controlState = ControlState.None;\r\n                this._resetControllerParticipant();\r\n\r\n                // Notify app that control terminated\r\n                const controlInfo: SharingControlInfo = {\r\n                    inControl: false,\r\n                    id: participantId,\r\n                    terminatedReason: ControlTerminatedReason.SharerTerminated\r\n                };\r\n                this.event('sharingControlChanged').raise(controlInfo);\r\n            }\r\n\r\n            // Notify app that this participant is no longer control capable\r\n            this._raiseScreenSharingControlCapableEvent(false, participantId);\r\n        } else {\r\n            // viewing\r\n            if (this._sharerParticipant && this._sharerParticipant.id === participantId && this.controlState === ControlState.LocalControlling) {\r\n                // The sharer left the call while we were in control, do some cleanup\r\n                this._logger.info('handleParticipantRemoved: sharer left call, tearing down control session');\r\n                this._teardownViewerRemoteControl();\r\n                this.controlState = ControlState.None;\r\n\r\n                // Notify app\r\n                const controlInfo: SharingControlInfo = {\r\n                    inControl: false,\r\n                    id: LOCAL_PARTICIPANT_MRI,\r\n                    terminatedReason: ControlTerminatedReason.ViewerTerminated\r\n                };\r\n                this.event('sharingControlChanged').raise(controlInfo);\r\n            }\r\n        }\r\n    }\r\n\r\n    public callStateChanged(state: CallState) {\r\n        this._callState = state;\r\n        this._recordViewerSessionTelemetry(e => e.recordEvent(VIEWER_CONTROL_SESSION_OPERATIONS.CALL_STATE, {state}), false);\r\n        this._recordSharerSessionTelemetry(e => e.recordEvent(SHARER_CONTROL_SESSION_OPERATIONS.CALL_STATE, {state}), false);\r\n\r\n        if (state === CallState.Disconnected) {\r\n            this._handleCallDisconnected();\r\n        }\r\n    }\r\n\r\n    private _handleCallDisconnected(): void {\r\n        this._logger.info('handleCallDisconnected()');\r\n\r\n        // Handle any cleanup when call has disconnected\r\n        if (this._isSharing()) {\r\n            this.shutdownControlForSharer();\r\n        } else {\r\n            this.shutdownControlForViewer();\r\n        }\r\n    }\r\n\r\n    private _videoSizeChanged(width: number, height: number) {\r\n        if (this._controlCapturer != null) {\r\n            this._controlCapturer.updateVideoSize(width, height);\r\n        }\r\n    }\r\n\r\n    private _onRenderStarted(): void {\r\n        const data = { action: ControlAction.RenderedAtViewer, terminatedReason: ControlTerminatedReason.None };\r\n        if (this._sharerParticipant) {\r\n            const sharerSourceId = this._getSharerDataSourceId();\r\n            this._sendRequest(data, sharerSourceId);\r\n        } else {\r\n            this._logger.error(`Attempted to send sharing rendered message to null sharerParticipant`);\r\n        }\r\n    }\r\n\r\n    private _setViewingRenderer(screenSharingRenderer: SlimCoreElectronRemoteVideoRenderer, container: HTMLElement): void {\r\n        try {\r\n            // Save the new renderer and create the capturer\r\n            this._screenSharingVideoRenderer = screenSharingRenderer;\r\n            this._screenSharingVideoRendererSubscriptions.push(\r\n                this._screenSharingVideoRenderer.on('videoSizeChanged', (width, height) => this._videoSizeChanged(width, height))\r\n            );\r\n            this._screenSharingVideoRendererSubscriptions.push(\r\n                this._screenSharingVideoRenderer.on('renderStarted', () => this._onRenderStarted())\r\n            );\r\n            this._controlCapturer = new SlimCoreElectronControlCapturer(this._logger, container);\r\n\r\n            if (this.controlState === ControlState.LocalControlling) {\r\n                // We were already in control (could be that user switched from viewing\r\n                // while in control, to chat), and the renderer has changed, let's continue\r\n                // being in control\r\n                this._logger.info('_setViewingRenderer: detected local state is controlling');\r\n                this._setupViewerRemoteControl();\r\n            } else {\r\n                // @TODO: For now, go to disabled - eventually go to detection mode\r\n                // when we support pointers\r\n                this._teardownViewerRemoteControl();\r\n            }\r\n        } catch (error) {\r\n            this._logger.error(`_setViewingRenderer: unable to set _screenSharingVideoRenderer error = ${error}`);\r\n        }\r\n    }\r\n\r\n    private _isSharing(): boolean {\r\n        return (this.role === SharingControlRole.Sharer);\r\n    }\r\n\r\n    private _isViewing(): boolean {\r\n        return (this.role === SharingControlRole.Viewer);\r\n    }\r\n\r\n    private _createAndAttachControlDevices(): void {\r\n        this._logger.info('_createAndAttachControlDevices()');\r\n        if (!SlimCoreCommon.hasCreateDataSource(this._slimcoreInstance) || !SlimCoreCommon.hasCreateDataSink(this._slimcoreInstance)) {\r\n            this._logger.warn('createDataSource or createDataSink not implemented');\r\n            return;\r\n        }\r\n\r\n        if (this._dataChannel) {\r\n\r\n            let registerDataSource: Promise<void> = Promise.resolve<void>();\r\n            let registerDataSink: Promise<void> = Promise.resolve<void>();\r\n            // Create/register source/sink\r\n            if (!this._controlDataSource) {\r\n                this._controlDataSource = SlimCoreCommon.createDataSource(this._slimcoreInstance, SlimCore.Enums.DataDeviceId.Control);\r\n                this._logger.info('created Control DataSource');\r\n\r\n                registerDataSource = this._dataChannel.registerDataSource(this._controlDataSource)\r\n                    .then(() => this._logger.info('registered Control DataSource'))\r\n                    .catch(error => this._logger.error(`registerDataSource threw exception: ${error}`));\r\n            }\r\n\r\n            if (!this._controlDataSink) {\r\n                this._controlDataSink = SlimCoreCommon.createDataSink(this._slimcoreInstance, SlimCore.Enums.DataDeviceId.Control);\r\n                this._logger.info('created Control DataSink');\r\n\r\n                registerDataSink = this._dataChannel.registerDataSink(this._controlDataSink)\r\n                    .then(() => this._logger.info('registered Control DataSink'))\r\n                    .catch(error => this._logger.error(`registerDataSink threw exception: ${error}`));\r\n            }\r\n\r\n            Promise.all([registerDataSource, registerDataSink]).then(() => {\r\n                this.controlDataChannelStatus.readyForControl = true;\r\n                this.event('controlDataChannelStateChanged').raise(this.controlDataChannelStatus);\r\n            });\r\n\r\n            this._controlDataSink.on('data', ((args: SlimCore.DataSink.Events.DataArgs) => {\r\n                this._controlInjector.injectRawInput(args.data, args.sourceID).catch(error => {\r\n                    this._lastInjectRawInputErrorCount++;\r\n                    if (this._injectRawInputErrorTimer === null) {\r\n                        this._injectRawInputErrorTimer = setTimeout(() => {\r\n\r\n                            const controlError: SharingControlError = {\r\n                                reason: SharingControlErrorReason.InjectRawInputError,\r\n                                detail: JSON.stringify({ dataChannelId: this._dataChannel.id, sourceId: args && args.sourceID, count: this._lastInjectRawInputErrorCount, errorMsg: error })\r\n                            };\r\n                            this.event('sharingControlError').raise(controlError);\r\n\r\n                            this._lastInjectRawInputErrorCount = 0;\r\n                            this._injectRawInputErrorTimer = null;\r\n                        }, INPUT_RAW_ERROR_REPORTING_WAIT_TIMEOUT);\r\n                    }\r\n                });\r\n            }));\r\n        } else {\r\n            this._logger.warn('_createAndAttachControlDevices() null dataChannel');\r\n        }\r\n    }\r\n\r\n    private _detachAndDeleteControlDevices(): void {\r\n        this._logger.info('_detachAndDeleteControlDevices()');\r\n\r\n        // Remove data callback\r\n        if (this._controlDataSink) {\r\n            this._controlDataSink.removeAllListeners('data');\r\n        }\r\n\r\n        if (this._dataChannel) {\r\n            // Unregister the source/sink\r\n            if (this._controlDataSource) {\r\n\r\n                this._dataChannel.unregisterDataSource(this._controlDataSource)\r\n                    .then(() => this._logger.info('Control DataSource unregistered'))\r\n                    .catch(error => this._logger.warn(`unregisterDataSource threw exception: ${error}`));\r\n\r\n                this._controlDataSource = null;\r\n                this._logger.info('deleted Control data source');\r\n            }\r\n\r\n            if (this._controlDataSink) {\r\n\r\n                this._dataChannel.unregisterDataSink(this._controlDataSink)\r\n                    .then(() => this._logger.info('Control DataSink unregistered'))\r\n                    .catch(error => this._logger.warn(`unregisterDataSink threw exception: ${error}`));\r\n\r\n                this._controlDataSink = null;\r\n                this._logger.info('deleted Control data sink');\r\n            }\r\n        } else {\r\n            this._logger.warn('_detachAndDeleteControlDevices() null dataChannel');\r\n        }\r\n\r\n    }\r\n\r\n    public onDataChannelStatusChanged(dataChannelStatus: number): Promise<void> {\r\n        return async.asap(() => this._onDataChannelStatusChanged(dataChannelStatus));\r\n    }\r\n\r\n    private _onDataChannelStatusChanged(dataChannelStatus: number): void {\r\n        this._logger.info(`Data channel status = ${dataChannelStatus}`);\r\n        this.controlDataChannelStatus.readyForControl = this.controlDataChannelStatus.readyForControl && dataChannelStatus === SlimCore.Enums.DataChannelStatus.Active;\r\n        this.controlDataChannelStatus.state = SlimCoreElectronDataChannel._mapDataChannelStatus(dataChannelStatus);\r\n        this.event('controlDataChannelStateChanged').raise(this.controlDataChannelStatus);\r\n\r\n        // 1. When call is established, sharer/viewer will get DataChannelStatus.Available status change\r\n        // 2. When sharer calls Start(), sharer gets status change to 'Starting', then 'Active',\r\n        // while viewer gets status change to 'Active'\r\n        // 3. When sharer calls Stop(), sharer gets status change to 'Stopping', then 'Available',\r\n        // while viewer gets status change to 'Available'\r\n        // So, this handler effectively only handles 'Active' and 'Available' status changes since both\r\n        // will get raised on sharer & viewer:\r\n\r\n        if (dataChannelStatus === SlimCore.Enums.DataChannelStatus.Active) {\r\n\r\n            if (this._enabled) {\r\n                if (this._dataChannel && !this._dataChannelActive) {\r\n                    this._dataChannelActive = true;\r\n                    this._recordViewerSessionTelemetry(e => e.recordEvent(VIEWER_CONTROL_SESSION_OPERATIONS.DATA_CHANNEL_AVAILABLE), false);\r\n                    this._recordSharerSessionTelemetry(e => e.recordEvent(SHARER_CONTROL_SESSION_OPERATIONS.DATA_CHANNEL_AVAILABLE), false);\r\n                    // create and attach devices\r\n                    this._createAndAttachControlDevices();\r\n\r\n                    if (this._isViewing()) {\r\n                        if (!this._dataChannelAvailableSent) {\r\n                            if (this._sharerParticipant) {\r\n                                // Send an 'Available' message to sharer\r\n                                this._logger.info('_onDataChannelStatusChanged() sending Available message to sharer');\r\n                                this._startAvailableHandshake();\r\n                            } else {\r\n                                this._logger.error('Unexpected null _sharerParticipant trying to send Available to sharer');\r\n                            }\r\n                        }\r\n                    } else if (this._isSharing()) {\r\n                        // Notify app that local participant can use the control/pointer feature\r\n                        this._raiseScreenSharingControlCapableEvent(true, LOCAL_PARTICIPANT_MRI);\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (this._dataChannel && this._dataChannelActive) {\r\n                this._recordViewerSessionTelemetry(e => e.recordEvent(VIEWER_CONTROL_SESSION_OPERATIONS.DATA_CHANNEL_UNAVAILABLE), false);\r\n                this._recordSharerSessionTelemetry(e => e.recordEvent(SHARER_CONTROL_SESSION_OPERATIONS.DATA_CHANNEL_UNAVAILABLE), false);\r\n\r\n                // reset some state\r\n                this._dataChannelActive = false;\r\n                this._dataChannelAvailableSent = false;\r\n                if (this._terminateAvailableHandshake) {\r\n                    this._terminateAvailableHandshake(AvailableHandshakeTerminatedReason.DataChannel);\r\n                }\r\n\r\n                // detach any devices\r\n                this._detachAndDeleteControlDevices();\r\n\r\n                // Raise an event indicating that local user cannot do control/pointers\r\n                this._raiseScreenSharingControlCapableEvent(false, LOCAL_PARTICIPANT_MRI);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Rejecting Ack will have either SharerControlDisabled, SharerDenied, UnknownSender as ControlTerminatedReason\r\n    private _handleAvailableRequest(controlMessage: ControlMessage, sender: ICallParticipant, senderSourceId: number): void {\r\n        let rejectAck = false;  // if true, reject available request: AvailableNack\r\n        let controlTerminatedReason: ControlTerminatedReason = ControlTerminatedReason.None;\r\n\r\n        if (this._enabled === false) {\r\n            this._logger.info('feature flag is off. no need to answer the available ack');\r\n            rejectAck = true;\r\n            controlTerminatedReason = ControlTerminatedReason.SharerControlDisabled;\r\n        } else if (this._availableAckEnabled === false) {\r\n            this._logger.info('available ack is off. no need to answer the available ack');\r\n            rejectAck = true;\r\n            controlTerminatedReason = ControlTerminatedReason.SharerControlDisabled;\r\n        } else {\r\n            if (sender && sender.id) {\r\n                if (this._allowControlForUser && typeof (this._allowControlForUser) === typeof (Function)) {\r\n                    this._allowControlForUser(sender)\r\n                        .then((allowControl: boolean) => {\r\n                            if (!allowControl) {\r\n                                rejectAck = true;\r\n                                controlTerminatedReason = ControlTerminatedReason.SharerDenied;\r\n                            }\r\n\r\n                            this._sendResponseToAvailableRequest(controlMessage, sender, senderSourceId, rejectAck, controlTerminatedReason);\r\n                        });\r\n                    return;\r\n                }\r\n                // else if this._allowControlForUser is not valid we allow the ack\r\n            } else {\r\n                rejectAck = true;\r\n                controlTerminatedReason = ControlTerminatedReason.UnknownSender;\r\n            }\r\n        }\r\n        this._sendResponseToAvailableRequest(controlMessage, sender, senderSourceId, rejectAck, controlTerminatedReason);\r\n    }\r\n\r\n    private _sendResponseToAvailableRequest(\r\n        controlMessage: ControlMessage,\r\n        sender: ICallParticipant,\r\n        senderSourceId: number,\r\n        rejectAck: boolean,\r\n        controlTerminatedReason: ControlTerminatedReason): void {\r\n        if (rejectAck) {\r\n            this._logger.info(`Rejecting Available for handShake:${senderSourceId}:${controlMessage.handshakeId}`);\r\n            this.event('controlAvailableHandshake').raise(controlMessage.handshakeId, senderSourceId, AvailableHandshakeStatus.Rejecting, this._getAvailableHandshakeTerminatedFromControlTerminated(controlTerminatedReason));\r\n            this._sendRequest(\r\n                { action: ControlAction.AvailableNack, terminatedReason: controlTerminatedReason, handshakeId: controlMessage.handshakeId }, senderSourceId);\r\n        } else {\r\n            // A participant's data channel is ready to enable pointers/control\r\n            this._raiseScreenSharingControlCapableEvent(true, sender.id);\r\n            if (!this._participantSubscriptions[sender.id]) {\r\n                this._logger.info(`Tracking participant status for ${sender.id}`);\r\n                this._participantSubscriptions[sender.id] = sender.changed(() => {\r\n                    if (sender.state !== ParticipantState.Connected) {\r\n                        this._logger.info(`Participant ${sender.id} is not connected. removing`);\r\n                        this.handleParticipantRemoved(sender.id);\r\n                    }\r\n                });\r\n            }\r\n\r\n            this._logger.info(`Acking Available for handShake:${senderSourceId}:${controlMessage.handshakeId}`);\r\n            this.event('controlAvailableHandshake').raise(controlMessage.handshakeId, senderSourceId, AvailableHandshakeStatus.Acking);\r\n\r\n            // Send an ack\r\n            this._sendRequest(\r\n                { action: ControlAction.AvailableAck, terminatedReason: ControlTerminatedReason.None, handshakeId: controlMessage.handshakeId }, senderSourceId);\r\n        }\r\n    }\r\n\r\n    public processProtocolMessage(message: string, sender: ICallParticipant, senderParticipantId: string, senderSourceId: number): Promise<void> {\r\n        return async.asap(() => this._processProtocolMessage(message, sender, senderParticipantId, senderSourceId));\r\n    }\r\n\r\n    private _raiseControlRequestCanceled(controlRequest: ParticipantLeg): void {\r\n        this.event('sharingIncomingControlRequestCancelled').raise(controlRequest.participant.id);\r\n    }\r\n\r\n    public _processProtocolMessage(message: string, sender: ICallParticipant, senderParticipantId: string, senderSourceId: number): void {\r\n        // Parse the message:\r\n        let controlMessage: ControlMessage;\r\n\r\n        this._recordProtocolMessage(sender, senderSourceId);\r\n\r\n        try {\r\n            controlMessage = JSON.parse(message);\r\n        } catch (err) {\r\n            this._logger.error('Error parsing controlMessage');\r\n            return;\r\n        }\r\n\r\n        this._logger.info(`_processProtocolMessage action=${controlMessage.action} sender=${senderSourceId}`);\r\n        if (!sender) {\r\n            this._logger.warn(`protocol message from unknown sender with sourceId=${senderSourceId}`);\r\n        }\r\n\r\n        if (controlMessage.action === ControlAction.Available) {\r\n            this._handleAvailableRequest(controlMessage, sender, senderSourceId);\r\n        } else if (controlMessage.action === ControlAction.ControlRequest) {\r\n            if (this._enabled === false) {\r\n                this._logger.warn('Sharer control is disabled - rejecting request');\r\n                this._sendRequest(\r\n                    { action: ControlAction.RejectRequest, terminatedReason: ControlTerminatedReason.SharerControlDisabled }, senderSourceId);\r\n            } else if (this._controlRequest) {\r\n                this._logger.warn('Sharer is already processing a control request...rejecting new requests');\r\n                this._sendRequest(\r\n                    { action: ControlAction.RejectRequest, terminatedReason: ControlTerminatedReason.SharerBusy }, senderSourceId);\r\n            } else if (this._controllerParticipant && this._controllerParticipant.participant === sender) {\r\n                if (this._controllerParticipant.participantId && this._controllerParticipant.participantId !== senderParticipantId) {\r\n                    // TODO(robedum) allow controller to switch / use multiple endpoints?\r\n                    // for now we just reject the second endpoint. the user must stop control on the other endpoint first.\r\n                    this._logger.warn(`rejecting control request from second endpoint. participantId: ${senderParticipantId}`);\r\n                    this._sendRequest(\r\n                        { action: ControlAction.RejectRequest, terminatedReason: ControlTerminatedReason.SharerBusy }, senderSourceId);\r\n                } else {\r\n                    this._logger.warn('Got control request for someone already in control');\r\n                    this._sendRequest(\r\n                        { action: ControlAction.AcceptRequest, terminatedReason: ControlTerminatedReason.None }, senderSourceId);\r\n                }\r\n            } else {\r\n                if (sender) {\r\n                    this._resetControlRequest({ participant: sender, participantState: sender.state, participantId: senderParticipantId });\r\n                } else {\r\n                    this._logger.error('Got ControlRequest message but could not find a sender participant, ignoring');\r\n                }\r\n            }\r\n        } else if (controlMessage.action === ControlAction.AcceptRequest) {\r\n\r\n            if (this.controlState === ControlState.RequestSent) {\r\n\r\n                // Send ack\r\n                const sent: boolean = this._sendRequest(\r\n                    { action: ControlAction.Ack, terminatedReason: ControlTerminatedReason.None }, senderSourceId);\r\n\r\n                if (sent) {\r\n                    this._setupViewerRemoteControl();\r\n                    this.controlState = ControlState.LocalControlling;\r\n\r\n                    if (this._requestControlPromise) {\r\n                        this._requestControlPromise.resolve();\r\n                    } else {\r\n                        this._logger.error(`Unexpected, no promise could be resolved - state =ControlState.RequestSent action =${controlMessage.action}`);\r\n                    }\r\n                } else {\r\n                    if (this._requestControlPromise) {\r\n                        this._requestControlPromise.reject(new Error(JSON.stringify({ controlInfo: undefined, details: 'request control is accepted, but fail to send ack' })));\r\n                    } else {\r\n                        this._logger.error(`Unexpected, no promise could be resolved - state =${this.controlState} action =${controlMessage.action}`);\r\n                    }\r\n                }\r\n                this._cancelRequestControlTimer();\r\n\r\n            } else {\r\n                this._logger.warn(`AcceptRequest message received in controlState=${this.controlState}`);\r\n            }\r\n        } else if (controlMessage.action === ControlAction.RejectRequest) {\r\n\r\n            if (this.controlState === ControlState.RequestSent) {\r\n\r\n                this.controlState = ControlState.None;\r\n\r\n                const controlInfo: SharingControlInfo = {\r\n                    inControl: false,\r\n                    id: LOCAL_PARTICIPANT_MRI, // local participant\r\n                    terminatedReason: controlMessage.terminatedReason\r\n                };\r\n\r\n                if (this._requestControlPromise) {\r\n                    this._requestControlPromise.reject(new Error(JSON.stringify({ controlInfo, details: '' })));\r\n                } else {\r\n                    this._logger.error(`Unexpected, no promise could be resolved - state =ControlState.RequestSent action =${controlMessage.action}`);\r\n                }\r\n\r\n                this._cancelRequestControlTimer();\r\n            } else {\r\n                this._logger.warn(`RejectRequest message received in controlState=${this.controlState} reason=${controlMessage.terminatedReason}`);\r\n            }\r\n        } else if (controlMessage.action === ControlAction.CancelControlRequest) {\r\n            if (this._controlRequest) {\r\n                //TODO(robedum) we should check the sender here\r\n                //even without malicious activity another user might concurrently send a request (which is rejected because of the first user's request)\r\n                //and immediately cancel, which would instead cancel the first users request.\r\n                const canceledRequest = this._controlRequest;\r\n                this._clearControlRequest();\r\n                this._raiseControlRequestCanceled(canceledRequest);\r\n            }\r\n        } else if (controlMessage.action === ControlAction.GiveControl) {\r\n\r\n            // Send ack\r\n            const sent: boolean = this._sendRequest(\r\n                { action: ControlAction.Ack, terminatedReason: ControlTerminatedReason.None }, senderSourceId);\r\n\r\n            if (sent) {\r\n                this._setupViewerRemoteControl();\r\n                this.controlState = ControlState.LocalControlling;\r\n\r\n                const controlInfo: SharingControlInfo = {\r\n                    inControl: true,\r\n                    id: LOCAL_PARTICIPANT_MRI, // local participant\r\n                    terminatedReason: controlMessage.terminatedReason\r\n                };\r\n                this.event('sharingControlChanged').raise(controlInfo);\r\n            }\r\n\r\n        } else if (controlMessage.action === ControlAction.Ack) {\r\n\r\n            if (this.controlState === ControlState.WaitingForControlAck) {\r\n\r\n                if (this._controllerParticipant && this._controllerParticipant.participant === sender) {\r\n\r\n                    const controllerSourceId: number = this._getDataSourceIdForParticipantLeg(this._controllerParticipant);\r\n\r\n                    if (senderSourceId !== controllerSourceId) {\r\n                        // note: even if the ack comes from the same participant, source ids could change during retargets.\r\n                        // TODO(robedum) ensure control uses correct source id\r\n                        this._logger.warn(`acknowledging source id: ${senderSourceId} does not match requesting source id: ${controllerSourceId}`);\r\n                    }\r\n\r\n                    this._logger.info(`Setting up remote control for controller source id=${controllerSourceId}`);\r\n\r\n                    this._setupSharerRemoteControl(controllerSourceId);\r\n                    this.controlState = ControlState.RemoteControlling;\r\n\r\n                    const controlInfo: SharingControlInfo = {\r\n                        inControl: true,\r\n                        id: this._controllerParticipant.participant.id,\r\n                        terminatedReason: controlMessage.terminatedReason\r\n                    };\r\n                    this.event('sharingControlChanged').raise(controlInfo);\r\n                    if (this._grantControlPromise) {\r\n                        this._grantControlPromise.resolve();\r\n                        this._cancelGrantControlTimer();\r\n                    } else if (this._acceptControlPromise) {\r\n                        this._acceptControlPromise.resolve();\r\n                        this._cancelAcceptControlTimer();\r\n                    } else {\r\n                        this._logger.error(`Unexpected, no promise could be resolved - state =ControlState.WaitingForControlAck action =${controlMessage.action}`);\r\n                    }\r\n                } else if (sender) {\r\n                    this._logger.warn(`Ignoring ack from participant that does not match controller id = ${piiUtils.scrubMriOrOmit(sender.id)}`);\r\n                } else {\r\n                    this._logger.warn(`Ignoring ack from null participant source id = ${senderSourceId}`);\r\n                }\r\n            } else if (this.controlState === ControlState.WaitingForTerminateAck) {\r\n                this.controlState = ControlState.None;\r\n                this._resetControllerParticipant();\r\n\r\n                if (this._terminateControlPromise) {\r\n                    this._terminateControlPromise.resolve();\r\n                    this._cancelTerminateControlTimer();\r\n                } else {\r\n                    this._logger.error(`Unexpected, no promise could be resolved - state =ControlState.WaitingForTerminateAck action =${controlMessage.action}`);\r\n                }\r\n            } else {\r\n                this._logger.warn(`Unexpected ack in control state = ${this.controlState}`);\r\n            }\r\n        } else if (controlMessage.action === ControlAction.TerminateNoAck ||\r\n            controlMessage.action === ControlAction.Terminate) {\r\n\r\n            let controllerId: string;\r\n            if (this._isViewing()) {\r\n                this._teardownViewerRemoteControl();\r\n                controllerId = LOCAL_PARTICIPANT_MRI; // local participant\r\n            } else {\r\n                this._teardownSharerRemoteControl();\r\n                if (sender) {\r\n                    controllerId = sender.id;\r\n                } else {\r\n                    this._logger.error('Got terminate message but could not find a sender participant!');\r\n                }\r\n            }\r\n\r\n            this.controlState = ControlState.None;\r\n            this._resetControllerParticipant();\r\n\r\n            const controlInfo: SharingControlInfo = {\r\n                inControl: false,\r\n                id: controllerId,\r\n                terminatedReason: controlMessage.terminatedReason\r\n            };\r\n            this.event('sharingControlChanged').raise(controlInfo);\r\n\r\n            if (controlMessage.action === ControlAction.Terminate) {\r\n                // Send ack\r\n                this._sendRequest(\r\n                    { action: ControlAction.Ack, terminatedReason: ControlTerminatedReason.None }, senderSourceId);\r\n            }\r\n        } else if (controlMessage.action === ControlAction.AvailableAck) {\r\n            if (this._terminateAvailableHandshake) {\r\n                this._terminateAvailableHandshake(AvailableHandshakeTerminatedReason.Succeeded, controlMessage.handshakeId);\r\n            }\r\n\r\n            // Notify app that local participant can use the control/pointer feature\r\n            this._raiseScreenSharingControlCapableEvent(true, LOCAL_PARTICIPANT_MRI);\r\n        } else if (controlMessage.action === ControlAction.AvailableNack) {\r\n            this._recordViewerSessionTelemetry(e => e.updateOperationData(VIEWER_CONTROL_SESSION_OPERATIONS.AVAILABLE_HANDSHAKE, { nackReason: controlMessage.terminatedReason }, controlMessage.handshakeId));\r\n            if (controlMessage.terminatedReason === ControlTerminatedReason.UnknownSender) {\r\n                return;\r\n            }\r\n            if (this._terminateAvailableHandshake) {\r\n                this._terminateAvailableHandshake(this._getAvailableHandshakeTerminatedFromControlTerminated(controlMessage.terminatedReason), controlMessage.handshakeId);\r\n            }\r\n            if (controlMessage.terminatedReason === ControlTerminatedReason.SharerDenied) {\r\n                this._raiseScreenSharingControlCapableEvent(true, LOCAL_PARTICIPANT_MRI, true);\r\n            } else {\r\n                this._raiseScreenSharingControlCapableEvent(false, LOCAL_PARTICIPANT_MRI);\r\n            }\r\n        } else if (controlMessage.action === ControlAction.RenderedAtViewer) {\r\n            if (this._raiseRenderedAtViewer) {\r\n                if (sender) {\r\n                    this._raiseRenderedAtViewer(sender.id);\r\n                } else {\r\n                    this._logger.error('Got RenderedAtViewer message but could not find a sender participant!');\r\n                }\r\n            }\r\n        } else {\r\n            this._logger.error(`Unknown request action received on control protocol data sink, action=${controlMessage.action}`);\r\n        }\r\n    }\r\n\r\n    private _getAvailableHandshakeTerminatedFromControlTerminated(reason: ControlTerminatedReason): AvailableHandshakeTerminatedReason {\r\n        switch (reason) {\r\n            case ControlTerminatedReason.UnknownSender:\r\n                return AvailableHandshakeTerminatedReason.UnknownSender;\r\n\r\n            case ControlTerminatedReason.SharerDenied:\r\n                return AvailableHandshakeTerminatedReason.SharerDenied;\r\n\r\n            case ControlTerminatedReason.SharerControlDisabled:\r\n            default:\r\n                return AvailableHandshakeTerminatedReason.Unknown;\r\n        }\r\n    }\r\n\r\n    // Returns true if sent\r\n    private _sendRequest(data: ControlMessage, sourceID: number): boolean {\r\n\r\n        let returnVal: boolean = false;\r\n        const dataSource = this._protocolDataSource;\r\n\r\n        if (sourceID < 0) {\r\n            this._logger.error(`Unexpected: invalid sourceID=${sourceID}`);\r\n            return returnVal;\r\n        }\r\n\r\n        if (dataSource) {\r\n            this._logger.info(`sending control message action=${data.action} to sourceID=${sourceID}`);\r\n\r\n            const protocolMessage: DataChannelProtocolMessage = {\r\n                type: DataChannelProtocolType.ScreenSharingControl,\r\n                message: JSON.stringify(data)\r\n            };\r\n\r\n            try {\r\n                const recipients: number[] = [sourceID];\r\n                dataSource.sendData(SlimCoreCommon.stringToBuffer(JSON.stringify(protocolMessage)), recipients);\r\n                returnVal = true;\r\n            } catch (error) {\r\n                this._logger.error(`Unexpected: failure in call to sendData. Error=${error}`);\r\n\r\n                const controlError: SharingControlError = {\r\n                    reason: SharingControlErrorReason.SendDataError,\r\n                    detail: JSON.stringify({ sourceId: sourceID, errorMsg: error })\r\n                };\r\n                this.event('sharingControlError').raise(controlError);\r\n            }\r\n        } else {\r\n            this._logger.error('Unexpected: null dataSource in _sendRequest');\r\n        }\r\n        return returnVal;\r\n    }\r\n\r\n    private _resetControlState() {\r\n        this._logger.info('_resetControlState()');\r\n        this.controlState = ControlState.None;\r\n        this._resetControllerParticipant();\r\n        this._sharerParticipant = null;\r\n        this._clearControlRequest();\r\n        this._cancelRequestControlTimer();\r\n        this._cancelAcceptControlTimer();\r\n        this._cancelGrantControlTimer();\r\n        this._cancelTerminateControlTimer();\r\n    }\r\n\r\n    private _setupSharerRemoteControl(sourceId: number) {\r\n\r\n        this._logger.info(`_setupSharerRemoteControl() sourceId=${sourceId}`);\r\n\r\n        // @TODO: temp code to enter seamless mode\r\n        this._setInjectorMode(InjectorMode.Seamless);\r\n\r\n        this._controlInjector.allowSingleController(sourceId).catch(error => {\r\n            const controlError: SharingControlError = {\r\n                reason: SharingControlErrorReason.AllowSingleControllerError,\r\n                detail: JSON.stringify({ sourceId, errorMsg: error })\r\n            };\r\n            this.event('sharingControlError').raise(controlError);\r\n        });\r\n    }\r\n\r\n    private _teardownSharerRemoteControl() {\r\n\r\n        this._logger.info('_teardownSharerRemoteControl()');\r\n\r\n        // Remove the controller from injector\r\n        this._controlInjector.allowSingleController(0).catch(error => {\r\n            const controlError: SharingControlError = {\r\n                reason: SharingControlErrorReason.AllowSingleControllerError,\r\n                detail: JSON.stringify({ sourceId: 0, errorMsg: error })\r\n            };\r\n            this.event('sharingControlError').raise(controlError);\r\n        });\r\n\r\n        // @TODO: temporary workaround to remove the avatars\r\n        // once control ends:\r\n        this._setInjectorMode(InjectorMode.Disabled);\r\n    }\r\n\r\n    private _setupViewerRemoteControl() {\r\n\r\n        this._logger.info('_setupViewerRemoteControl()');\r\n\r\n        this._setCapturerMode(CtrlCaptureMode.Control);\r\n    }\r\n\r\n    private _teardownViewerRemoteControl() {\r\n\r\n        this._logger.info('_teardownViewerRemoteControl()');\r\n\r\n        // When viewer stops controlling, we go to detection mode\r\n        // @TODO: For now, go to disabled\r\n        this._setCapturerMode(CtrlCaptureMode.Disabled);\r\n    }\r\n\r\n    private _setInjectorMode(injectorMode: InjectorMode) {\r\n\r\n        this._logger.info(`_setInjectorMode() mode=${injectorMode}`);\r\n\r\n        const injectorConfig: InjectorConfig = {\r\n            mode: injectorMode,\r\n            noMotionTimeoutMs: 0, // don't timeout - always show\r\n            noMotionSharerTimeoutMs: 0 // don't timout - always show\r\n        };\r\n        this._controlInjector.setInjectorConfig(injectorConfig).catch(error => {\r\n            const controlError: SharingControlError = {\r\n                reason: SharingControlErrorReason.SetInjectorConfigError,\r\n                detail: JSON.stringify({ mode: injectorMode, errorMsg: error })\r\n            };\r\n            this.event('sharingControlError').raise(controlError);\r\n        });\r\n    }\r\n\r\n    private _clearCapturerEventSubscriptions() {\r\n        this._logger.info('_clearCapturerEventSubscriptions()');\r\n\r\n        if (this._captureEventSubscription) {\r\n            this._captureEventSubscription.dispose();\r\n            this._captureEventSubscription = null;\r\n        }\r\n        if (this._mouseControlEventSubscription) {\r\n            this._mouseControlEventSubscription.dispose();\r\n            this._mouseControlEventSubscription = null;\r\n        }\r\n        if (this._keyboardControlEventSubscription) {\r\n            this._keyboardControlEventSubscription.dispose();\r\n            this._keyboardControlEventSubscription = null;\r\n        }\r\n    }\r\n\r\n    // Tighten the typing when Teams upgrades to tsc 3.1.6 or above\r\n    // public sendRemoteControlEvent<K extends keyof ISlimCoreElectronControlCapturerEvents>\r\n    //     (type: K, ...data: Parameters<ISlimCoreElectronControlCapturerEvents[K]>) {\r\n    public sendRemoteControlEvent(type: keyof ISlimCoreElectronControlCapturerEvents,\r\n        data: CtrlMouseData | CtrlKbdData) {\r\n        if (!data) {\r\n            this._logger.error('sendRemoteControlEvent: Invalid argument.');\r\n            return;\r\n        }\r\n        switch (type) {\r\n            case 'mouseControlEvent':\r\n                this._sendControlEvent(SlimCoreElectronControlCapturer.formatMouseEvent(data as CtrlMouseData));\r\n                break;\r\n            case 'keyboardControlEvent':\r\n                this._sendControlEvent(SlimCoreElectronControlCapturer.formatKeyboardEvent(data as CtrlKbdData));\r\n                break;\r\n            default:\r\n                this._logger.error('sendRemoteControlEvent: Invalid type = ', type);\r\n                return;\r\n        }\r\n    }\r\n\r\n    private _sendControlEvent(data: Uint8Array) {\r\n        if (!this._controlDataSource || !this._sharerParticipant || this.controlState !== ControlState.LocalControlling) {\r\n            this._logger.error('_sendControlEvent: Data channel not set up / Not in control');\r\n            return;\r\n        }\r\n\r\n        const sharerSourceId = this._getSharerDataSourceId();\r\n        const recipients: number[] = [sharerSourceId];\r\n        this._controlDataSource.sendData(data, recipients);\r\n    }\r\n\r\n    private _setCapturerMode(capturerMode: CtrlCaptureMode) {\r\n        this._logger.info(`_setCapturerMode() capturerMode=${capturerMode}`);\r\n\r\n        if (this._controlCapturer) {\r\n            this._controlCapturer.setCaptureMode(capturerMode);\r\n\r\n            // Remove existing callbacks\r\n            this._clearCapturerEventSubscriptions();\r\n\r\n            if (capturerMode === CtrlCaptureMode.Detection) {\r\n                this._captureEventSubscription = this._controlCapturer.on('ctrlCaptureEvent', ((event: CtrlCaptureEvent) => {\r\n                    if (event === CtrlCaptureEvent.MouseClick) {\r\n                        this.event('sharingRendererClicked').raise();\r\n                    }\r\n                }));\r\n            } else if (capturerMode === CtrlCaptureMode.Pointer) {\r\n                this._captureEventSubscription = this._controlCapturer.on('ctrlCaptureEvent', ((event: CtrlCaptureEvent) => {\r\n                    if (event === CtrlCaptureEvent.MouseEntering) {\r\n                        this.event('sharingRendererMouseEntering').raise();\r\n                    } else if (event === CtrlCaptureEvent.MouseLeaving) {\r\n                        this.event('sharingRendererMouseLeaving').raise();\r\n                    }\r\n                }));\r\n            } else if (capturerMode === CtrlCaptureMode.Control) {\r\n                this._mouseControlEventSubscription = this._controlCapturer.on('mouseControlEvent', ((event: CtrlMouseData) => this._sendControlEvent(SlimCoreElectronControlCapturer.formatMouseEvent(event))));\r\n                this._keyboardControlEventSubscription = this._controlCapturer.on('keyboardControlEvent', ((event: CtrlKbdData) => this._sendControlEvent(SlimCoreElectronControlCapturer.formatKeyboardEvent(event))));\r\n                this._captureEventSubscription = this._controlCapturer.on('ctrlCaptureEvent', ((event: CtrlCaptureEvent) => {\r\n                    if (event === CtrlCaptureEvent.MouseEntering) {\r\n                        this.event('sharingRendererMouseEntering').raise();\r\n                    } else if (event === CtrlCaptureEvent.MouseLeaving) {\r\n                        this.event('sharingRendererMouseLeaving').raise();\r\n                    }\r\n                }));\r\n            }\r\n        } else {\r\n            this._logger.warn('_controlCapturer not found when trying to setup viewer capture mode');\r\n        }\r\n    }\r\n\r\n    public setPointerImage(participant: ICallParticipant, base64str: string): Promise<void> {\r\n        this._logger.warn('setPointerImage is deprecated. Use setLocalPointerImage or setRemotePointerImage');\r\n\r\n        if (!participant) {\r\n            return this.setLocalPointerImage(base64str);\r\n        } else {\r\n            return this.setRemotePointerImage(participant, base64str);\r\n        }\r\n    }\r\n\r\n    public setLocalPointerImage(base64str: string): Promise<void> {\r\n        if (base64str.length === 0) {\r\n            return Promise.reject(new Error('setLocalPointerImage invalid image length'));\r\n        }\r\n\r\n        return this._setPointerImage(0, base64str);\r\n    }\r\n\r\n    public async setRemotePointerImage(participant: ICallParticipant, base64str: string): Promise<void> {\r\n        if (!participant) {\r\n            throw new Error('setRemotePointerImage participant is null');\r\n        }\r\n\r\n        if (base64str.length === 0) {\r\n            throw new Error('setRemotePointerImage invalid image length');\r\n        }\r\n\r\n        if (!(participant as SlimCoreElectronCallParticipant).enableParticipantLegToSourceIdMapping) {\r\n            // fallback to old logic: we will only support one endpoint\r\n            const sourceId = this._mapParticipantToSourceId(participant);\r\n            if (sourceId < 0) {\r\n                throw new Error('setRemotePointerImage unable to map participant to sourceId');\r\n            }\r\n\r\n            await this._setPointerImage(sourceId, base64str);\r\n            return;\r\n        }\r\n\r\n        const sourceIds = this._getParticipantsDataSourceIds(participant);\r\n\r\n        if (sourceIds.length === 0) {\r\n            throw new Error('setRemotePointerImage unable to map participant to sourceIds');\r\n        }\r\n\r\n        this._logger.info(`set pointer image for ${sourceIds.length} sources`);\r\n\r\n        // TODO(robedum) update when necessary\r\n        //\r\n        // this is called when an available handshake is acked and we raise SharingControlCapability.\r\n        // currently we just set the image for all endpoints of the user since we don't know the sourceId.\r\n        //\r\n        // we could add the sourceId to the SharingControlCapability event to allow it to be passed back to us\r\n        // or we could store the sourceId list to take a diff between the current and the last time and update accordingly.\r\n        // we might also want to update the sourceIds if they change during a retarget (diff when we do a roster update).\r\n        //\r\n        // alternatively we could set the pointer image only once an endpoint takes control.\r\n        // we'd save resources and it we'd obviously know which sourceId to use.\r\n        for (const sourceId of sourceIds) {\r\n            await this._setPointerImage(sourceId, base64str);\r\n        }\r\n\r\n        // we might want to use Promise.all instead if setAvatar is reentrant\r\n        // or another setRemotePointerImage might sneak in while above loop yields.\r\n        //await Promise.all(sourceIds.map(sourceId => this._setPointerImage(sourceId, base64str)));\r\n    }\r\n\r\n    private _setPointerImage(sourceId: number, base64str: string): Promise<void> {\r\n\r\n        if (!this._isSharing()) {\r\n            this._logger.warn('_setPointerImage called when not sharing');\r\n        }\r\n        return this._controlInjector.setAvatar(SlimCoreCommon.stringToBuffer(base64str), sourceId);\r\n    }\r\n\r\n    public startPointerMode(): Promise<void> {\r\n\r\n        if (!this._dataChannelActive) {\r\n            return Promise.reject(new Error('startPointerMode when data channel not active'));\r\n        } else if (this.controlState !== ControlState.None) {\r\n            return Promise.reject(new Error(`startPointerMode called in bad control state=${this.controlState}`));\r\n        } else if (!this._isViewing()) {\r\n            return Promise.reject(new Error('startPointerMode when not viewing'));\r\n        }\r\n        return async.asap(() => this._setCapturerMode(CtrlCaptureMode.Pointer));\r\n    }\r\n\r\n    public stopPointerMode(): Promise<void> {\r\n\r\n        if (this.controlState !== ControlState.None) {\r\n            return Promise.reject(new Error(`stopPointerMode called in bad control state=${this.controlState}`));\r\n        } else if (!this._isViewing()) {\r\n            return Promise.reject(new Error('stopPointerMode when not viewing'));\r\n        }\r\n\r\n        return async.asap(() => this._setCapturerMode(CtrlCaptureMode.Detection));\r\n    }\r\n\r\n    private _startAvailableHandshake(): void {\r\n        // Caller makes sure we are in an acceptable state to send\r\n        const sharerSourceId: number = this._getSharerDataSourceId();\r\n\r\n        if (sharerSourceId < 0) {\r\n            this._logger.warn(`sharer: ${this._sharerParticipant} has no data channel`);\r\n            // return; TODO(robedum) we should retry only once the sharer has a data channel.\r\n            // For now we just ignore this to let the retry logic fix this.\r\n            // Simply bailing here might break the case in which the sharer adds the data channel later.\r\n        }\r\n\r\n        const handshakeId: string = generateGuid();\r\n        this._logger.info(`_startAvailableHandshake() - handshakeId: ${sharerSourceId}:${handshakeId}`);\r\n        this.event('controlAvailableHandshake').raise(handshakeId, sharerSourceId, AvailableHandshakeStatus.Sending);\r\n\r\n        if (this._terminateAvailableHandshake) {\r\n            this._logger.warn('Replacing existing availble handshake');\r\n            this._terminateAvailableHandshake(AvailableHandshakeTerminatedReason.Replaced);\r\n        }\r\n\r\n        this._recordViewerSessionTelemetry(e => e.recordOperation(VIEWER_CONTROL_SESSION_OPERATIONS.AVAILABLE_HANDSHAKE, handshakeId));\r\n\r\n        const sent: boolean = this._sendRequest(\r\n            { action: ControlAction.Available, terminatedReason: ControlTerminatedReason.None, handshakeId }, sharerSourceId);\r\n        if (!sent) {\r\n            this._logger.error('Failed to send Available message to sharer, will retry after backoff');\r\n        }\r\n        this._dataChannelAvailableSent = true; // set to true even if send failed so we know we are trying to send\r\n\r\n        // Start a timer in case we never get a response - so we know to retry\r\n        this._waitForAvailableAck(handshakeId);\r\n\r\n        this._terminateAvailableHandshake = (reason = AvailableHandshakeTerminatedReason.Unknown, ackHandshakeId?: string) => {\r\n            this._logger.info(`_terminateAvailableHandshake() - handshakeId: ${sharerSourceId}:${handshakeId}, status: ${reason}`);\r\n\r\n            this._recordViewerSessionTelemetry(e => e.updateOperationData(VIEWER_CONTROL_SESSION_OPERATIONS.AVAILABLE_HANDSHAKE, { tries: this._retryAttempt }, ackHandshakeId));\r\n            if (reason === AvailableHandshakeTerminatedReason.Succeeded) {\r\n                this._recordViewerSessionTelemetry(e => e.recordOperationSuccess(VIEWER_CONTROL_SESSION_OPERATIONS.AVAILABLE_HANDSHAKE, null, '', ackHandshakeId));\r\n            } else {\r\n                this._recordViewerSessionTelemetry(e => e.recordOperationFailure(VIEWER_CONTROL_SESSION_OPERATIONS.AVAILABLE_HANDSHAKE, {  reason }, '', ackHandshakeId));\r\n            }\r\n\r\n            this._terminateAvailableHandshake = null;\r\n\r\n            this.event('controlAvailableHandshake').raise(\r\n                handshakeId,\r\n                sharerSourceId,\r\n                reason === AvailableHandshakeTerminatedReason.Succeeded ? AvailableHandshakeStatus.Succeeded : AvailableHandshakeStatus.Terminated,\r\n                reason\r\n            );\r\n\r\n            if (ackHandshakeId && ackHandshakeId !== handshakeId) {\r\n                this._logger.warn(`AvailableSeries: Got handshake from another series - expected: ${handshakeId}, received: ${ackHandshakeId}`);\r\n            }\r\n\r\n            if (this._availableAckTimer) {\r\n                clearTimeout(this._availableAckTimer);\r\n                this._availableAckTimer = null;\r\n            }\r\n            this._retryAttempt = 0;\r\n        };\r\n    }\r\n\r\n    private _waitForAvailableAck(handshakeId: string): void {\r\n        this._logger.info('_waitForAvailableAck()');\r\n\r\n        this._availableAckTimer = setTimeout(() => {\r\n            this._logger.warn(`No Ack received for Available message from attempt=${this._retryAttempt}`);\r\n            this._availableAckTimer = null;\r\n\r\n            const sharerSourceId: number = this._getSharerDataSourceId();\r\n            if (this._retryAttempt <= AVAILABLE_RETRY_LIMIT) {\r\n                // Let's continue retrying until we reach the retry limit\r\n                this._logger.info(`Re-sending Available message handshakeId: ${sharerSourceId}:${handshakeId}`);\r\n                this.event('controlAvailableHandshake').raise(handshakeId, sharerSourceId, AvailableHandshakeStatus.Resending);\r\n\r\n                this._sendRequest(\r\n                    { action: ControlAction.Available, terminatedReason: ControlTerminatedReason.None, handshakeId }, sharerSourceId);\r\n                this._waitForAvailableAck(handshakeId);\r\n            } else {\r\n                this._logger.error('Reached Available retry limit! Control capability will be false');\r\n                if (this._terminateAvailableHandshake) {\r\n                    this._terminateAvailableHandshake(AvailableHandshakeTerminatedReason.TimedOut);\r\n                } else {\r\n                    // Raise generic error when handshake already terminated\r\n                    const controlError: SharingControlError = {\r\n                        reason: SharingControlErrorReason.AvailableAckTimeout,\r\n                        detail: JSON.stringify({ sourceId: sharerSourceId, errorMsg: `Timed out after ${this._retryAttempt} tries` })\r\n                    };\r\n                    this.event('sharingControlError').raise(controlError);\r\n                }\r\n            }\r\n        }, (AVAILABLE_ACK_WAIT_TIMEOUT * ++this._retryAttempt));\r\n    }\r\n\r\n    public requestControl(): Promise<void> {\r\n\r\n        if (!this._dataChannelActive) {\r\n            return Promise.reject(new Error('requestControl when data channel not active'));\r\n        } else if (this.controlState !== ControlState.None) {\r\n            return Promise.reject(new Error(`requestControl called in bad state=${this.controlState}`));\r\n        } else if (!this._isViewing()) {\r\n            return Promise.reject(new Error('requestControl when not viewing'));\r\n        } else if (!this._sharerParticipant) {\r\n            return Promise.reject(new Error('requestControl unexpected null sharer'));\r\n        }\r\n\r\n        if (this._requestControlPromise) {\r\n            return Promise.reject(new Error('request control promise has not been resolved yet while requesting control'));\r\n        }\r\n        if (this._terminateControlPromise) {\r\n            return Promise.reject(new Error('terminate control promise has not been resolved yet while requesting control'));\r\n        }\r\n\r\n        return this._requestControl();\r\n    }\r\n\r\n    private _requestControl(): Promise<void> {\r\n\r\n        this._logger.info('_requestControl()');\r\n\r\n        this._requestControlPromise = async.defer<void>();\r\n        const always = () => {\r\n            this._requestControlPromise = null;\r\n        };\r\n        this._requestControlPromise.promise.then(always, always);\r\n\r\n        // find the sharer's source id:\r\n        const sharerSourceId: number = this._getSharerDataSourceId();\r\n\r\n        const sent: boolean = this._sendRequest(\r\n            { action: ControlAction.ControlRequest, terminatedReason: ControlTerminatedReason.None }, sharerSourceId);\r\n        if (!sent) {\r\n            // Failed to send the request\r\n            const controlInfo: SharingControlInfo = {\r\n                inControl: false,\r\n                id: LOCAL_PARTICIPANT_MRI, // local participant\r\n                terminatedReason: ControlTerminatedReason.DataChannelError\r\n            };\r\n\r\n            this._requestControlPromise.reject(new Error());\r\n            return Promise.reject(new Error(JSON.stringify({ controlInfo, details: '' })));\r\n        }\r\n\r\n        this.controlState = ControlState.RequestSent;\r\n\r\n        // Start a timer in case we never get a response\r\n        this._requestControlTimer = setTimeout(() => {\r\n            if (this.controlState === ControlState.RequestSent) {\r\n\r\n                this.controlState = ControlState.None;\r\n\r\n                // Didn't get any response, let's cancel the request\r\n                this._logger.warn('No response to control request - canceling');\r\n                const sent: boolean = this._sendRequest(\r\n                    { action: ControlAction.CancelControlRequest, terminatedReason: ControlTerminatedReason.SharerNoResponse }, sharerSourceId);\r\n                if (!sent) {\r\n                    this._logger.error('fail to send the cancel control request');\r\n                }\r\n\r\n                // Raise an event notifying that the request was 'rejected'\r\n                const controlInfo: SharingControlInfo = {\r\n                    inControl: false,\r\n                    id: LOCAL_PARTICIPANT_MRI, // local participant\r\n                    terminatedReason: ControlTerminatedReason.SharerNoResponse\r\n                };\r\n\r\n                if (this._requestControlPromise) {\r\n                    this._requestControlPromise.reject(new Error(JSON.stringify({ controlInfo, details: 'we did not get any response to the control - terminating control' })));\r\n                } else {\r\n                    this._logger.error('Unexpected, no promise could be resolved - controlState = ControlState.RequestSent');\r\n                }\r\n            } else {\r\n                if (this._requestControlPromise) {\r\n                    this._requestControlPromise.reject(new Error(JSON.stringify({ controlInfo: undefined, details: 'request control - times out in bad state - do nothing' })));\r\n                } else {\r\n                    this._logger.error(`Unexpected, no promise could be resolved - controlState = ${this.controlState}`);\r\n                }\r\n            }\r\n            this._requestControlTimer = null;\r\n        }, CONTROL_REQUEST_WAIT_TIMEOUT);\r\n\r\n        return this._requestControlPromise.promise;\r\n    }\r\n\r\n    private _cancelRequestControlTimer(): void {\r\n        if (this._requestControlTimer) {\r\n            if (this._requestControlPromise) {\r\n                this._requestControlPromise.reject(new Error('cancelled by _cancelRequestControlTimer'));\r\n            }\r\n            clearTimeout(this._requestControlTimer);\r\n            this._requestControlTimer = null;\r\n        }\r\n    }\r\n\r\n    public cancelControl(): Promise<void> {\r\n\r\n        if (!this._dataChannelActive) {\r\n            return Promise.reject(new Error('cancelControl when data channel not active'));\r\n        } else if (this.controlState !== ControlState.RequestSent) {\r\n            return Promise.reject(new Error(`cancelControl called in bad state=${this.controlState}`));\r\n        } else if (!this._isViewing()) {\r\n            return Promise.reject(new Error('cancelControl when not viewing'));\r\n        } else if (!this._sharerParticipant) {\r\n            return Promise.reject(new Error('cancelControl unexpected null sharer'));\r\n        }\r\n\r\n        // cancel only could happen if request control promise is not resolved yet.\r\n        if (!this._requestControlPromise) {\r\n            return Promise.reject(new Error('request control promise has been resolved while cancelling control'));\r\n        }\r\n        if (this._terminateControlPromise) {\r\n            return Promise.reject(new Error('terminate control promise has not been resolved yet while cancelling control'));\r\n        }\r\n\r\n        return this._cancelControl();\r\n    }\r\n\r\n    private _cancelControl(): Promise<void> {\r\n\r\n        this._logger.info('_cancelControl()');\r\n\r\n        // find the sharer's source id:\r\n        const sharerSourceId: number = this._getSharerDataSourceId();\r\n\r\n        if (this.controlState === ControlState.RequestSent) {\r\n\r\n            this._cancelRequestControlTimer();\r\n\r\n            this.controlState = ControlState.None;\r\n\r\n            // Viewer cancel the control\r\n            this._logger.info('Viewer cancel the control');\r\n            const sent: boolean = this._sendRequest(\r\n                { action: ControlAction.CancelControlRequest, terminatedReason: ControlTerminatedReason.ViewerCancelled }, sharerSourceId);\r\n\r\n            // Raise an event notifying that the request was 'cancelled'\r\n            if (sent) {\r\n                const controlInfo: SharingControlInfo = {\r\n                    inControl: false,\r\n                    id: LOCAL_PARTICIPANT_MRI, // local participant\r\n                    terminatedReason: ControlTerminatedReason.ViewerCancelled\r\n                };\r\n\r\n                this._requestControlPromise.reject(new Error(JSON.stringify({ controlInfo, details: '' })));\r\n            } else {\r\n                return Promise.reject(new Error('fail to send cancel control request'));\r\n            }\r\n        } else {\r\n            return Promise.reject(new Error('cancel control - in bad state - do nothing'));\r\n        }\r\n\r\n        return new Promise<void>((resolve, reject) => { resolve(); });\r\n    }\r\n\r\n    public acceptControlRequest(): Promise<void> {\r\n\r\n        if (!this._dataChannelActive) {\r\n            return Promise.reject(new Error('acceptControlRequest when data channel not active'));\r\n        } else if (!this._controlRequest) {\r\n            return Promise.reject(new Error('acceptControlRequest while no control request pending'));\r\n        } else if (!this._isSharing()) {\r\n            return Promise.reject(new Error('acceptControlRequest when not sharing'));\r\n        }\r\n\r\n        if (this._acceptControlPromise) {\r\n            return Promise.reject(new Error('accept control promise has not been resolved yet while accepting control'));\r\n        }\r\n        if (this._grantControlPromise) {\r\n            return Promise.reject(new Error('grant control promise has not been resolved yet while accepting control'));\r\n        }\r\n        if (this._terminateControlPromise) {\r\n            return Promise.reject(new Error('terminate control promise has not been resolved yet while accepting control'));\r\n        }\r\n\r\n        return this._acceptControlRequest();\r\n    }\r\n\r\n    private _acceptControlRequest(): Promise<void> {\r\n\r\n        this._logger.info('_acceptControlRequest()');\r\n\r\n        this._acceptControlPromise = async.defer<void>();\r\n        const always = () => {\r\n            this._acceptControlPromise = null;\r\n        };\r\n        this._acceptControlPromise.promise.then(always, always);\r\n\r\n        if (this._controllerParticipant) {\r\n            // We are trying to accept someone's control request while someone already has control\r\n            this._logger.warn('_acceptControlRequest called while another participant already has control - terminating control');\r\n\r\n            // Stop control on sharer side\r\n            this._teardownSharerRemoteControl();\r\n\r\n            const controllerSourceId: number = this._getDataSourceIdForParticipantLeg(this._controllerParticipant);\r\n\r\n            const sent: boolean = this._sendRequest(\r\n                { action: ControlAction.TerminateNoAck, terminatedReason: ControlTerminatedReason.SharerTerminated }, controllerSourceId);\r\n            if (!sent) {\r\n                this._logger.error('fail to send the terminateNoAck request');\r\n            }\r\n            this._resetControllerParticipant();\r\n        }\r\n\r\n        const controlRequesterSourceId: number = this._getDataSourceIdForParticipantLeg(this._controlRequest);\r\n        const controlRequesterId: string = this._controlRequest.participant.id;\r\n\r\n        // Send the accept control message\r\n        const sent: boolean = this._sendRequest(\r\n            { action: ControlAction.AcceptRequest, terminatedReason: ControlTerminatedReason.None }, controlRequesterSourceId);\r\n\r\n        if (!sent) {\r\n            this._logger.error('fail to send the accept control request');\r\n            this._acceptControlPromise.reject(new Error());\r\n            return Promise.reject(new Error('fail to send the accept control request!'));\r\n        }\r\n\r\n        this._resetControllerParticipant(this._controlRequest);\r\n        this._clearControlRequest();\r\n        this.controlState = ControlState.WaitingForControlAck;\r\n\r\n        // Start ack timer before we setup the injector\r\n        this._acceptControlTimer = setTimeout(() => {\r\n            if (this.controlState === ControlState.WaitingForControlAck) {\r\n\r\n                this.controlState = ControlState.None;\r\n                this._resetControllerParticipant();\r\n\r\n                // Didn't get any ack, we shouldn't give the control\r\n                this._logger.error('No ack received when accepting control request - terminating control');\r\n                const sent: boolean = this._sendRequest(\r\n                    { action: ControlAction.TerminateNoAck, terminatedReason: ControlTerminatedReason.AckTimeout }, controlRequesterSourceId);\r\n                if (!sent) {\r\n                    this._logger.error('fail to send the TerminateNoAck request');\r\n                }\r\n\r\n                const controlInfo: SharingControlInfo = {\r\n                    inControl: false,\r\n                    id: controlRequesterId,\r\n                    terminatedReason: ControlTerminatedReason.AckTimeout\r\n                };\r\n                this.event('sharingControlChanged').raise(controlInfo);\r\n                if (this._acceptControlPromise) {\r\n                    this._acceptControlPromise.reject(new Error('No ack received when accept control - terminating control'));\r\n                } else {\r\n                    this._logger.error('Unexpected, no promise could be resolved - controlState = ControlState.WaitingForControlAck');\r\n                }\r\n            } else {\r\n                if (this._acceptControlPromise) {\r\n                    this._acceptControlPromise.reject(new Error('accept control - times out in bad state - do nothing'));\r\n                } else {\r\n                    this._logger.error(`Unexpected, no promise could be resolved - controlState = ${this.controlState}`);\r\n                }\r\n            }\r\n            this._acceptControlTimer = null;\r\n        }, CONTROL_ACK_WAIT_TIMEOUT);\r\n\r\n        return this._acceptControlPromise.promise;\r\n    }\r\n\r\n    private _cancelAcceptControlTimer(): void {\r\n        if (this._acceptControlTimer) {\r\n            if (this._acceptControlPromise) {\r\n                this._acceptControlPromise.reject(new Error('cancelled by _cancelAcceptControlTimer'));\r\n            }\r\n            clearTimeout(this._acceptControlTimer);\r\n            this._acceptControlTimer = null;\r\n        }\r\n    }\r\n\r\n    public denyControlRequest(): Promise<void> {\r\n\r\n        if (!this._dataChannelActive) {\r\n            return Promise.reject(new Error('denyControlRequest when data channel not active'));\r\n        } else if (!this._controlRequest) {\r\n            return Promise.reject(new Error('denyControlRequest while no control request pending'));\r\n        } else if (!this._isSharing()) {\r\n            return Promise.reject(new Error('denyControlRequest when not sharing'));\r\n        }\r\n\r\n        if (this._acceptControlPromise) {\r\n            return Promise.reject(new Error('accept control promise has not been resolved yet while denying control'));\r\n        }\r\n        if (this._grantControlPromise) {\r\n            return Promise.reject(new Error('grant control promise has not been resolved yet while denying control'));\r\n        }\r\n        if (this._terminateControlPromise) {\r\n            return Promise.reject(new Error('terminate control promise has not been resolved yet while denying control'));\r\n        }\r\n\r\n        return this._denyControlRequest();\r\n    }\r\n\r\n    private _denyControlRequest(): Promise<void> {\r\n\r\n        this._logger.info('_denyControlRequest()');\r\n\r\n        const controlRequesterSourceId: number = this._getDataSourceIdForParticipantLeg(this._controlRequest);\r\n        this._clearControlRequest();\r\n\r\n        // Send the reject control message\r\n        const sent: boolean = this._sendRequest(\r\n            { action: ControlAction.RejectRequest, terminatedReason: ControlTerminatedReason.SharerDenied }, controlRequesterSourceId);\r\n\r\n        if (!sent) {\r\n            return Promise.reject(new Error('fail to send the deny control requst'));\r\n        }\r\n\r\n        return new Promise<void>((resolve, reject) => { resolve(); });\r\n    }\r\n\r\n    public grantControl(participant: ICallParticipant): Promise<void> {\r\n\r\n        if (!this._dataChannelActive) {\r\n            return Promise.reject(new Error('grantControl when data channel not active'));\r\n        } else if (this._controlRequest) {\r\n            return Promise.reject(new Error('grantControl called while control request pending'));\r\n        } else if (!this._isSharing()) {\r\n            return Promise.reject(new Error('grantControl when not sharing'));\r\n        } else if (!participant) {\r\n            return Promise.reject(new Error('grantControl null participant'));\r\n        }\r\n\r\n        if (this._acceptControlPromise) {\r\n            return Promise.reject(new Error('accept control promise has not been resolved yet while granting control'));\r\n        }\r\n        if (this._grantControlPromise) {\r\n            return Promise.reject(new Error('grant control promise has not been resolved yet while granting control'));\r\n        }\r\n        if (this._terminateControlPromise) {\r\n            return Promise.reject(new Error('terminate control promise has not been resolved yet while granting control'));\r\n        }\r\n\r\n        return this._grantControl(participant);\r\n    }\r\n\r\n    private _grantControl(participant: ICallParticipant): Promise<void> {\r\n\r\n        this._logger.info('_grantControl()');\r\n\r\n        this._grantControlPromise = async.defer<void>();\r\n        const always = () => {\r\n            this._grantControlPromise = null;\r\n        };\r\n        this._grantControlPromise.promise.then(always, always);\r\n\r\n        if (this.controlState === ControlState.RemoteControlling) {\r\n            if (this._controllerParticipant.participant === participant) {\r\n                // note if this api would specify the participantId, we'd have to update the comparison here to allow switching endpoint.\r\n                // this does not seem like a reasonable scenario instead the controller should be able to decide which endpoint to use.\r\n\r\n                // We are trying to grant control to someone who already has control\r\n                this._logger.warn('grantControl called for participant who already has control');\r\n                this._grantControlPromise.resolve();\r\n                return new Promise<void>((resolve, reject) => { resolve(); });\r\n            } else {\r\n                // Someone else has control, we have to terminate their control before we can\r\n                // give control to another\r\n                this._logger.warn('_grantControl called while another participant already has control - terminating control');\r\n\r\n                // Stop control on sharer side\r\n                this._teardownSharerRemoteControl();\r\n\r\n                const controllerSourceId: number = this._getDataSourceIdForParticipantLeg(this._controllerParticipant);\r\n                const sent: boolean = this._sendRequest(\r\n                    { action: ControlAction.TerminateNoAck, terminatedReason: ControlTerminatedReason.SharerTerminated }, controllerSourceId);\r\n                if (!sent) {\r\n                    this._logger.error('fail to send the terminateNoAck request');\r\n                }\r\n            }\r\n        }\r\n\r\n        // TODO(robedum) we need to know which endpoint or we need to let the controller decide which endpoint to use.\r\n        // we could send a request to all of the specified user's endpoints and let him decide or use multiple endpoints.\r\n        //\r\n        // for now we just randomly choose the first endpoint with a data channel and stick with it.\r\n        const participantSourceId: number = this._mapParticipantToSourceId(participant);\r\n\r\n        // Send the give control message\r\n        const sent: boolean = this._sendRequest(\r\n            { action: ControlAction.GiveControl, terminatedReason: ControlTerminatedReason.None }, participantSourceId);\r\n\r\n        if (!sent) {\r\n            this._logger.error('fail to send the grant control request');\r\n            this._grantControlPromise.reject(new Error());\r\n            return Promise.reject(new Error('fail to send the grant control request!'));\r\n        }\r\n\r\n        // define the controlling participant leg based on the chosen source id\r\n        const participantId: string = this._getParticipantIdForDataSourceId(participant, participantSourceId);\r\n        this._resetControllerParticipant({ participant, participantState: participant.state, participantId });\r\n        this.controlState = ControlState.WaitingForControlAck;\r\n\r\n        // Start ack timer before we setup the injector\r\n        this._grantControlTimer = setTimeout(() => {\r\n            if (this.controlState === ControlState.WaitingForControlAck) {\r\n\r\n                this.controlState = ControlState.None;\r\n                this._resetControllerParticipant();\r\n\r\n                // Didn't get any ack, we shouldn't give the control\r\n                this._logger.error('No ack received when granting control - terminating control');\r\n                const sent: boolean = this._sendRequest(\r\n                    { action: ControlAction.TerminateNoAck, terminatedReason: ControlTerminatedReason.AckTimeout }, participantSourceId);\r\n                if (!sent) {\r\n                    this._logger.error('fail to send the terminateNoAck request');\r\n                }\r\n\r\n                if (this._grantControlPromise) {\r\n                    this._grantControlPromise.reject(new Error('No ack received when granting control - terminating control'));\r\n                } else {\r\n                    this._logger.error('Unexpected, no promise could be resolved - controlState = ControlState.WaitingForControlAck');\r\n                }\r\n            } else {\r\n                if (this._grantControlPromise) {\r\n                    this._grantControlPromise.reject(new Error('grant control - times out in bad state - do nothing'));\r\n                } else {\r\n                    this._logger.error(`Unexpected, no promise could be resolved - controlState = ${this.controlState}`);\r\n                }\r\n            }\r\n            this._grantControlTimer = null;\r\n        }, CONTROL_ACK_WAIT_TIMEOUT);\r\n\r\n        return this._grantControlPromise.promise;\r\n    }\r\n\r\n    private _cancelGrantControlTimer(): void {\r\n        if (this._grantControlTimer) {\r\n            if (this._grantControlPromise) {\r\n                this._grantControlPromise.reject(new Error('cancelled by _cancelGrantControlTimer'));\r\n            }\r\n            clearTimeout(this._grantControlTimer);\r\n            this._grantControlTimer = null;\r\n        }\r\n    }\r\n\r\n    private _mapParticipantToSourceId(participant: ICallParticipant): number {\r\n\r\n        // note: the check for _dataChannel is a refactoring artifact.\r\n        // previously this was wrapped by the SlimCoreElectronDataChannel.\r\n        // TODO(robedum) we should be able to remove it if we verify that this does not cause regressions.\r\n\r\n        if (this._dataChannel) {\r\n            return participant.getSourceIdForMediaType(MediaType.Data);\r\n        } else {\r\n            this._logger.error('Null data channel cannot map participant to source id');\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    private _getParticipantsDataSourceIds(participant: ICallParticipant): number[] {\r\n\r\n        const result : number[] = [];\r\n\r\n        try {\r\n            if (participant && participant.endpoints && participant.endpoints.endpointDetails) {\r\n\r\n                // return DATA_SOURCE_ID_ANY if we're in a 1-1 call\r\n                // TODO(robedum) we should base this on call type rather than the\r\n                // old logic inspired from SlimCoreElectronCallParticipant.getSourceIdForMediaType\r\n                if (participant.endpoints.endpointDetails.length === 1) {\r\n                    const endpoint = participant.endpoints.endpointDetails[0];\r\n                    if (!endpoint || !endpoint.mediaStreams) {\r\n                        result.push(DATA_SOURCE_ID_ANY);\r\n                        return result;\r\n                    }\r\n                }\r\n\r\n                for (const endpoint of participant.endpoints.endpointDetails) {\r\n                    if (endpoint && endpoint.mediaStreams) {\r\n                        for (const stream of endpoint.mediaStreams) {\r\n                            if (SlimCoreCommon.mapMediaTypeStringToMediaType(stream.type) === MediaType.Data) {\r\n                                result.push(stream.sourceId);\r\n\r\n                                if (result.length >= 8) {\r\n                                    this._logger.error('excessive amount of data streams');  // being paranoid\r\n                                    return result;\r\n                                }\r\n\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        } catch (error) {\r\n            this._logger.error(`_getParticipantsDataSourceIds caught exception error=${error}`);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private _getParticipantIdForDataSourceId(participant: ICallParticipant, sourceId: number): string {\r\n        const p: SlimCoreElectronCallParticipant = participant as SlimCoreElectronCallParticipant;\r\n        return p.getParticipantIdForSourceId(MediaType.Data, sourceId);\r\n    }\r\n\r\n    private _getDataSourceIdForParticipantId(participant: ICallParticipant, participantId: string): number {\r\n\r\n        // note: the check for _dataChannel is a refactoring artifact.\r\n        // previously this was wrapped by the SlimCoreElectronDataChannel.\r\n        // TODO(robedum) we should be able to remove it if we verify that this does not cause regressions.\r\n\r\n        if (this._dataChannel) {\r\n            const p: SlimCoreElectronCallParticipant = participant as SlimCoreElectronCallParticipant;\r\n            return p.getSourceId(participantId, MediaType.Data);\r\n        } else {\r\n            this._logger.error('Null data channel cannot map participant to source id');\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    private _getDataSourceIdForParticipantLeg(participantLeg: ParticipantLeg): number {\r\n        return this._getDataSourceIdForParticipantId(participantLeg.participant, participantLeg.participantId);\r\n    }\r\n\r\n    private _getSharerDataSourceId(): number {\r\n        const p: SlimCoreElectronCallParticipant = this._sharerParticipant as SlimCoreElectronCallParticipant;\r\n        const participantId =  p.getSharingParticipantLeg();\r\n\r\n        if (!participantId) {\r\n            // fall back to old logic to randomly pick the first endpoint with a data channel\r\n            // TODO(robedum) remove?\r\n            this._logger.warn('unable to identify the sharer participantId, falling back to first data channel');\r\n            return this._mapParticipantToSourceId(this._sharerParticipant);\r\n        }\r\n\r\n        return this._getDataSourceIdForParticipantId(this._sharerParticipant, participantId);\r\n    }\r\n\r\n    public terminateControl(): Promise<void> {\r\n\r\n        if (this._isViewing()) {\r\n            if (this.controlState !== ControlState.LocalControlling) {\r\n                return Promise.reject(new Error('terminateControl called while not in control'));\r\n            } else if (!this._sharerParticipant) {\r\n                return Promise.reject(new Error('terminateControl called but _sharerParticipant is null'));\r\n            }\r\n        } else if (this._isSharing()) {\r\n            if (!this._controllerParticipant) {\r\n                return Promise.reject(new Error('terminateControl called but controllerParticipant is null'));\r\n            }\r\n        } else {\r\n            return Promise.reject(new Error('terminateControl called but not sharing nor viewing'));\r\n        }\r\n\r\n        if (this._requestControlPromise) {\r\n            return Promise.reject(new Error('request control promise has not been resolved yet while terminating control'));\r\n        }\r\n\r\n        if (this._acceptControlPromise) {\r\n            return Promise.reject(new Error('accept control promise has not been resolved yet while terminating control'));\r\n        }\r\n        if (this._grantControlPromise) {\r\n            return Promise.reject(new Error('grant control promise has not been resolved yet while terminating control'));\r\n        }\r\n\r\n        if (this._terminateControlPromise) {\r\n            return Promise.reject(new Error('terminate control promise has not been resolved yet while terminating control'));\r\n        }\r\n\r\n        return this._terminateControl();\r\n    }\r\n\r\n    private _terminateControl(waitForAck = true): Promise<void> {\r\n\r\n        this._logger.info('_terminateControl()');\r\n\r\n        this._terminateControlPromise = async.defer<void>();\r\n        const always = () => {\r\n            this._terminateControlPromise = null;\r\n        };\r\n        this._terminateControlPromise.promise.then(always, always);\r\n\r\n        let reason: ControlTerminatedReason = ControlTerminatedReason.None;\r\n        const controlAction: ControlAction = waitForAck ? ControlAction.Terminate : ControlAction.TerminateNoAck;\r\n        let recipientSourceId: number;\r\n        let controllerId: string;\r\n\r\n        if (this._isViewing()) {\r\n            if (this.controlState === ControlState.LocalControlling) {\r\n                // Local participant is viewing\r\n                this._teardownViewerRemoteControl();\r\n                reason = ControlTerminatedReason.ViewerTerminated;\r\n\r\n                // We should send the terminate message to sharer\r\n                recipientSourceId = this._getSharerDataSourceId();\r\n                controllerId = LOCAL_PARTICIPANT_MRI; // local participant is controller\r\n            } else {\r\n                this._logger.error('Local viewer called terminateControl when not controlling');\r\n                this._terminateControlPromise.reject(new Error());\r\n                return Promise.reject(new Error('Local viewer called terminateControl when not controlling'));\r\n            }\r\n        } else {\r\n            if (this.controlState === ControlState.RemoteControlling &&\r\n                this._controllerParticipant) {\r\n                // Stop control on sharer side\r\n                this._teardownSharerRemoteControl();\r\n\r\n                // Local participant is sharing\r\n                reason = ControlTerminatedReason.SharerTerminated;\r\n\r\n                // We should send the terminate message to sharer\r\n                recipientSourceId = this._getDataSourceIdForParticipantLeg(this._controllerParticipant);\r\n                controllerId = this._controllerParticipant.participant.id; // controller\r\n            } else {\r\n                this._logger.error('Local sherer called terminateControl when no one is in control');\r\n                this._terminateControlPromise.reject(new Error());\r\n                return Promise.reject(new Error('Local sherer called terminateControl when no one is in control'));\r\n            }\r\n        }\r\n\r\n        const sent: boolean = this._sendRequest(\r\n            { action: controlAction, terminatedReason: reason }, recipientSourceId);\r\n        if (!sent) {\r\n            if (waitForAck) {\r\n                this._logger.error('fail to send the terminate control request');\r\n                this._terminateControlPromise.reject(new Error());\r\n                return Promise.reject(new Error('fail to send the grant control request!'));\r\n            } else {\r\n                this._logger.error('fail to send the terminateNoAck request');\r\n            }\r\n        }\r\n\r\n        this.controlState = waitForAck ? ControlState.WaitingForTerminateAck : ControlState.None;\r\n\r\n        const controlInfo: SharingControlInfo = {\r\n            inControl: false,\r\n            id: controllerId,\r\n            terminatedReason: reason\r\n        };\r\n        this.event('sharingControlChanged').raise(controlInfo);\r\n\r\n        if (waitForAck) {\r\n            this._terminateControlTimer = setTimeout(() => {\r\n                if (this.controlState === ControlState.WaitingForTerminateAck) {\r\n\r\n                    this.controlState = ControlState.None;\r\n                    this._resetControllerParticipant();\r\n\r\n                    // Didn't get any ack, we'll just resend the terminate\r\n                    this._logger.error('No ack received when terminating control - resending terminate request');\r\n                    const sent: boolean = this._sendRequest(\r\n                        { action: ControlAction.TerminateNoAck, terminatedReason: ControlTerminatedReason.AckTimeout }, recipientSourceId);\r\n                    if (!sent) {\r\n                        this._logger.error('fail to send the terminateNoAck request');\r\n                    }\r\n\r\n                    if (this._terminateControlPromise) {\r\n                        this._terminateControlPromise.reject(new Error('No ack received when terminating control - resending terminate request'));\r\n                    } else {\r\n                        this._logger.error('Unexpected, no promise could be resolved - controlState = ControlState.WaitingForTerminateAck');\r\n                    }\r\n                } else {\r\n                    if (this._terminateControlPromise) {\r\n                        this._terminateControlPromise.reject(new Error('terminate control - times out in bad state - do nothing'));\r\n                    } else {\r\n                        this._logger.error(`Unexpected, no promise could be resolved - controlState = ${this.controlState}`);\r\n                    }\r\n                }\r\n                this._terminateControlTimer = null;\r\n            }, CONTROL_ACK_WAIT_TIMEOUT);\r\n        } else {\r\n            this._terminateControlPromise.resolve();\r\n            return new Promise<void>((resolve, reject) => { resolve(); });\r\n        }\r\n\r\n        return this._terminateControlPromise.promise;\r\n    }\r\n\r\n    private _cancelTerminateControlTimer(): void {\r\n        if (this._terminateControlTimer) {\r\n            if (this._terminateControlPromise) {\r\n                this._terminateControlPromise.reject(new Error('cancelled by _cancelTerminateControlTimer'));\r\n            }\r\n            clearTimeout(this._terminateControlTimer);\r\n            this._terminateControlTimer = null;\r\n        }\r\n    }\r\n\r\n    private _disposeControlCapturer() {\r\n        this._logger.info('_disposeControlCapturer');\r\n\r\n        this._clearCapturerEventSubscriptions();\r\n\r\n        if (this._controlCapturer) {\r\n            this._controlCapturer.dispose();\r\n            this._controlCapturer = null;\r\n        }\r\n    }\r\n\r\n    public dispose() {\r\n        this._logger.info('SlimCoreElectronScreenSharingControl.dispose()');\r\n\r\n        this._detachAndDeleteControlDevices();\r\n        this._resetControlState();\r\n        if (this._dataChannel) {\r\n            // Don't dispose here, SlimCoreElectronDataChannel owns\r\n            // the SlimCore.DataChannel and will call dispose\r\n            this._dataChannel = null;\r\n        }\r\n        this._disposeRenderer();\r\n\r\n        this._cancelRequestControlTimer();\r\n        this._cancelAcceptControlTimer();\r\n        this._cancelGrantControlTimer();\r\n        this._cancelTerminateControlTimer();\r\n\r\n        if (this._terminateAvailableHandshake) {\r\n            this._terminateAvailableHandshake(AvailableHandshakeTerminatedReason.Shutdown);\r\n        }\r\n\r\n        this._resetParticipantSubscriptions();\r\n\r\n        this._finalizeViewerSessionTelemetry(VIEWER_CONTROL_SESSION_OPERATIONS.SESSION_SHUTDOWN);\r\n        this._finalizeSharerSessionTelemetry(SHARER_CONTROL_SESSION_OPERATIONS.SESSION_SHUTDOWN);\r\n\r\n        super.dispose();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronScreenSharingControl.ts","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lodash\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"skype-calling-utilities\", [\"lodash\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"skype-calling-utilities\"] = factory(require(\"lodash\"));\n\telse\n\t\troot[\"skype-calling-utilities\"] = factory(root[\"lodash\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_4__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition\n\n\n// WEBPACK FOOTER //\n// webpack:///webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b597f90796601e76ea0c\n\n\n// WEBPACK FOOTER //\n// webpack:///webpack/bootstrap b597f90796601e76ea0c","import {\r\n    CallingLogger, CtrlCaptureEvent, CtrlCaptureMode, CtrlCaptureRegion,\r\n    CtrlEventType, CtrlKbdCodeType, CtrlKbdData, CtrlMouseButtonType,\r\n    CtrlMouseData, CtrlMouseEventType, ISlimCoreElectronControlCapturerEvents\r\n} from 'skype-calling-interface';\r\nimport ObservableBase from '../../common/ts/observableBase';\r\n\r\nconst MOUSE_EVENT_SIZE = 7;\r\nconst KEYBOARD_EVENT_SIZE = 3;\r\nconst CTRL_MOUSE_MAXPOS = 65535;\r\nconst POLL_TIME = 3000; // three seconds\r\nconst REACT_TIME = 250; // 250ms\r\nconst CTRL_VK_MENU = 0x12;\r\nconst CTRL_VK_CONTROL = 0x11;\r\nconst CTRL_VK_SHIFT = 0x10;\r\nconst CTLR_VK_WINCMD = 0x5B;\r\n\r\ntype VideoSize = {\r\n    width: number;\r\n    height: number;\r\n};\r\n\r\n/*\r\nstruct CtrlMouseData {\r\n    // The followng data fields take a byte\r\n    uint8_t type : 2;\r\n    uint8_t buttonType : 3;\r\n    bool fButtonDown : 1;\r\n    bool fWheelButtonDown : 1;\r\n    uint8_t reserved : 1;\r\n    //*************************************\r\n    uint16_t xPos : 16;\r\n    uint16_t yPos : 16;\r\n    int8_t wheelRotation : 8;\r\n};\r\n\r\nstruct CtrlKbdData {\r\n    // The followng data fields take a byte\r\n    uint8_t codeType : 2;\r\n    uint8_t reserved : 2;\r\n    bool fKeyUp : 1;\r\n    bool fRepeat : 1;\r\n    bool fExtended : 1;\r\n    bool fExtended1 : 1;\r\n    //*************************************\r\n    uint8_t code : 8;\r\n};\r\n\r\nstruct CtrlClipboardData {\r\n    uint32_t size;\r\n    uint8_t data;\r\n};\r\n\r\nstruct CtrlInputData {\r\n    uint8_t type; // CtrlEventType\r\n    union {\r\n        CtrlMouseData mouse;\r\n        CtrlKbdData kbd;\r\n        CtrlClipboardData clipboard;\r\n    };\r\n};\r\n*/\r\n\r\nexport class SlimCoreElectronControlCapturer extends ObservableBase<ISlimCoreElectronControlCapturerEvents> {\r\n    private _videoSize: VideoSize;\r\n    private _origElementSize: VideoSize;\r\n    private _captureRegion: CtrlCaptureRegion;\r\n    private _mouseMoveCount: number = 0;\r\n    private _isMouseOnRenderer: boolean = false;\r\n    private _captureMode: CtrlCaptureMode = CtrlCaptureMode.Disabled;\r\n    private _pollTimerID: number = 0;\r\n    private _resizeTimerID: number = 0;\r\n\r\n    public get captureMode(): CtrlCaptureMode {\r\n        return this._captureMode;\r\n    }\r\n\r\n    public get captureRegion(): CtrlCaptureRegion {\r\n        return this._captureRegion;\r\n    }\r\n\r\n    public constructor(\r\n        private _logger: CallingLogger,\r\n        private _element: HTMLElement,\r\n        private _captureRegionPreserveAspectRatio: boolean = true\r\n    ) {\r\n        super();\r\n        this._ensureCanReceiveKeyboardInput();\r\n        if (this._element.ownerDocument && this._element.ownerDocument.defaultView) {\r\n            this._element.ownerDocument.defaultView.addEventListener('resize', this._handleResizeEvents, false);\r\n        }\r\n        this._captureRegion = { left: 0, top: 0, width: this._element.clientWidth, height: this._element.clientHeight };\r\n        this._videoSize = { width: 640, height: 360 };\r\n        this._origElementSize = { width: 0, height: 0 };\r\n        this._checkElementSize();\r\n    }\r\n\r\n    public dispose() {\r\n        this._logger.info('Disposing of Control Capturer');\r\n        window.clearTimeout(this._pollTimerID);\r\n        if (this._element.ownerDocument && this._element.ownerDocument.defaultView) {\r\n            this._element.ownerDocument.defaultView.removeEventListener('resize', this._handleResizeEvents, false);\r\n        }\r\n    }\r\n\r\n    public updateVideoSize(width: number, height: number) {\r\n        this._videoSize.width = width;\r\n        this._videoSize.height = height;\r\n        this.updateCaptureRegion();\r\n    }\r\n\r\n    public updateCaptureRegion() {\r\n        // Scale to show the whole video (screen sharing), while preserving aspect ratio\r\n        if (this._captureRegionPreserveAspectRatio) {\r\n            this._captureRegion.width = this._element.clientWidth;\r\n            this._captureRegion.height = this._element.clientWidth * this._videoSize.height / this._videoSize.width;\r\n\r\n            if (this._captureRegion.height > this._element.clientHeight) {\r\n                this._captureRegion.width = this._element.clientHeight * this._videoSize.width / this._videoSize.height;\r\n                this._captureRegion.height = this._element.clientHeight;\r\n                this._captureRegion.left = (this._element.clientWidth - this._captureRegion.width) / 2;\r\n                this._captureRegion.top = 0;\r\n            } else {\r\n                this._captureRegion.left = 0;\r\n                this._captureRegion.top = (this._element.clientHeight - this._captureRegion.height) / 2;\r\n            }\r\n        } else { // Fit and crop the video (webcam, for holographic interaction)\r\n            this._captureRegion.width = this._element.clientWidth;\r\n            this._captureRegion.height = this._element.clientHeight;\r\n            this._captureRegion.top = 0;\r\n            this._captureRegion.left = 0;\r\n        }\r\n    }\r\n\r\n    public setCaptureMode(mode: CtrlCaptureMode) {\r\n        if (this._captureMode === CtrlCaptureMode.Control && mode !== CtrlCaptureMode.Control) {\r\n            this._syncKeyStates(true); // When user is swtiching mode out of control while losing focus\r\n        }\r\n\r\n        this._captureMode = mode;\r\n        if (mode !== CtrlCaptureMode.Disabled) {\r\n            this._element.addEventListener('click', this._handleClick);\r\n\r\n            // pointer events (mouse, touch, stylus)\r\n            this._element.addEventListener('pointermove', this._handleMouseMove);\r\n            this._element.addEventListener('pointerdown', this._handleMouseDown);\r\n            this._element.addEventListener('pointerup', this._handleMouseUp);\r\n            this._element.addEventListener('pointerenter', this._handleMouseEnter);\r\n            this._element.addEventListener('pointerleave', this._handleMouseLeave);\r\n\r\n            if (mode === CtrlCaptureMode.Control) {\r\n                this._element.addEventListener('wheel', this._handleWheel);\r\n                this._element.addEventListener('keydown', this._handleKeyDown);\r\n                this._element.addEventListener('keyup', this._handleKeyUp);\r\n                this._element.addEventListener('contextmenu', this._handleContextMenu);  // to prevent browser default right click menu\r\n                this._element.addEventListener('blur', this._handleLosingFocus);\r\n            } else {\r\n                this._element.removeEventListener('wheel', this._handleWheel);\r\n                this._element.removeEventListener('keydown', this._handleKeyDown);\r\n                this._element.removeEventListener('keyup', this._handleKeyUp);\r\n                this._element.removeEventListener('contextmenu', this._handleContextMenu);\r\n                this._element.removeEventListener('blur', this._handleLosingFocus);\r\n            }\r\n        } else {\r\n            this._element.removeEventListener('pointermove', this._handleMouseMove);\r\n            this._element.removeEventListener('pointerdown', this._handleMouseDown);\r\n            this._element.removeEventListener('pointerup', this._handleMouseUp);\r\n            this._element.removeEventListener('pointerenter', this._handleMouseEnter);\r\n            this._element.removeEventListener('pointerleave', this._handleMouseLeave);\r\n\r\n            this._element.removeEventListener('click', this._handleClick);\r\n            this._element.removeEventListener('wheel', this._handleWheel);\r\n            this._element.removeEventListener('keydown', this._handleKeyDown);\r\n            this._element.removeEventListener('keyup', this._handleKeyUp);\r\n            this._element.removeEventListener('contextmenu', this._handleContextMenu);\r\n            this._element.removeEventListener('blur', this._handleLosingFocus);\r\n        }\r\n    }\r\n\r\n    private _ensureCanReceiveKeyboardInput() {\r\n        this._element.tabIndex = this._element.tabIndex;\r\n    }\r\n\r\n    private _handleResizeEvents = () => {\r\n        clearTimeout(this._resizeTimerID);\r\n        this._resizeTimerID = window.setTimeout(() => this.updateCaptureRegion(), REACT_TIME);\r\n    }\r\n\r\n    private _checkElementSize() {\r\n        if (this._origElementSize.width !== this._element.clientWidth || this._origElementSize.height !== this._element.clientHeight) {\r\n            this.updateCaptureRegion();\r\n            this._origElementSize.width = this._element.clientWidth;\r\n            this._origElementSize.height = this._element.clientHeight;\r\n        }\r\n        this._pollTimerID = window.setTimeout(() => this._checkElementSize(), POLL_TIME);\r\n    }\r\n\r\n    private _handleMouseLeave = (event: PointerEvent) => {\r\n        if (!this._isOnScreenContent(event) && this._isMouseOnRenderer) {\r\n            this._raiseCaptureEvent(CtrlCaptureEvent.MouseLeaving);\r\n            this._logger.info('Mouse leaving render region');\r\n        }\r\n        this._isMouseOnRenderer = false;\r\n    }\r\n\r\n    private _handleMouseEnter = (event: PointerEvent) => {\r\n        if (!this._isOnScreenContent(event)) { return; }\r\n        this._isMouseOnRenderer = true;\r\n        this._raiseCaptureEvent(CtrlCaptureEvent.MouseEntering);\r\n        this._logger.info('Mouse entering render region');\r\n    }\r\n\r\n    private _handleLosingFocus = (event: FocusEvent) => {\r\n        this._syncKeyStates(true);\r\n    }\r\n\r\n    private _handleClick = (event: MouseEvent) => {\r\n        if (!this._isOnScreenContent(event)) { return; }\r\n        this._raiseCaptureEvent(CtrlCaptureEvent.MouseClick);\r\n        this._logger.info('Mouse clicked');\r\n    }\r\n\r\n    private _handleMouseMove = (event: PointerEvent) => {\r\n        if (!this._isOnScreenContent(event) && this._isMouseOnRenderer) {\r\n            this._raiseCaptureEvent(CtrlCaptureEvent.MouseLeaving);\r\n            this._isMouseOnRenderer = false;\r\n            this._logger.info('Mouse leaving render region');\r\n            return;\r\n        } else if (this._isOnScreenContent(event) && !this._isMouseOnRenderer) {\r\n            this._raiseCaptureEvent(CtrlCaptureEvent.MouseEntering);\r\n            this._isMouseOnRenderer = true;\r\n            this._logger.info('Mouse entering render region');\r\n        }\r\n\r\n        if (this._captureMode !== CtrlCaptureMode.Pointer && this._captureMode !== CtrlCaptureMode.Control) { return; }\r\n\r\n        this._mouseMoveCount++;\r\n        if (!this._isOnScreenContent(event) || this._mouseMoveCount % 2 === 0) { return; }\r\n\r\n        const data: CtrlMouseData = {\r\n            type: CtrlMouseEventType.Move\r\n        };\r\n\r\n        this._normalizeMousePosition(event, data);\r\n        this._raiseMouseEvent(data);\r\n    }\r\n\r\n    private _handleMouseDown = (event: PointerEvent) => {\r\n        if (this._captureMode !== CtrlCaptureMode.Pointer && this._captureMode !== CtrlCaptureMode.Control) { return; }\r\n        if (!this._isOnScreenContent(event)) { return; }\r\n\r\n        const data: CtrlMouseData = {\r\n            type: CtrlMouseEventType.Button,\r\n            buttonType: convertButton(event.button),\r\n            buttonDown: true\r\n        };\r\n\r\n        this._normalizeMousePosition(event, data);\r\n        this._raiseMouseEvent(data);\r\n    }\r\n\r\n    private _handleMouseUp = (event: PointerEvent) => {\r\n        if (this._captureMode !== CtrlCaptureMode.Pointer && this._captureMode !== CtrlCaptureMode.Control) { return; }\r\n        if (!this._isOnScreenContent(event)) { return; }\r\n\r\n        const data: CtrlMouseData = {\r\n            type: CtrlMouseEventType.Button,\r\n            buttonType: convertButton(event.button),\r\n            buttonDown: false\r\n        };\r\n\r\n        this._normalizeMousePosition(event, data);\r\n\r\n        this._raiseMouseEvent(data);\r\n    }\r\n\r\n    private _handleKeyDown = (event: KeyboardEvent) => {\r\n        this._raiseKeyboardEvent({\r\n            codeType: CtrlKbdCodeType.VirtualKey,\r\n            code: event.keyCode,\r\n            repeat: event.repeat,\r\n            keyUp: false\r\n        });\r\n\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    }\r\n\r\n    private _handleKeyUp = (event: KeyboardEvent) => {\r\n        this._raiseKeyboardEvent({\r\n            codeType: CtrlKbdCodeType.VirtualKey,\r\n            code: event.keyCode,\r\n            repeat: event.repeat,\r\n            keyUp: true\r\n        });\r\n\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    }\r\n\r\n    private _handleWheel = (event: WheelEvent) => {\r\n        this._raiseMouseEvent({\r\n            type: CtrlMouseEventType.Wheel,\r\n            wheelRotation: event.deltaY > 0 ? -120 : 120\r\n        });\r\n    }\r\n\r\n    private _raiseMouseEvent(data: CtrlMouseData) {\r\n        this.event('mouseControlEvent').raise(data);\r\n    }\r\n\r\n    private _raiseKeyboardEvent(data: CtrlKbdData) {\r\n        this.event('keyboardControlEvent').raise(data);\r\n    }\r\n\r\n    private _handleContextMenu = (event: MouseEvent) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    private _raiseCaptureEvent(event: CtrlCaptureEvent) {\r\n        this.event('ctrlCaptureEvent').raise(event);\r\n    }\r\n\r\n    private _normalizeMousePosition(event: PointerEvent, data: CtrlMouseData) {\r\n        data.xPos = (event.offsetX - this._captureRegion.left) / this._captureRegion.width * CTRL_MOUSE_MAXPOS;\r\n        data.yPos = (event.offsetY - this._captureRegion.top) / this._captureRegion.height * CTRL_MOUSE_MAXPOS;\r\n    }\r\n\r\n    private _isOnScreenContent(event: MouseEvent) {\r\n        const minX = this._captureRegion.left;\r\n        const maxX = this._captureRegion.left + this._captureRegion.width;\r\n        const minY = this._captureRegion.top;\r\n        const maxY = this._captureRegion.top + this._captureRegion.height;\r\n\r\n        return (minX <= event.offsetX && event.offsetX < maxX && minY <= event.offsetY && event.offsetY < maxY);\r\n    }\r\n\r\n    // Modifier key is pressed while the input capture window is losing focus, and it is released afterwards\r\n    private _syncKeyStates(captureWindowLoseFocus: boolean) {\r\n        this._raiseKeyboardEvent({\r\n            codeType: CtrlKbdCodeType.VirtualKey,\r\n            code: CTRL_VK_CONTROL,\r\n            repeat: false,\r\n            keyUp: captureWindowLoseFocus\r\n        });\r\n\r\n        this._raiseKeyboardEvent({\r\n            codeType: CtrlKbdCodeType.VirtualKey,\r\n            code: CTRL_VK_SHIFT,\r\n            repeat: false,\r\n            keyUp: captureWindowLoseFocus\r\n        });\r\n\r\n        this._raiseKeyboardEvent({\r\n            codeType: CtrlKbdCodeType.VirtualKey,\r\n            code: CTRL_VK_MENU,\r\n            repeat: false,\r\n            keyUp: captureWindowLoseFocus\r\n        });\r\n\r\n        this._raiseKeyboardEvent({\r\n            codeType: CtrlKbdCodeType.VirtualKey,\r\n            code: CTLR_VK_WINCMD,\r\n            repeat: false,\r\n            keyUp: captureWindowLoseFocus\r\n        });\r\n\r\n        this._logger.info('Synced Key states.');\r\n    }\r\n\r\n    public static formatMouseEvent(data: CtrlMouseData): Uint8Array {\r\n        if (!data) { return new Uint8Array(0); }\r\n        if (!data.buttonType) { data.buttonType = 0; }\r\n        if (!data.xPos) { data.xPos = 0; }\r\n        if (!data.yPos) { data.yPos = 0; }\r\n        if (!data.wheelRotation) { data.wheelRotation = 0; }\r\n\r\n        const buffer = new ArrayBuffer(MOUSE_EVENT_SIZE);\r\n        const dataView = new DataView(buffer);\r\n\r\n        const type = (data.type & 0b11) << 0;\r\n        const buttonType = (data.buttonType & 0b111) << 2;\r\n        const fButtonDown = (data.buttonDown ? 1 : 0) << 5;\r\n        const fWheelButtonDown = (data.wheelButtonDown ? 1 : 0) << 6;\r\n        const reserved = 0;\r\n\r\n        dataView.setUint8(0, CtrlEventType.Mouse);\r\n        dataView.setUint8(1, type | buttonType | fButtonDown | fWheelButtonDown | reserved);\r\n        dataView.setUint16(2, data.xPos, true);\r\n        dataView.setUint16(4, data.yPos, true);\r\n        dataView.setUint8(6, data.wheelRotation);\r\n\r\n        return new Uint8Array(buffer);\r\n    }\r\n\r\n    public static formatKeyboardEvent(data: CtrlKbdData): Uint8Array {\r\n        const buffer = new ArrayBuffer(KEYBOARD_EVENT_SIZE);\r\n        const dataView = new DataView(buffer);\r\n\r\n        const codeType = (data.codeType & 0b11) << 0;\r\n        const reserved = 0;\r\n        const fKeyUp = (data.keyUp ? 1 : 0) << 4;\r\n        const fRepeat = (data.repeat ? 1 : 0) << 5;\r\n        const fExtended = 0;\r\n        const fExtended1 = 0;\r\n\r\n        dataView.setUint8(0, CtrlEventType.Keyboard);\r\n        dataView.setUint8(1, codeType | reserved | fKeyUp | fRepeat | fExtended | fExtended1);\r\n        dataView.setUint8(2, data.code);\r\n\r\n        return new Uint8Array(buffer);\r\n    }\r\n}\r\n\r\nfunction convertButton(button: number) {\r\n    switch (button) {\r\n        case 0: // left button\r\n            return CtrlMouseButtonType.Button1;\r\n        case 2: // right button\r\n            return CtrlMouseButtonType.Button2;\r\n        case 1: // middle button\r\n            return CtrlMouseButtonType.Button3;\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronControlCapturer.ts\n\n\n// WEBPACK FOOTER //\n// webpack:///ts/SlimCoreElectronControlCapturer.ts","/**\r\n * observableBase.ts\r\n * Author: Adrian Potra\r\n * Copyright: Microsoft 2016\r\n *\r\n * Implementation for observable objects.\r\n */\r\n\r\nimport { CallingLogger, CauseId, EventCallback, IDisposable, IObservableObject, ObservableChangedCallback } from 'skype-calling-interface';\r\nimport { EventSourceImpl } from './events';\r\n\r\nexport interface ObservableEventCallback {\r\n    name: string;\r\n    handler: EventCallback;\r\n}\r\n\r\nexport interface Callback {\r\n    changed: ObservableChangedCallback | undefined;\r\n    on: ObservableEventCallback | undefined;\r\n}\r\n\r\nexport default class ObservableBase<T> extends EventSourceImpl<Callback> implements IObservableObject<T> {\r\n    constructor(logger?: CallingLogger) {\r\n        super(logger);\r\n    }\r\n\r\n    public changed(callback: ObservableChangedCallback): IDisposable {\r\n        return this.subscribe({\r\n            changed: callback,\r\n            on: undefined\r\n        });\r\n    }\r\n\r\n    public on<P extends keyof T>(eventName: P, callback: T[P]): IDisposable {\r\n        return this.subscribe({\r\n            changed: undefined,\r\n            on: {\r\n                name: String(eventName),\r\n                handler: this._toEventCallback<P>(callback)\r\n            }\r\n        });\r\n    }\r\n\r\n    public once<P extends keyof T>(eventName: P, callback: T[P], causeId?: CauseId): IDisposable {\r\n        let subscription: IDisposable;\r\n        const onceSubscription = (...args: any[]) => {\r\n            subscription.dispose(causeId);\r\n            this._toEventCallback<P>(callback)(...args);\r\n        };\r\n\r\n        return subscription = this.on(eventName, this._fromEventCallback<P>(onceSubscription));\r\n    }\r\n\r\n    protected raiseChanged(): void {\r\n        this.raiseEvents(callback => callback.changed && callback.changed());\r\n    }\r\n\r\n    protected event<P extends keyof T>(eventName: P): { raise: T[P] } {\r\n        return {\r\n            raise: this._fromEventCallback<P>((...args: any[]) => this._raiseEventImpl(String(eventName), ...args))\r\n        };\r\n    }\r\n\r\n    protected _raiseEventImpl(eventName: string, ...args: any[]): void {\r\n        this.raiseEvents(callback => callback.on && callback.on.name === eventName && callback.on.handler(...args));\r\n    }\r\n\r\n    private _toEventCallback<P extends keyof T>(callback: T[P]): EventCallback {\r\n        return callback as any;\r\n    }\r\n\r\n    private _fromEventCallback<P extends keyof T>(callback: EventCallback): T[P] {\r\n        return callback as any;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../common/ts/observableBase.ts\n\n\n// WEBPACK FOOTER //\n// webpack:///common/ts/observableBase.ts","/**\r\n * events.ts\r\n * Author: Adrian Potra\r\n * Copyright: Microsoft 2016\r\n *\r\n * Event sources and subscriptions.\r\n */\r\n\r\nimport * as _ from 'lodash';\r\nimport { CallingLogger, CauseId, IDisposable } from 'skype-calling-interface';\r\n\r\n// Event subscriptions are disposable objects\r\nexport interface EventSubscription extends IDisposable { }\r\n\r\n// Defines the interface for event sources\r\nexport interface EventSource<E> extends IDisposable {\r\n    subscribe(eventHandler: E): EventSubscription;\r\n}\r\n\r\nexport class EventSourceImpl<E> implements EventSource<E> {\r\n    private eventLogger: CallingLogger | undefined;\r\n    constructor(logger?: CallingLogger) {\r\n        this.eventLogger = logger;\r\n    }\r\n    // Array of event subscriptions\r\n    protected subscriptions: EventSubscriptionImpl<E>[] = [];\r\n\r\n    public subscribe(eventHandler: E): EventSubscription {\r\n        return new EventSubscriptionImpl(this.subscriptions, eventHandler);\r\n    }\r\n\r\n    public dispose(causeId?: CauseId) {\r\n        this.subscriptions = [];\r\n    }\r\n\r\n    // Raise the specified event with the associated event data\r\n    protected raiseEvents(exec: (eventHandler: E) => void) {\r\n        const subscriptions = this.subscriptions.slice();\r\n        subscriptions.forEach(subscription => {\r\n            try {\r\n                subscription.eventHandler !== undefined && exec(subscription.eventHandler);\r\n            } catch (e) {\r\n                if (this.eventLogger && this.eventLogger.warn) {\r\n                    this.eventLogger.warn('Event handler exception caught!', e);\r\n                }\r\n\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nclass EventSubscriptionImpl<E> implements EventSubscription {\r\n    constructor(\r\n        private subscriptions: EventSubscriptionImpl<E>[],\r\n        public eventHandler: E | undefined) {\r\n\r\n        this.subscriptions.push(this);\r\n    }\r\n\r\n    public dispose() {\r\n        _.remove(this.subscriptions, subscription => subscription === this);\r\n        this.eventHandler = undefined;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../common/ts/events.ts\n\n\n// WEBPACK FOOTER //\n// webpack:///common/ts/events.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 4\n// module chunks = 0\n\n\n// WEBPACK FOOTER //\n// webpack:///external \"lodash\"","import { CallingLogger } from 'skype-calling-interface';\r\n\r\ninterface BindingRecord<T> {\r\n    createPromise: Promise<T>;\r\n    owners: any[];\r\n    chained: boolean;\r\n    releasePromise?: Promise<void>;\r\n}\r\n\r\ninterface BindingMap<T> {\r\n    [key: number]: BindingRecord<T>;\r\n}\r\n\r\nexport class SlimCoreElectronBindingManager<T> {\r\n    private _bindingMap: BindingMap<T> = {};\r\n\r\n    public constructor(\r\n        private _create: (id: number) => Promise<T>,\r\n        private _release: (id: number, binding: T) => Promise<void>,\r\n        private _logger: CallingLogger) {\r\n        this._logger.info('BindingManager created');\r\n    }\r\n\r\n    public acquire(owner: any, videoObjectId: number): Promise<T> {\r\n        if (!this._bindingMap[videoObjectId] || this._bindingMap[videoObjectId].releasePromise) {\r\n            let chained = false;\r\n            let prequisitePromise: Promise<void>;\r\n            if (this._bindingMap[videoObjectId]) {\r\n                prequisitePromise = this._bindingMap[videoObjectId].releasePromise.catch(e => this._logger.info(`Release binding error: ${e}`));\r\n                chained = true;\r\n            } else {\r\n                prequisitePromise = Promise.resolve<void>();\r\n            }\r\n            const createPromise = prequisitePromise.then(() => this._create(videoObjectId)).then(binding => {\r\n                return binding;\r\n            }).catch(e => {\r\n                delete this._bindingMap[videoObjectId];\r\n                throw e;\r\n            });\r\n            this._bindingMap[videoObjectId] = { createPromise, owners: [], chained };\r\n        }\r\n\r\n        this._bindingMap[videoObjectId].owners.push(owner);\r\n        return this._bindingMap[videoObjectId].createPromise;\r\n    }\r\n\r\n    public async release(owner: any, videoObjectId: number): Promise<void> {\r\n        if (this._bindingMap[videoObjectId]) {\r\n            const binding = await this._bindingMap[videoObjectId].createPromise;\r\n            const index = this._bindingMap[videoObjectId].owners.indexOf(owner);\r\n            if (index > -1) {\r\n                this._bindingMap[videoObjectId].owners.splice(index, 1);\r\n            }\r\n            if (this._bindingMap[videoObjectId].owners.length === 0) {\r\n                this._bindingMap[videoObjectId].releasePromise = this._release(videoObjectId, binding)\r\n                    .then(() => {\r\n                        if (!this._bindingMap[videoObjectId].chained) {\r\n                            // delete only if not chained to create again\r\n                            delete this._bindingMap[videoObjectId];\r\n                        }\r\n                    });\r\n                return this._bindingMap[videoObjectId].releasePromise;\r\n            }\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronBindingManager.ts","import { LogFactory, RootToolsManager } from '@skype/rt-js-bindings';\r\nimport { TsCallingLogger } from '../../../common/ts/logging/tscallingLogger';\r\nimport { RedirectingLogAppender } from '../../../common/ts/logging/ulLogAppender';\r\nimport { SlimCoreElectronStackConfig } from '../../typings/skype-calling-electron';\r\nimport * as SlimCoreCommon from '../SlimCoreCommon';\r\nimport { RootToolsManagerDelegate } from './ElectronRootToolsManagerDelegate';\r\n\r\nexport function initDelegate(slimcore: SlimCoreCommon.Engine, config: SlimCoreElectronStackConfig) : void {\r\n    if (!RootToolsManager.isDelegateSet()) {    // if Teams, it's already wired up in S4L\r\n        const rtDelegate = new RootToolsManagerDelegate(slimcore, config.logger);\r\n        RootToolsManager.setDelegate(rtDelegate);\r\n    }\r\n}\r\n\r\nexport function patchLogger(config: SlimCoreElectronStackConfig) : void {\r\n    if (!RootToolsManager.isDelegateSet()) {    // if Teams, it's already wired up in S4L\r\n        if (config.logger) {\r\n            const redirectingAppender = new RedirectingLogAppender(config.logger);\r\n            LogFactory.instance().addAppender(redirectingAppender);\r\n        }\r\n    }\r\n    config.logger = new TsCallingLogger('JS.TsCalling.Electron', false);\r\n}\r\n\r\nexport function deinitLogging() : void {\r\n\r\n    RootToolsManager.stopAsyncOperations();\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/logging/electronInitLogging.ts","import { LogComponent, LogFactory } from '@skype/rt-js-bindings';\r\nimport { isFunction, isObject } from 'lodash';\r\nimport { CallingLogger } from 'skype-calling-interface';\r\n\r\nexport class TsCallingLogger implements CallingLogger {\r\n    private _getPrefix: () => string;\r\n    private logComponent: LogComponent;\r\n\r\n    public constructor(private ulLogComponent: string, private ulSafeComponent: boolean, prefix: string | (() => string) = '') {\r\n        this._getPrefix = isFunction(prefix) ? prefix : (() => prefix);\r\n        this.logComponent = LogFactory.instance().component(this.ulLogComponent);\r\n        LogFactory.instance().declareComponentSafe(this.ulLogComponent, ulSafeComponent);\r\n    }\r\n\r\n    public createChild(prefix: string | (() => string)): CallingLogger {\r\n        const getChildPrefix = isFunction(prefix) ? prefix : (() => prefix);\r\n        return new TsCallingLogger(\r\n            this.ulLogComponent,\r\n            this.ulSafeComponent,\r\n            () => this._getPrefix() ? `${this._getPrefix()}/${getChildPrefix()}` : getChildPrefix()\r\n        );\r\n    }\r\n\r\n    public log(...args: any[]): void {\r\n        this._apply(log => this.logComponent.debug2(null, log), args);\r\n    }\r\n\r\n    public debug(...args: any[]): void {\r\n        this._apply(log => this.logComponent.debug4(null, log), args);\r\n    }\r\n\r\n    public info(...args: any[]): void {\r\n        this._apply(log => this.logComponent.debug1(null, log), args);\r\n    }\r\n\r\n    public warn(...args: any[]): void {\r\n        this._apply(log => this.logComponent.warn(null, log), args);\r\n    }\r\n\r\n    public error(...args: any[]): void {\r\n        this._apply(log => this.logComponent.error(null, log), args);\r\n    }\r\n\r\n    private _apply(logFunction: (log: string) => void, args: any[] = []): void {\r\n        this._addPrefix(args);\r\n        const message = args\r\n            .map(arg => (arg instanceof DOMException) ? arg.toString() : arg)\r\n            .map(arg => isObject(arg) ? JSON.stringify(arg) : arg)\r\n            .join(', ');\r\n        logFunction(message);\r\n    }\r\n\r\n    private _addPrefix(args: any[]): void {\r\n        if (args && args[0]) {\r\n            const format = `${this._getPrefix()} ${args[0]}`;\r\n            args[0] = format;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../common/ts/logging/tscallingLogger.ts","import { AbstractLogAppender, LogLevel, LogLineMetaData, SLF_Flags, StandardLogFormatter } from '@skype/rt-js-bindings';\r\nimport { CallingLogger } from 'skype-calling-interface';\r\n\r\nexport class RedirectingLogAppender extends AbstractLogAppender {\r\n    public constructor(private _logger: CallingLogger) {\r\n        super(new StandardLogFormatter(SLF_Flags.Component));\r\n    }\r\n    public log(md: LogLineMetaData, logId: number, fmt: string, args: any[]): void {\r\n        if (!this._logger) {\r\n            return;\r\n        }\r\n\r\n        //tslint:disable:ban\r\n        const loggerFunc = (md.level <= LogLevel.Debug4) ? this._logger.debug :\r\n                    (md.level <= LogLevel.Debug2) ? this._logger.log :\r\n                    (md.level <= LogLevel.Debug1) ? this._logger.info :\r\n                    (md.level <= LogLevel.Warning) ? this._logger.warn :\r\n                    this._logger.error;\r\n\r\n        if (loggerFunc) {\r\n            loggerFunc.apply(this._logger, [this.formatter().format(md, logId, fmt, args)]);\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../common/ts/logging/ulLogAppender.ts","import { IRootToolsManagerDelegate } from '@skype/rt-js-bindings';\r\nimport { CallingLogger } from 'skype-calling-interface';\r\nimport * as SyncTasks from 'synctasks';\r\nimport * as SlimCoreCommon from '../SlimCoreCommon';\r\n\r\nexport class RootToolsManagerDelegate implements IRootToolsManagerDelegate {\r\n\r\n    public constructor(private _slimcore: SlimCoreCommon.Engine, private _logger: CallingLogger) {}\r\n\r\n    public fetchEcsConfig<T>(ecsNs: string, ecsKey: string): SyncTasks.Promise<T> {\r\n        return SyncTasks.Resolved<T>(undefined);\r\n    }\r\n\r\n    public sendTelemetry(tenant: string, data: {[name: string]: string}): void {\r\n        return;\r\n    }\r\n\r\n    public sendLoggingEventToNative(message: string, auxiliaryPayload: string): void {\r\n        if (!this._slimcore.handleLoggingEvent) {\r\n            this._logger.warn('slimcore.handleLoggingEvent is not available');\r\n            return;\r\n        }\r\n        this._slimcore.handleLoggingEvent(message, auxiliaryPayload);\r\n    }\r\n\r\n    public setNativeLoggingEventCallback(callback: (message: string, auxiliaryPayload: string) => void): void {\r\n        if (!callback || typeof callback !== 'function') {\r\n            this._logger.warn('RootToolsManagerDelegate.setNativeLoggingEventCallback invalid callback provided');\r\n            return;\r\n        }\r\n\r\n        this._slimcore.handle('logging-event', undefined, (data: SlimCore.Engine.Events.LoggingEventArgs) => {\r\n            this._logger.debug(`RootToolsManagerDelegate: LoggingNativeEvent msg:${data.message} aux${data.auxiliaryPayload}`);\r\n            callback(data.message, data.auxiliaryPayload);\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/logging/ElectronRootToolsManagerDelegate.ts","\"use strict\";\r\n/**\r\n * SyncTasks.ts\r\n * Author: David de Regt\r\n * Copyright: Microsoft 2015\r\n *\r\n * A very simple promise library that resolves all promises synchronously instead of\r\n * kicking them back to the main ticking thread.  This affirmatively rejects the A+\r\n * standard for promises, and is used for a combination of performance (wrapping\r\n * things back to the main thread is really slow) and because indexeddb loses\r\n * context for its calls if you send them around the event loop and transactions\r\n * automatically close.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.config = {\r\n    // If we catch exceptions in success/fail blocks, it silently falls back to the fail case of the outer promise.\r\n    // If this is global variable is true, it will also spit out a console.error with the exception for debugging.\r\n    exceptionsToConsole: true,\r\n    // Whether or not to actually attempt to catch exceptions with try/catch blocks inside the resolution cases.\r\n    // Disable this for debugging when you'd rather the debugger caught the exception synchronously rather than\r\n    // digging through a stack trace.\r\n    catchExceptions: true,\r\n    // Use this option in order to debug double resolution asserts locally.\r\n    // Enabling this option in the release would have a negative impact on the application performance.\r\n    traceEnabled: false,\r\n    exceptionHandler: undefined,\r\n    // If an ErrorFunc is not added to the task (then, catch, always) before the task rejects or synchonously\r\n    // after that, then this function is called with the error. Default throws the error.\r\n    unhandledErrorHandler: (function (err) { throw err; })\r\n};\r\nfunction fromThenable(thenable) {\r\n    var deferred = Defer();\r\n    // NOTE: The {} around the error handling is critical to ensure that\r\n    // we do not trigger \"Possible unhandled rejection\" warnings. By adding\r\n    // the braces, the error handler rejects the outer promise, but returns\r\n    // void. If we remove the braces, it would *also* return something which\r\n    // would be unhandled\r\n    thenable.then(function (value) { deferred.resolve(value); }, function (err) { deferred.reject(err); });\r\n    // Force async before this promise resolves to prevent ES6 promises from catching thrown exceptions downstream\r\n    return deferred.promise().thenAsync(function (x) { return x; });\r\n}\r\nexports.fromThenable = fromThenable;\r\nfunction isThenable(object) {\r\n    return object !== null && object !== void 0 && typeof object.then === 'function';\r\n}\r\nfunction isCancelable(object) {\r\n    return object !== null && object !== void 0 && typeof object.cancel === 'function';\r\n}\r\n// Runs trier(). If config.catchExceptions is set then any exception is caught and handed to catcher.\r\nfunction run(trier, catcher) {\r\n    if (exports.config.catchExceptions) {\r\n        // Any try/catch/finally block in a function makes the entire function ineligible for optimization is most JS engines.\r\n        // Make sure this stays in a small/quick function, or break out into its own function.\r\n        try {\r\n            return trier();\r\n        }\r\n        catch (e) {\r\n            return catcher(e);\r\n        }\r\n    }\r\n    else {\r\n        return trier();\r\n    }\r\n}\r\nvar asyncCallbacks = [];\r\n// Ideally, we use setImmediate, but that's only supported on some environments.\r\n// Suggestion: Use the \"setimmediate\" NPM package to polyfill where it's not available.\r\nvar useSetImmediate = typeof setImmediate !== 'undefined';\r\n/**\r\n * This function will defer callback of the specified callback lambda until the next JS tick, simulating standard A+ promise behavior\r\n */\r\nfunction asyncCallback(callback) {\r\n    asyncCallbacks.push(callback);\r\n    if (asyncCallbacks.length === 1) {\r\n        // Start a callback for the next tick\r\n        if (useSetImmediate) {\r\n            setImmediate(resolveAsyncCallbacks);\r\n        }\r\n        else {\r\n            setTimeout(resolveAsyncCallbacks, 0);\r\n        }\r\n    }\r\n}\r\nexports.asyncCallback = asyncCallback;\r\nfunction resolveAsyncCallbacks() {\r\n    var savedCallbacks = asyncCallbacks;\r\n    asyncCallbacks = [];\r\n    for (var i = 0; i < savedCallbacks.length; i++) {\r\n        savedCallbacks[i]();\r\n    }\r\n}\r\nvar Internal;\r\n(function (Internal) {\r\n    var SyncTask = /** @class */ (function () {\r\n        function SyncTask() {\r\n            this._completedSuccess = false;\r\n            this._completedFail = false;\r\n            this._traceEnabled = false;\r\n            this._cancelCallbacks = [];\r\n            this._wasCanceled = false;\r\n            // The owner of this promise should not call cancel twice. However, cancellation through bubbling is independent of this.\r\n            this._wasExplicitlyCanceled = false;\r\n            this._resolving = false;\r\n            this._storedCallbackSets = [];\r\n            // 'Handled' just means there was a callback set added.\r\n            // Note: If that callback does not handle the error then that callback's task will be 'unhandled' instead of this one.\r\n            this._mustHandleError = true;\r\n        }\r\n        SyncTask.prototype._addCallbackSet = function (set, callbackWillChain) {\r\n            var _this = this;\r\n            var task = new SyncTask();\r\n            task.onCancel(function (context) {\r\n                set.wasCanceled = true;\r\n                set.cancelContext = context;\r\n                // Note: Cancel due to bubbling should not throw if the public cancel is called before/after.\r\n                _this._cancelInternal(context);\r\n            });\r\n            set.task = task;\r\n            this._storedCallbackSets.push(set);\r\n            if (callbackWillChain) {\r\n                // The callback inherits responsibility for \"handling\" errors.\r\n                this._mustHandleError = false;\r\n            }\r\n            else {\r\n                // The callback can never \"handle\" errors since nothing can chain to it.\r\n                task._mustHandleError = false;\r\n            }\r\n            // The _resolve* functions handle callbacks being added while they are running.\r\n            if (!this._resolving) {\r\n                if (this._completedSuccess) {\r\n                    this._resolveSuccesses();\r\n                }\r\n                else if (this._completedFail) {\r\n                    this._resolveFailures();\r\n                }\r\n            }\r\n            return task.promise();\r\n        };\r\n        SyncTask.prototype.onCancel = function (callback) {\r\n            // Only register cancel callback handler on promise that hasn't been completed\r\n            if (!this._completedSuccess && !this._completedFail) {\r\n                if (this._wasCanceled) {\r\n                    callback(this._cancelContext);\r\n                }\r\n                else {\r\n                    this._cancelCallbacks.push(callback);\r\n                }\r\n            }\r\n            return this;\r\n        };\r\n        SyncTask.prototype.then = function (successFunc, errorFunc) {\r\n            return this._addCallbackSet({\r\n                successFunc: successFunc,\r\n                failFunc: errorFunc\r\n            }, true);\r\n        };\r\n        SyncTask.prototype.thenAsync = function (successFunc, errorFunc) {\r\n            return this._addCallbackSet({\r\n                successFunc: successFunc,\r\n                failFunc: errorFunc,\r\n                asyncCallback: true\r\n            }, true);\r\n        };\r\n        SyncTask.prototype.catch = function (errorFunc) {\r\n            return this._addCallbackSet({\r\n                failFunc: errorFunc\r\n            }, true);\r\n        };\r\n        SyncTask.prototype.always = function (func) {\r\n            return this._addCallbackSet({\r\n                successFunc: func,\r\n                failFunc: func\r\n            }, true);\r\n        };\r\n        SyncTask.prototype.setTracingEnabled = function (enabled) {\r\n            this._traceEnabled = enabled;\r\n            return this;\r\n        };\r\n        // Finally should let you inspect the value of the promise as it passes through without affecting the then chaining\r\n        // i.e. a failed promise with a finally after it should then chain to the fail case of the next then\r\n        SyncTask.prototype.finally = function (func) {\r\n            this._addCallbackSet({\r\n                successFunc: func,\r\n                failFunc: func\r\n            }, false);\r\n            return this;\r\n        };\r\n        SyncTask.prototype.done = function (successFunc) {\r\n            this._addCallbackSet({\r\n                successFunc: successFunc\r\n            }, false);\r\n            return this;\r\n        };\r\n        SyncTask.prototype.fail = function (errorFunc) {\r\n            this._addCallbackSet({\r\n                failFunc: errorFunc\r\n            }, false);\r\n            return this;\r\n        };\r\n        SyncTask.prototype.resolve = function (obj) {\r\n            this._checkState(true);\r\n            this._completedSuccess = true;\r\n            this._storedResolution = obj;\r\n            // Cannot cancel resolved promise - nuke chain\r\n            this._cancelCallbacks = [];\r\n            this._resolveSuccesses();\r\n            return this;\r\n        };\r\n        SyncTask.prototype.reject = function (obj) {\r\n            this._checkState(false);\r\n            this._completedFail = true;\r\n            this._storedErrResolution = obj;\r\n            // Cannot cancel resolved promise - nuke chain\r\n            this._cancelCallbacks = [];\r\n            this._resolveFailures();\r\n            SyncTask._enforceErrorHandled(this);\r\n            return this;\r\n        };\r\n        SyncTask.prototype._checkState = function (resolve) {\r\n            if (this._completedSuccess || this._completedFail) {\r\n                if (this._completeStack) {\r\n                    console.error(this._completeStack.message, this._completeStack.stack);\r\n                }\r\n                var message = 'Failed to ' + (resolve ? 'resolve' : 'reject') +\r\n                    ': the task is already ' + (this._completedSuccess ? 'resolved' : 'rejected');\r\n                throw new Error(message);\r\n            }\r\n            if (exports.config.traceEnabled || this._traceEnabled) {\r\n                this._completeStack = new Error('Initial ' + resolve ? 'resolve' : 'reject');\r\n            }\r\n        };\r\n        // Make sure any rejected task has its failured handled.\r\n        SyncTask._enforceErrorHandled = function (task) {\r\n            if (!task._mustHandleError) {\r\n                return;\r\n            }\r\n            SyncTask._rejectedTasks.push(task);\r\n            // Wait for some async time in the future to check these tasks.\r\n            if (!SyncTask._enforceErrorHandledTimer) {\r\n                SyncTask._enforceErrorHandledTimer = setTimeout(function () {\r\n                    SyncTask._enforceErrorHandledTimer = undefined;\r\n                    var rejectedTasks = SyncTask._rejectedTasks;\r\n                    SyncTask._rejectedTasks = [];\r\n                    rejectedTasks.forEach(function (rejectedTask, i) {\r\n                        if (rejectedTask._mustHandleError) {\r\n                            // Unhandled!\r\n                            exports.config.unhandledErrorHandler(rejectedTask._storedErrResolution);\r\n                        }\r\n                    });\r\n                }, 0);\r\n            }\r\n        };\r\n        SyncTask.prototype.cancel = function (context) {\r\n            if (this._wasExplicitlyCanceled) {\r\n                throw new Error('Already Canceled');\r\n            }\r\n            this._wasExplicitlyCanceled = true;\r\n            this._cancelInternal(context);\r\n        };\r\n        SyncTask.prototype._cancelInternal = function (context) {\r\n            var _this = this;\r\n            if (this._wasCanceled) {\r\n                return;\r\n            }\r\n            this._wasCanceled = true;\r\n            this._cancelContext = context;\r\n            var callbacks = this._cancelCallbacks;\r\n            this._cancelCallbacks = [];\r\n            if (callbacks.length > 0) {\r\n                callbacks.forEach(function (callback) {\r\n                    if (!_this._completedSuccess && !_this._completedFail) {\r\n                        callback(_this._cancelContext);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n        SyncTask.cancelOtherInternal = function (promise, context) {\r\n            // Warning: this cast is a bit dirty, but we need to avoid .cancel for SyncTasks.\r\n            // Note: Cancel due to bubbling should not throw if the public cancel is called before/after.\r\n            var task = promise;\r\n            if (task._storedCallbackSets && task._cancelInternal) {\r\n                // Is probably a SyncTask.\r\n                task._cancelInternal(context);\r\n            }\r\n            else {\r\n                promise.cancel(context);\r\n            }\r\n        };\r\n        SyncTask.prototype.promise = function () {\r\n            return this;\r\n        };\r\n        SyncTask.prototype._resolveSuccesses = function () {\r\n            var _this = this;\r\n            this._resolving = true;\r\n            // New callbacks can be added as the current callbacks run: use a loop to get through all of them.\r\n            while (this._storedCallbackSets.length) {\r\n                // Only iterate over the current list of callbacks.\r\n                var callbacks = this._storedCallbackSets;\r\n                this._storedCallbackSets = [];\r\n                callbacks.forEach(function (callback) {\r\n                    if (callback.asyncCallback) {\r\n                        asyncCallback(function () { return _this._resolveSuccessCallback(callback); });\r\n                    }\r\n                    else {\r\n                        _this._resolveSuccessCallback(callback);\r\n                    }\r\n                });\r\n            }\r\n            this._resolving = false;\r\n        };\r\n        SyncTask.prototype._resolveSuccessCallback = function (callback) {\r\n            var _this = this;\r\n            if (callback.successFunc) {\r\n                run(function () {\r\n                    var ret = callback.successFunc(_this._storedResolution);\r\n                    if (isCancelable(ret)) {\r\n                        if (callback.wasCanceled) {\r\n                            SyncTask.cancelOtherInternal(ret, callback.cancelContext);\r\n                        }\r\n                        else {\r\n                            callback.task.onCancel(function (context) { return SyncTask.cancelOtherInternal(ret, context); });\r\n                        }\r\n                        // Note: don't care if ret is canceled. We don't need to bubble out since this is already resolved.\r\n                    }\r\n                    if (isThenable(ret)) {\r\n                        // The success block of a then returned a new promise, so\r\n                        ret.then(function (r) { callback.task.resolve(r); }, function (e) { callback.task.reject(e); });\r\n                    }\r\n                    else {\r\n                        callback.task.resolve(ret);\r\n                    }\r\n                }, function (e) {\r\n                    _this._handleException(e, 'SyncTask caught exception in success block: ' + e.toString());\r\n                    callback.task.reject(e);\r\n                });\r\n            }\r\n            else {\r\n                callback.task.resolve(this._storedResolution);\r\n            }\r\n        };\r\n        SyncTask.prototype._resolveFailures = function () {\r\n            var _this = this;\r\n            this._resolving = true;\r\n            // New callbacks can be added as the current callbacks run: use a loop to get through all of them.\r\n            while (this._storedCallbackSets.length) {\r\n                // Only iterate over the current list of callbacks.\r\n                var callbacks = this._storedCallbackSets;\r\n                this._storedCallbackSets = [];\r\n                callbacks.forEach(function (callback) {\r\n                    if (callback.asyncCallback) {\r\n                        asyncCallback(function () { return _this._resolveFailureCallback(callback); });\r\n                    }\r\n                    else {\r\n                        _this._resolveFailureCallback(callback);\r\n                    }\r\n                });\r\n            }\r\n            this._resolving = false;\r\n        };\r\n        SyncTask.prototype._resolveFailureCallback = function (callback) {\r\n            var _this = this;\r\n            if (callback.failFunc) {\r\n                run(function () {\r\n                    var ret = callback.failFunc(_this._storedErrResolution);\r\n                    if (isCancelable(ret)) {\r\n                        if (callback.wasCanceled) {\r\n                            SyncTask.cancelOtherInternal(ret, callback.cancelContext);\r\n                        }\r\n                        else {\r\n                            callback.task.onCancel(function (context) { return SyncTask.cancelOtherInternal(ret, context); });\r\n                        }\r\n                        // Note: don't care if ret is canceled. We don't need to bubble out since this is already rejected.\r\n                    }\r\n                    if (isThenable(ret)) {\r\n                        ret.then(function (r) { callback.task.resolve(r); }, function (e) { callback.task.reject(e); });\r\n                    }\r\n                    else {\r\n                        // The failure has been handled: ret is the resolved value.\r\n                        callback.task.resolve(ret);\r\n                    }\r\n                }, function (e) {\r\n                    _this._handleException(e, 'SyncTask caught exception in failure block: ' + e.toString());\r\n                    callback.task.reject(e);\r\n                });\r\n            }\r\n            else {\r\n                callback.task.reject(this._storedErrResolution);\r\n            }\r\n        };\r\n        SyncTask.prototype._handleException = function (e, message) {\r\n            if (exports.config.exceptionsToConsole) {\r\n                console.error(message);\r\n            }\r\n            if (exports.config.exceptionHandler) {\r\n                exports.config.exceptionHandler(e);\r\n            }\r\n        };\r\n        SyncTask.prototype.toEs6Promise = function () {\r\n            var _this = this;\r\n            return new Promise(function (resolve, reject) { return _this.then(resolve, reject); });\r\n        };\r\n        SyncTask._rejectedTasks = [];\r\n        return SyncTask;\r\n    }());\r\n    Internal.SyncTask = SyncTask;\r\n})(Internal || (Internal = {}));\r\nfunction all(items) {\r\n    if (items.length === 0) {\r\n        return Resolved([]);\r\n    }\r\n    var outTask = Defer();\r\n    var countRemaining = items.length;\r\n    var foundError;\r\n    var results = Array(items.length);\r\n    outTask.onCancel(function (val) {\r\n        items.forEach(function (item) {\r\n            if (isCancelable(item)) {\r\n                Internal.SyncTask.cancelOtherInternal(item, val);\r\n            }\r\n        });\r\n    });\r\n    var checkFinish = function () {\r\n        if (--countRemaining === 0) {\r\n            if (foundError !== undefined) {\r\n                outTask.reject(foundError);\r\n            }\r\n            else {\r\n                outTask.resolve(results);\r\n            }\r\n        }\r\n    };\r\n    items.forEach(function (item, index) {\r\n        if (isThenable(item)) {\r\n            var task = item;\r\n            task.then(function (res) {\r\n                results[index] = res;\r\n                checkFinish();\r\n            }, function (err) {\r\n                if (foundError === undefined) {\r\n                    foundError = (err !== undefined) ? err : true;\r\n                }\r\n                checkFinish();\r\n            });\r\n        }\r\n        else {\r\n            // Not a task, so resolve directly with the item\r\n            results[index] = item;\r\n            checkFinish();\r\n        }\r\n    });\r\n    return outTask.promise();\r\n}\r\nexports.all = all;\r\nfunction Defer() {\r\n    return new Internal.SyncTask();\r\n}\r\nexports.Defer = Defer;\r\nfunction Resolved(val) {\r\n    return new Internal.SyncTask().resolve(val).promise();\r\n}\r\nexports.Resolved = Resolved;\r\nfunction Rejected(val) {\r\n    return new Internal.SyncTask().reject(val).promise();\r\n}\r\nexports.Rejected = Rejected;\r\nfunction race(items) {\r\n    var outTask = Defer();\r\n    var hasSettled = false;\r\n    outTask.onCancel(function (val) {\r\n        items.forEach(function (item) {\r\n            if (isCancelable(item)) {\r\n                Internal.SyncTask.cancelOtherInternal(item, val);\r\n            }\r\n        });\r\n    });\r\n    items.forEach(function (item) {\r\n        if (isThenable(item)) {\r\n            var task = item;\r\n            task.then(function (res) {\r\n                if (!hasSettled) {\r\n                    hasSettled = true;\r\n                    outTask.resolve(res);\r\n                }\r\n            }, function (err) {\r\n                if (!hasSettled) {\r\n                    hasSettled = true;\r\n                    outTask.reject(err);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            // Not a task, so resolve directly with the item\r\n            if (!hasSettled) {\r\n                hasSettled = true;\r\n                outTask.resolve(item);\r\n            }\r\n        }\r\n    });\r\n    return outTask.promise();\r\n}\r\nexports.race = race;\r\nfunction raceTimer(promise, timeMs) {\r\n    var timerDef = Defer();\r\n    var token = setTimeout(function () {\r\n        timerDef.resolve({ timedOut: true });\r\n    }, timeMs);\r\n    var adaptedPromise = promise.then(function (resp) {\r\n        clearTimeout(token);\r\n        return { timedOut: false, result: resp };\r\n    });\r\n    return race([adaptedPromise, timerDef.promise()]);\r\n}\r\nexports.raceTimer = raceTimer;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/synctasks/dist/SyncTasks.js\n// module id = 55\n// module chunks = 0","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/timers-browserify/main.js\n// module id = 56\n// module chunks = 0","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/setimmediate/setImmediate.js\n// module id = 57\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/process/browser.js\n// module id = 58\n// module chunks = 0","// Enum MetatagType is used for unpacking the event payload from the WinRTWrapper\r\n// As this is specific only to RT, moving it to UWPEventWrapper file.\r\n// We should look into what is the equivalent step on electron side.\r\n// If  we decide to retain this design, we should then keep it common for electron as well\r\n// and move it to slimcore-enums-d.ts\r\nimport * as _ from 'lodash';\r\n\r\nenum MetatagType {\r\n    Integer = 0,\r\n    String = 1,\r\n    Binary = 2\r\n}\r\n\r\ntype ObjectPropertyChangedValue = {\r\n    type: MetatagType;\r\n    intVal: number;\r\n    strVal: string;\r\n    binVal: any;\r\n};\r\n\r\ntype ObjectPropertyChangedArgs = {\r\n    objectType: SlimCore.Enums.ObjectType;\r\n    objectId: SlimCore.ObjectId;\r\n    propKey: SlimCore.Enums.Property;\r\n    value: ObjectPropertyChangedValue;\r\n};\r\n\r\nclass UwpNativeWrapper<T> {\r\n    public constructor(private _nativeObject: T) {\r\n        _.forIn(_nativeObject, (v, k, o) => {\r\n            if (_.isFunction(v)) {\r\n                if (!this[k]) { //some methods are overridden by this wrapper\r\n                    this[k] = function () { // tslint:disable-line:no-function-expression\r\n                        return v.apply(o, arguments);\r\n                    };\r\n                }\r\n            } else {\r\n                Object.defineProperty(this, k, {\r\n                    get() { return o[k]; },\r\n                    set(nv) { o[k] = nv; }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    public get objectToWrap() {\r\n        return this._nativeObject;\r\n    }\r\n\r\n    public get objectAsWrapped() {\r\n        return this as any as T;\r\n    }\r\n}\r\n\r\nclass UwpEventWrapper<T, U> extends UwpNativeWrapper<T> implements SlimCore.EventEmitter<U> {\r\n    private eventListenerArrays: any;\r\n\r\n    public constructor(nativeObject: T) {\r\n        super(nativeObject);\r\n        this.eventListenerArrays = {};\r\n\r\n        if ((nativeObject as any).oncommonwrapperevent !== undefined) {\r\n            (nativeObject as any).oncommonwrapperevent = (eventPayload: SlimCoreRT.CommonWrapperEventPayload) => {\r\n                const args = this.argsFromCommonWrapperEventPayload(eventPayload);\r\n                const eventListeners: any[] = this.eventListenerArrays[eventPayload.target];\r\n                if (eventListeners) {\r\n                    eventListeners.forEach((listener: SlimCore.EventHandler<any>) => {\r\n                        listener(args);\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n    private argsFromCommonWrapperEventPayload(eventPayload: SlimCoreRT.CommonWrapperEventPayload): any {\r\n        if (eventPayload.target === 'object-property-changed') {\r\n            const sourceArgs = eventPayload.detail[0] as ObjectPropertyChangedArgs;\r\n            const args: SlimCore.Engine.Events.ObjectPropertyChangedArgs = {\r\n                objectType: sourceArgs.objectType,\r\n                objectId: sourceArgs.objectId,\r\n                propKey: sourceArgs.propKey,\r\n                value: undefined\r\n            };\r\n            switch (sourceArgs.value.type) {\r\n                case MetatagType.Integer:\r\n                    args.value = sourceArgs.value.intVal;\r\n                    break;\r\n                case MetatagType.String:\r\n                    args.value = sourceArgs.value.strVal;\r\n                    break;\r\n                case MetatagType.Binary:\r\n                    args.value = sourceArgs.value.binVal;\r\n                    break;\r\n                default:\r\n            }\r\n            return args;\r\n        }\r\n        return eventPayload.detail[0];\r\n    }\r\n\r\n    public addListener<P extends keyof U>(event: P, listener: SlimCore.EventHandler<U[P]>): this {\r\n        let eventListeners: any[] = this.eventListenerArrays[event];\r\n        if (!eventListeners) {\r\n            eventListeners = this.eventListenerArrays[event] = [];\r\n        }\r\n        if (eventListeners.indexOf(listener) === -1) {\r\n            eventListeners.push(listener);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public on<P extends keyof U>(event: P, listener: SlimCore.EventHandler<U[P]>): this {\r\n        return this.addListener(event, listener);\r\n    }\r\n\r\n    public once<P extends keyof U>(event: P, listener: SlimCore.EventHandler<U[P]>): this {\r\n        return this.addListener(event, listener);\r\n    }\r\n\r\n    public removeListener<P extends keyof U>(event: P, listener: SlimCore.EventHandler<U[P]>): this {\r\n        const eventListeners: any[] = this.eventListenerArrays[event];\r\n        if (eventListeners) {\r\n            const index = eventListeners.indexOf(listener);\r\n            if (index > -1) {\r\n                eventListeners.splice(index, 1);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public removeAllListeners<P extends keyof U>(event?: P): this {\r\n        if (event) {\r\n            let eventListeners: any[] = this.eventListenerArrays[event];\r\n            if (eventListeners) {\r\n                eventListeners = this.eventListenerArrays[event] = [];\r\n            }\r\n            return this;\r\n        }\r\n        Object.keys(this.eventListenerArrays).forEach(key => {\r\n            this.eventListenerArrays[key] = [];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    public getMaxListeners(): number {\r\n        // TODO: fix this\r\n        return 0;\r\n    }\r\n\r\n    public setMaxListeners(n: number): void {\r\n        // TODO: fix this\r\n    }\r\n\r\n    public listeners<P extends keyof U>(event: P): Function[] {\r\n        return this.eventListenerArrays[event];\r\n    }\r\n\r\n    public emit<P extends keyof U>(event: P, args: U[P]): boolean {\r\n        const eventListeners: any[] = this.eventListenerArrays[event];\r\n        if (eventListeners) {\r\n            eventListeners.forEach((listener: SlimCore.EventHandler<any>) => {\r\n                listener(args as any);\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n}\r\n\r\ninterface UwpVideoBindingWrapped {\r\n    objectToWrap: SlimCore.VideoBinding;\r\n}\r\n\r\nclass UwpVideoBinding<T extends SlimCore.VideoBinding, U> extends UwpEventWrapper<T, U> implements UwpVideoBindingWrapped {\r\n    public constructor(nativeObject: T) {\r\n        super(nativeObject);\r\n    }\r\n}\r\n\r\nexport class UwpEngineWrapped extends UwpEventWrapper<SlimCore.Engine, SlimCore.Engine.Events> {\r\n    public constructor(nativeObject: SlimCore.Engine) {\r\n        super(nativeObject);\r\n    }\r\n\r\n    public createCallInterface(): SlimCore.CallHandler {\r\n        const object = this.objectToWrap.createCallInterface();\r\n        const wrapped = new UwpEventWrapper<SlimCore.CallHandler, SlimCore.CallHandler.Events>(object);\r\n        return wrapped.objectAsWrapped;\r\n    }\r\n\r\n    public getContentSharing(contentSharingObjectId: SlimCore.ObjectId): SlimCore.ContentSharing {\r\n        const object = this.objectToWrap.getContentSharing(contentSharingObjectId);\r\n        const wrapped = new UwpEventWrapper<SlimCore.ContentSharing, SlimCore.ContentSharing.Events>(object);\r\n        return wrapped.objectAsWrapped;\r\n    }\r\n\r\n    public createVideoBindingRenderer(args: SlimCore.VideoBindingRendererArgs): SlimCoreRT.VideoBindingRenderer {\r\n        // todo: move createVideoBindingRenderer out from slimcore.d.ts into platform specific file (also then remove as any)\r\n        const object = (this.objectToWrap as any).createVideoBindingRenderer(args);\r\n        const wrapped = new UwpVideoBinding<SlimCoreRT.VideoBindingRenderer, SlimCoreRT.VideoBindingRenderer.Events>(object);\r\n        return wrapped.objectAsWrapped;\r\n    }\r\n\r\n    public createVideoBindingScreenShare(): SlimCore.VideoBindingScreenShare {\r\n        const object = (this.objectToWrap as any).createVideoBindingScreenShare();\r\n        const wrapped = new UwpVideoBinding<SlimCore.VideoBindingScreenShare, SlimCore.VideoBindingScreenShare.Events>(object);\r\n        return wrapped.objectAsWrapped;\r\n    }\r\n\r\n    public videoCreateBinding(videoObjectId: SlimCore.ObjectId, videoBinding: SlimCore.VideoBinding): Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            const videoBindingWrapped = videoBinding as any as UwpVideoBindingWrapped;\r\n            const videoBindingEvent = videoBindingWrapped.objectToWrap as any;\r\n            if (videoBindingEvent.onvideobindingcreatedevent !== undefined) {\r\n                videoBindingEvent.onvideobindingcreatedevent = () => {\r\n                    resolve();\r\n                };\r\n            }\r\n            if (videoBindingEvent.onvideobindingfailedevent !== undefined) {\r\n                videoBindingEvent.onvideobindingfailedevent = () => {\r\n                    (this.objectToWrap as any).videoReleaseBinding(videoObjectId, videoBindingWrapped.objectToWrap);\r\n                    reject('binding creation failed');\r\n                };\r\n            }\r\n            (this.objectToWrap as any).videoCreateBinding(videoObjectId, videoBindingWrapped.objectToWrap);\r\n        });\r\n    }\r\n\r\n    public videoReleaseBinding(videoObjectId: SlimCore.ObjectId, videoBinding: SlimCore.VideoBinding): Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            const videoBindingWrapped = videoBinding as any as UwpVideoBindingWrapped;\r\n            const videoBindingEvent = videoBindingWrapped.objectToWrap as any;\r\n            if (videoBindingEvent.onvideobindingreleasedevent !== undefined) {\r\n                videoBindingEvent.onvideobindingreleasedevent = () => {\r\n                    resolve();\r\n                };\r\n            }\r\n            (this.objectToWrap as any).videoReleaseBinding(videoObjectId, videoBindingWrapped.objectToWrap);\r\n        });\r\n    }\r\n\r\n    public setMediaConfig(configuration: SlimCore.MediaConfiguration): void {\r\n        (this.objectToWrap as any).setMediaConfig(JSON.stringify(configuration));\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreUwpEventWrapper.ts","export {slimCoreElectronStackFactory, slimCoreUwpStackFactory } from './SlimCoreElectronStack';\r\nexport { getOvb, getTsCallingVersion as getVersion } from '../../common/ts/tsCallingVersionProvider';\r\nexport { generateCauseId } from '../../common/ts/causeId';\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/public.ts"],"sourceRoot":""}