{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 3bda622cbdeaedf09075","webpack:///./ts/SlimCoreCommon.ts","webpack:///./ts/SlimCoreElectronBase.ts","webpack:///external \"lodash\"","webpack:///../common/ts/async.ts","webpack:///./ts/SlimCoreElectronCall.ts","webpack:///./ts/SlimCoreElectronLocalVideoPreview.ts","webpack:///./ts/SlimCoreElectronRemoteStreamManager.ts","webpack:///./ts/SlimCoreElectronCallParticipant.ts","webpack:///./ts/SlimCoreElectronCallRegistry.ts","webpack:///./ts/SlimCoreElectronDeviceManager.ts","webpack:///./ts/SlimCoreElectronEcsProvider.ts","webpack:///./ts/SlimCoreElectronLocalScreenShare.ts","webpack:///./ts/SlimCoreElectronLocalVideo.ts","webpack:///./ts/SlimCoreElectronRemoteStream.ts","webpack:///./ts/SlimCoreElectronRemoteVideoRenderer.ts","webpack:///./ts/SlimCoreElectronScreenSharingManager.ts","webpack:///./ts/SlimCoreElectronSetup.ts","webpack:///./ts/SlimCoreElectronStack.ts","webpack:///../common/ts/events.ts","webpack:///../common/ts/guid.ts","webpack:///./ts/SlimCoreElectronControlCapturer.ts","webpack:///./ts/SlimCoreElectronDataChannel.ts","webpack:///./ts/SlimCoreElectronVideoRenderer.ts","webpack:///./ts/SlimCoreUwpEventWrapper.ts","webpack:///./ts/public.ts","webpack:///../~/webpack/buildin/global.js","webpack:///../common/ts/asyncOperationHandler.ts","webpack:///../common/ts/contentSharingSession.ts","webpack:///../common/ts/observableBase.ts","webpack:///./ts/SlimCoreElectronBindingManager.ts","webpack:///./ts/SlimCoreElectronContentSharing.ts","webpack:///./ts/SlimCoreElectronHolographicInteractionControl.ts","webpack:///./ts/SlimCoreElectronLightWeightMeeting.ts","webpack:///./ts/SlimCoreElectronScreenSharingControl.ts","webpack:///./ts/global.ts"],"names":[],"mappings":"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","file":"skype-calling-electron-embedded.bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lodash\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"skype-calling-electron-embedded\", [\"lodash\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"skype-calling-electron-embedded\"] = factory(require(\"lodash\"));\n\telse\n\t\troot[\"skype-calling-electron-embedded\"] = factory(root[\"lodash\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 35);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3bda622cbdeaedf09075","/// <reference path=\"../typings/slimcore.d.ts\" />\r\n/// <reference path=\"../typings/slimcore-enums.d.ts\" />\r\n/// <reference path=\"../typings/video-renderer.d.ts\" />\r\n\r\nimport { CallingLogger } from 'skype-calling-interface';\r\nimport { IDisposable } from 'skype-calling-interface';\r\nimport { MediaType } from 'skype-calling-interface';\r\nimport { SlimCoreSettings } from '../typings/skype-calling-electron-embedded';\r\nimport { EventSourceImpl } from '../../common/ts/events';\r\nimport globalReference from './global';\r\nimport * as _ from 'lodash';\r\n\r\n_.defaults(globalReference, { SlimCore: {} });\r\n_.defaults(globalReference.SlimCore, { Enums: {} });\r\n\r\nif (Proxy) {\r\n    globalReference.SlimCore.Enums = new Proxy(globalReference.SlimCore.Enums, {\r\n        get: (target, name) => (name in target) ? target[name] : {},\r\n    });\r\n}\r\n\r\nimport Enums = SlimCore.Enums;\r\n\r\nexport const MRI_SKYPE_PREFIX = '8:';\r\nexport const MRI_ALIAS_PREFIX = ';aliases=';\r\nexport const MRI_SIP_PREFIX = '2:';\r\n\r\nexport function isSlimCoreRTModuleAvailable(): boolean {\r\n    return !!globalReference.SlimCoreRT\r\n           && globalReference.SlimCoreRT.SlimCore\r\n           && globalReference.SlimCoreRT.SlimCore.Enums;\r\n}\r\n\r\nconst AVAILABLE_VIDEO_STATES = [Enums.VideoStatus.Available, Enums.VideoStatus.Starting, Enums.VideoStatus.Running];\r\n\r\ninterface EventEmitterEx<T> extends SlimCore.EventEmitter<T> {\r\n    handle<P extends keyof T>(event: P, listener: SlimCore.EventHandler<T[P]>): IDisposable;\r\n}\r\n\r\nexport type Wrapped<T, U> = T & EventEmitterEx<U>;\r\n\r\nexport function wrap<T extends SlimCore.EventEmitter<U>, U>(object: T): Wrapped<T, U> {\r\n    let handle = (event: keyof U, listener: SlimCore.EventHandler<U[keyof U]>) => {\r\n        object.addListener(event, listener);\r\n\r\n        return {\r\n            dispose: () => {\r\n                object.removeListener(event, listener);\r\n            },\r\n        };\r\n    };\r\n\r\n    return _.assign<T, any>(object, { handle });\r\n}\r\n\r\nexport type Engine = Wrapped<SlimCore.Engine, SlimCore.Engine.Events>;\r\nexport type CallHandler = Wrapped<SlimCore.CallHandler, SlimCore.CallHandler.Events>;\r\n\r\nexport enum PlatformType {\r\n    Electron = 1,\r\n    Uwp = 2,\r\n}\r\n\r\nexport type Settings = SlimCoreSettings & {\r\n    platform: PlatformType;\r\n};\r\n\r\nexport interface IVideoObjectChangedEventData {\r\n    videoObjectId: number;\r\n    videoType: Enums.VideoType;\r\n    videoStatus: Enums.VideoStatus;\r\n}\r\n\r\nexport interface IParticipantVideosChangedEventData {\r\n    videos: { [type: number]: IVideoObjectChangedEventData[] };\r\n    participantId: string;\r\n}\r\n\r\nexport function forgetAndLog<T>(promise: Promise<T>, _logger: CallingLogger, errorMessage: string): Promise<void> {\r\n    if (promise) {\r\n        return promise.catch(err => {\r\n            _logger.warn(`Promise execution failed: ${errorMessage}: ${err}`);\r\n        });\r\n    }\r\n\r\n    _logger.warn(`Undefined promise @ ${new Error().stack}`);\r\n    return Promise.resolve<void>();\r\n}\r\n\r\nexport function getStrProperty(callHandler: SlimCore.CallHandler, logger: CallingLogger, objectId: SlimCore.ObjectId, propertyKey: SlimCore.Enums.Property, fallback?: string): string {\r\n    try {\r\n        return callHandler.getStrProperty(objectId, propertyKey);\r\n    }\r\n    catch (error) {\r\n        logger.warn(`getStrProperty failed: ${error}`);\r\n        return fallback;\r\n    }\r\n}\r\n\r\nexport function getIntProperty(callHandler: SlimCore.CallHandler, logger: CallingLogger, objectId: SlimCore.ObjectId, propertyKey: SlimCore.Enums.Property, fallback?: number): number {\r\n    try {\r\n        return callHandler.getIntProperty(objectId, propertyKey);\r\n    }\r\n    catch (error) {\r\n        logger.warn(`getIntProperty failed: ${error}`);\r\n        return fallback;\r\n    }\r\n}\r\n\r\ntype CancelEventHandler = () => void;\r\nexport class VideoStateCancelEvent extends EventSourceImpl<CancelEventHandler> {\r\n    public fire(): void {\r\n        this.raiseEvents(e => e());\r\n    }\r\n}\r\n\r\nexport interface VideoObjectStateWaitOptions {\r\n    slimcoreInstance: Engine;\r\n    callHandler: SlimCore.CallHandler;\r\n    videoObjectId: number;\r\n    logger: CallingLogger;\r\n    resolveStates: Enums.VideoStatus[];\r\n    rejectStates?: Enums.VideoStatus[];\r\n    timeout?: number;\r\n    cancelEvent?: VideoStateCancelEvent;\r\n}\r\n\r\n/*\r\n * Hooks up a property change callback and awaits (with a timeout or indefinitely) for\r\n * video available state. If timeout hits, looks up value once before rejecting promise\r\n */\r\nexport function waitForVideoObjectState(options: VideoObjectStateWaitOptions): Promise<void>\r\n{\r\n    return new Promise<void>((resolve: () => void, reject: (error?: any) => void) => {\r\n        let done = false;\r\n        let videoStateChangedCallback: IDisposable = null;\r\n        let timeoutId = 0;\r\n        let cancelSub: IDisposable;\r\n\r\n        const _cleanupAndReturn = (error?: string) => {\r\n            done = true;\r\n            if (videoStateChangedCallback) {\r\n                videoStateChangedCallback.dispose();\r\n                videoStateChangedCallback = null;\r\n            }\r\n            if (timeoutId) {\r\n                clearTimeout(timeoutId);\r\n                timeoutId = 0;\r\n            }\r\n            if (cancelSub) {\r\n                cancelSub.dispose();\r\n            }\r\n            if (error) {\r\n                reject(error);\r\n            } else {\r\n                resolve();\r\n            }\r\n        };\r\n\r\n        let _onVideoObjectStateChanged = (eventData: ObjectChangedEvent) => {\r\n            if (done) return;\r\n\r\n            options.logger.info(`waitForVideoObjectState[${options.videoObjectId}] state changed -> ${eventData.value}`);\r\n\r\n            if (isVideoInState(eventData.value, options.resolveStates)) {\r\n                _cleanupAndReturn();\r\n            } else if (options.rejectStates && isVideoInState(eventData.value, options.rejectStates)) {\r\n                _cleanupAndReturn(`waitForVideoObjectState[${options.videoObjectId}] rejecting state ${eventData.value}`);\r\n            }\r\n        };\r\n\r\n        let timeoutHandler = () => {\r\n            if (done) return;\r\n\r\n            options.logger.info(`waitForVideoObjectState[${options.videoObjectId}] timeout. Checking state again.`);\r\n\r\n            let videoStatus = getIntProperty(options.callHandler, options.logger, options.videoObjectId, Enums.Property.VideoStatus);\r\n\r\n            if (isVideoInState(videoStatus, options.resolveStates)) {\r\n                _cleanupAndReturn();\r\n            } else if (options.rejectStates && isVideoInState(videoStatus, options.rejectStates)) {\r\n                _cleanupAndReturn(`waitForVideoObjectState[${options.videoObjectId}] rejecting state ${videoStatus}`);\r\n            } else {\r\n                _cleanupAndReturn(`waitForVideoObjectState[${options.videoObjectId}] timeout.`);\r\n            }\r\n        };\r\n\r\n        if (options.timeout) {\r\n            timeoutId = setTimeout(timeoutHandler, options.timeout);\r\n        }\r\n\r\n        if (options.cancelEvent) {\r\n            cancelSub = options.cancelEvent.subscribe(() => {\r\n                options.logger.info(`waitForVideoObjectState[${options.videoObjectId}] canceled.`);\r\n                _cleanupAndReturn(`waitForVideoObjectState[${options.videoObjectId}] canceled.`);\r\n            });\r\n        }\r\n\r\n        videoStateChangedCallback = onObjectPropertyChanged(options.slimcoreInstance, Enums.Property.VideoStatus, options.videoObjectId, _onVideoObjectStateChanged);\r\n        let videoStatus = getIntProperty(options.callHandler, options.logger, options.videoObjectId, Enums.Property.VideoStatus);\r\n\r\n        _onVideoObjectStateChanged({\r\n            objectType: Enums.ObjectType.Video,\r\n            objectId: options.videoObjectId,\r\n            propKey: Enums.Property.VideoStatus,\r\n            value: videoStatus,\r\n        });\r\n    });\r\n}\r\n\r\nexport function isVideoInState(state: Enums.VideoStatus, expected: Enums.VideoStatus[]): boolean {\r\n    return expected.indexOf(state) !== -1;\r\n}\r\n\r\nexport function videoObjectTimeout(settings: Settings): number {\r\n    return (settings.platform === PlatformType.Uwp) ? 5000 : 500;\r\n}\r\n\r\nexport function waitForVideoObjectToBeAvailable(\r\n    slimcoreInstance: Engine,\r\n    callHandler: SlimCore.CallHandler,\r\n    videoObjectId: number,\r\n    logger: CallingLogger,\r\n    timeout?: number,\r\n    cancelEvent?: VideoStateCancelEvent): Promise<void>\r\n{\r\n    return waitForVideoObjectState({\r\n        slimcoreInstance,\r\n        callHandler,\r\n        videoObjectId,\r\n        logger,\r\n        resolveStates: AVAILABLE_VIDEO_STATES,\r\n        rejectStates: [],\r\n        timeout,\r\n        cancelEvent,\r\n    });\r\n}\r\n\r\nexport function isVideoAvailable(state: Enums.VideoStatus) {\r\n    return isVideoInState(state, AVAILABLE_VIDEO_STATES);\r\n}\r\n\r\nexport type ObjectChangedEvent = SlimCore.Engine.Events.ObjectPropertyChangedArgs;\r\nexport type ObjectChangedCallback = SlimCore.EventHandler<ObjectChangedEvent>;\r\n\r\nexport function onObjectChanged(engine: Engine, objectId: SlimCore.ObjectId, listener: ObjectChangedCallback): IDisposable {\r\n    return engine.handle('object-property-changed', (eventData) => {\r\n        if (eventData.objectId === objectId) {\r\n            listener(eventData);\r\n        }\r\n    });\r\n}\r\n\r\nexport function onObjectTypeChanged(engine: Engine, objectType: SlimCore.Enums.ObjectType, listener: ObjectChangedCallback): IDisposable {\r\n    return engine.handle('object-property-changed', (eventData) => {\r\n        if (eventData.objectType === objectType) {\r\n            listener(eventData);\r\n        }\r\n    });\r\n}\r\n\r\nexport function onObjectPropertyChanged(engine: Engine, propKey: SlimCore.Enums.Property, objectId: SlimCore.ObjectId, listener: ObjectChangedCallback): IDisposable {\r\n    return engine.handle('object-property-changed', (eventData) => {\r\n        if (eventData.objectId === objectId && eventData.propKey === propKey) {\r\n            listener(eventData);\r\n        }\r\n    });\r\n}\r\n\r\nexport function onPropertyChanged(engine: Engine, propKey: SlimCore.Enums.Property, listener: ObjectChangedCallback): IDisposable {\r\n    return engine.handle('object-property-changed', (eventData) => {\r\n        if (eventData.propKey === propKey) {\r\n            listener(eventData);\r\n        }\r\n    });\r\n}\r\n\r\nexport type AudioStreamStateChangedEvent = SlimCore.CallHandler.Events.AudioStreamStateChangedArgs;\r\nexport type AudioStreamStateChangedCallback = SlimCore.EventHandler<AudioStreamStateChangedEvent>;\r\n\r\nexport function onAudioStreamStateChanged(callHandler: CallHandler, callObjectId: SlimCore.ObjectId, listener: AudioStreamStateChangedCallback): IDisposable {\r\n    return callHandler.handle('audio-stream-state-changed', (eventData) => {\r\n        if (eventData.callObjectId === callObjectId) {\r\n            listener(eventData);\r\n        }\r\n    });\r\n}\r\n\r\nexport type SkypeTokenRequiredEvent = SlimCore.CallHandler.Events.SkypeTokenRequiredArgs;\r\nexport type SkypeTokenRequiredCallback = SlimCore.EventHandler<SkypeTokenRequiredEvent>;\r\n// Event raised on callhandler.  Eventually to be phased out.\r\nexport function onSkypeTokenRequired(callHandler: CallHandler, listener: SkypeTokenRequiredCallback): IDisposable {\r\n    return callHandler.handle('skype-token-required', (eventData) => {\r\n        listener(eventData);\r\n    });\r\n}\r\n\r\nexport type SkypeTokenRequiredSkyLibEvent = SlimCore.Engine.Events.SkypeTokenRequiredArgs;\r\nexport type SkypeTokenRequiredSkyLibCallback = SlimCore.EventHandler<SkypeTokenRequiredSkyLibEvent>;\r\n\r\n// Event raised on Skylib\r\nexport function onSkypeTokenRequiredSkyLib(engine: Engine, listener: SkypeTokenRequiredSkyLibCallback): IDisposable {\r\n    return engine.handle('skype-token-required', (eventData) => {\r\n        listener(eventData);\r\n    });\r\n}\r\n\r\nexport type TransferRequestedEvent = SlimCore.CallHandler.Events.TransferRequestedArgs;\r\nexport type TransferRequestedCallback = SlimCore.EventHandler<TransferRequestedEvent>;\r\n\r\nexport function onTransferRequested(callHandler: CallHandler, callObjectId: SlimCore.ObjectId, listener: TransferRequestedCallback): IDisposable {\r\n    return callHandler.handle('transfer-requested', (eventData) => {\r\n        if (eventData.callObjectId === callObjectId) {\r\n            listener(eventData);\r\n        }\r\n    });\r\n}\r\n\r\nexport type CallMeBackOperationStatusChangedEvent = SlimCore.CallHandler.Events.CallMeBackOperationStatusChangedArgs;\r\nexport type CallMeBackOperationStatusChangedCallback = SlimCore.EventHandler<CallMeBackOperationStatusChangedEvent>;\r\n\r\nexport function onCallMeBackOperationStatusChanged(callHandler: CallHandler, callObjectId: SlimCore.ObjectId, listener: CallMeBackOperationStatusChangedCallback): IDisposable {\r\n    return callHandler.handle('callmeback-operation-status-changed', (eventData) => {\r\n        if (eventData.callObjectId === callObjectId) {\r\n            listener(eventData);\r\n        }\r\n    });\r\n}\r\n\r\nexport type UnmuteSelfOperationStatusChangedEvent = SlimCore.CallHandler.Events.UnmuteSelfOperationStatusChangedArgs;\r\nexport type UnmuteSelfOperationStatusChangeCallback = SlimCore.EventHandler<UnmuteSelfOperationStatusChangedEvent>;\r\n\r\nexport function onUnmuteSelfOperationStatusChanged(callHandler: CallHandler, callObjectId: SlimCore.ObjectId, listener: UnmuteSelfOperationStatusChangeCallback): IDisposable {\r\n    return callHandler.handle('unmuteself-operation-status-changed', (eventData) => {\r\n        if (eventData.callObjectId === callObjectId) {\r\n            listener(eventData);\r\n        }\r\n    });\r\n}\r\n\r\nexport type RemoteVideosCountChangedEvent = SlimCore.CallHandler.Events.RemoteVideosCountChangedArgs;\r\nexport type RemoteVideosCountChangedCallback = SlimCore.EventHandler<RemoteVideosCountChangedEvent>;\r\n\r\nexport function onRemoteVideosCountChanged(callHandler: CallHandler, participantObjectId: SlimCore.ObjectId, listener: RemoteVideosCountChangedCallback): IDisposable {\r\n    return callHandler.handle('remote-videos-count-changed', (eventData) => {\r\n        if (eventData.participantObjectId === participantObjectId) {\r\n            listener(eventData);\r\n        }\r\n    });\r\n}\r\n\r\nexport type MediaNegotiationStatusChangedEvent = SlimCore.CallHandler.Events.MediaNegotiationStatusChangedArgs;\r\nexport type MediaNegotiationStatusChangedCallback = SlimCore.EventHandler<MediaNegotiationStatusChangedEvent>;\r\n\r\nexport function onMediaNegotiationStatusChanged(callHandler: CallHandler, callObjectId: SlimCore.ObjectId, listener: MediaNegotiationStatusChangedCallback): IDisposable {\r\n    return callHandler.handle('media-negotiation-status-changed', (eventData) => {\r\n        if (eventData.callObjectId === callObjectId) {\r\n            listener(eventData);\r\n        }\r\n    });\r\n}\r\n\r\nexport type PushHandlingCompleteEvent = SlimCore.Engine.Events.PushHandlingCompleteArgs;\r\nexport type PushHandlingCompleteCallback = SlimCore.EventHandler<PushHandlingCompleteEvent>;\r\n\r\nexport function onPushHandlingComplete(engine: Engine, token: number, listener: PushHandlingCompleteCallback): IDisposable {\r\n    return engine.handle('push-handling-complete', (eventData) => {\r\n        if (eventData.token === token) {/* #1237309 (Closed Won't Fix Bug) *//* tslint:disable-line:possible-timing-attack */\r\n            listener(eventData);\r\n        }\r\n    });\r\n}\r\n\r\nconst MRI_ALIASES_REGEX: RegExp = /;aliases=.*$/i;\r\nexport function stripMriAliases(mri: string): string {\r\n    // For SfB interop we are introducing alias'd MRIs eg. 8:orgid:<org_id>;aliases=2:<sip_uri>,4:<asserted_phone_num>\r\n    // This is a temporary. Will be removed when Teams works on SfB interop item. Ping darsraj for Qs\r\n    if (mri) {\r\n        return mri.replace(MRI_ALIASES_REGEX, '');\r\n    }\r\n\r\n    return mri;\r\n}\r\n\r\nexport function bufferToString(buf: Uint8Array): string\r\n{\r\n    return String.fromCharCode.apply(null, buf);\r\n}\r\n\r\nexport function stringToBuffer(msg: string): Uint8Array\r\n{\r\n    let buf = new ArrayBuffer(msg.length);\r\n    let bufView = new Uint8Array(buf);\r\n    for (let i = 0; i < msg.length; i++) {\r\n        bufView[i] = msg.charCodeAt(i);\r\n    }\r\n    return bufView;\r\n}\r\n\r\nexport function mapMediaTypeStringToMediaType(mediaTypeStr: string): MediaType {\r\n    switch (mediaTypeStr) {\r\n        case 'audio':\r\n            return MediaType.Audio;\r\n        case 'video':\r\n            return MediaType.Video;\r\n        case 'panoramic-video':\r\n            return MediaType.PanoramicVideo;\r\n        case 'applicationsharing-video':\r\n            return MediaType.ScreenShare;\r\n        case 'data':\r\n            return MediaType.Data;\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\n\r\nexport function mapToEmptyStrIfFalsy(inputString: string): string {\r\n    if (inputString)\r\n        return inputString;\r\n    else\r\n        return '';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreCommon.ts","import { CallingLogger } from 'skype-calling-interface';\r\nimport { IDisposable } from 'skype-calling-interface';\r\n\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\nimport ObservableBase from '../../common/ts/observableBase';\r\n\r\ntype CallbackEntry = {\r\n    callback: IDisposable;\r\n    disposable: boolean\r\n};\r\n\r\nabstract class SlimCoreElectronBase<T> extends ObservableBase<T> implements IDisposable {\r\n\r\n    private _callbacks: CallbackEntry[] = [];\r\n\r\n    protected constructor(protected _logger: CallingLogger) {\r\n        super();\r\n        // this._logger.info('constructor');\r\n    }\r\n\r\n    public dispose() {\r\n        this._logger.info('dispose');\r\n\r\n        this._callbacks.forEach(item => item.callback.dispose());\r\n        this._callbacks = [];\r\n\r\n        super.dispose();\r\n    }\r\n\r\n    protected registerCallback(callback: IDisposable, disposable: boolean = false) {\r\n        if (!callback) {\r\n            this._logger.error(`Attempt to register null callback, ignoring`);\r\n            return;\r\n        }\r\n        this._callbacks.push({ callback, disposable });\r\n    }\r\n\r\n    protected disposeCallbacks() {\r\n        this._callbacks.filter(cb => cb.disposable).forEach(cb => cb.callback.dispose());\r\n        this._callbacks = this._callbacks.filter(cb => !cb.disposable);\r\n    }\r\n\r\n    protected _getStrProperty(callHandler: SlimCore.CallHandler, objectId: SlimCore.ObjectId, propertyKey: SlimCore.Enums.Property, fallback?: string): string {\r\n        return SlimCoreCommon.getStrProperty(callHandler, this._logger, objectId, propertyKey, fallback);\r\n    }\r\n\r\n    protected _getIntProperty(callHandler: SlimCore.CallHandler, objectId: SlimCore.ObjectId, propertyKey: SlimCore.Enums.Property, fallback?: number): number {\r\n        return SlimCoreCommon.getIntProperty(callHandler, this._logger, objectId, propertyKey, fallback);\r\n    }\r\n\r\n    protected raiseChanged(): void {\r\n        try {\r\n            super.raiseChanged();\r\n        } catch (err) {\r\n            this._logger.error(`Change handling error: ${err}`);\r\n        }\r\n    }\r\n\r\n    protected _raiseEventImpl(eventName: string, ...args: any[]): void {\r\n        try {\r\n            super._raiseEventImpl(eventName, ...args);\r\n        } catch (err) {\r\n            this._logger.error(`Event '${eventName}' handling error: ${err}`);\r\n        }\r\n    }\r\n}\r\n\r\nexport default SlimCoreElectronBase;\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronBase.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 2\n// module chunks = 0","// executes exec function immediately as if it were an async call, and handles errors correctly\r\nexport function asap<T>(exec: () => T): Promise<T> {\r\n    return new Promise<T>((resolve) => {\r\n        resolve(exec());\r\n    });\r\n}\r\n\r\nexport class TimeoutError extends Error {}\r\n\r\nexport class Timer {\r\n    private timeoutId: number;\r\n\r\n    constructor(private ontimeout: () => void) { }\r\n\r\n    start(timeout: number) {\r\n        this.timeoutId = setTimeout(this.ontimeout, timeout);\r\n    }\r\n\r\n    stop() {\r\n        clearTimeout(this.timeoutId);\r\n    }\r\n}\r\n\r\nexport type Deferred<T> = {\r\n    resolve: (value?: T | Thenable<T>) => void;\r\n    reject: (error: any) => void;\r\n    promise: Promise<T>;\r\n};\r\n\r\nexport function defer<T>(): Deferred<T> {\r\n    let deferred = {} as Deferred<T>;\r\n    deferred.promise = new Promise<T>((resolve, reject) => {\r\n        deferred.resolve = resolve;\r\n        deferred.reject = reject;\r\n    });\r\n    return deferred;\r\n}\r\n\r\nexport function timedDefer<T>(timeout: number, timeoutMessage = `deferred timed out after ${timeout}ms`): Deferred<T> {\r\n    let deferred = {} as Deferred<T>;\r\n    let rejectTimer = new Timer(() => deferred.reject(new TimeoutError(timeoutMessage)));\r\n\r\n    deferred.promise = new Promise<T>((resolve, reject) => {\r\n        deferred.resolve = (value?: T | Thenable<T>) => {\r\n            rejectTimer.stop();\r\n            resolve(value);\r\n        };\r\n        deferred.reject = (error: Error) => {\r\n            rejectTimer.stop();\r\n            reject(error);\r\n        };\r\n    });\r\n\r\n    rejectTimer.start(timeout);\r\n    return deferred;\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ../common/ts/async.ts","import { CallInitOptions, CallQueueInfo, MediaDirection, AnswerMediaType } from 'skype-calling-interface';\r\nimport { CallingLogger } from 'skype-calling-interface';\r\nimport { CallParticipantEndpointDetails, CallParticipantEndpoints } from 'skype-calling-interface';\r\nimport { CallParticipantStreamMap } from 'skype-calling-interface';\r\nimport { CallStartOptions } from 'skype-calling-interface';\r\nimport { CallAcceptOptions } from 'skype-calling-interface';\r\nimport { CallVoicemailStartOptions } from 'skype-calling-interface';\r\nimport { CallState, TransferState } from 'skype-calling-interface';\r\nimport { CallType } from 'skype-calling-interface';\r\nimport { DominantSpeakerInfo } from 'skype-calling-interface';\r\nimport { DtmfTone } from 'skype-calling-interface';\r\nimport { AudioUsageMode } from 'skype-calling-interface';\r\nimport { FailureType } from 'skype-calling-interface';\r\nimport { ForwardingDestinationType } from 'skype-calling-interface';\r\nimport { ICall } from 'skype-calling-interface';\r\nimport { ICallEvents } from 'skype-calling-interface';\r\nimport { ICallParticipant } from 'skype-calling-interface';\r\nimport { ICallTransferContext } from 'skype-calling-interface';\r\nimport { IContentSharingSession } from 'skype-calling-interface';\r\nimport { IMediaDataChannelUser } from './SlimCoreElectronDataChannel';\r\nimport { IDisposable } from 'skype-calling-interface';\r\nimport { IncomingCallPayload } from 'skype-calling-interface';\r\nimport { IncomingCallType } from 'skype-calling-interface';\r\nimport { ISharingSource } from 'skype-calling-interface';\r\nimport { IRenderTarget } from 'skype-calling-interface';\r\nimport { ISlimCoreElectronApplicationHooks } from '../typings/skype-calling-electron-embedded';\r\nimport { MediaType } from 'skype-calling-interface';\r\nimport { MeetingInfo } from 'skype-calling-interface';\r\nimport { ParticipantState } from 'skype-calling-interface';\r\nimport { ParticipantStateReason } from 'skype-calling-interface';\r\nimport { QualityEventType } from 'skype-calling-interface';\r\nimport { QualityLevel } from 'skype-calling-interface';\r\nimport { SkypeConversationLiveState } from 'skype-calling-interface';\r\nimport { StartStreamOptions } from 'skype-calling-interface';\r\nimport { StreamType } from 'skype-calling-interface';\r\nimport { TerminatedReason } from 'skype-calling-interface';\r\nimport { ContentSharingStatus } from 'skype-calling-interface';\r\nimport { LightWeightMeetingState } from 'skype-calling-interface';\r\nimport { ParticipantLightWeightMeetingRole } from 'skype-calling-interface';\r\nimport { ParticipantRosterRole } from 'skype-calling-interface';\r\nimport { MuteScope } from 'skype-calling-interface';\r\nimport { MediaPeerType } from 'skype-calling-interface';\r\nimport { MeetingDetails } from 'skype-calling-interface';\r\nimport { IBroadcastMeeting, BroadcastMetadata } from 'skype-calling-interface';\r\nimport { CallAcknowledgeResult } from 'skype-calling-interface';\r\nimport { CallAcknowledgeResultCode } from 'skype-calling-interface';\r\nimport { SkypeIdentity } from 'skype-calling-interface';\r\nimport { TransferorType } from 'skype-calling-interface';\r\nimport { ConnectionType } from 'skype-calling-interface';\r\nimport { MediaNegotiationStatusCode } from 'skype-calling-interface';\r\n\r\nimport * as _ from 'lodash';\r\nimport * as async from '../../common/ts/async';\r\nimport AsyncOperationHandler from '../../common/ts/asyncOperationHandler';\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\nimport SlimCoreElectronBase from './SlimCoreElectronBase';\r\nimport SlimCoreElectronCallParticipant from './SlimCoreElectronCallParticipant';\r\nimport SlimCoreElectronLightWeightMeeting from './SlimCoreElectronLightWeightMeeting';\r\nimport SlimCoreElectronContentSharing from './SlimCoreElectronContentSharing';\r\nimport SlimCoreElectronDeviceManager from './SlimCoreElectronDeviceManager';\r\nimport SlimCoreElectronLocalScreenShare from './SlimCoreElectronLocalScreenShare';\r\nimport SlimCoreElectronLocalVideo from './SlimCoreElectronLocalVideo';\r\nimport SlimCoreElectronLocalVideoPreview from './SlimCoreElectronLocalVideoPreview';\r\nimport SlimCoreElectronScreenSharingControl from './SlimCoreElectronScreenSharingControl';\r\nimport SlimCoreElectronHolographicInteractionControl from './SlimCoreElectronHolographicInteractionControl';\r\nimport SlimCoreElectronDataChannel from './SlimCoreElectronDataChannel';\r\nimport { ISlimCoreElectronCallRegistryCallbacks } from './SlimCoreElectronCallRegistry';\r\n\r\n// From electron/typings/slimcore-enums.d.ts:\r\nimport Enums = SlimCore.Enums;\r\nimport { AddParticipantPayload } from 'skype-calling-interface';\r\nimport SlimCoreElectronRemoteStreamManager from './SlimCoreElectronRemoteStreamManager';\r\n\r\nconst validStateTransitions: { [key: number]: CallState[]; } = {\r\n    [CallState.None]: [CallState.Notified, CallState.Connecting, CallState.Observing, CallState.Disconnecting, CallState.EarlyMedia, CallState.InLobby],\r\n    [CallState.Notified]: [CallState.Connecting, CallState.Disconnecting, CallState.Disconnected, CallState.InLobby],\r\n    [CallState.Connecting]: [CallState.Connected, CallState.Disconnecting, CallState.Disconnected, CallState.EarlyMedia, CallState.InLobby],\r\n    [CallState.Connected]: [CallState.LocalHold, CallState.RemoteHold, CallState.Disconnecting, CallState.Disconnected, CallState.InLobby],\r\n    [CallState.Disconnecting]: [CallState.Disconnected],\r\n    [CallState.Disconnected]: [],\r\n    [CallState.Observing]: [CallState.Notified, CallState.Connecting, CallState.Disconnecting, CallState.Disconnected, CallState.InLobby],\r\n    [CallState.LocalHold]: [CallState.Disconnecting, CallState.Disconnected, CallState.Connected, CallState.RemoteHold, CallState.InLobby],\r\n    [CallState.RemoteHold]: [CallState.Disconnecting, CallState.Disconnected, CallState.Connected, CallState.LocalHold, CallState.InLobby],\r\n    [CallState.EarlyMedia]: [CallState.Connected, CallState.Disconnecting, CallState.Disconnected, CallState.InLobby],\r\n    [CallState.InLobby]: [CallState.Connected, CallState.Disconnecting, CallState.Disconnected, CallState.EarlyMedia, CallState.LocalHold, CallState.RemoteHold],\r\n};\r\n\r\ntype JoinOrStartCallOptions = {\r\n    audioDirection?: MediaDirection;\r\n    videoDirection?: MediaDirection;\r\n    screenshareDirection?: MediaDirection;\r\n    datachannelDirection?: MediaDirection;\r\n    ringOthers?: boolean;\r\n    conversationUrl?: string;\r\n    label?: string;\r\n    conversationType?: string;\r\n    enableLightWeightMeeting?: boolean;\r\n    callToVoicemail?: boolean;\r\n    voicemailResourcePath?: string;\r\n    voicemailItemId?: string;\r\n    callKey?: string;\r\n    encryptedKey?: string;\r\n    connectionType?: ConnectionType;\r\n};\r\n\r\ninterface SlimCoreTransferContext {\r\n    newCallObjectId: number;\r\n}\r\n\r\ninterface TransferInfo {\r\n    transferTarget?: string;\r\n    targetCallId?: number;\r\n    transferStatusSuccessList: Enums.CallStatus[];\r\n}\r\n\r\nconst ASYNC_OPERATION = {\r\n    AddParticipant: 'AddParticipant',\r\n    CallMeBack: 'CallMeBack',\r\n    HoldUnhold: 'HoldUnhold',\r\n    StartCall: 'StartCall',\r\n    EndCall: 'EndCall',\r\n    WaitForRinging: 'WaitForRinging',\r\n    WaitForHandlePush: 'WaitForHandlePush',\r\n    StartVideo: 'StartVideo',\r\n    StopVideo: 'StopVideo',\r\n    StartScreenSharing: 'StartScreenSharing',\r\n    StopScreenSharing: 'StopScreenSharing',\r\n    WaitForMute: 'WaitForMute',\r\n    WaitForUnMute: 'WaitForUnMute',\r\n    WaitForMuteSpeaker: 'WaitForMuteSpeaker',\r\n    WaitForUnMuteSpeaker: 'WaitForUnMuteSpeaker',\r\n    StartAudio: 'StartAudio',\r\n    StopAudio: 'StopAudio',\r\n};\r\n\r\nexport default class SlimCoreElectronCall extends SlimCoreElectronBase<ICallEvents> implements ICall {\r\n    public participants: SlimCoreElectronCallParticipant[] = [];\r\n    public participantMap: { [participantId: string]: SlimCoreElectronCallParticipant } = {};\r\n\r\n    public isMuted = false;\r\n    public isSpeakerMuted = false;\r\n    public isServerMuted = false;\r\n    public isVideoOn = false;\r\n    public isScreenSharingOn = false;\r\n    public dominantSpeakerInfo: DominantSpeakerInfo = { speakerList: [], timestamp: null };\r\n    public callStartedAt: Date = null;\r\n    public callHeldAt: Date = null;\r\n    public terminatedReason: TerminatedReason;\r\n    public messageId: string;\r\n    public endpointId: string;\r\n    public participantId: string;\r\n    public callerMri: string;\r\n    public failureType: FailureType = FailureType.Undefined;\r\n    public isCast: boolean;\r\n    public label: string;\r\n    public slimcoreCallId = 0;\r\n    public isHostless = true;\r\n    public endpoints: CallParticipantEndpoints;\r\n    public role: ParticipantRosterRole;\r\n    public tenantId: string;\r\n    public transferorMri: string;\r\n    public transferorDisplayName: string;\r\n    public transferorType: TransferorType;\r\n    public callType = CallType.Unknown;\r\n    public onBehalfOfMri: string;\r\n    public callQueueInfo: CallQueueInfo;\r\n    public incomingCallType: IncomingCallType;\r\n    public isIncomingOneOnOneVideoCall = false;\r\n    public forwardingDestinationType: ForwardingDestinationType;\r\n    public optimalVideoCount: number;\r\n    public meetingDetails: MeetingDetails;\r\n    public broadcastMeeting: IBroadcastMeeting;\r\n    public broadcastMetadata: BroadcastMetadata;\r\n    public lightWeightMeeting: SlimCoreElectronLightWeightMeeting = null;\r\n    public contentSharingSessions: SlimCoreElectronContentSharing[] = [];\r\n    public screenSharingControl: SlimCoreElectronScreenSharingControl = null;\r\n    public holographicInteractionControl: SlimCoreElectronHolographicInteractionControl = null;\r\n\r\n    public mediaStreams: CallParticipantStreamMap = {\r\n        [StreamType.Video]: [],\r\n        [StreamType.ScreenSharing]: [],\r\n    };\r\n\r\n    private _isAudioStreamConnected = false;\r\n    private _wasAudioStreamConnected = false;\r\n    private _meetingInfo: MeetingInfo;\r\n    private _rawEndpoints: string;\r\n    private _rawMeetingDetails: string;\r\n    private _canToggleVideo = true;\r\n    private _canToggleScreenSharing = true;\r\n    private _pendingPromise: Promise<any>;\r\n    private _callGotConnected = false;\r\n    private _enableGroupCallMeetupGeneration: boolean = false;\r\n    private _localScreenShareStream: SlimCoreElectronLocalScreenShare;\r\n    private _localVideo: SlimCoreElectronLocalVideo;\r\n    private _localVideoPreview: SlimCoreElectronLocalVideoPreview;\r\n    private _localVideoContainer: IRenderTarget;\r\n    private _localVideoOptions: StartStreamOptions;\r\n    private _transferContext: SlimCoreTransferContext;\r\n    private _endpointMetadata: string;\r\n    private _mediaPeerType = MediaPeerType.ConsumerTwoParty;\r\n    private _emergencyContent: string;\r\n    private _dataChannel: SlimCoreElectronDataChannel = null;\r\n    private _dataChannelUsers: IMediaDataChannelUser[] = [];\r\n    private _isRelayWhiteListingIssue = false;\r\n    private _asyncOperationHandler: AsyncOperationHandler;\r\n    private _slimCoreElectronRemoteManager: SlimCoreElectronRemoteStreamManager;\r\n\r\n    private _state: CallState = CallState.None;\r\n    public get state(): CallState {\r\n        return this._state;\r\n    }\r\n\r\n    public set state(value: CallState) {\r\n        this._logger.info(`Updating callState from ${this._state} to ${value}`);\r\n        this._state = value;\r\n    }\r\n\r\n    public transferState: TransferState = TransferState.None;\r\n\r\n    public constructor(\r\n        private _slimcoreCallRegistryCallbacks: ISlimCoreElectronCallRegistryCallbacks,\r\n        private _slimcoreCallHandler: SlimCoreCommon.CallHandler,\r\n        private _slimcoreInstance: SlimCoreCommon.Engine,\r\n        private _deviceManager: SlimCoreElectronDeviceManager,\r\n        private _settings: SlimCoreCommon.Settings,\r\n        logger: CallingLogger,\r\n        private _appHooks: ISlimCoreElectronApplicationHooks,\r\n        public threadId: string,\r\n        public callId: string,\r\n        private currentUserSkypeIdentity: SkypeIdentity,\r\n        participantId: string,\r\n    ) {\r\n        super(logger.createChild(() => `Call[${this.slimcoreCallId}:callId=${this.callId}:participantId=${participantId}]`));\r\n        this._logger.info('constructor');\r\n\r\n        this.terminatedReason = TerminatedReason.Undefined;\r\n        this.participantId = participantId;\r\n\r\n        try {\r\n            this.endpointId = this._slimcoreInstance.getRegistrationId();\r\n        } catch (error) {\r\n            this._logger.warn(`getRegistrationId is missing!`);\r\n        }\r\n\r\n        this.screenSharingControl = new SlimCoreElectronScreenSharingControl(this._logger, this.callId, this._appHooks.getControlInjector());\r\n        this.holographicInteractionControl = new SlimCoreElectronHolographicInteractionControl(this._logger, this.callId);\r\n        this._dataChannelUsers = [this.screenSharingControl, this.holographicInteractionControl];\r\n\r\n        this._pendingPromise = Promise.resolve<any>(undefined);\r\n\r\n        this._asyncOperationHandler = new AsyncOperationHandler(this._logger);\r\n    }\r\n\r\n    public init(callInitOptions: CallInitOptions): void {\r\n        this._logger.info('init');\r\n        this.messageId = callInitOptions.messageId;\r\n        if (callInitOptions.threadId) {\r\n            this.threadId = callInitOptions.threadId;\r\n        }\r\n        this._meetingInfo = callInitOptions.meetingInfo;\r\n        this._enableGroupCallMeetupGeneration = !!callInitOptions.enableGroupCallMeetupGeneration;\r\n        this._transferContext = callInitOptions.transferContext && (callInitOptions.transferContext.context as SlimCoreTransferContext);\r\n        this._endpointMetadata = callInitOptions.endpointMetadata;\r\n        this.onBehalfOfMri = callInitOptions.onBehalfOf;\r\n        this._emergencyContent = callInitOptions.emergencyContent;\r\n        this._mediaPeerType = callInitOptions.mediaPeerType;\r\n        if (this.broadcastMeeting) {\r\n            this.broadcastMeeting.context = callInitOptions.broadcastContext;\r\n        }\r\n        this.raiseChanged();\r\n    }\r\n\r\n    public join(context: SkypeConversationLiveState, callStartOptions: CallStartOptions): Promise<void> {\r\n        return this._chainPromise(() => {\r\n            this.callerMri = SlimCoreCommon.stripMriAliases(context.groupCallInitiator);\r\n            return this._joinOrStartCall(\r\n                {\r\n                    audioDirection: callStartOptions.audioDirection,\r\n                    videoDirection: callStartOptions.videoDirection ||\r\n                        (callStartOptions.withVideo ? MediaDirection.Bidirectional : MediaDirection.ReceiveOnly),\r\n                    screenshareDirection: callStartOptions.screenshareDirection,\r\n                    datachannelDirection: callStartOptions.datachannelDirection,\r\n                    conversationUrl: context.conversationUrl,\r\n                    label: callStartOptions.label,\r\n                    conversationType: context.conversationType,\r\n                    enableLightWeightMeeting: false,\r\n                });\r\n        }, 'join');\r\n    }\r\n\r\n    public start(callStartOptions: CallStartOptions): Promise<void> {\r\n        if (this._transferContext) {\r\n            this._logger.info('Transfer: Starting transfered call.');\r\n            if (!this._transferContext.newCallObjectId) {\r\n                return Promise.reject(new Error('Transfer: Transfered context is invalid. Missing callObjectId or newCallObjectId'));\r\n            }\r\n\r\n            this.callType = CallType.P2P;\r\n            const isVideoEnabled = callStartOptions.withVideo || (callStartOptions.videoDirection === MediaDirection.Bidirectional);\r\n            return this._chainPromise(() => this._startTransferTargetCall(this._transferContext.newCallObjectId, isVideoEnabled), 'start');\r\n        }\r\n\r\n        return this._chainPromise(() => this._joinOrStartCall(\r\n            {\r\n                audioDirection: callStartOptions.audioDirection,\r\n                videoDirection: callStartOptions.videoDirection ||\r\n                    (callStartOptions.withVideo ? MediaDirection.Bidirectional : MediaDirection.Disabled),\r\n                screenshareDirection: callStartOptions.screenshareDirection,\r\n                datachannelDirection: callStartOptions.datachannelDirection,\r\n                ringOthers: callStartOptions.ringOthers,\r\n                label: callStartOptions.label,\r\n                conversationType: callStartOptions.isCast ? 'cast' : '',\r\n                enableLightWeightMeeting: false,\r\n                callKey: callStartOptions.callKey,\r\n                encryptedKey: callStartOptions.encryptedKey,\r\n                connectionType: callStartOptions.connectionType,\r\n            }), 'start');\r\n    }\r\n\r\n    public startCallToVoicemail(callStartOptions: CallVoicemailStartOptions): Promise<void> {\r\n        return this._chainPromise(() => {\r\n            return this._joinOrStartCall(\r\n                {\r\n                    callToVoicemail: true,\r\n                    voicemailResourcePath: callStartOptions.voicemailResourcePath,\r\n                    voicemailItemId: callStartOptions.voicemailItemId,\r\n                });\r\n        }, 'startCallToVoicemail');\r\n    }\r\n\r\n    public joinCallWithoutCallModality(context: SkypeConversationLiveState, callStartOptions: CallStartOptions): Promise<void> {\r\n        this._logger.info(`joinCallWithoutCallModality: ` + context.conversationUrl);\r\n\r\n        if (this.state !== CallState.None) {\r\n            return Promise.reject(new Error('Trying to start a call that has already been acted on'));\r\n        }\r\n\r\n        this._logger.info(`Calling slimcoreCallHandler.Subscribe`);\r\n        this.slimcoreCallId = this._slimcoreCallHandler.subscribe(\r\n            JSON.stringify({\r\n                'conversationUrl': context.conversationUrl,\r\n                'conversationId': this.callId,\r\n                'conversationType': context.conversationType,\r\n            }),\r\n            {\r\n                threadId: this.threadId,\r\n                messageId: this.messageId,\r\n                subject: callStartOptions.label,\r\n                conversationType: context.conversationType,\r\n                meetingInfo: this._meetingInfo ? JSON.stringify(this._meetingInfo) : null,\r\n                endpointMetadata: this._endpointMetadata,\r\n            });\r\n\r\n        this._assertSlimcoreObjectId(this.slimcoreCallId, 'Subscribe');\r\n\r\n        this._setCallState(CallState.Observing);\r\n        this._hookSlimCorePropertyChangedEventsForSubscribedCalls();\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n    public joinLightWeightMeeting(context: SkypeConversationLiveState, callStartOptions: CallStartOptions): Promise<void> {\r\n        return this._chainPromise(() => {\r\n            this.callerMri = SlimCoreCommon.stripMriAliases(context.groupCallInitiator);\r\n            return this._joinOrStartLightWeightMeeting(\r\n                {\r\n                    conversationUrl: context.conversationUrl,\r\n                    videoDirection: MediaDirection.Disabled,\r\n                    label: callStartOptions.label,\r\n                    conversationType: context.conversationType,\r\n                    enableLightWeightMeeting: true,\r\n                });\r\n        }, 'joinLightWeightMeeting');\r\n    }\r\n\r\n    public startLightWeightMeeting(callStartOptions: CallStartOptions = {}): Promise<void> {\r\n        return this._chainPromise(() => this._joinOrStartLightWeightMeeting(\r\n            {\r\n                ringOthers: callStartOptions.ringOthers,\r\n                videoDirection: MediaDirection.Disabled,\r\n                label: callStartOptions.label,\r\n                conversationType: callStartOptions.isCast ? 'cast' : '',\r\n                enableLightWeightMeeting: true,\r\n            }), 'startLightWeightMeeting');\r\n    }\r\n\r\n    private _assertSlimcoreObjectId(id: number, errorString: string) {\r\n        if (id === 0) {\r\n            throw new Error(errorString + ' Failed. Slimcore returned objectId of 0');\r\n        }\r\n    }\r\n\r\n    public setVideoContainer(node: IRenderTarget, options?: StartStreamOptions): Promise<void> {\r\n        this._localVideoContainer = node;\r\n\r\n        if (options) {\r\n            this._localVideoOptions = options;\r\n        }\r\n\r\n        if (!node) {\r\n            return this.stopVideo();\r\n        }\r\n        else {\r\n            if (this.isVideoOn) {\r\n                return this.startVideoSafe('setVideoContainer');\r\n            }\r\n        }\r\n        return Promise.resolve<void>();\r\n    }\r\n\r\n    private startVideoSafe(context: string): Promise<void> {\r\n        return this.startVideo().catch(error => {\r\n            this._logger.warn(`Could not start video from ${context}: callId = ${this.callId}`, error);\r\n        });\r\n    };\r\n\r\n    public startVideo(): Promise<void> {\r\n        this._logger.info('startVideo');\r\n\r\n        if (!this._canToggleVideo) {\r\n            return Promise.reject(new Error('Cannot toggle video'));\r\n        }\r\n\r\n        const always = () => {\r\n            this._canToggleScreenSharing = true;\r\n        };\r\n\r\n        const startVideoPromise = Promise.resolve()\r\n            .then(() => Promise.all([this._startPreviewVideo(), this._startLocalVideo()]))\r\n            .then(() => this._setVideoOn(true));\r\n\r\n        return this._asyncOperationHandler.registerPromise(ASYNC_OPERATION.StartVideo, startVideoPromise).then(always, error => {\r\n            this._logger.error('Failed to start video', error);\r\n            this.stopVideo();\r\n            always();\r\n            throw error;\r\n        });\r\n    }\r\n\r\n    public stopVideo(): Promise<void> {\r\n        this._logger.info('stopVideo');\r\n\r\n        const cleanUp = () => {\r\n            if (this._localVideo) {\r\n                this._localVideo.dispose();\r\n                this._localVideo = null;\r\n            }\r\n\r\n            if (this._localVideoPreview) {\r\n                this._localVideoPreview.dispose();\r\n                this._localVideoPreview = null;\r\n            }\r\n\r\n            this._setVideoOn(false);\r\n        };\r\n\r\n        const stopVideoPromise = Promise.resolve()\r\n            .then(() => {\r\n                if (this._localVideoPreview) {\r\n                    return SlimCoreCommon.forgetAndLog(this._localVideoPreview.stop(), this._logger, 'stopVideo: stopping localVideoPreview failed');\r\n                }\r\n            })\r\n            .then(() => {\r\n                if (this._localVideo) {\r\n                    return SlimCoreCommon.forgetAndLog(this._localVideo.stop(), this._logger, 'stopVideo: stopping localVideo failed');\r\n                }\r\n            });\r\n\r\n        return this._asyncOperationHandler.registerPromise(ASYNC_OPERATION.StopVideo, stopVideoPromise)\r\n            .then(cleanUp, error => {\r\n                this._logger.error(`Error while trying to Stop localVideo. Error: ${error}`);\r\n                cleanUp();\r\n            });\r\n    }\r\n\r\n    private _startPreviewVideo(): Promise<void> {\r\n        if (!this._localVideoContainer) {\r\n            return Promise.resolve<void>();\r\n        }\r\n\r\n        return Promise.resolve()\r\n            .then(() => this.disposeLocalVideoRenderer())\r\n            .then(() => {\r\n                this._localVideoPreview = new SlimCoreElectronLocalVideoPreview(\r\n                    this._localVideoContainer,\r\n                    this._deviceManager,\r\n                    this._settings,\r\n                    this._logger,\r\n                    Enums.VideoType.Video,\r\n                    this._localVideoOptions,\r\n                );\r\n                return this._localVideoPreview.startVideoAsync();\r\n            });\r\n    }\r\n\r\n    private _startLocalVideo(): Promise<void> {\r\n        if (!this._localVideo) {\r\n            this._localVideo = new SlimCoreElectronLocalVideo(\r\n                this.slimcoreCallId,\r\n                this._slimcoreCallHandler,\r\n                this._slimcoreInstance,\r\n                this._deviceManager,\r\n                this._logger,\r\n            );\r\n            this._localVideo.setCallState(this.state);\r\n            this._localVideo.changed(() => this._localVideoChanged());\r\n        }\r\n\r\n        return this._localVideo.start();\r\n    }\r\n\r\n    public startScreenSharing(source?: ISharingSource): Promise<void> {\r\n        this._logger.info('startScreenSharing');\r\n\r\n        if (!this._canToggleScreenSharing) {\r\n            return Promise.reject(new Error('cannot start screen sharing'));\r\n        }\r\n\r\n        if (this.screenSharingControl && this.screenSharingControl.isScreenSharingControlEnabled()) {\r\n            // If we were viewing (i.e. we are switching from viewing to sharing),\r\n            // cleanup any control state\r\n            this.screenSharingControl.shutdownControlForViewer();\r\n        }\r\n\r\n        const always = () => {\r\n            this._canToggleScreenSharing = true;\r\n        };\r\n\r\n        const startScreenSharingPromise = Promise.resolve()\r\n            .then(() => {\r\n\r\n                if (!this._localScreenShareStream) {\r\n                    this._localScreenShareStream = new SlimCoreElectronLocalScreenShare(this.slimcoreCallId, this._slimcoreCallHandler, this._slimcoreInstance, this._deviceManager, this._logger, this._appHooks, this.screenSharingControl);\r\n                    this._localScreenShareStream.changed(() => this._onLocalScreenShareStreamChanged()); /* no need to track this for disposal */\r\n                    this._localScreenShareStream.on('sharingSourceLost', () => this._onLocalScreenShareSourceLost());\r\n                    this._localScreenShareStream.on('windowClosed', () => this.stopScreenSharing());\r\n                }\r\n            })\r\n            .then(() => this._localScreenShareStream.start(source));\r\n\r\n        return this._asyncOperationHandler.registerPromise(ASYNC_OPERATION.StartScreenSharing, startScreenSharingPromise)\r\n            .then(always, error => {\r\n                always();\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    private _onLocalScreenShareSourceLost() {\r\n\r\n        if (this.screenSharingControl && this.screenSharingControl.isScreenSharingControlEnabled()) {\r\n            this.screenSharingControl.shutdownControlForSharer();\r\n        }\r\n        if (this._localScreenShareStream.isStreaming) {\r\n            this.event('sharingDropped').raise();\r\n        }\r\n    }\r\n\r\n    private _onLocalScreenShareStreamChanged() {\r\n        if (this._localScreenShareStream.isStreaming) {\r\n\r\n            if (!this.isScreenSharingOn && this._dataChannel && this.screenSharingControl && this.screenSharingControl.isScreenSharingControlEnabled()) {\r\n                // Initialize screen sharing control for sharer\r\n                this.screenSharingControl.initControlForSharer();\r\n\r\n                // Start the data channel used for pointers/remote control\r\n                // if necessary (it may already be started if we were\r\n                // previously viewing and performed a sharer switch)\r\n                this._dataChannel.start();\r\n            }\r\n            this._setScreenSharingOn(true);\r\n\r\n        } else if (!this._localScreenShareStream.isAvailable) {\r\n            if (this.isScreenSharingOn && this.screenSharingControl && this.screenSharingControl.isScreenSharingControlEnabled()) {\r\n                // Cleanup any control state - this is added to handle the call hold scenario\r\n                this.screenSharingControl.shutdownControlForSharer();\r\n            }\r\n            this._setScreenSharingOn(false);\r\n        }\r\n    }\r\n\r\n    public stopScreenSharing(isSharerSwitch?: boolean): Promise<void> {\r\n        this._logger.info('stopScreenSharing');\r\n\r\n        const always = () => {\r\n            this._canToggleScreenSharing = true;\r\n            if (this._localScreenShareStream) {\r\n                this._localScreenShareStream.dispose();\r\n                this._localScreenShareStream = null;\r\n            }\r\n            this._setScreenSharingOn(false);\r\n\r\n            if (this.screenSharingControl && this.screenSharingControl.isScreenSharingControlEnabled()) {\r\n                // Cleanup any control state\r\n                this.screenSharingControl.shutdownControlForSharer();\r\n            }\r\n        };\r\n\r\n        const stopScreenSharingPromise = Promise.resolve()\r\n            .then(() => {\r\n                if (this._localScreenShareStream) {\r\n                    return SlimCoreCommon.forgetAndLog(this._localScreenShareStream.stop(), this._logger, 'stopScreenSharing: stopping screen sharing failed');\r\n                }\r\n            });\r\n\r\n        return this._asyncOperationHandler.registerPromise(ASYNC_OPERATION.StartScreenSharing, stopScreenSharingPromise)\r\n            .then(always, error => {\r\n                always();\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    public shareSystemSound(enable: boolean): Promise<void> {\r\n        this._logger.info(`shareSystemSound: ${enable}`);\r\n        return Promise.resolve().then(() => {\r\n            this._slimcoreCallHandler.callShareSystemSound(this.slimcoreCallId, enable);\r\n        });\r\n    }\r\n\r\n    public transferCall(transferTargetMri: string): Promise<TerminatedReason> {\r\n        this._logger.log('Transfer: transferCall', transferTargetMri);\r\n        // TransferStatus:\r\n        //    Transferring: transferAcceptance,\r\n        //    Transferred: transferCompletion with Success,\r\n        //    Failed: transferCompletion with Failure\r\n        // For Blind transfer, transferAcceptance is the success criteria\r\n        const transferInfo: TransferInfo = {\r\n            transferTarget: transferTargetMri,\r\n            transferStatusSuccessList: [Enums.CallStatus.Transferring, Enums.CallStatus.Transferred],\r\n        };\r\n        return this._transferCall(transferInfo);\r\n    }\r\n\r\n    public callSafeTransfer(transferTargetMri: string): Promise<TerminatedReason> {\r\n        this._logger.log('Transfer: callSafeTransfer', transferTargetMri);\r\n        // TransferStatus:\r\n        //    Transferring: transferAcceptance,\r\n        //    Transferred: transferCompletion with Success,\r\n        //    Failed: transferCompletion with Failure\r\n        // For Safe transfer, transferCompletion is the success criteria\r\n        const transferInfo: TransferInfo = {\r\n            transferTarget: transferTargetMri,\r\n            transferStatusSuccessList: [Enums.CallStatus.Transferred],\r\n        };\r\n        return this._transferCall(transferInfo);\r\n    }\r\n\r\n    public callConsultativeTransfer(callWithTarget: ICall): Promise<TerminatedReason> {\r\n        this._logger.log('Transfer: callConsultativeTransfer', callWithTarget.callId);\r\n        // TransferStatus:\r\n        //    Transferring: transferAcceptance,\r\n        //    Transferred: transferCompletion with Success,\r\n        //    Failed: transferCompletion with Failure\r\n        // For Consultative transfer, transferCompletion is the success criteria\r\n        const transferInfo: TransferInfo = {\r\n            targetCallId: (callWithTarget as SlimCoreElectronCall).slimcoreCallId,\r\n            transferStatusSuccessList: [Enums.CallStatus.Transferred],\r\n        };\r\n        return this._transferCall(transferInfo);\r\n    }\r\n\r\n    private _currentTransferPromise: Promise<TerminatedReason>;\r\n\r\n    private _transferCall(transferInfo: TransferInfo): Promise<TerminatedReason> {\r\n        this._logger.log('Transfer: _transferCall', transferInfo);\r\n        if (this._currentTransferPromise) {\r\n            return Promise.reject(new Error('A transfer is already in progress'));\r\n        }\r\n        this._setTransferState(TransferState.Started);\r\n        this._currentTransferPromise = Promise.resolve()\r\n            .then(() => {\r\n                const transferCompletePromise = this._waitForTransferSuccessOrFailure(transferInfo.transferStatusSuccessList);\r\n                if (transferInfo.transferTarget) {\r\n                    this._slimcoreCallHandler.startCallTransfer(this.slimcoreCallId, transferInfo.transferTarget);\r\n                }\r\n                else if (transferInfo.targetCallId) {\r\n                    this._slimcoreCallHandler.startConsultativeCallTransfer(transferInfo.targetCallId, this.slimcoreCallId);\r\n                }\r\n                else {\r\n                    return Promise.reject(new Error('Either transferTarget/transfereeCallId should be present'));\r\n                }\r\n                return transferCompletePromise;\r\n            })\r\n            .then(reason => {\r\n                this._currentTransferPromise = null;\r\n                return reason;\r\n            }).catch(e => {\r\n                this._currentTransferPromise = null;\r\n                throw e;\r\n            });\r\n\r\n        return this._currentTransferPromise;\r\n    }\r\n\r\n    private _waitForTransferSuccessOrFailure(transferSuccessStatusList: Enums.CallStatus[]): Promise<TerminatedReason> {\r\n        this._logger.log('Transfer: _waitForTransferSuccessOrFailure', transferSuccessStatusList);\r\n        return new Promise<TerminatedReason>((resolve, reject) => {\r\n            let callTransferStatus = SlimCoreCommon.onObjectPropertyChanged(\r\n                this._slimcoreInstance, Enums.Property.CallTransferStatus, this.slimcoreCallId, (eventData: SlimCoreCommon.ObjectChangedEvent) => {\r\n                    this._logger.log('Transfer: _waitForTransferSuccessOrFailure, status changed', eventData.value);\r\n                    if (transferSuccessStatusList.indexOf(eventData.value) !== -1 ||\r\n                        eventData.value === Enums.CallStatus.Failed) {\r\n\r\n                        if (callTransferStatus) {\r\n                            callTransferStatus.dispose();\r\n                            callTransferStatus = null;\r\n                        }\r\n                        if (transferSuccessStatusList.indexOf(eventData.value) !== -1) {\r\n                            resolve(TerminatedReason.Success);\r\n                        } else {\r\n                            const failureReason = this.getIntProperty(Enums.Property.CallTransferFailureReason);\r\n                            const terminatedReason = SlimCoreElectronCall.convertParticipantReasonToTerminatedReason(\r\n                                SlimCoreElectronCall.convertFailureReasonToParticipantReason(failureReason));\r\n                            reject(terminatedReason);\r\n                        }\r\n                    }\r\n                });\r\n        });\r\n    }\r\n\r\n    public mute(): Promise<void> {\r\n        this._logger.info('mute');\r\n\r\n        if (this.isMuteDisabled()) {\r\n            return Promise.reject(new Error('Cannot mute when already locally muted'));\r\n        }\r\n\r\n        if (this._asyncOperationHandler.hasDeferred(ASYNC_OPERATION.WaitForMute)) {\r\n            this._logger.info('Return previous mute promise as one already exists');\r\n            return this._asyncOperationHandler.waitForDeferred(ASYNC_OPERATION.WaitForMute);\r\n        }\r\n        this._asyncOperationHandler.createDeferred(ASYNC_OPERATION.WaitForMute);\r\n        return Promise.resolve()\r\n            .then(() => {\r\n                if (this._asyncOperationHandler.hasDeferred(ASYNC_OPERATION.WaitForUnMute)) {\r\n                    this._logger.info('Waiting for previous unmute to finish');\r\n                    return this._asyncOperationHandler.waitForDeferred(ASYNC_OPERATION.WaitForUnMute);\r\n                }\r\n            })\r\n            .then(() => this._muteUnmute(true));\r\n    }\r\n\r\n    public unmute(): Promise<void> {\r\n        this._logger.info('unmute');\r\n\r\n        if (this.isUnMuteDisabled()) {\r\n            return Promise.reject(new Error('Cannot unmute when already locally and server unmuted'));\r\n        }\r\n\r\n        if (this._asyncOperationHandler.hasDeferred(ASYNC_OPERATION.WaitForUnMute)) {\r\n            this._logger.info('Return previous unmute promise as one already exists');\r\n            return this._asyncOperationHandler.waitForDeferred(ASYNC_OPERATION.WaitForUnMute);\r\n        }\r\n\r\n        this._asyncOperationHandler.createDeferred(ASYNC_OPERATION.WaitForUnMute);\r\n\r\n        return Promise.resolve()\r\n            .then(() => {\r\n                if (this._asyncOperationHandler.hasDeferred(ASYNC_OPERATION.WaitForMute)) {\r\n                    this._logger.info('Waiting for previous mute to finish');\r\n                    return this._asyncOperationHandler.waitForDeferred(ASYNC_OPERATION.WaitForMute);\r\n                }\r\n            })\r\n            .then(() => this._muteUnmute(false));\r\n    }\r\n\r\n    public muteSpeaker(): Promise<void> {\r\n        this._logger.info('muteSpeaker');\r\n\r\n        if (this.isSpeakerMuted) {\r\n            return Promise.reject(new Error('Cannot mute speaker when already muted'));\r\n        }\r\n\r\n        if (this._asyncOperationHandler.hasDeferred(ASYNC_OPERATION.WaitForMuteSpeaker)) {\r\n            this._logger.info('Return previous mute speaker promise as one already exists');\r\n            return this._asyncOperationHandler.waitForDeferred(ASYNC_OPERATION.WaitForMuteSpeaker);\r\n        }\r\n\r\n        this._asyncOperationHandler.createDeferred(ASYNC_OPERATION.WaitForMuteSpeaker);\r\n\r\n        return Promise.resolve()\r\n            .then(() => {\r\n                if (this._asyncOperationHandler.hasDeferred(ASYNC_OPERATION.WaitForUnMuteSpeaker)) {\r\n                    this._logger.info('Waiting for previous speaker unmute to finish');\r\n                    return this._asyncOperationHandler.waitForDeferred(ASYNC_OPERATION.WaitForUnMuteSpeaker);\r\n                }\r\n            })\r\n            .then(() => this._muteUnmuteSpeaker(true));\r\n    }\r\n\r\n    public unmuteSpeaker(): Promise<void> {\r\n        this._logger.info('unmuteSpeaker');\r\n\r\n        if (!this.isSpeakerMuted) {\r\n            return Promise.reject(new Error('Cannot unmute speaker when already unmuted'));\r\n        }\r\n\r\n        if (this._asyncOperationHandler.hasDeferred(ASYNC_OPERATION.WaitForUnMuteSpeaker)) {\r\n            this._logger.info('Return previous unmute speaker promise as one already exists');\r\n            return this._asyncOperationHandler.waitForDeferred(ASYNC_OPERATION.WaitForUnMuteSpeaker);\r\n        }\r\n\r\n        this._asyncOperationHandler.createDeferred(ASYNC_OPERATION.WaitForUnMuteSpeaker);\r\n\r\n        return Promise.resolve()\r\n            .then(() => {\r\n                if (this._asyncOperationHandler.hasDeferred(ASYNC_OPERATION.WaitForMuteSpeaker)) {\r\n                    this._logger.info('Waiting for previous speaker mute to finish');\r\n                    return this._asyncOperationHandler.waitForDeferred(ASYNC_OPERATION.WaitForMuteSpeaker);\r\n                }\r\n            })\r\n            .then(() => this._muteUnmuteSpeaker(false));\r\n    }\r\n\r\n    public muteParticipants(muteScope: MuteScope, callParticipants: ICallParticipant[]): Promise<void> {\r\n        this._logger.info(`muteParticipants: muteScope: ${muteScope}, callParticipants count: ${callParticipants.length}`);\r\n        return this._muteParticipants(muteScope, callParticipants);\r\n    }\r\n\r\n    public hold(): Promise<void> {\r\n        this._logger.info('hold');\r\n        return this._holdUnhold(true);\r\n    }\r\n\r\n    public unhold(): Promise<void> {\r\n        this._logger.info('unhold');\r\n        return this._holdUnhold(false);\r\n    }\r\n\r\n    public updateEndpointMetadata(endpointMetadata: string): Promise<void> {\r\n        this._logger.info('updateEndpointMetadata');\r\n        if (this.state !== CallState.Connected) {\r\n            this._logger.warn(`Trying to updateEndpointMetadata in a call which is not connected, callId = ${this.callId}`);\r\n            return Promise.reject(new Error('cannot updateEndpointMetadata in a call which is not connected'));\r\n        }\r\n        this._endpointMetadata = endpointMetadata; // keeping the local value in sync\r\n        return this._updateEndpointMetadata(this._endpointMetadata);\r\n    }\r\n\r\n    public sendDtmfTone(dtmfTone: DtmfTone): Promise<void> {\r\n        this._logger.info('DTMF tone ' + dtmfTone);\r\n        return this._sendDtmfTone(dtmfTone);\r\n    }\r\n\r\n    public setAudioUsageMode(audioUsageMode: AudioUsageMode): Promise<void> {\r\n        this._logger.info('set audio usage mode to ' + audioUsageMode);\r\n        return this._setAudioUsageMode(audioUsageMode);\r\n    }\r\n\r\n    public getTechnicalInformationJson(): Promise<string> {\r\n        return Promise.resolve().then(() => {\r\n            try {\r\n                return this._slimcoreCallHandler.callGetTechnicalInformationJson(this.slimcoreCallId);\r\n            }\r\n            catch (error) {\r\n                this._logger.error(`Error in callGetTechnicalInformationJson callId: ${this.callId}, error: ${error}`);\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n\r\n    public startAudio(): Promise<MediaNegotiationStatusCode> {\r\n        this._logger.info('startAudio');\r\n\r\n        if (this._asyncOperationHandler.hasDeferred(ASYNC_OPERATION.StopAudio)) {\r\n            this._logger.error('cannot startAudio when stopAudio is in progress');\r\n            return Promise.reject(new Error('cannot startAudio when stopAudio is in progress'));\r\n        }\r\n\r\n        if (this.state !== CallState.Connected) {\r\n            this._logger.error('cannot startAudio when call is not connected');\r\n            return Promise.reject(new Error('cannot startAudio when call is not connected'));\r\n        }\r\n\r\n        if (this._asyncOperationHandler.hasDeferred(ASYNC_OPERATION.StartAudio)) {\r\n            this._logger.info('Return previous StartAudio promise as one already exists');\r\n            return this._asyncOperationHandler.waitForDeferred(ASYNC_OPERATION.StartAudio);\r\n        }\r\n        this._slimcoreCallHandler.callStartAudio(this.slimcoreCallId);\r\n        return this._asyncOperationHandler.createDeferred<MediaNegotiationStatusCode>(ASYNC_OPERATION.StartAudio);\r\n    }\r\n\r\n    public stopAudio(): Promise<MediaNegotiationStatusCode> {\r\n        this._logger.info('stopAudio');\r\n\r\n        if (this._asyncOperationHandler.hasDeferred(ASYNC_OPERATION.StartAudio)) {\r\n            this._logger.error('cannot stopAudio when startAudio is in progress');\r\n            return Promise.reject(new Error('cannot stopAudio when startAudio is in progress'));\r\n        }\r\n\r\n        if (this.state !== CallState.Connected) {\r\n            this._logger.error('cannot stopAudio when call is not connected');\r\n            return Promise.reject(new Error('cannot stopAudio when call is not connected'));\r\n        }\r\n\r\n        if (this._asyncOperationHandler.hasDeferred(ASYNC_OPERATION.StopAudio)) {\r\n            this._logger.info('Return previous StopAudio promise as one already exists');\r\n            return this._asyncOperationHandler.waitForDeferred(ASYNC_OPERATION.StopAudio);\r\n        }\r\n        this._slimcoreCallHandler.callStopAudio(this.slimcoreCallId);\r\n        return this._asyncOperationHandler.createDeferred<MediaNegotiationStatusCode>(ASYNC_OPERATION.StopAudio);\r\n    }\r\n\r\n    private _onMediaNegotiationStatusChanged(eventData: SlimCoreCommon.MediaNegotiationStatusChangedEvent) {\r\n        this._logger.info(`_onMediaNegotiationStatusChanged modalityType: ${eventData.modalityType}\r\n            mediaNegotiationStatusCode: ${eventData.mediaNegotiationStatusCode}`);\r\n\r\n        if (eventData.modalityType !== Enums.ModalityType.Audio) {\r\n            return;\r\n        }\r\n\r\n        const operationName = (this._asyncOperationHandler.hasDeferred(ASYNC_OPERATION.StartAudio)) ?\r\n            ASYNC_OPERATION.StartAudio : ASYNC_OPERATION.StopAudio;\r\n        if (this._asyncOperationHandler.hasDeferred(operationName)) {\r\n            if (eventData.mediaNegotiationStatusCode === Enums.MediaNegotiationStatusCode.Succeeded) {\r\n                this._asyncOperationHandler.resolveDeferred(operationName, eventData.mediaNegotiationStatusCode);\r\n            } else {\r\n                this._asyncOperationHandler.rejectDeferred(operationName, eventData.mediaNegotiationStatusCode);\r\n            }\r\n        }\r\n    }\r\n\r\n    public stop(forEveryone = false): Promise<void> {\r\n        this._logger.info('stop forEveryone ' + forEveryone);\r\n        if (this.state === CallState.Disconnecting) {\r\n            this._logger.warn(`Trying to stop a call which is already Disconnecting, callId = ${this.callId}`);\r\n            return Promise.reject(new Error('cannot stop call in Disconnecting state'));\r\n        }\r\n\r\n        if (this.state === CallState.Disconnected) {\r\n            this._logger.warn(`Trying to stop a call which is already Disconnected, callId = ${this.callId}`);\r\n            return Promise.reject(new Error('cannot stop call in Disconnected state'));\r\n        }\r\n\r\n        const isInObservingState = this.state === CallState.Observing;\r\n        this._setCallState(CallState.Disconnecting);\r\n\r\n        return Promise.resolve<void>()\r\n            .then(() => {\r\n                if (isInObservingState) {\r\n                    this._setCallState(CallState.Disconnected);\r\n                    return this._cleanCallResources();\r\n                } else {\r\n                    this._logger.warn(`Stop: Leaving from call with callId = ${this.callId}`);\r\n                    return this._leaveSlimCoreCall(forEveryone);\r\n                }\r\n            })\r\n            .then(() => {\r\n                this._slimcoreCallRegistryCallbacks.onCallEnded(this.slimcoreCallId);\r\n            })\r\n            .catch(error => {\r\n                this._logger.error(`Error in leaveSlimCoreCall(), callId = ${this.callId}, error = ${error}`);\r\n                this._slimcoreCallRegistryCallbacks.onCallEnded(this.slimcoreCallId);\r\n                this._setCallState(CallState.Disconnected);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    private _leaveSlimCoreCall(forEveryone: boolean): Promise<void> {\r\n        this._logger.info(`leaveSlimCoreCall forEveryone: ${forEveryone}`);\r\n\r\n        if (this.slimcoreCallId === 0) {\r\n            return Promise.resolve<void>();\r\n        }\r\n\r\n        const waitForEndCallPromise = this._asyncOperationHandler.createDeferred(ASYNC_OPERATION.EndCall);\r\n\r\n        return Promise.resolve<void>()\r\n            .then(() => {\r\n                if (forEveryone) {\r\n                    this._slimcoreCallHandler.endCallForAll(this.slimcoreCallId);\r\n                } else {\r\n                    this._slimcoreCallHandler.leaveCall(this.slimcoreCallId);\r\n                }\r\n            })\r\n            .then(() => this._logger.info('Waiting for SlimCore to end call'))\r\n            .then(() => waitForEndCallPromise)\r\n            .then(() => {\r\n                this._logger.info('SlimCore ended the call');\r\n            }, (err) => {\r\n                this._logger.error(`Error in leaveSlimCoreCall().. ignoring, callId = ${this.callId}, error = ${err}`);\r\n                return Promise.resolve<void>(undefined);\r\n            });\r\n    }\r\n\r\n    public acknowledge(incomingCallPayload: IncomingCallPayload): Promise<CallAcknowledgeResult> {\r\n        const acknowledgeAsync: () => Promise<CallAcknowledgeResult> = () => {\r\n            if (this.state !== CallState.None && this.state !== CallState.Observing) {\r\n                return Promise.reject(new Error('Trying to acknowledge a call that has already been acted on'));\r\n            }\r\n\r\n            this._logger.info('Acknowledging...');\r\n\r\n            const correlationIds = {\r\n                callId: incomingCallPayload.convoCallId,\r\n                callerId: incomingCallPayload.callerId,\r\n                launchTime: incomingCallPayload.launchTime.toString(),\r\n                pushReceivedTime: incomingCallPayload.pushReceivedTime.toString(),\r\n                registrationId: incomingCallPayload.registrationId,\r\n                participantId: incomingCallPayload.participantId,\r\n            };\r\n\r\n            const token = this._slimcoreInstance.handlePushNotification({\r\n                eventType: incomingCallPayload.body.evt,\r\n                servicePayload: incomingCallPayload.body.gp,\r\n                correlationIdsJson: JSON.stringify(correlationIds),\r\n                callKey: incomingCallPayload.callKey,\r\n                connectionType: SlimCoreElectronCall.convertConnectionType(incomingCallPayload.connectionType),\r\n            });\r\n\r\n            let callbacks: IDisposable[] = [];\r\n            let waitForHandlePush = this._asyncOperationHandler.createDeferred<CallAcknowledgeResult>(ASYNC_OPERATION.WaitForHandlePush);\r\n            callbacks.push(SlimCoreCommon.onPushHandlingComplete(this._slimcoreInstance, token, event => {\r\n                if (event.token !== token) {/* #1237310 (Closed Won't Fix Bug) *//* tslint:disable-line:possible-timing-attack */\r\n                    this._logger.info('HandlePushNotification: Received unexpected token '\r\n                        + event.token + ' (expected ' + token + ')');\r\n                    return;\r\n                }\r\n\r\n                this._logger.info('HandlePushNotification: Received event for token: ' + event.token\r\n                    + ' result: ' + event.result);\r\n                if (event.result === Enums.PushHandlingResult.CallSetupSucceeded) {\r\n                    this._logger.info('HandlePushNotification: Succeeded');\r\n                    this._asyncOperationHandler.resolveDeferred(\r\n                        ASYNC_OPERATION.WaitForHandlePush,\r\n                        { code: CallAcknowledgeResultCode.CallSetupSucceeded, success: true },\r\n                    ).catch(e => {\r\n                        this._logger.info('HandlePushNotification: Failed', e);\r\n                    });\r\n                }\r\n                else if (event.result === Enums.PushHandlingResult.CallSetupProgress) {\r\n                    this._logger.info('HandlePushNotification: In progress, keep waiting...');\r\n                }\r\n                else {\r\n                    const message = 'HandlePushNotification: Failed ' + event.result;\r\n                    this._logger.warn(message);\r\n                    this._asyncOperationHandler.resolveDeferred(\r\n                        ASYNC_OPERATION.WaitForHandlePush,\r\n                        SlimCoreElectronCall.convertPushHandlingResult(event.result),\r\n                    ).catch(e => {\r\n                        this._logger.info('HandlePushNotification: Failed', e);\r\n                    });\r\n                }\r\n            }));\r\n\r\n            let waitForRinging = this._asyncOperationHandler.createDeferred(ASYNC_OPERATION.WaitForRinging);\r\n            // We do not have a call object ID yet, so need to listen globally\r\n            callbacks.push(SlimCoreCommon.onObjectTypeChanged(this._slimcoreInstance, Enums.ObjectType.Call, event => {\r\n                const callId = this._getStrProperty(this._slimcoreCallHandler, event.objectId, Enums.Property.CallName);\r\n                const status = this._getIntProperty(this._slimcoreCallHandler, event.objectId, Enums.Property.CallStatus);\r\n                const active = this._getIntProperty(this._slimcoreCallHandler, event.objectId, Enums.Property.CallIsActive);\r\n\r\n                if (callId !== this.callId) {\r\n                    this._logger.info('Ignoring SlimCore event for incorrect call ' + event.objectId + '/' + callId);\r\n                    return;\r\n                }\r\n\r\n                if ((status === Enums.CallStatus.RingingIn) || (active === 1)) {\r\n                    this.attachSlimCoreCallObject(event.objectId);\r\n                    this._assertSlimcoreObjectId(this.slimcoreCallId, 'Acknowledge');\r\n                    this._fillIncomingCallProperties();\r\n\r\n                    if (this._asyncOperationHandler.hasDeferred(ASYNC_OPERATION.WaitForRinging)) {\r\n                        this._asyncOperationHandler.resolveDeferred(ASYNC_OPERATION.WaitForRinging)\r\n                            .then(() => {\r\n                                this._logger.info('Reached ringing/active state for call pending acknowledgement');\r\n                            }, (e) => {\r\n                                this._logger.info('Reached ringing/active state for call pending acknowledgement', e);\r\n                            });\r\n                    }\r\n                    this.raiseChanged();\r\n                }\r\n            }));\r\n\r\n            const unsubscribe = () => _.each(callbacks, c => c.dispose());\r\n            return waitForHandlePush.then(pushResult => {\r\n                if (!pushResult.success) {\r\n                    return pushResult;\r\n                }\r\n\r\n                return waitForRinging.then(() => {\r\n                    this._setCallState(CallState.Notified);\r\n                    return pushResult;\r\n                });\r\n            }).then(result => {\r\n                this._logger.debug('Acknowledge done');\r\n                unsubscribe();\r\n                return result;\r\n            }, error => {\r\n                unsubscribe();\r\n                this._asyncOperationHandler.maybeRejectDeferred(ASYNC_OPERATION.WaitForRinging, error);\r\n                this._asyncOperationHandler.maybeRejectDeferred(ASYNC_OPERATION.WaitForHandlePush, error);\r\n                throw error;\r\n            });\r\n        };\r\n\r\n        return this._chainPromise(acknowledgeAsync, 'acknowledge');\r\n    }\r\n\r\n    public accept(callAcceptOptions: CallAcceptOptions): Promise<void> {\r\n        this._logger.info(`accept, answerMediaType: ${callAcceptOptions.answerMediaType},\r\n                            withVideo: ${callAcceptOptions.withVideo},\r\n                            muted: ${callAcceptOptions.muted}`);\r\n\r\n        if (callAcceptOptions.muted) {\r\n            this._logger.warn('Accepting call muted is not implemented');\r\n        }\r\n\r\n        this._setCallState(CallState.Connecting);\r\n        const startCallPromise = this._asyncOperationHandler.createDeferred<void>(ASYNC_OPERATION.StartCall);\r\n\r\n        return Promise.resolve()\r\n            .then(() => this._acceptCall(callAcceptOptions))\r\n            .then(() => {\r\n                this._updateCallType(this.getIntProperty(Enums.Property.CallIsConference));\r\n            })\r\n            .then(() => {\r\n                if (callAcceptOptions.answerMediaType === AnswerMediaType.AnswerWithAudioVideo) {\r\n                    this._logger.info('Call has been answered - turning on video');\r\n                    return this.startVideoSafe('acceptCall');\r\n                }\r\n            })\r\n            .then(() => startCallPromise)\r\n            .then(() => this._setCallState(CallState.Connected))\r\n            .catch(error => {\r\n                this.stop();\r\n                this._logger.error(`Error in accept(), callId = ${this.callId}, error = ${error}`);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    private _acceptCall(callAcceptOptions: CallAcceptOptions): void {\r\n        try {\r\n            if (callAcceptOptions.withVideo) {\r\n                callAcceptOptions.answerMediaType = AnswerMediaType.AnswerWithAudioVideo;\r\n            }\r\n            this._slimcoreCallHandler.acceptCall(this.slimcoreCallId, SlimCoreElectronCall.toAnswerMediaType(callAcceptOptions.answerMediaType));\r\n        } catch (error) {\r\n            this._logger.info(`acceptCall is missing from the slimcore electron module: ${error}`);\r\n            if (callAcceptOptions.answerMediaType === AnswerMediaType.AnswerWithAudioVideo) {\r\n                callAcceptOptions.withVideo = true;\r\n            }\r\n            this._slimcoreCallHandler.answerCall(this.slimcoreCallId, callAcceptOptions.withVideo);\r\n        }\r\n    }\r\n\r\n    public reject(): Promise<void> {\r\n        return Promise.resolve()\r\n            .then(() => {\r\n                if (this.state !== CallState.Notified) {\r\n                    throw new Error('Only calls in Notified state can be rejected');\r\n                }\r\n\r\n                return this.stop();\r\n            });\r\n    }\r\n\r\n    public reconnect(): Promise<void> {\r\n        return Promise.reject(new Error('Retargeting is not supported'));\r\n    }\r\n\r\n    public provideCallQualityFeedback(questionaryId: string, trackingReason: string, rating: number, problemTokens: string): Promise<void> {\r\n        this._logger.info('provideCallQualityFeedback');\r\n        return Promise.resolve().then(() => {\r\n            try {\r\n                this._slimcoreCallHandler.provideCallQualityFeedback(this.callId, this.participantId, questionaryId, trackingReason, rating, problemTokens);\r\n            }\r\n            catch (error) {\r\n                this._logger.error(`Error in provideCallQualityFeedback callId: ${this.callId}, error: ${error}`);\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n\r\n    private isServerMuteUnmuteEnabled = () => {\r\n        if (!this.endpoints) {\r\n            // Endpoints not set until once the call is established\r\n            return false;\r\n        }\r\n\r\n        return _.some(this.endpoints.endpointDetails, (endpoint: CallParticipantEndpointDetails) => {\r\n            if (this.endpointId === endpoint.endpointId) {\r\n                return endpoint.capabilities && endpoint.capabilities.serverMuteUnmute === 'enabled';\r\n            }\r\n            return false;\r\n        });\r\n    }\r\n\r\n    private isMuteDisabled = () => {\r\n        return this.isMuted;\r\n    }\r\n\r\n    private isUnMuteDisabled = () => {\r\n        if (this.callType === CallType.P2P) {\r\n            return !this.isMuted;\r\n        } else if (this.callType === CallType.Conference) {\r\n            if (!this.isServerMuteUnmuteEnabled()) {\r\n                return !this.isMuted;\r\n            }\r\n            return !this.isServerMuted && !this.isMuted;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private _onCallMutedUnmuted(eventData: SlimCoreCommon.ObjectChangedEvent) {\r\n        let callIsMuted = !!eventData.value;\r\n\r\n        this._logger.info(`onCallMutedUnmuted current: ${this.isMuted} new: ${!!callIsMuted}`);\r\n\r\n        // Only resolve unmuted promise if we are serverMuted when we receive onUnmuteOperationStatusChange\r\n        if (!this.isServerMuted && !callIsMuted) {\r\n            this._asyncOperationHandler.maybeResolveDeferred(ASYNC_OPERATION.WaitForUnMute);\r\n        }\r\n\r\n        if (callIsMuted) {\r\n            this._asyncOperationHandler.maybeResolveDeferred(ASYNC_OPERATION.WaitForMute);\r\n        }\r\n\r\n        if (this.isMuted !== callIsMuted) {\r\n            this.isMuted = callIsMuted;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _onCallMutedUnmutedSpeaker(eventData: SlimCoreCommon.ObjectChangedEvent) {\r\n        let speakerMuted = eventData.value;\r\n\r\n        this._logger.info(`_onCallMutedUnmutedSpeaker current: ${this.isSpeakerMuted} new: ${!!speakerMuted}`);\r\n\r\n        if (speakerMuted === 0) {\r\n            this._asyncOperationHandler.maybeResolveDeferred(ASYNC_OPERATION.WaitForUnMuteSpeaker);\r\n        } else if (speakerMuted === 1) {\r\n            this._asyncOperationHandler.maybeResolveDeferred(ASYNC_OPERATION.WaitForMuteSpeaker);\r\n        }\r\n    }\r\n\r\n    private _onCallIsServerMuted(eventData: SlimCoreCommon.ObjectChangedEvent) {\r\n        const isServerMuted = !!eventData.value;\r\n        this._logger.info('_onCallIsServerMuted ' + isServerMuted);\r\n        if (isServerMuted !== this.isServerMuted) {\r\n            this.isServerMuted = isServerMuted;\r\n\r\n            this.event('serverMutedChanged').raise(isServerMuted);\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _onParticipantJoinedOrRemoved(eventData?: SlimCoreCommon.ObjectChangedEvent) {\r\n        const newRoster: { [mri: string]: number } = {};\r\n        const participantsToAdd: { mri: string, id: number }[] = [];\r\n        const participantsToRemove: SlimCoreElectronCallParticipant[] = [];\r\n        let particiants = this._slimcoreCallHandler.callGetParticipants(this.slimcoreCallId) || [];\r\n        particiants.forEach(participant => {\r\n            const mri = this._getStrProperty(this._slimcoreCallHandler, participant, Enums.Property.ParticipantMriIdentity);\r\n            newRoster[mri] = participant;\r\n        });\r\n        this._logger.info('_onParticipantJoinedOrRemoved participantsInRoster:', newRoster);\r\n\r\n        const existsInRoster = (participant: SlimCoreElectronCallParticipant) => newRoster.hasOwnProperty(participant.id);\r\n        const hasSlimcoreObjectId = (participant: SlimCoreElectronCallParticipant) => participant.slimcoreObjectId;\r\n        const isSameAsInRoster = (participant: SlimCoreElectronCallParticipant) => participant.slimcoreObjectId === newRoster[participant.id];\r\n\r\n        this.participants.forEach((localParticipant) => {\r\n            if (existsInRoster(localParticipant)) {\r\n                if (!hasSlimcoreObjectId(localParticipant)) {\r\n                    participantsToAdd.push({ mri: localParticipant.id, id: newRoster[localParticipant.id] });\r\n                    delete newRoster[localParticipant.id];\r\n                } else if (!isSameAsInRoster(localParticipant)) {\r\n                    // edge case: we locally have participant and his ID is NOT the same as the one in roster - remove local first, he'll be added from roster after\r\n                    // if id is the same - we'll process participant to make sure all pending promises are cleared.\r\n                    this._handleParticipantRemoved(localParticipant.id, localParticipant.stateReason);\r\n                }\r\n\r\n            } else {\r\n                participantsToRemove.push(localParticipant);\r\n            }\r\n        });\r\n        // add whats remaining in new roster\r\n        Object.keys(newRoster).forEach(mri => participantsToAdd.push({ mri, id: newRoster[mri] }));\r\n        participantsToAdd.forEach(participant => this._handleParticipantJoined(participant.mri, participant.id));\r\n        participantsToRemove.forEach(participant => this._handleParticipantRemoved(participant.id, participant.stateReason));\r\n    }\r\n\r\n    private _onLightWeightMeetingAddedOrRemoved(eventData?: SlimCoreCommon.ObjectChangedEvent) {\r\n        let lightWeightMeetingInCall: number = this._slimcoreCallHandler.getLightWeightMeetingSession(this.slimcoreCallId);\r\n        this._logger.info('_onLightWeightMeetingAddedOrRemoved', lightWeightMeetingInCall);\r\n\r\n        if (lightWeightMeetingInCall === 0 && this.lightWeightMeeting) {\r\n            this._removeLightWeightMeeting();\r\n        } else if (this.lightWeightMeeting) {\r\n            this.lightWeightMeeting.attachSlimCoreLightWeightMeetingId(lightWeightMeetingInCall);\r\n        }\r\n    }\r\n\r\n    private _updateDominantSpeakerList(): { fullOrderMatches: boolean, topSpeakerMatches: boolean } {\r\n        let sortedDominantSpeakerIds: string[] = _.map(\r\n            _.sortBy(\r\n                _.map(\r\n                    _.filter(this.participants, p => p.state === ParticipantState.Connected),\r\n                    participant => {\r\n                        return {\r\n                            mri: participant.id,\r\n\r\n                            // If dominant speaker is 0, then set it to max value so it always appears last in the list.\r\n                            rank: participant.dominantSpeakerRank ? participant.dominantSpeakerRank : this.participants.length + 1,\r\n                        };\r\n                    }), 'rank'),\r\n            elem => {\r\n                return elem.mri;\r\n            });\r\n\r\n        const fullOrderMatches = _.isEqual(this.dominantSpeakerInfo.speakerList, sortedDominantSpeakerIds);\r\n        let topSpeakerMatches = fullOrderMatches;\r\n        if (!topSpeakerMatches) {\r\n            topSpeakerMatches = !_.isEmpty(this.dominantSpeakerInfo.speakerList)\r\n                && !_.isEmpty(sortedDominantSpeakerIds)\r\n                && (_.head(this.dominantSpeakerInfo.speakerList) === _.head(sortedDominantSpeakerIds));\r\n        }\r\n\r\n        this.dominantSpeakerInfo = {\r\n            speakerList: sortedDominantSpeakerIds,\r\n            timestamp: new Date(),\r\n        };\r\n\r\n        if (!fullOrderMatches) {\r\n            this._logger.info('_updateDominantSpeakerList: ' + JSON.stringify(this.dominantSpeakerInfo));\r\n        }\r\n\r\n        return { fullOrderMatches, topSpeakerMatches };\r\n    }\r\n\r\n    private _handleParticipantRemoved(participantId: string, reason: ParticipantStateReason = ParticipantStateReason.None) {\r\n        this._logger.info('handleParticipantRemoved: ' + participantId + ' reason = ' + reason);\r\n\r\n        // Notify screen sharing control about participant removed\r\n        if (this.screenSharingControl && this.screenSharingControl.isScreenSharingControlEnabled()) {\r\n            this.screenSharingControl.handleParticipantRemoved(participantId);\r\n        }\r\n\r\n        const participant = this._removeParticipantEntry(participantId);\r\n        if (!participant) {\r\n            this._logger.error('handleParticipantRemoved: unable to remove participant ' + participantId);\r\n            return;\r\n        }\r\n\r\n        participant.setState(ParticipantState.Disconnected, reason);\r\n        if (this._asyncOperationHandler.hasDeferred(ASYNC_OPERATION.AddParticipant, participantId)) {\r\n            this._asyncOperationHandler.rejectDeferred(ASYNC_OPERATION.AddParticipant, reason, participantId);\r\n        }\r\n        participant.setLightWeightMeetingRole(ParticipantLightWeightMeetingRole.None);\r\n        participant.rejectAdmitParticipantDeferred(reason);\r\n\r\n        SlimCoreCommon.forgetAndLog(participant.cleanUpAsync(), this._logger, 'Participant clean-up failed')\r\n            .then(() => participant.dispose());\r\n\r\n        this._updateDominantSpeakerList();\r\n        this.event('participantRemoved').raise(participant);\r\n        this.raiseChanged();\r\n    }\r\n\r\n    private _handleParticipantJoined(participantId: string, slimcoreObjectId: number) {\r\n        this._logger.debug(`handleParticipantJoined: ` + participantId);\r\n        let participant = this._getOrCreateParticipant(participantId, slimcoreObjectId);\r\n        // if the participant state is connected/has early media/ has connected and put on hold\r\n        if (SlimCoreElectronCallParticipant.isParticipantActive(participant.state) &&\r\n            this._asyncOperationHandler.hasDeferred(ASYNC_OPERATION.AddParticipant, participantId)) {\r\n            this._asyncOperationHandler.resolveDeferred(ASYNC_OPERATION.AddParticipant, null, participantId);\r\n        }\r\n\r\n        if (!this._updateDominantSpeakerList().fullOrderMatches) {\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _admitParticipantToSlimCoreElectronCall(participantId: string): Promise<void> {\r\n        let participantsToAdmit = [participantId];\r\n        this._slimcoreCallHandler.admitParticipants(this.slimcoreCallId, participantsToAdmit);\r\n\r\n        return Promise.resolve<void>();\r\n    }\r\n\r\n    public admitParticipant(participantId: string): Promise<void> {\r\n        this._logger.info('admitParticipant: participantId = ' + participantId);\r\n\r\n        // if slimcore call is not created yet, the admit call will fail\r\n        if (this.slimcoreCallId === 0) {\r\n            return Promise.reject(ParticipantStateReason.CallNotFound);\r\n        }\r\n\r\n        // Admit participants that are inLobby only\r\n        const participant = this._getOrCreateParticipant(participantId);\r\n        if (participant.state !== ParticipantState.InLobby) {\r\n            return Promise.reject(ParticipantStateReason.ParticipantDoesNotExist);\r\n        }\r\n\r\n        const waitForAdmitParticipant = async.defer<void>();\r\n        const promise = Promise.resolve()\r\n            .then(() => this._admitParticipantToSlimCoreElectronCall(participantId))\r\n            .then(() => participant.addAdmitParticipantDeferred(waitForAdmitParticipant))\r\n            .then(() => waitForAdmitParticipant.promise)\r\n            .then(() => this._logger.info('Admitted participant = ' + participantId))\r\n            .catch(error => {\r\n                this._logger.error(`Error in admitParticipant(), callId = ${this.callId}, error = ${error}`);\r\n                return Promise.reject(error);\r\n            });\r\n\r\n        this.raiseChanged();\r\n        return promise;\r\n    }\r\n\r\n    private _addParticipantToSlimCoreElectronCall(participantId: string, threadId?: string, messageId?: string, participantInvitationData?: string): Promise<number> {\r\n        this._logger.info('addParticipantToSlimCoreElectronCall: participantId = ' + participantId\r\n            + ' threadId = ' + threadId\r\n            + ' messageId = ' + messageId\r\n            + ' participantInvitationData = ' + participantInvitationData);\r\n\r\n        const objectId = this._slimcoreCallHandler.addParticipant(\r\n            this.slimcoreCallId,\r\n            participantId,\r\n            SlimCoreCommon.mapToEmptyStrIfFalsy(threadId),\r\n            SlimCoreCommon.mapToEmptyStrIfFalsy(messageId),\r\n            SlimCoreCommon.mapToEmptyStrIfFalsy(participantInvitationData),\r\n        );\r\n\r\n        if (objectId === 0) {\r\n            return Promise.reject(new Error('AddParticipant call to slimcore failed'));\r\n        } else {\r\n            return Promise.resolve(objectId);\r\n        }\r\n    }\r\n\r\n    private generateAliasedMri(id: string, sipUri?: string) {\r\n        let aliasedMri = id;\r\n\r\n        if (sipUri) {\r\n            aliasedMri += SlimCoreCommon.MRI_ALIAS_PREFIX + SlimCoreCommon.MRI_SIP_PREFIX + sipUri;\r\n        }\r\n\r\n        return aliasedMri;\r\n    }\r\n\r\n    public callMeBack(participantMri: string, assertedMri?: string): Promise<void> {\r\n\r\n        this._logger.info(`callMeBack: participantMri = ${participantMri} assertedMri = ${assertedMri}`);\r\n\r\n        if (this.slimcoreCallId === 0) {\r\n            this._logger.error('call is not initialized yet');\r\n            return Promise.reject(new Error('call is not initialized yet'));\r\n        }\r\n\r\n        if (this._asyncOperationHandler.hasDeferred(ASYNC_OPERATION.CallMeBack, participantMri)) {\r\n            this._logger.info('Return previous callMeBack promise as one already exists');\r\n            return this._asyncOperationHandler.waitForDeferred(ASYNC_OPERATION.CallMeBack, participantMri);\r\n        }\r\n\r\n        const waitForCallMeBackPromise = this._asyncOperationHandler.createDeferred<void>(\r\n            ASYNC_OPERATION.CallMeBack, participantMri);\r\n\r\n        const currentUserMri = this.generateAliasedMri(SlimCoreCommon.MRI_SKYPE_PREFIX + this.currentUserSkypeIdentity.id,\r\n            this.currentUserSkypeIdentity.sipUri);\r\n\r\n        return Promise.resolve<void>()\r\n            .then(() => {\r\n                const result = this._slimcoreCallHandler.callMeBack(this.slimcoreCallId, participantMri, assertedMri || currentUserMri);\r\n                if (!result) {\r\n                    this._asyncOperationHandler.rejectDeferred(ASYNC_OPERATION.CallMeBack, ParticipantStateReason.AddingFailed, participantMri);\r\n                }\r\n                return waitForCallMeBackPromise;\r\n            })\r\n            .catch(error => {\r\n                this._logger.error(`Error in callMeBack(), callId = ${this.callId}, error = ${error}`);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    public addParticipant(participantId: string, payload: AddParticipantPayload = {}): Promise<ICallParticipant> {\r\n        if (payload.sipUri) {\r\n            this._logger.error('sipUri not supported yet');\r\n        }\r\n\r\n        let participantInvitationData: string;\r\n        if (payload.participantInvitationData) {\r\n            try {\r\n                participantInvitationData = JSON.stringify(payload.participantInvitationData);\r\n            } catch (error) {\r\n                this._logger.error(error.message);\r\n                throw error;\r\n            }\r\n        }\r\n\r\n        this._logger.info('addParticipant: participantId = ' + participantId\r\n            + ' threadId = ' + payload.threadId\r\n            + ' messageId = ' + payload.messageId\r\n            + ' participantInvitationData = ' + participantInvitationData);\r\n\r\n        const participant = this._getOrCreateParticipant(participantId);\r\n\r\n        // if slimcore call is not created yet, the placeCall will handle starting the call with the participants\r\n        if (this.slimcoreCallId === 0) {\r\n            return Promise.resolve(participant);\r\n        }\r\n\r\n        const disconnectedStates = [ParticipantState.None, ParticipantState.Disconnected];\r\n        if (disconnectedStates.indexOf(participant.state) === -1) {\r\n            // Do not try to add participant if it is already connecting or connected\r\n            return Promise.resolve<ICallParticipant>(participant);\r\n        }\r\n        const addParticipantPromise = this._asyncOperationHandler.createDeferred(\r\n            ASYNC_OPERATION.AddParticipant, participant.id);\r\n\r\n        const promise = Promise.resolve()\r\n            .then(() => this._addParticipantToCall(participant))\r\n            .then(() => this._addParticipantToSlimCoreElectronCall(participant.id, payload.threadId, payload.messageId, participantInvitationData))\r\n            .then((participantObjectId) => {\r\n                participant.attachSlimcoreObjectId(participantObjectId);\r\n            })\r\n            .then(() => addParticipantPromise)\r\n            .then(() => participant)\r\n            .catch(error => {\r\n                this._logger.error(`Error in addParticipant(), callId = ${this.callId}, error = ${error}`);\r\n                this._handleParticipantRemoved(participantId, ParticipantStateReason.AddingFailed);\r\n                throw error;\r\n            });\r\n\r\n        this.raiseChanged();\r\n        return promise;\r\n    }\r\n\r\n    public removeParticipant(participantId: string): Promise<void> {\r\n        this._logger.info('removeParticipant: participantId = ' + participantId);\r\n\r\n        let participant: SlimCoreElectronCallParticipant;\r\n        if (this.participantMap.hasOwnProperty(participantId)) {\r\n            participant = this.participantMap[participantId];\r\n        }\r\n\r\n        if (participant) {\r\n            this._logger.info('removeParticipant: current participant state: ' + participant.state);\r\n            if (participant.state === ParticipantState.None || participant.state === ParticipantState.Disconnected) {\r\n                // Do not try to remove participant if it is already disconnecting or disconnected\r\n                return Promise.reject(new Error('Participant already in disconnected state'));\r\n            }\r\n        }\r\n\r\n        return Promise.resolve()\r\n            .then(() => {\r\n                if (!participant) {\r\n                    this._assertSlimcoreObjectId(this.slimcoreCallId, 'removeParticipantByMri');\r\n                    this._slimcoreCallHandler.removeParticipantByMri(this.slimcoreCallId, participantId);\r\n                }\r\n                else {\r\n                    this._assertSlimcoreObjectId(participant.slimcoreObjectId, 'removeParticipant');\r\n                    this._slimcoreCallHandler.removeParticipant(participant.slimcoreObjectId);\r\n                }\r\n            });\r\n    }\r\n\r\n    private _chainPromise<T>(promise: () => Promise<T>, actionName: string = ''): Promise<T> {\r\n        this._pendingPromise = this._pendingPromise\r\n            .catch(_.noop)\r\n            .then(() => {\r\n                this._logger.info(`begin ${actionName}`);\r\n                return promise();\r\n            });\r\n\r\n        // Intentionally separate so we pass up a promise that still rejects\r\n        this._pendingPromise.then(() => {\r\n            this._logger.info(`finished ${actionName}`);\r\n        }, error => {\r\n            this._logger.error(`failed ${actionName}, callId = ${this.callId}, error = ${JSON.stringify(error)}`);\r\n        });\r\n\r\n        return this._pendingPromise;\r\n    }\r\n\r\n    private _startTransferTargetCall(transferedCallObjectId: number, isVideoEnabled: boolean): Promise<void> {\r\n        this._logger.log('Transfer: _startTransferTargetCall', transferedCallObjectId);\r\n        return Promise.resolve()\r\n            .then(() => {\r\n                this.attachSlimCoreCallObject(transferedCallObjectId);\r\n                this._slimcoreCallHandler.startTransferTargetCall(transferedCallObjectId, isVideoEnabled, this.threadId, this.messageId);\r\n            });\r\n    }\r\n\r\n    private _joinOrStartSlimCoreCall(options: JoinOrStartCallOptions): Promise<void> {\r\n        return Promise.resolve()\r\n            .then(() => {\r\n                const isGoLive = !options.ringOthers;\r\n                const allowHostless = options.conversationType !== 'cast';\r\n                if (options.conversationUrl) {\r\n                    this._logger.info(`Calling slimcoreCallHandler.JoinCall`);\r\n                    this.slimcoreCallId = this._slimcoreCallHandler.joinCall(\r\n                        JSON.stringify({\r\n                            'conversationUrl': options.conversationUrl,\r\n                            'conversationId': this.callId,\r\n                            'conversationType': options.conversationType,\r\n                        }),\r\n                        {\r\n                            audioDirection: (options.audioDirection !== undefined) ?\r\n                                    SlimCoreElectronCall.toMediaDirection(options.audioDirection) : Enums.MediaDirection.Bidirectional,\r\n                            videoDirection: (options.videoDirection !== undefined) ?\r\n                                    SlimCoreElectronCall.toMediaDirection(options.videoDirection) : Enums.MediaDirection.ReceiveFromPeer,\r\n                            screenshareDirection: (options.screenshareDirection !== undefined) ?\r\n                                    SlimCoreElectronCall.toMediaDirection(options.screenshareDirection) : Enums.MediaDirection.ReceiveFromPeer,\r\n                            datachannelDirection: (options.datachannelDirection !== undefined) ?\r\n                                    SlimCoreElectronCall.toMediaDirection(options.datachannelDirection) : Enums.MediaDirection.Disabled,\r\n                            mediaPeerType: SlimCoreElectronCall.convertToSlimCoreMediaPeerType(this._mediaPeerType),\r\n                            isVideoEnabled: options.videoDirection === MediaDirection.Bidirectional,\r\n                            isGoLive: isGoLive,\r\n                            isHostless: allowHostless,\r\n                            participantLegId: this.participantId,\r\n                            enableGroupCallMeetupGeneration: this._enableGroupCallMeetupGeneration,\r\n                            threadId: SlimCoreCommon.mapToEmptyStrIfFalsy(this.threadId),\r\n                            messageId: SlimCoreCommon.mapToEmptyStrIfFalsy(this.messageId),\r\n                            subject: SlimCoreCommon.mapToEmptyStrIfFalsy(options.label),\r\n                            conversationType: SlimCoreCommon.mapToEmptyStrIfFalsy(options.conversationType),\r\n                            meetingInfo: SlimCoreCommon.mapToEmptyStrIfFalsy(JSON.stringify(this._meetingInfo)),\r\n                            endpointMetadata: SlimCoreCommon.mapToEmptyStrIfFalsy(this._endpointMetadata),\r\n                            onBehalfOf: SlimCoreCommon.mapToEmptyStrIfFalsy(this.onBehalfOfMri),\r\n                            enableLightWeightMeeting: options.enableLightWeightMeeting,\r\n                            emergencyContent: SlimCoreCommon.mapToEmptyStrIfFalsy(this._emergencyContent),\r\n                            broadcastContext: this.broadcastMeeting && this.broadcastMeeting.context ? JSON.stringify(this.broadcastMeeting.context) : null,\r\n                            callKey: options.callKey,\r\n                            encryptedKey: options.encryptedKey,\r\n                            connectionType: SlimCoreElectronCall.convertConnectionType(options.connectionType),\r\n                        });\r\n                    this._assertSlimcoreObjectId(this.slimcoreCallId, 'JoinCall');\r\n                    this._logger.info(`slimcoreCallHandler.JoinCall(), callId = ${this.callId}`);\r\n                } else if (options.callToVoicemail) {\r\n                    this._logger.info(`Calling slimcoreCallHandler.PlaceCallToVoicemail`);\r\n                    if (this.participants.length !== 1) {\r\n                        throw new Error('PlaceCallToVoicemail Failed. Participant size should be one');\r\n                    }\r\n                    this._addParticipantToCall(this.participants[0]);\r\n\r\n                    this.slimcoreCallId = this._slimcoreCallHandler.placeCallToVoicemail(this.callId,\r\n                        SlimCoreElectronCall.convertToSlimCoreMediaPeerType(this._mediaPeerType),\r\n                        this.participants[0].id,\r\n                        {\r\n                            threadId: this.threadId,\r\n                            voicemailResourcePath: options.voicemailResourcePath,\r\n                            voicemailItemId: options.voicemailItemId,\r\n                        });\r\n\r\n                    this._assertSlimcoreObjectId(this.slimcoreCallId, 'PlaceCallToVoicemail');\r\n                    this._logger.info(`slimcoreCallHandler.PlaceCallToVoicemail(), callId = ${this.callId}`);\r\n                }\r\n                else {\r\n                    this._logger.info(`Calling slimcoreCallHandler.PlaceCall`);\r\n                    let participantStrings: string[] = [];\r\n                    this.participants.forEach(participant => {\r\n                        this._addParticipantToCall(participant);\r\n                        participantStrings.push(participant.id);\r\n                    });\r\n                    this.callType = (this.participants.length === 1 && this.state !== CallState.Observing) ? CallType.P2P : CallType.Conference;\r\n\r\n                    this.slimcoreCallId = this._slimcoreCallHandler.placeCall(this.callId,\r\n                        participantStrings,\r\n                        {\r\n                            audioDirection: (options.audioDirection !== undefined) ?\r\n                                    SlimCoreElectronCall.toMediaDirection(options.audioDirection) : Enums.MediaDirection.Bidirectional,\r\n                            videoDirection: (options.videoDirection !== undefined) ?\r\n                                    SlimCoreElectronCall.toMediaDirection(options.videoDirection) : Enums.MediaDirection.ReceiveFromPeer,\r\n                            screenshareDirection: (options.screenshareDirection !== undefined) ?\r\n                                    SlimCoreElectronCall.toMediaDirection(options.screenshareDirection) : Enums.MediaDirection.ReceiveFromPeer,\r\n                            datachannelDirection: (options.datachannelDirection !== undefined) ?\r\n                                    SlimCoreElectronCall.toMediaDirection(options.datachannelDirection) : Enums.MediaDirection.Disabled,\r\n                            mediaPeerType: SlimCoreElectronCall.convertToSlimCoreMediaPeerType(this._mediaPeerType),\r\n                            isVideoEnabled: options.videoDirection === MediaDirection.Bidirectional,\r\n                            isGoLive: isGoLive,\r\n                            isHostless: allowHostless,\r\n                            participantLegId: this.participantId,\r\n                            enableGroupCallMeetupGeneration: this._enableGroupCallMeetupGeneration,\r\n                            threadId: SlimCoreCommon.mapToEmptyStrIfFalsy(this.threadId),\r\n                            messageId: SlimCoreCommon.mapToEmptyStrIfFalsy(this.messageId),\r\n                            subject: SlimCoreCommon.mapToEmptyStrIfFalsy(options.label),\r\n                            conversationType: SlimCoreCommon.mapToEmptyStrIfFalsy(options.conversationType),\r\n                            meetingInfo: SlimCoreCommon.mapToEmptyStrIfFalsy(JSON.stringify(this._meetingInfo)),\r\n                            endpointMetadata: SlimCoreCommon.mapToEmptyStrIfFalsy(this._endpointMetadata),\r\n                            onBehalfOf: SlimCoreCommon.mapToEmptyStrIfFalsy(this.onBehalfOfMri),\r\n                            enableLightWeightMeeting: options.enableLightWeightMeeting,\r\n                            emergencyContent: SlimCoreCommon.mapToEmptyStrIfFalsy(this._emergencyContent),\r\n                            broadcastContext: this.broadcastMeeting && this.broadcastMeeting.context ? JSON.stringify(this.broadcastMeeting.context) : null,\r\n                            callKey: options.callKey,\r\n                            encryptedKey: options.encryptedKey,\r\n                            connectionType: SlimCoreElectronCall.convertConnectionType(options.connectionType),\r\n                        });\r\n\r\n                    this._assertSlimcoreObjectId(this.slimcoreCallId, 'PlaceCall');\r\n                    this._logger.info(`slimcoreCallHandler.PlaceCall(), callId = ${this.callId}`);\r\n                }\r\n            })\r\n            .then(() => this._hookSlimCorePropertyChangedEvents())\r\n            .then(() => this._slimcoreCallRegistryCallbacks.onCallStarted(this.slimcoreCallId, this));\r\n    }\r\n\r\n    private _hookSlimCorePropertyChangedEvents() {\r\n        this._onCallPropertyChanged(Enums.Property.CallStatus, data => this._onCallStatusChanged(data));\r\n        this._onCallPropertyChanged(Enums.Property.CallTransferStatus, data => this._onCallTransferStatusChanged(data));\r\n        this._onCallPropertyChanged(Enums.Property.CallIsActive, data => this._onCallIsActiveChanged(data));\r\n        this._onCallPropertyChanged(Enums.Property.CallIsMuted, data => this._onCallMutedUnmuted(data));\r\n        this._onCallPropertyChanged(Enums.Property.CallIsMutedSpeaker, data => this._onCallMutedUnmutedSpeaker(data));\r\n        this._onCallPropertyChanged(Enums.Property.CallIsServerMuted, data => this._onCallIsServerMuted(data));\r\n        this._onCallPropertyChanged(Enums.Property.CallActiveMembers, data => this._onParticipantJoinedOrRemoved(data));\r\n        this._onCallPropertyChanged(Enums.Property.CallThreadId, data => this._onThreadIdChanged(data));\r\n        this._onCallPropertyChanged(Enums.Property.CallMessageId, data => this._onMessageIdChanged(data));\r\n        this._onCallPropertyChanged(Enums.Property.CallEndpointDetails, data => this._onEndpointDetailsChanged(data));\r\n        this._onCallPropertyChanged(Enums.Property.SelfParticipantRole, data => this._onSelfParticipantRoleChanged(data));\r\n        this._onCallPropertyChanged(Enums.Property.SelfParticipantTenantId, data => this._onSelfParticipantTenantIdChanged(data));\r\n        this._onCallPropertyChanged(Enums.Property.CallMeetingDetails, data => this._onMeetingDetailsChanged(data));\r\n        this._onCallPropertyChanged(Enums.Property.CallMemberCountChanged, data => this._onParticipantJoinedOrRemoved(data));\r\n        this._onCallPropertyChanged(Enums.Property.CallIsConference, data => this._updateCallType(data.value));\r\n        this._onCallPropertyChanged(Enums.Property.CallForwardingDestinationType, data => this._updateForwardingDestinationType(data.value));\r\n        this._onCallPropertyChanged(Enums.Property.CallOptimalRemoteVideoCount, data => this._onCallOptimalVideoCountChanged(data));\r\n        this._onCallPropertyChanged(Enums.Property.CallName, data => this._onCallIdChanged(data));\r\n        this._onCallPropertyChanged(Enums.Property.CallLightWeightMeetingCountChanged, data => this._onLightWeightMeetingAddedOrRemoved(data));\r\n        this._onCallPropertyChanged(Enums.Property.CallDataChannelObjectId, data => this._updateDataChannel(data.value));\r\n        this._onCallPropertyChanged(Enums.Property.CallBroadcastMetadata, data => this._onBroadcastMetadataChanged(data));\r\n\r\n        // Todo: Use some other property to monitor this\r\n        this.registerCallback(SlimCoreCommon.onPropertyChanged(this._slimcoreInstance, Enums.Property.ContentSharingStatus, data => this._onContentSharingChanged(data)), true);\r\n\r\n        this.registerCallback(SlimCoreCommon.onAudioStreamStateChanged(this._slimcoreCallHandler, this.slimcoreCallId, data => this._onAudioStreamStateChanged(data)), true);\r\n        this.registerCallback(SlimCoreCommon.onTransferRequested(this._slimcoreCallHandler, this.slimcoreCallId, data => this._onTransferRequested(data)), true);\r\n        this.registerCallback(SlimCoreCommon.onCallMeBackOperationStatusChanged(this._slimcoreCallHandler, this.slimcoreCallId, data => this._onCallMeBackOperationStatusChanged(data)), true);\r\n        this.registerCallback(SlimCoreCommon.onUnmuteSelfOperationStatusChanged(this._slimcoreCallHandler, this.slimcoreCallId, data => this._onUnmuteOperationStatusChanged(data)), true);\r\n        this.registerCallback(SlimCoreCommon.onMediaNegotiationStatusChanged(this._slimcoreCallHandler, this.slimcoreCallId, data => this._onMediaNegotiationStatusChanged(data)), true);\r\n        this.registerCallback(this._slimcoreInstance.handle('quality-changed', data => this._onQualityChanged(data)), true);\r\n\r\n        this._updateCallType(this.getIntProperty(Enums.Property.CallIsConference));\r\n\r\n        // It's possible events were already raised before ICall had a chance to process so read important properties\r\n\r\n        let callId = this.getStrProperty(Enums.Property.CallName);\r\n        this._onCallIdChanged({\r\n            objectType: Enums.ObjectType.Call,\r\n            objectId: this.slimcoreCallId,\r\n            propKey: Enums.Property.CallName,\r\n            value: callId,\r\n        });\r\n\r\n        let threadId = this.getStrProperty(Enums.Property.CallThreadId);\r\n        this._onThreadIdChanged({\r\n            objectType: Enums.ObjectType.Call,\r\n            objectId: this.slimcoreCallId,\r\n            propKey: Enums.Property.CallThreadId,\r\n            value: threadId,\r\n        });\r\n\r\n        let messageId = this.getStrProperty(Enums.Property.CallMessageId);\r\n        this._onMessageIdChanged({\r\n            objectType: Enums.ObjectType.Call,\r\n            objectId: this.slimcoreCallId,\r\n            propKey: Enums.Property.CallMessageId,\r\n            value: messageId,\r\n        });\r\n\r\n        let callStatus = this.getIntProperty(Enums.Property.CallStatus);\r\n        this._onCallStatusChanged({\r\n            objectType: Enums.ObjectType.Call,\r\n            objectId: this.slimcoreCallId,\r\n            propKey: Enums.Property.CallStatus,\r\n            value: callStatus,\r\n        });\r\n\r\n        let meetingDetails = this.getStrProperty(Enums.Property.CallMeetingDetails);\r\n        this._onMeetingDetailsChanged({\r\n            objectType: Enums.ObjectType.Call,\r\n            objectId: this.slimcoreCallId,\r\n            propKey: Enums.Property.CallMeetingDetails,\r\n            value: meetingDetails,\r\n        });\r\n\r\n        let tenantId = this.getStrProperty(Enums.Property.SelfParticipantTenantId);\r\n        this._onSelfParticipantTenantIdChanged({\r\n            objectType: Enums.ObjectType.Call,\r\n            objectId: this.slimcoreCallId,\r\n            propKey: Enums.Property.SelfParticipantTenantId,\r\n            value: tenantId,\r\n        });\r\n\r\n        let role = this.getStrProperty(Enums.Property.SelfParticipantRole);\r\n        this._onSelfParticipantRoleChanged({\r\n            objectType: Enums.ObjectType.Call,\r\n            objectId: this.slimcoreCallId,\r\n            propKey: Enums.Property.SelfParticipantRole,\r\n            value: role,\r\n        });\r\n\r\n        let isServerMuted = this.getIntProperty(Enums.Property.CallIsServerMuted);\r\n        this._onCallIsServerMuted({\r\n            objectType: Enums.ObjectType.Call,\r\n            objectId: this.slimcoreCallId,\r\n            propKey: Enums.Property.CallIsServerMuted,\r\n            value: isServerMuted,\r\n        });\r\n\r\n        let broadcastMetadata = this.getStrProperty(Enums.Property.CallBroadcastMetadata);\r\n        this._onBroadcastMetadataChanged({\r\n            objectType: Enums.ObjectType.Call,\r\n            objectId: this.slimcoreCallId,\r\n            propKey: Enums.Property.CallBroadcastMetadata,\r\n            value: broadcastMetadata,\r\n        });\r\n\r\n        this._onParticipantJoinedOrRemoved();\r\n    }\r\n\r\n    // TODO : remove this and use _hookSlimCorePropertyChangedEvents\r\n    // we should read properties before listening for those events. seems this is only for subscribe cases\r\n    private _hookSlimCorePropertyChangedEventsForSubscribedCalls() {\r\n        this._onCallPropertyChanged(Enums.Property.CallStatus, data => this._onCallStatusChanged(data));\r\n        this._onCallPropertyChanged(Enums.Property.CallIsActive, data => this._onCallIsActiveChanged(data));\r\n        this._onCallPropertyChanged(Enums.Property.CallThreadId, data => this._onThreadIdChanged(data));\r\n        this._onCallPropertyChanged(Enums.Property.CallMessageId, data => this._onMessageIdChanged(data));\r\n        this._onCallPropertyChanged(Enums.Property.CallEndpointDetails, data => this._onEndpointDetailsChanged(data));\r\n\r\n        // for Subscribe-only calls key participant list refresh on CALL_MEMBER_COUNT_CHANGED\r\n        this._onCallPropertyChanged(Enums.Property.CallMemberCountChanged, data => this._onParticipantJoinedOrRemoved(data));\r\n\r\n        this._onParticipantJoinedOrRemoved();\r\n    }\r\n\r\n    private _fillIncomingCallProperties() {\r\n        const callQueueInfo = this.getStrProperty(Enums.Property.CallQueueInfo);\r\n\r\n        this.callerMri = SlimCoreCommon.stripMriAliases(this.getStrProperty(Enums.Property.CallerMriIdentity));\r\n        this.transferorMri = SlimCoreCommon.stripMriAliases(this.getStrProperty(Enums.Property.CallTransferorMri));\r\n        this.transferorDisplayName = this.getStrProperty(Enums.Property.CallTransferorDisplayName);\r\n        this.transferorType = this.getStrProperty(Enums.Property.CallTransferorType) as TransferorType;\r\n        this.onBehalfOfMri = SlimCoreCommon.stripMriAliases(this.getStrProperty(Enums.Property.CallOnBehalfOfMri));\r\n        this.callQueueInfo = callQueueInfo && JSON.parse(callQueueInfo);\r\n        this.incomingCallType = this.getStrProperty(Enums.Property.CallIncomingType) as IncomingCallType;\r\n        this.isIncomingOneOnOneVideoCall = (this.getIntProperty(Enums.Property.CallIsIncomingOneOnOneVideoCall) === 1);\r\n    }\r\n\r\n    private _onCallPropertyChanged(propKey: SlimCore.Enums.Property, listener: SlimCoreCommon.ObjectChangedCallback) {\r\n        this.registerCallback(SlimCoreCommon.onObjectPropertyChanged(this._slimcoreInstance, propKey, this.slimcoreCallId, listener), true);\r\n    }\r\n\r\n    public attachSlimCoreCallObject(slimCoreCallObjectId: number) {\r\n        if (this.slimcoreCallId !== 0) {\r\n            this._logger.warn('Call already attached to a SlimCore object');\r\n            return;\r\n        }\r\n\r\n        this._logger.info('attachSlimCoreCallObject');\r\n        this.slimcoreCallId = slimCoreCallObjectId;\r\n\r\n        this._slimCoreElectronRemoteManager = new SlimCoreElectronRemoteStreamManager(\r\n            this._slimcoreCallHandler,\r\n            this._logger,\r\n            this._slimcoreInstance,\r\n            this._settings,\r\n            this.slimcoreCallId,\r\n            this.mediaStreams);\r\n        this._slimCoreElectronRemoteManager.changed(() => this.raiseChanged());\r\n\r\n        this._hookSlimCorePropertyChangedEvents();\r\n    }\r\n\r\n    public getStrProperty(property: Enums.Property, fallback?: string): string {\r\n        return this._getStrProperty(this._slimcoreCallHandler, this.slimcoreCallId, property, SlimCoreCommon.mapToEmptyStrIfFalsy(fallback));\r\n    }\r\n\r\n    public getIntProperty(property: Enums.Property, fallback?: number): number {\r\n        return this._getIntProperty(this._slimcoreCallHandler, this.slimcoreCallId, property, fallback);\r\n    }\r\n\r\n    private _updateCallType(callIsConference: number) {\r\n        const callType =\r\n            callIsConference === 0 ? CallType.P2P :\r\n                (callIsConference === 1 ? CallType.Conference : CallType.Unknown);\r\n\r\n        this._logger.info(`_updateCallType: currentValue: ${this.callType}, newValue: ${callType}`);\r\n        if (callType !== this.callType) {\r\n            this.callType = callType;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _updateForwardingDestinationType(forwardingDestinationType: string) {\r\n        if (forwardingDestinationType !== this.forwardingDestinationType) {\r\n            this.forwardingDestinationType = forwardingDestinationType as ForwardingDestinationType;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _updateDataChannel(dataChannelObjectId: number) {\r\n        this._logger.info('_updateDataChannel()');\r\n\r\n        if (dataChannelObjectId) {\r\n            let dataChannel = this._slimcoreInstance.getDataChannel(dataChannelObjectId);\r\n\r\n            if (this._dataChannel) {\r\n                this._dataChannel.dispose();\r\n            }\r\n            this._dataChannel = new SlimCoreElectronDataChannel(this._logger, this, this._slimcoreInstance, dataChannel, this._dataChannelUsers, dataChannelObjectId);\r\n            this._logger.info('Data channel set');\r\n        }\r\n    }\r\n\r\n    public mapDataChannelSourceIdToParticipant(sourceID: number): ICallParticipant {\r\n        let participant: ICallParticipant = null;\r\n\r\n        if (this.callType === CallType.P2P) {\r\n            participant = this.participants[0];\r\n        }\r\n        else {\r\n            participant = _.find(this.participants, participant => participant.getSourceIdForMediaType(MediaType.Data) === sourceID);\r\n        }\r\n\r\n        if (participant && participant.id) {\r\n            this._logger.info(`ParticipantId: ${participant.id} to SourceId: ${sourceID}`);\r\n        } else {\r\n            this._logger.warn(`No Participant found for SourceId: ${sourceID}`);\r\n        }\r\n\r\n        return participant;\r\n    }\r\n\r\n    private _onAudioStreamStateChanged(eventData: SlimCoreCommon.AudioStreamStateChangedEvent) {\r\n        this.event('mediaStreamStateChanged').raise(/* missing payload */);\r\n        if (eventData.direction === SlimCore.Enums.MediaDirection.ReceiveFromPeer) {\r\n            // If the audio stream state is Inactive or Active, it means at least an audio path is established.\r\n            // State being Active indicates audio packets (RTP) flowing. We only for receive direction.\r\n            this.isAudioStreamConnected = eventData.streamState === SlimCore.Enums.MediaStreamState.StreamInactive\r\n                || eventData.streamState === SlimCore.Enums.MediaStreamState.StreamActive;\r\n        }\r\n        if (eventData.streamState === SlimCore.Enums.MediaStreamState.StreamFail) {\r\n            this.event('mediaConnectionFailed').raise();\r\n        }\r\n    }\r\n\r\n    private _onTransferRequested(eventData: SlimCoreCommon.TransferRequestedEvent) {\r\n        this._logger.log('Transfer: _onTransferRequested', eventData);\r\n        const slimCoreTransferContext: ICallTransferContext<SlimCoreTransferContext> = {\r\n            transferorMri: eventData.transferorMri,\r\n            targetMri: eventData.transferTargetMri,\r\n            context: {\r\n                newCallObjectId: eventData.targetCallObjectId,\r\n            },\r\n        };\r\n\r\n        this.event('transferRequested').raise({\r\n            transferContext: slimCoreTransferContext,\r\n            onCompleted: (code: TerminatedReason) => {\r\n                this._logger.debug(`Transfer: transferCompleted called: ${code}`);\r\n\r\n                if (code !== TerminatedReason.Success) {\r\n                    // todo: leave with error code when available\r\n                    this._slimcoreCallHandler.leaveCall(slimCoreTransferContext.context.newCallObjectId);\r\n                }\r\n            },\r\n        });\r\n    }\r\n\r\n    private _onCallMeBackOperationStatusChanged(eventData: SlimCoreCommon.CallMeBackOperationStatusChangedEvent) {\r\n        if (eventData.failureReason === Enums.ParticipantFailureReason.NoFailure) {\r\n            // For successful one, wait for participantendpointdetails before resolve the promise\r\n            return;\r\n        }\r\n\r\n        let reason = SlimCoreElectronCall.convertFailureReasonToParticipantReason(eventData.failureReason);\r\n\r\n        this._asyncOperationHandler.rejectDeferred(ASYNC_OPERATION.CallMeBack, reason, eventData.participantMri)\r\n            .catch(e => {\r\n                this._logger.error('CallMeBack operation failed for ', eventData.participantMri, e);\r\n            });\r\n    }\r\n\r\n    private _onUnmuteOperationStatusChanged(eventData: SlimCoreCommon.UnmuteSelfOperationStatusChangedEvent) {\r\n        if (!this._asyncOperationHandler.hasDeferred(ASYNC_OPERATION.WaitForUnMute) || eventData.operationResult === Enums.OperationResultCode.None) {\r\n            // Nothing to do\r\n            return;\r\n        }\r\n\r\n        this._logger.info('_onUnmuteOperationStatusChanged operationResult: ' + eventData.operationResult);\r\n\r\n        if (eventData.operationResult === Enums.OperationResultCode.Success) {\r\n            this._asyncOperationHandler.resolveDeferred(ASYNC_OPERATION.WaitForUnMute);\r\n            return;\r\n        }\r\n\r\n        // Else failure\r\n        let reason = SlimCoreElectronCall.convertParticipantReasonToTerminatedReason(\r\n            SlimCoreElectronCall.convertFailureReasonToParticipantReason(eventData.failureReason));\r\n\r\n        this._asyncOperationHandler.rejectDeferred(ASYNC_OPERATION.WaitForUnMute, reason);\r\n    }\r\n\r\n    private _updateCallLegIdChanged(newLegId: string) {\r\n        if (this.participantId !== newLegId) {\r\n            this._logger.info('updateCallLegIdChanged: new value is ' + newLegId);\r\n            this.participantId = newLegId;\r\n            this.event('callLegIdChanged').raise(newLegId);\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _updateIsHostless(newIsHostless: number) {\r\n        const newValue = (newIsHostless === 1);\r\n        if (this.isHostless !== newValue) {\r\n            this._logger.info('_updateIsHostless: new value is ' + newValue);\r\n            this.isHostless = newValue;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _onCallIsActiveChanged(eventData: SlimCoreCommon.ObjectChangedEvent) {\r\n        if (eventData.value === 0) {\r\n            this._logger.info('Call is no longer active. Updating state to Finished');\r\n            this._onCallStatusChanged({\r\n                objectType: eventData.objectType,\r\n                objectId: eventData.objectId,\r\n                propKey: eventData.propKey,\r\n                value: Enums.CallStatus.Finished,\r\n            });\r\n        }\r\n    }\r\n\r\n    private _onCallOptimalVideoCountChanged(eventData: SlimCoreCommon.ObjectChangedEvent) {\r\n        this._logger.info('_onCallOptimalVideoCountChanged ' + eventData.value);\r\n        if (eventData.value !== this.optimalVideoCount) {\r\n            this.optimalVideoCount = eventData.value;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _onCallIdChanged(eventData: SlimCoreCommon.ObjectChangedEvent) {\r\n        this._logger.info('_onCallIdChanged ' + eventData.value);\r\n        if (eventData.value !== this.callId) {\r\n            this.callId = eventData.value;\r\n            this.event('callIdChanged').raise(this.callId);\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _onCallTransferStatusChanged(eventData: SlimCoreCommon.ObjectChangedEvent) {\r\n        let status = eventData.value;\r\n        this._logger.info('onCallTransferStatusChanged status: ' + status);\r\n        if (status === Enums.CallStatus.Transferring) {\r\n            this._setTransferState(TransferState.Accepted);\r\n        } else if (status === Enums.CallStatus.Transferred) {\r\n            this._setTransferState(TransferState.Completed);\r\n        } else if (status === Enums.CallStatus.Failed) {\r\n            this._setTransferState(TransferState.Failed);\r\n        }\r\n    }\r\n\r\n    private _onCallStatusChanged(eventData: SlimCoreCommon.ObjectChangedEvent) {\r\n        let status = eventData.value;\r\n        this._logger.info('onCallStatusChanged status: ' + status);\r\n        this._updateCallLegIdChanged(this.getStrProperty(Enums.Property.CallLegId));\r\n        if (SlimCoreElectronCall.isCallConnecting(status)) {\r\n            this._setCallState(CallState.Connecting);\r\n        }\r\n        else if (SlimCoreElectronCall.isCallEarlyMedia(status)) {\r\n            this._logger.info('callStatusChanged: EarlyMedia');\r\n            this._setCallState(CallState.EarlyMedia);\r\n        }\r\n        else if (SlimCoreElectronCall.isCallRinging(status)) {\r\n            this._logger.info('callStatusChanged: Ringing');\r\n            this.participants.forEach(p => p.setState(ParticipantState.Ringing));\r\n            this._updateCallType(this.getIntProperty(Enums.Property.CallIsConference));\r\n        }\r\n        else if (SlimCoreElectronCall.isCallInLobby(status)) {\r\n            this._logger.info('callStatusChanged: InLobby');\r\n            this._setCallState(CallState.InLobby);\r\n            this.participants.forEach(p => p.setState(ParticipantState.InLobby));\r\n            this._updateCallType(this.getIntProperty(Enums.Property.CallIsConference));\r\n            this._asyncOperationHandler.resolveDeferred(ASYNC_OPERATION.HoldUnhold).catch(e => {\r\n                this._logger.info('callStatusChanged: InLobby', e);\r\n            });\r\n            this._asyncOperationHandler.resolveDeferred(ASYNC_OPERATION.StartCall).catch(e => {\r\n                this._logger.info('callStatusChanged: InLobby', e);\r\n            });\r\n        }\r\n        else if (SlimCoreElectronCall.isCallConnected(status)) {\r\n            this._logger.info('callStatusChanged: Connected');\r\n            this._setCallState(CallState.Connected);\r\n            this._updateIsHostless(this.getIntProperty(Enums.Property.CallIsHostless));\r\n            this._updateCallType(this.getIntProperty(Enums.Property.CallIsConference));\r\n            this._updateEndpointDetails(this.getStrProperty(Enums.Property.CallEndpointDetails));\r\n            this._asyncOperationHandler.resolveDeferred(ASYNC_OPERATION.HoldUnhold).catch(e => {\r\n                this._logger.info('callStatusChanged: Connected', e);\r\n            });\r\n            this._asyncOperationHandler.resolveDeferred(ASYNC_OPERATION.StartCall).catch(e => {\r\n                this._logger.info('callStatusChanged: Connected', e);\r\n            });\r\n        }\r\n        else if (status === Enums.CallStatus.LocalHold) {\r\n            this._logger.info('callStatusChanged: LocalHold');\r\n            this._setCallState(CallState.LocalHold);\r\n            this._asyncOperationHandler.resolveDeferred(ASYNC_OPERATION.HoldUnhold).catch(e => {\r\n                this._logger.info('callStatusChanged: LocalHold', e);\r\n            });\r\n        }\r\n        else if (status === Enums.CallStatus.RemoteHold) {\r\n            this._logger.info('callStatusChanged: RemoteHold');\r\n            this._setCallState(CallState.RemoteHold);\r\n            this._asyncOperationHandler.resolveDeferred(ASYNC_OPERATION.HoldUnhold).catch(e => {\r\n                this._logger.info('callStatusChanged: RemoteHold', e);\r\n            });\r\n        }\r\n        else if (SlimCoreElectronCall.isCallTerminated(status)) {\r\n            const originalReason: TerminatedReason = SlimCoreElectronCall.convertTerminatedReason(status);\r\n            let callTerminationReason: TerminatedReason = originalReason;\r\n            this._logger.info(`callStatusChanged: Terminated, reason = ${originalReason}`);\r\n\r\n            /* If call is in Failed or Dropped status - user CMEMBER_FAILURE_REASON will contain the reason for Failed call */\r\n            if ((status === Enums.CallStatus.Failed) || (status === Enums.CallStatus.Dropped)) {\r\n                callTerminationReason = this._getTerminatedReason(originalReason);\r\n            }\r\n\r\n            this._logger.info(`callStatusChanged: Terminated, reason: ${originalReason} -> ${callTerminationReason}`);\r\n\r\n            if (this._asyncOperationHandler.hasDeferred(ASYNC_OPERATION.EndCall)) {\r\n                this._asyncOperationHandler.resolveDeferred(ASYNC_OPERATION.EndCall).catch(e => {\r\n                    this._logger.info('callStatusChanged: Terminated', e);\r\n                });\r\n            }\r\n\r\n            this._setCallState(CallState.Disconnected, callTerminationReason);\r\n            this.participants.forEach(p => p.setState(ParticipantState.Disconnected));\r\n            this._updateDominantSpeakerList();\r\n            this._asyncOperationHandler.rejectPendingOperations('Call ended');\r\n            this._cleanCallResources();\r\n        }\r\n        this.raiseChanged();\r\n    }\r\n\r\n    private _getTerminatedReason(originalReason?: TerminatedReason): TerminatedReason {\r\n        if (this._isRelayWhiteListingIssue) {\r\n            return TerminatedReason.MediaRelayWhiteListingIssue;\r\n        } else if (this.participants.length) {\r\n            const firstParticipantFailureReason = _.head(this.participants).getIntProperty(Enums.Property.ParticipantFailureReason);\r\n            return SlimCoreElectronCall.convertParticipantReasonToTerminatedReason(\r\n                SlimCoreElectronCall.convertFailureReasonToParticipantReason(firstParticipantFailureReason));\r\n        }\r\n\r\n        return originalReason || TerminatedReason.Undefined;\r\n    }\r\n\r\n    private _addParticipantToCall(participant: SlimCoreElectronCallParticipant): void {\r\n        participant.setState(ParticipantState.Connecting);\r\n        this._logger.info(`starting adding participant to call, participantId = ${participant.id}, callId = ${this.callId}`);\r\n    }\r\n\r\n    private _joinOrStartCall(options: JoinOrStartCallOptions): Promise<void> {\r\n        this._logger.info('joinOrStartCall');\r\n\r\n        if (this.state !== CallState.None && this.state !== CallState.Observing) {\r\n            throw new Error('Trying to start a call that has already been acted on');\r\n        }\r\n\r\n        this.isCast = options.conversationType === 'cast';\r\n        this.label = options.label;\r\n        this.raiseChanged();\r\n\r\n        this._setCallState(CallState.Connecting);\r\n\r\n        const waitForCallPromise = this._asyncOperationHandler.createDeferred(ASYNC_OPERATION.StartCall);\r\n\r\n        return Promise.resolve()\r\n            .then(() => this._joinOrStartSlimCoreCall(options))\r\n            .then(() => {\r\n                if (options.videoDirection === MediaDirection.Bidirectional) {\r\n                    this._logger.info('Call has been started; turning on video');\r\n                    return this.startVideoSafe('joinOrStartCall');\r\n                }\r\n            })\r\n            .then(() => waitForCallPromise)\r\n            .catch(error => {\r\n                this.stop();\r\n                this._logger.error(`Error in joinOrStartCall(), callId = ${this.callId}, error = ${error}`);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    private _joinOrStartLightWeightMeeting(options: JoinOrStartCallOptions): Promise<void> {\r\n        this._logger.info('joinOrStartLightWeightMeeting');\r\n\r\n        if (this.lightWeightMeeting) {\r\n            return Promise.reject(new Error('Trying to start a light weight meeting when it is already active'));\r\n        }\r\n\r\n        this.lightWeightMeeting = new SlimCoreElectronLightWeightMeeting(\r\n            this._slimcoreCallHandler,\r\n            this._logger,\r\n            this._slimcoreInstance,\r\n        );\r\n\r\n        this.raiseChanged();\r\n        this.event('lightWeightMeetingChanged').raise();\r\n\r\n        this._logger.info(`Calling slimcoreCallHandler.PlaceCall/JoinCall to trigger light weight meeting join`);\r\n\r\n        return Promise.resolve(undefined)\r\n            .then(() => this._joinOrStartSlimCoreCall(options))\r\n            .then(() => this.lightWeightMeeting.waitForLightWeightMeetinJoin())\r\n            .catch(error => {\r\n                this._logger.error(`Error in _joinOrStartLightWeightMeeting(), callId = ${this.callId}, error = ${error}`);\r\n                this._removeLightWeightMeeting();\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    private _localVideoChanged() {\r\n        const videoHasToBeStopped = this._localVideo\r\n            && !this._localVideo.isAvailable\r\n            && !this._localVideo.isPaused\r\n            && this._settings.autoStopLocalVideo !== false\r\n            && !this._localVideo.isStoppingOrNotStarted;\r\n        const isCallEnding = this.state === CallState.Disconnecting || this.state === CallState.Disconnected;\r\n        if (videoHasToBeStopped && !isCallEnding) {\r\n            this.stopVideo();\r\n        }\r\n    }\r\n\r\n    public disposeLocalVideoRenderer(): Promise<void> {\r\n        this._logger.log('DisposeLocalVideoRenderer called');\r\n        let dispose = () => {\r\n            if (this._localVideoPreview) {\r\n                this._localVideoPreview.dispose();\r\n                this._localVideoPreview = null;\r\n            }\r\n        };\r\n\r\n        return Promise.resolve().then(() => {\r\n            if (this._localVideoPreview) {\r\n                return this._localVideoPreview.stop()\r\n                    .then(dispose, (e) => {\r\n                        this._logger.warn(`Failed to dispose of local video preview renderer`);\r\n                        dispose();\r\n                    });\r\n            }\r\n        });\r\n    }\r\n\r\n    private _muteUnmute(value: boolean): Promise<void> {\r\n        this._logger.info(`muteUnmute, value = ${value} isMuted = ${this.isMuted} isServerMuted = ${this.isServerMuted}`);\r\n\r\n        let muteUnMutePromise: Promise<any>;\r\n        if (value) {\r\n            muteUnMutePromise = this._asyncOperationHandler.waitForDeferred(ASYNC_OPERATION.WaitForMute);\r\n        } else {\r\n            muteUnMutePromise = this._asyncOperationHandler.waitForDeferred(ASYNC_OPERATION.WaitForUnMute);\r\n        }\r\n\r\n        // Allow unmuting even if local state indicates muted due to missing roster events.\r\n        return Promise.resolve()\r\n            .then(() => this._slimcoreCallHandler.callMute(this.slimcoreCallId, value))\r\n            .then(() => muteUnMutePromise)\r\n            .catch(error => {\r\n                this._logger.error(`Error in muteUnmute().. ignoring, callId = ${this.callId}, error = ${error}`);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    private _muteUnmuteSpeaker(value: boolean): Promise<void> {\r\n        this._logger.info(`muteUnmuteSpeaker, value = ${value} isSpeakerMuted = ${this.isSpeakerMuted}`);\r\n\r\n        let muteUnMutePromise: Promise<any>;\r\n        if (value) {\r\n            muteUnMutePromise = this._asyncOperationHandler.waitForDeferred(ASYNC_OPERATION.WaitForMuteSpeaker);\r\n        } else {\r\n            muteUnMutePromise = this._asyncOperationHandler.waitForDeferred(ASYNC_OPERATION.WaitForUnMuteSpeaker);\r\n        }\r\n\r\n        // Allow unmuting even if local state indicates muted due to missing roster events.\r\n        return Promise.resolve()\r\n            .then(() => this._slimcoreCallHandler.callMuteSpeaker(this.slimcoreCallId, value))\r\n            .then(() => muteUnMutePromise)\r\n            .then(() => this._setMutedSpeaker(value))\r\n            .catch(error => {\r\n                this._logger.error(`Error in muteUnmuteSpeaker().. ignoring, callId = ${this.callId}, error = ${error}`);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    private _muteParticipants(muteScope: MuteScope, callParticipants: ICallParticipant[]): Promise<void> {\r\n        let scope = SlimCoreElectronCall.convertMuteScope(muteScope);\r\n        if (scope === undefined) {\r\n            this._logger.error(`Unrecognized ${muteScope} callId: ${this.callId}`);\r\n            return Promise.reject(new Error('Unrecognized muteScope'));\r\n        }\r\n\r\n        let participantStrings: string[] = [];\r\n        callParticipants.forEach(participant => {\r\n            participantStrings.push(participant.id);\r\n        });\r\n        return Promise.resolve()\r\n            .then(() => this._slimcoreCallHandler.callMuteParticipants(this.slimcoreCallId, scope, participantStrings))\r\n            .catch(error => {\r\n                this._logger.error(`callMuteParticipants() not implemented.. ignoring, callId = ${this.callId}, error = ${error}`);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    private _holdUnhold(shouldHold: boolean): Promise<void> {\r\n        return this._chainPromise(() => {\r\n            const currentHoldStatus = (this.state === CallState.LocalHold);\r\n            this._logger.info('_holdUnhold, value: ' + shouldHold + ' currentState: ' + currentHoldStatus);\r\n\r\n            if (currentHoldStatus === shouldHold) {\r\n                return Promise.resolve<void>();\r\n            }\r\n\r\n            return Promise.resolve()\r\n                .then(() => this._slimcoreCallHandler.callHold(this.slimcoreCallId, shouldHold))\r\n                .then(() => this._asyncOperationHandler.createDeferred(ASYNC_OPERATION.HoldUnhold))\r\n                .then(() => {\r\n                    // if the call is put onHold - clean preview renderer\r\n                    if (shouldHold) {\r\n                        return Promise.resolve()\r\n                            .then(() => this.disposeLocalVideoRenderer());\r\n                    }\r\n                    else if (this.isVideoOn) {\r\n                        // if the call is resumed and video was on, resume local video preview\r\n                        return this._startPreviewVideo().catch(() => {\r\n                            // if local video preview fails, then stop local video\r\n                            return this.stopVideo();\r\n                        });\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    this._logger.error(`Error in _holdUnhold() ignoring, callId: ${this.callId}, error: ${error}`);\r\n                    throw error;\r\n                });\r\n        }, (shouldHold ? 'hold' : 'unhold'));\r\n    }\r\n\r\n    private _updateEndpointMetadata(endpointMetadata: string): Promise<void> {\r\n        return Promise.resolve()\r\n            .then(() => this._slimcoreCallHandler.callUpdateEndpointMetadata(this.slimcoreCallId, this._endpointMetadata))\r\n            .catch(error => {\r\n                this._logger.error(`Error in updateEndpointMetaData(${this._endpointMetadata} callId: ${this.callId}, error: ${error}`);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    private _sendDtmfTone(dtmfTone: DtmfTone): Promise<void> {\r\n        return Promise.resolve()\r\n            .then(() => {\r\n                let slimCoreDtmfTone = SlimCoreElectronCall.convertToSlimCoreDtmfTone(dtmfTone);\r\n                if (slimCoreDtmfTone === undefined) {\r\n                    this._logger.error(`Unrecognized ${dtmfTone} callId: ${this.callId}`);\r\n                    throw new Error('Unrecognized dtmfTone');\r\n                }\r\n\r\n                try {\r\n                    this._slimcoreCallHandler.callSendDtmf(this.slimcoreCallId, slimCoreDtmfTone);\r\n                }\r\n                catch (error) {\r\n                    this._logger.error(`Error in _sendDtmfTone(${dtmfTone} callId: ${this.callId}, error: ${error}`);\r\n                    throw error;\r\n                }\r\n            });\r\n    }\r\n\r\n    public _setAudioUsageMode(audioUsageMode: AudioUsageMode): Promise<void> {\r\n        return Promise.resolve()\r\n            .then(() => {\r\n                let slimCoreAudioUsageMode = SlimCoreElectronCall.convertToSlimCoreAudioUsageMode(audioUsageMode);\r\n                if (slimCoreAudioUsageMode === undefined) {\r\n                    throw new Error('Unrecognized audioUsageMode');\r\n                }\r\n                this._slimcoreCallHandler.callSetAudioUsageMode(this.slimcoreCallId, slimCoreAudioUsageMode);\r\n            })\r\n            .catch(error => {\r\n                this._logger.error(`Error in setAudioUsageMode(${audioUsageMode}) callId: ${this.callId}, error: ${error}`);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    private _getOrCreateParticipant(participantMri: string, slimcoreObjectId?: number): SlimCoreElectronCallParticipant {\r\n        let participant: SlimCoreElectronCallParticipant;\r\n\r\n        if (this.participantMap.hasOwnProperty(participantMri)) {\r\n            const participant = this.participantMap[participantMri];\r\n            if (slimcoreObjectId) {\r\n                participant.attachSlimcoreObjectId(slimcoreObjectId);\r\n            }\r\n            return participant;\r\n        }\r\n\r\n        this._logger.info(`getOrCreateParticipant: creating new participant ${participantMri} ${slimcoreObjectId}`);\r\n        participant = new SlimCoreElectronCallParticipant(\r\n            participantMri,\r\n            this._slimcoreCallHandler,\r\n            this._logger,\r\n            this._slimcoreInstance,\r\n            this._settings,\r\n            slimcoreObjectId,\r\n        );\r\n\r\n        participant.changed(() => this._participantChangedCallback(participant));\r\n\r\n        this._addParticipantEntry(participant);\r\n        this._monitorCallStart();\r\n        this.event('participantAdded').raise(participant);\r\n        this.raiseChanged();\r\n\r\n        return participant;\r\n    }\r\n\r\n    private _participantChangedCallback(participant: SlimCoreElectronCallParticipant) {\r\n        _.each(participant.streams[StreamType.ScreenSharing], s => {\r\n            if (this._localScreenShareStream) {\r\n                if (s.isAvailable) {\r\n                    SlimCoreCommon.forgetAndLog(this.stopScreenSharing(true), this._logger, 'ParticipantChanged: Cleaning up local screenshare because remote screenshare is running');\r\n                    this.event('sharingStolen').raise();\r\n                }\r\n            }\r\n\r\n            if (this.screenSharingControl && this.screenSharingControl.isScreenSharingControlEnabled()) {\r\n                if (s.isActive()) {\r\n                    // Initialize screen sharing control as viewer\r\n                    this.screenSharingControl.initControlForViewer(participant);\r\n                }\r\n                else {\r\n                    // Screen sharing not active\r\n                    this.screenSharingControl.shutdownControlForViewer(participant);\r\n                }\r\n            }\r\n        });\r\n\r\n        this._updateDominantSpeakerList();\r\n        this.event('participantUpdated').raise(participant);\r\n        this.raiseChanged();\r\n    }\r\n\r\n    public setCallStateNotified() {\r\n        this._setCallState(CallState.Notified);\r\n    }\r\n\r\n    private _setCallState(callState: CallState, terminatedReason?: TerminatedReason) {\r\n        if (this.state === callState) {\r\n            return;\r\n        }\r\n\r\n        const validNextStates = validStateTransitions[this.state];\r\n        const isValidNextState = validNextStates.indexOf(callState) >= 0;\r\n\r\n        this._logger.info(`Attempting to change CallState ${this.state} -> ${callState}, original terminatedReason: ${this.terminatedReason} for call ${this.callId}`);\r\n\r\n        if (!isValidNextState) {\r\n            this._logger.warn(`Invalid state transition ${this.state} -> ${callState} attempted for call ${this.callId}`);\r\n            return;\r\n        }\r\n\r\n        this.state = callState;\r\n\r\n        if (this._localVideo) {\r\n            this._localVideo.setCallState(this.state);\r\n        }\r\n\r\n        if (callState === CallState.Connected) {\r\n            this._callGotConnected = true;\r\n            this.callHeldAt = null;\r\n        } else if ((callState === CallState.RemoteHold || callState === CallState.LocalHold) && !this.callHeldAt) {\r\n            // This is the place to set HeldAt time. Extra condition is to make sure you don't override the current timer for hold-on-hold scenario.\r\n            this.callHeldAt = new Date();\r\n        }\r\n        else if (callState === CallState.Disconnected) {\r\n            this.terminatedReason = terminatedReason;\r\n            this.failureType = SlimCoreElectronCall.convertTerminatedReasonToFailureType(terminatedReason, this._callGotConnected, this._wasAudioStreamConnected);\r\n\r\n            if (this.screenSharingControl && this.screenSharingControl.isScreenSharingControlEnabled()) {\r\n                // Cleanup any control state\r\n                this.screenSharingControl.handleCallDisconnected();\r\n            }\r\n\r\n            // Hololens stream interaction (annotations and inking)\r\n            if (this.holographicInteractionControl) {\r\n                // Cleanup any control state\r\n                this.holographicInteractionControl.handleCallDisconnected();\r\n            }\r\n        }\r\n        this._logger.info(`CallState changed to ${callState}, terminatedReason: ${this.terminatedReason}`);\r\n\r\n        this._monitorCallStart();\r\n        this.event('callStateChanged').raise();\r\n        this.raiseChanged();\r\n    }\r\n\r\n    private _setTransferState = (state: TransferState): void => {\r\n        if (this.transferState !== state) {\r\n            this._logger.log('Transfer: state set: ' + state);\r\n            this.transferState = state;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _setVideoOn(videoOn: boolean) {\r\n        if (this.isVideoOn !== videoOn) {\r\n            this.isVideoOn = videoOn;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _setScreenSharingOn(screenSharingOn: boolean) {\r\n        if (this.isScreenSharingOn !== screenSharingOn) {\r\n            this.isScreenSharingOn = screenSharingOn;\r\n            this.raiseChanged();\r\n        }\r\n        this.event('userActivityChanged').raise();\r\n    }\r\n\r\n    private _setMutedSpeaker(muted: boolean) {\r\n        if (this.isSpeakerMuted !== muted) {\r\n            this.isSpeakerMuted = muted;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _monitorCallStart() {\r\n        if (this.state === CallState.Connected && this.participants.length && !this.callStartedAt) {\r\n            this.callStartedAt = new Date();\r\n        }\r\n    }\r\n\r\n    private _addParticipantEntry(participant: SlimCoreElectronCallParticipant) {\r\n        this.participantMap[participant.id] = participant;\r\n        this.participants.push(participant);\r\n    }\r\n\r\n    private _removeParticipantEntry(participantId: string): SlimCoreElectronCallParticipant {\r\n        if (!this.participantMap.hasOwnProperty(participantId)) {\r\n            return null;\r\n        }\r\n\r\n        let participant = this.participantMap[participantId];\r\n        delete this.participantMap[participantId];\r\n\r\n        _.pull(this.participants, participant);\r\n        if (participant) {\r\n            this.raiseChanged();\r\n        }\r\n\r\n        return participant;\r\n    }\r\n\r\n    private _removeLightWeightMeeting() {\r\n        this.lightWeightMeeting.setState(LightWeightMeetingState.Disconnected);\r\n        this.lightWeightMeeting.dispose();\r\n        this.lightWeightMeeting = null;\r\n        this.event('lightWeightMeetingChanged').raise();\r\n    }\r\n\r\n    private _onThreadIdChanged(eventData: SlimCoreCommon.ObjectChangedEvent) {\r\n        const threadId = eventData.value as string;\r\n        if (threadId && (this.threadId !== threadId)) {\r\n            this.threadId = threadId;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _onMessageIdChanged(eventData: SlimCoreCommon.ObjectChangedEvent) {\r\n        const messageId = eventData.value as string;\r\n        if (messageId && (this.messageId !== messageId)) {\r\n            this.messageId = messageId;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _onEndpointDetailsChanged(eventData: SlimCoreCommon.ObjectChangedEvent) {\r\n        this._updateEndpointDetails(eventData.value as string);\r\n    }\r\n\r\n    private _onSelfParticipantRoleChanged(eventData: SlimCoreCommon.ObjectChangedEvent) {\r\n        let role: string = eventData.value;\r\n        if (role !== this.role) {\r\n            this._logger.info(`Role for self is set to ${role}`);\r\n            this.role = role as ParticipantRosterRole;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _onSelfParticipantTenantIdChanged(eventData: SlimCoreCommon.ObjectChangedEvent) {\r\n        let tenantId: string = eventData.value;\r\n        if (tenantId !== this.tenantId) {\r\n            this._logger.info(`TenantId for self is set to ${tenantId}`);\r\n            this.tenantId = tenantId;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _updateEndpointDetails(rawEndpointDetails: string) {\r\n        if (this._rawEndpoints === rawEndpointDetails || !rawEndpointDetails) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            this.endpoints = JSON.parse(rawEndpointDetails) as CallParticipantEndpoints;\r\n            this._rawEndpoints = rawEndpointDetails;\r\n\r\n            this.endpoints.endpointDetails.forEach((endpointDetail) => {\r\n                if (endpointDetail.originalId) {\r\n                    this._asyncOperationHandler.resolveDeferred<void>(\r\n                        ASYNC_OPERATION.CallMeBack, null, endpointDetail.originalId).catch(e => {\r\n                            this._logger.error('Failed to update call me back participant', e);\r\n                        });\r\n                }\r\n            });\r\n        } catch (err) {\r\n            this._logger.info(`Failed to parse raw endpoint details. Error: ${err}, EndpointDetails: ${rawEndpointDetails}`);\r\n        }\r\n\r\n        this.raiseChanged();\r\n    }\r\n\r\n    private _onMeetingDetailsChanged(eventData: SlimCoreCommon.ObjectChangedEvent) {\r\n        this._updateMeetingDetails(eventData.value as string);\r\n    }\r\n\r\n    private _updateMeetingDetails(rawMeetingDetails: string) {\r\n        if (this._rawMeetingDetails === rawMeetingDetails) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            if (!rawMeetingDetails || _.isEmpty(rawMeetingDetails)) {\r\n                this.meetingDetails = null;\r\n            } else {\r\n                this.meetingDetails = JSON.parse(rawMeetingDetails) as MeetingDetails;\r\n            }\r\n            this._rawMeetingDetails = rawMeetingDetails;\r\n            this.raiseChanged();\r\n        } catch (err) {\r\n            this._logger.warn(`Failed to parse the raw meeting details. Error: ${err}, MeetingDetails: ${rawMeetingDetails}`);\r\n        }\r\n    }\r\n\r\n    private _onBroadcastMetadataChanged(eventData: SlimCoreCommon.ObjectChangedEvent) {\r\n        let broadcastMetadata = eventData.value as string;\r\n        if (broadcastMetadata) {\r\n            try {\r\n                this.broadcastMetadata = JSON.parse(broadcastMetadata);\r\n                this._logger.info('broadcast metadata updated');\r\n                if (this.broadcastMeeting) {\r\n                    this.broadcastMeeting.metadataChanged(broadcastMetadata);\r\n                }\r\n                this.raiseChanged();\r\n            } catch (e) {\r\n                this._logger.info('broadcast metadata invalid, failed to parse');\r\n            }\r\n        }\r\n    }\r\n\r\n    private _getParticipantByObjectId(slimcoreObjectId: SlimCore.ObjectId) {\r\n        return _.find(this.participants, participant => participant.slimcoreObjectId === slimcoreObjectId);\r\n    }\r\n\r\n    private _onQualityChanged(event: SlimCore.Engine.Events.QualityChangedArgs) {\r\n        this._logger.info(`onQualityChanged: oid=${event.objectId}, mtype=${event.mediaType}, otype=${event.objectType}, type=${event.type}, value=${event.value}`);\r\n\r\n        // Right now we are only triggering events for audio and video media type.\r\n        if ((event.mediaType !== Enums.MediaType.Audio && event.mediaType !== Enums.MediaType.Video)) {\r\n            return;\r\n        }\r\n\r\n        // Check call id for local source\r\n        if (event.objectType === Enums.ObjectType.Call && event.objectId !== this.slimcoreCallId) {\r\n            return;\r\n        }\r\n\r\n        // Check participant id for remote source\r\n        if (event.objectType === Enums.ObjectType.Participant && !this._getParticipantByObjectId(event.objectId)) {\r\n            return;\r\n        }\r\n\r\n        let payload = {\r\n            type: SlimCoreElectronCall.convertQualityEventType(event.type),\r\n            value: SlimCoreElectronCall.convertQualityLevel(event.value),\r\n            mediaType: SlimCoreElectronCall.convertMediaType(event.mediaType),\r\n            isLocalSource: event.objectType === Enums.ObjectType.Call,\r\n        };\r\n\r\n        if (payload.type && payload.value) {\r\n            if (event.mediaType === Enums.MediaType.Audio && event.type === Enums.QualityEventType.RelayWhiteListing) {\r\n                this._isRelayWhiteListingIssue = true;\r\n                this.event('mediaConnectionWhitelistingWarning').raise();\r\n                this.event('mediaConnectionFailed').raise();\r\n            } else {\r\n                this.event('callQualityChanged').raise(payload);\r\n            }\r\n        }\r\n    }\r\n\r\n    public createContentSharingSession(contentSharingGuid: string, contentSharingIdentity: string, subject?: string, initialContentSharingSessionState?: string): Promise<IContentSharingSession> {\r\n        return Promise.resolve().then(() => {\r\n            let contentSharingSlimCoreObjectId = this._slimcoreCallHandler.createContentSharing(this.slimcoreCallId, contentSharingGuid, contentSharingIdentity, subject, initialContentSharingSessionState);\r\n            if (!contentSharingSlimCoreObjectId) {\r\n                throw new Error('Failed to create ContentSharing SlimCore object');\r\n            }\r\n\r\n            let slimCoreContentSharing = this._slimcoreInstance.getContentSharing(contentSharingSlimCoreObjectId);\r\n            if (!slimCoreContentSharing) {\r\n                throw new Error('Failed to create ContentSharing SlimCore native object');\r\n            }\r\n\r\n            let slimCoreElectronContentSharingSession = new SlimCoreElectronContentSharing(this._slimcoreInstance, this._slimcoreCallHandler, contentSharingSlimCoreObjectId, slimCoreContentSharing, this._logger);\r\n            this.contentSharingSessions.push(slimCoreElectronContentSharingSession);\r\n            this.event('contentSharingChanged').raise();\r\n\r\n            return slimCoreElectronContentSharingSession;\r\n        });\r\n    }\r\n\r\n    private _onContentSharingChanged(eventData: SlimCoreCommon.ObjectChangedEvent) {\r\n        let contentSharingObjects: SlimCore.ObjectId[] = this._slimcoreCallHandler.getContentSharingSessions(this.slimcoreCallId);\r\n        let foundNewSessions: boolean = false;\r\n\r\n        // Filter out content sharing objects that do not belong to this call\r\n        _.remove(contentSharingObjects, (contentSharingObjectId) => {\r\n            let callObjectId = this._getIntProperty(this._slimcoreCallHandler, contentSharingObjectId, SlimCore.Enums.Property.ContentSharingCallId);\r\n            return callObjectId !== this.slimcoreCallId;\r\n        });\r\n\r\n        let contentSharingSessionsRemoved = _.remove(this.contentSharingSessions, (session) => {\r\n            return contentSharingObjects.indexOf(session.slimCoreContentSharingObjectId) === -1;\r\n        });\r\n\r\n        contentSharingObjects.forEach((objectId) => {\r\n            let existingSession = _.find(this.contentSharingSessions, (session) => {\r\n                return session.slimCoreContentSharingObjectId === objectId;\r\n            });\r\n            if (!existingSession) {\r\n                let slimCoreContentSharing = this._slimcoreInstance.getContentSharing(objectId);\r\n                if (slimCoreContentSharing) {\r\n                    this.contentSharingSessions.push(new SlimCoreElectronContentSharing(this._slimcoreInstance, this._slimcoreCallHandler, objectId, slimCoreContentSharing, this._logger));\r\n                    foundNewSessions = true;\r\n                }\r\n            }\r\n        });\r\n\r\n        contentSharingSessionsRemoved.forEach((session) => {\r\n            session.setContentSharingStatus(ContentSharingStatus.Done);\r\n            session.dispose();\r\n        });\r\n\r\n        if (foundNewSessions || contentSharingSessionsRemoved.length) {\r\n            this.event('contentSharingChanged').raise();\r\n        }\r\n    }\r\n\r\n    private static convertConnectionType(connectionType: ConnectionType): Enums.ConnectionType {\r\n        switch (connectionType) {\r\n            case ConnectionType.AllSupported:\r\n                return Enums.ConnectionType.AllSupported;\r\n            case ConnectionType.NoDirectConnection:\r\n                return Enums.ConnectionType.NoDirectConnection;\r\n            default:\r\n                return Enums.ConnectionType.AllSupported;\r\n        }\r\n    }\r\n\r\n    private static convertTerminatedReason(status: Enums.CallStatus): TerminatedReason {\r\n        switch (status) {\r\n            case Enums.CallStatus.Failed:\r\n                return TerminatedReason.CallSetupError;\r\n            case Enums.CallStatus.Finished:\r\n                return TerminatedReason.Success;\r\n            case Enums.CallStatus.Missed:\r\n                return TerminatedReason.Missed;\r\n            case Enums.CallStatus.Refused:\r\n                return TerminatedReason.Declined;\r\n            case Enums.CallStatus.Busy:\r\n                return TerminatedReason.Busy;\r\n            case Enums.CallStatus.Cancelled:\r\n            case Enums.CallStatus.Unplaced:\r\n                return TerminatedReason.Cancelled;\r\n            case Enums.CallStatus.Dropped:\r\n                return TerminatedReason.MediaDroppedError;\r\n            case Enums.CallStatus.DeniedInLobby:\r\n                return TerminatedReason.DeniedInLobby;\r\n            case Enums.CallStatus.TimedOutInLobby:\r\n                return TerminatedReason.TimedOutInLobby;\r\n            default:\r\n                return TerminatedReason.Undefined;\r\n        }\r\n    }\r\n\r\n    private static convertParticipantReasonToTerminatedReason(reason: ParticipantStateReason): TerminatedReason {\r\n        switch (reason) {\r\n            case ParticipantStateReason.None:\r\n                return TerminatedReason.Success;\r\n            case ParticipantStateReason.AddingFailed:\r\n            case ParticipantStateReason.Blocked:\r\n            case ParticipantStateReason.NotFriendOrAuthorized:\r\n            case ParticipantStateReason.CallLimitReached:\r\n            case ParticipantStateReason.ParticipantDoesNotExist:\r\n                return TerminatedReason.BadRequest;\r\n            case ParticipantStateReason.NoResponse:\r\n                return TerminatedReason.Missed;\r\n            case ParticipantStateReason.Declined:\r\n                return TerminatedReason.Declined;\r\n            case ParticipantStateReason.NotReachable:\r\n                return TerminatedReason.NoNgcEndpoint;\r\n            case ParticipantStateReason.CallNotFound:\r\n                return TerminatedReason.CallNotFound;\r\n            case ParticipantStateReason.NetworkError:\r\n                return TerminatedReason.NetworkError;\r\n            case ParticipantStateReason.MediaDroppedError:\r\n                return TerminatedReason.MediaDroppedError;\r\n            case ParticipantStateReason.PstnInsufficientFunds:\r\n                return TerminatedReason.PstnInsufficientFunds;\r\n            case ParticipantStateReason.OtherError:\r\n                return TerminatedReason.Undefined;\r\n            case ParticipantStateReason.PstnSkypeoutAccountBlocked:\r\n                return TerminatedReason.PstnSkypeoutAccountBlocked;\r\n            case ParticipantStateReason.PstnCouldNotConnectToSkypeProxy:\r\n                return TerminatedReason.PstnCouldNotConnectToSkypeProxy;\r\n            case ParticipantStateReason.PstnBlockedByUs:\r\n                return TerminatedReason.PstnBlockedByUs;\r\n            case ParticipantStateReason.PstnBlockedRegulatoryIndia:\r\n                return TerminatedReason.PstnBlockedRegulatoryIndia;\r\n            case ParticipantStateReason.PstnInvalidNumber:\r\n                return TerminatedReason.PstnInvalidNumber;\r\n            case ParticipantStateReason.PstnNumberForbidden:\r\n                return TerminatedReason.PstnNumberForbidden;\r\n            case ParticipantStateReason.Busy:\r\n                return TerminatedReason.Busy;\r\n            case ParticipantStateReason.PstnCallTerminated:\r\n                return TerminatedReason.PstnCallTerminated;\r\n            case ParticipantStateReason.PstnNumberUnavailable:\r\n                return TerminatedReason.PstnNumberUnavailable;\r\n            case ParticipantStateReason.PstnEmergencyCallDenied:\r\n                return TerminatedReason.PstnEmergencyCallDenied;\r\n            case ParticipantStateReason.PstnNoSubscriptionCover:\r\n                return TerminatedReason.PstnNoSubscriptionCover;\r\n            case ParticipantStateReason.PstnCreditExpired:\r\n                return TerminatedReason.PstnCreditExpired;\r\n            case ParticipantStateReason.PstnCreditExpiredButEnough:\r\n                return TerminatedReason.PstnCreditExpiredButEnough;\r\n            case ParticipantStateReason.EnterprisePstnForbidden:\r\n                return TerminatedReason.EnterprisePstnForbidden;\r\n            case ParticipantStateReason.EnterprisePstnInternalError:\r\n                return TerminatedReason.EnterprisePstnInternalError;\r\n            case ParticipantStateReason.EnterprisePstnInvalidNumber:\r\n                return TerminatedReason.EnterprisePstnInvalidNumber;\r\n            case ParticipantStateReason.EnterprisePstnUnavailable:\r\n                return TerminatedReason.EnterprisePstnUnavailable;\r\n            case ParticipantStateReason.EnterprisePstnMiscError:\r\n                return TerminatedReason.EnterprisePstnMiscError;\r\n            case ParticipantStateReason.Kicked:\r\n                return TerminatedReason.Kicked;\r\n            case ParticipantStateReason.NetworkRequestTimeoutError:\r\n                return TerminatedReason.NetworkRequestTimeoutError;\r\n            case ParticipantStateReason.CallDoesNotExist:\r\n                return TerminatedReason.CallDoesNotExist;\r\n            case ParticipantStateReason.MediaSetupFailure:\r\n                return TerminatedReason.MediaSetupFailure;\r\n            case ParticipantStateReason.ServiceUnavailable:\r\n                return TerminatedReason.ServiceUnavailable;\r\n            case ParticipantStateReason.SignalingError:\r\n                return TerminatedReason.SignalingError;\r\n            case ParticipantStateReason.ConversationEstablishmentFailed:\r\n                return TerminatedReason.ConversationEstablishmentFailed;\r\n            case ParticipantStateReason.TemporarilyUnavailable:\r\n                return TerminatedReason.TemporarilyUnavailable;\r\n            case ParticipantStateReason.CannotConnectToNetworkError:\r\n                return TerminatedReason.CannotConnectToNetworkError;\r\n            case ParticipantStateReason.NoSignalingFromPeer:\r\n                return TerminatedReason.NoSignalingFromPeer;\r\n            default:\r\n                return TerminatedReason.Undefined;\r\n        }\r\n    }\r\n\r\n    private static convertTerminatedReasonToFailureType(reason: TerminatedReason, callGotConnected: boolean, mediaGotConnected: boolean): FailureType {\r\n        switch (reason) {\r\n            case TerminatedReason.Undefined:\r\n            case TerminatedReason.Success:\r\n            case TerminatedReason.Missed:\r\n            case TerminatedReason.Declined:\r\n            case TerminatedReason.Busy:\r\n            case TerminatedReason.Cancelled:\r\n            case TerminatedReason.NoNgcEndpoint:\r\n                return FailureType.Undefined;\r\n            case TerminatedReason.NetworkError:\r\n            case TerminatedReason.BadRequest:\r\n            case TerminatedReason.CallEstablishmentTimeout:\r\n            case TerminatedReason.CallSetupError:\r\n            case TerminatedReason.NoPermission:\r\n            case TerminatedReason.PstnInsufficientFunds:\r\n            case TerminatedReason.PstnCreditExpired:\r\n            case TerminatedReason.PstnCreditExpiredButEnough:\r\n            case TerminatedReason.PstnSkypeoutAccountBlocked:\r\n            case TerminatedReason.PstnCouldNotConnectToSkypeProxy:\r\n            case TerminatedReason.PstnBlockedByUs:\r\n            case TerminatedReason.PstnBlockedRegulatoryIndia:\r\n            case TerminatedReason.PstnInvalidNumber:\r\n            case TerminatedReason.PstnNumberForbidden:\r\n            case TerminatedReason.PstnCallTerminated:\r\n            case TerminatedReason.PstnNumberUnavailable:\r\n            case TerminatedReason.PstnEmergencyCallDenied:\r\n            case TerminatedReason.Kicked:\r\n            case TerminatedReason.CallDoesNotExist:\r\n            case TerminatedReason.MediaSetupFailure:\r\n            case TerminatedReason.ServiceUnavailable:\r\n            case TerminatedReason.SignalingError:\r\n            case TerminatedReason.ConversationEstablishmentFailed:\r\n            case TerminatedReason.TemporarilyUnavailable:\r\n            case TerminatedReason.CannotConnectToNetworkError:\r\n            case TerminatedReason.MediaRelayWhiteListingIssue:\r\n            case TerminatedReason.NoSignalingFromPeer:\r\n            case TerminatedReason.DeniedInLobby:\r\n            case TerminatedReason.TimedOutInLobby:\r\n                return FailureType.CallSetupFailed;\r\n            case TerminatedReason.MediaDroppedError:\r\n                return callGotConnected && mediaGotConnected ? FailureType.CallDropped : FailureType.CallSetupFailed;\r\n            default:\r\n                return FailureType.Undefined;\r\n        }\r\n    }\r\n\r\n    public static convertStatusAndFailureReasonToParticipantReason(status: Enums.CallStatus, reason: Enums.ParticipantFailureReason): ParticipantStateReason {\r\n        switch (status) {\r\n            case Enums.CallStatus.Busy:\r\n                return ParticipantStateReason.Busy;\r\n            case Enums.CallStatus.CallTimedOut:\r\n                return ParticipantStateReason.NetworkError;\r\n            case Enums.CallStatus.Cancelled:\r\n                return ParticipantStateReason.Cancelled;\r\n            case Enums.CallStatus.Dropped:\r\n                return ParticipantStateReason.MediaDroppedError;\r\n            case Enums.CallStatus.Refused:\r\n                return ParticipantStateReason.Declined;\r\n            case Enums.CallStatus.Missed:\r\n                return ParticipantStateReason.NoResponse;\r\n            case Enums.CallStatus.Failed:\r\n                return SlimCoreElectronCall.convertFailureReasonToParticipantReason(reason);\r\n            default:\r\n                return ParticipantStateReason.None;\r\n\r\n        }\r\n    }\r\n\r\n    public static convertFailureReasonToParticipantReason(reason: Enums.ParticipantFailureReason): ParticipantStateReason {\r\n        switch (reason) {\r\n            case Enums.ParticipantFailureReason.NoFailure:\r\n            case Enums.ParticipantFailureReason.HostEndedConf:\r\n            case Enums.ParticipantFailureReason.AnsweredElsewhere:\r\n                return ParticipantStateReason.None;\r\n            case Enums.ParticipantFailureReason.RecipientUserNotFound:\r\n            case Enums.ParticipantFailureReason.RecipientNotOnline:\r\n            case Enums.ParticipantFailureReason.PstnCouldNotConnectToSkypeProxy:\r\n            case Enums.ParticipantFailureReason.CallNotificationDeliveryFailure:\r\n                return ParticipantStateReason.NotReachable;\r\n            case Enums.ParticipantFailureReason.RecipientBlocked:\r\n                return ParticipantStateReason.Blocked;\r\n            case Enums.ParticipantFailureReason.CallerNotFriend:\r\n            case Enums.ParticipantFailureReason.CallerNotAuthorized:\r\n                return ParticipantStateReason.NotFriendOrAuthorized;\r\n            case Enums.ParticipantFailureReason.ConfParticipantCountLimitReached:\r\n            case Enums.ParticipantFailureReason.PstnNoSkypeoutSubscription:\r\n                return ParticipantStateReason.CallLimitReached;\r\n            case Enums.ParticipantFailureReason.CallNotFound:\r\n                return ParticipantStateReason.CallNotFound;\r\n            case Enums.ParticipantFailureReason.PstnNetworkError:\r\n            case Enums.ParticipantFailureReason.PstnInternetConnectionLost:\r\n            case Enums.ParticipantFailureReason.TrouterError:\r\n            case Enums.ParticipantFailureReason.GeneralNetworkError:\r\n                return ParticipantStateReason.NetworkError;\r\n            case Enums.ParticipantFailureReason.MediaDroppedError:\r\n            case Enums.ParticipantFailureReason.SoundRecordingError:\r\n            case Enums.ParticipantFailureReason.SoundPlaybackError:\r\n                return ParticipantStateReason.MediaDroppedError;\r\n            case Enums.ParticipantFailureReason.PstnInsufficientFunds:\r\n                return ParticipantStateReason.PstnInsufficientFunds;\r\n            case Enums.ParticipantFailureReason.PstnCreditExpired:\r\n                return ParticipantStateReason.PstnCreditExpired;\r\n            case Enums.ParticipantFailureReason.PstnCreditExpiredButEnough:\r\n                return ParticipantStateReason.PstnCreditExpiredButEnough;\r\n            case Enums.ParticipantFailureReason.MiscError:\r\n            case Enums.ParticipantFailureReason.PstnMiscError:\r\n                return ParticipantStateReason.OtherError;\r\n            case Enums.ParticipantFailureReason.PstnSkypeoutAccountBlocked:\r\n                return ParticipantStateReason.PstnSkypeoutAccountBlocked;\r\n            case Enums.ParticipantFailureReason.PstnBlockedByUs:\r\n                return ParticipantStateReason.PstnBlockedByUs;\r\n            case Enums.ParticipantFailureReason.PstnBlockedRegulatoryIndia:\r\n                return ParticipantStateReason.PstnBlockedRegulatoryIndia;\r\n            case Enums.ParticipantFailureReason.PstnInvalidNumber:\r\n                return ParticipantStateReason.PstnInvalidNumber;\r\n            case Enums.ParticipantFailureReason.PstnNumberForbidden:\r\n                return ParticipantStateReason.PstnNumberForbidden;\r\n            case Enums.ParticipantFailureReason.PstnCallTimedOut:\r\n                return ParticipantStateReason.NoResponse;\r\n            case Enums.ParticipantFailureReason.PstnBusy:\r\n                return ParticipantStateReason.Busy;\r\n            case Enums.ParticipantFailureReason.PstnCallTerminated:\r\n                return ParticipantStateReason.PstnCallTerminated;\r\n            case Enums.ParticipantFailureReason.PstnNumberUnavailable:\r\n                return ParticipantStateReason.PstnNumberUnavailable;\r\n            case Enums.ParticipantFailureReason.PstnCallRejected:\r\n                return ParticipantStateReason.Declined;\r\n            case Enums.ParticipantFailureReason.PstnEmergencyCallDenied:\r\n                return ParticipantStateReason.PstnEmergencyCallDenied;\r\n            case Enums.ParticipantFailureReason.PstnNoSubscriptionCover:\r\n                return ParticipantStateReason.PstnNoSubscriptionCover;\r\n            case Enums.ParticipantFailureReason.EnterprisePstnForbidden:\r\n                return ParticipantStateReason.EnterprisePstnForbidden;\r\n            case Enums.ParticipantFailureReason.EnterprisePstnInternalError:\r\n                return ParticipantStateReason.EnterprisePstnInternalError;\r\n            case Enums.ParticipantFailureReason.EnterprisePstnUnavailable:\r\n                return ParticipantStateReason.EnterprisePstnUnavailable;\r\n            case Enums.ParticipantFailureReason.EnterprisePstnInvalidNumber:\r\n                return ParticipantStateReason.EnterprisePstnInvalidNumber;\r\n            case Enums.ParticipantFailureReason.EnterprisePstnMiscError:\r\n                return ParticipantStateReason.EnterprisePstnMiscError;\r\n            case Enums.ParticipantFailureReason.Kicked:\r\n                return ParticipantStateReason.Kicked;\r\n            case Enums.ParticipantFailureReason.NetworkRequestTimeoutError:\r\n                return ParticipantStateReason.NetworkRequestTimeoutError;\r\n            case Enums.ParticipantFailureReason.CallDoesNotExist:\r\n                return ParticipantStateReason.CallDoesNotExist;\r\n            case Enums.ParticipantFailureReason.MediaSetupFailure:\r\n                return ParticipantStateReason.MediaSetupFailure;\r\n            case Enums.ParticipantFailureReason.ServiceUnavailable:\r\n                return ParticipantStateReason.ServiceUnavailable;\r\n            case Enums.ParticipantFailureReason.SignalingError:\r\n                return ParticipantStateReason.SignalingError;\r\n            case Enums.ParticipantFailureReason.ConversationEstablishmentFailed:\r\n                return ParticipantStateReason.ConversationEstablishmentFailed;\r\n            case Enums.ParticipantFailureReason.TemporarilyUnavailable:\r\n                return ParticipantStateReason.TemporarilyUnavailable;\r\n            case Enums.ParticipantFailureReason.NetworkCannotConnectError:\r\n                return ParticipantStateReason.CannotConnectToNetworkError;\r\n            case Enums.ParticipantFailureReason.NoSignalingFromPeer:\r\n                return ParticipantStateReason.NoSignalingFromPeer;\r\n            default:\r\n                return ParticipantStateReason.OtherError;\r\n        }\r\n    }\r\n\r\n    public static convertLightWeightFailureReasonToTerminatedReason(reason: Enums.LightWeightMeetingFailureReason): TerminatedReason {\r\n        switch (reason) {\r\n            case Enums.LightWeightMeetingFailureReason.NoFailure:\r\n                return TerminatedReason.Success;\r\n            case Enums.LightWeightMeetingFailureReason.NetworkError:\r\n                return TerminatedReason.NetworkError;\r\n            case Enums.LightWeightMeetingFailureReason.SessionNotFound:\r\n                return TerminatedReason.CallNotFound;\r\n            case Enums.LightWeightMeetingFailureReason.SessionTimedOut:\r\n                return TerminatedReason.CallEstablishmentTimeout;\r\n            case Enums.LightWeightMeetingFailureReason.Failure:\r\n                return TerminatedReason.CallSetupError;\r\n            default:\r\n                return TerminatedReason.CallSetupError;\r\n        }\r\n    }\r\n\r\n    private static convertToSlimCoreDtmfTone(dtmfTone: DtmfTone): Enums.DtmfTone {\r\n        switch (dtmfTone) {\r\n            case DtmfTone.Num0:\r\n                return Enums.DtmfTone.Num0;\r\n            case DtmfTone.Num1:\r\n                return Enums.DtmfTone.Num1;\r\n            case DtmfTone.Num2:\r\n                return Enums.DtmfTone.Num2;\r\n            case DtmfTone.Num3:\r\n                return Enums.DtmfTone.Num3;\r\n            case DtmfTone.Num4:\r\n                return Enums.DtmfTone.Num4;\r\n            case DtmfTone.Num5:\r\n                return Enums.DtmfTone.Num5;\r\n            case DtmfTone.Num6:\r\n                return Enums.DtmfTone.Num6;\r\n            case DtmfTone.Num7:\r\n                return Enums.DtmfTone.Num7;\r\n            case DtmfTone.Num8:\r\n                return Enums.DtmfTone.Num8;\r\n            case DtmfTone.Num9:\r\n                return Enums.DtmfTone.Num9;\r\n            case DtmfTone.Star:\r\n                return Enums.DtmfTone.Star;\r\n            case DtmfTone.Pound:\r\n                return Enums.DtmfTone.Pound;\r\n            case DtmfTone.A:\r\n                return Enums.DtmfTone.A;\r\n            case DtmfTone.B:\r\n                return Enums.DtmfTone.B;\r\n            case DtmfTone.C:\r\n                return Enums.DtmfTone.C;\r\n            case DtmfTone.D:\r\n                return Enums.DtmfTone.D;\r\n            case DtmfTone.Flash:\r\n                return Enums.DtmfTone.Flash;\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n\r\n    private static convertToSlimCoreAudioUsageMode(audioUsageMode: AudioUsageMode): Enums.AudioUsageMode {\r\n        switch (audioUsageMode) {\r\n            case AudioUsageMode.Default:\r\n                return Enums.AudioUsageMode.Default;\r\n            case AudioUsageMode.LongrangeSpeaker:\r\n                return Enums.AudioUsageMode.LongrangeSpeaker;\r\n            case AudioUsageMode.Auditorium:\r\n                return Enums.AudioUsageMode.Auditorium;\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n\r\n    private static convertQualityEventType(value: Enums.QualityEventType): QualityEventType {\r\n        switch (value) {\r\n            case Enums.QualityEventType.NetworkSendQuality:\r\n                return QualityEventType.NetworkSendQuality;\r\n            case Enums.QualityEventType.NetworkRecvQuality:\r\n                return QualityEventType.NetworkRecvQuality;\r\n            case Enums.QualityEventType.NetworkDelay:\r\n                return QualityEventType.NetworkDelay;\r\n            case Enums.QualityEventType.NetworkBandwidthLow:\r\n                return QualityEventType.NetworkBandwidthLow;\r\n            case Enums.QualityEventType.NetworkReconnect:\r\n                return QualityEventType.NetworkReconnect;\r\n            case Enums.QualityEventType.NetworkPacketLoss:\r\n                return QualityEventType.NetworkPacketLoss;\r\n            case Enums.QualityEventType.NetworkJitter:\r\n                return QualityEventType.NetworkJitter;\r\n            case Enums.QualityEventType.NetworkRateMatching:\r\n                return QualityEventType.NetworkRateMatching;\r\n            case Enums.QualityEventType.DeviceCaptureNotFunctioning:\r\n                return QualityEventType.DeviceCaptureNotFunctioning;\r\n            case Enums.QualityEventType.DeviceRenderNotFunctioning:\r\n                return QualityEventType.DeviceRenderNotFunctioning;\r\n            case Enums.QualityEventType.DeviceRenderGlitches:\r\n                return QualityEventType.DeviceRenderGlitches;\r\n            case Enums.QualityEventType.DeviceLowSNR:\r\n                return QualityEventType.DeviceLowSNR;\r\n            case Enums.QualityEventType.DeviceLowSpeechLevel:\r\n                return QualityEventType.DeviceLowSpeechLevel;\r\n            case Enums.QualityEventType.DeviceClipping:\r\n                return QualityEventType.DeviceClipping;\r\n            case Enums.QualityEventType.DeviceEcho:\r\n                return QualityEventType.DeviceEcho;\r\n            case Enums.QualityEventType.PresentationAudioQuality:\r\n                return QualityEventType.DeviceNearEndToEchoRatio;\r\n            case Enums.QualityEventType.DeviceHalfDuplexAec:\r\n                return QualityEventType.DeviceHalfDuplexAec;\r\n            case Enums.QualityEventType.DeviceMultipleEndpoints:\r\n                return QualityEventType.DeviceMultipleEndpoints;\r\n            case Enums.QualityEventType.DeviceHowling:\r\n                return QualityEventType.DeviceHowling;\r\n            case Enums.QualityEventType.DeviceRenderZeroVolume:\r\n                return QualityEventType.DeviceRenderZeroVolume;\r\n            case Enums.QualityEventType.DeviceRenderMute:\r\n                return QualityEventType.DeviceRenderMute;\r\n            case Enums.QualityEventType.NetworkSendCatastrophic:\r\n                return QualityEventType.NetworkSendCatastrophic;\r\n            case Enums.QualityEventType.NetworkRecvCatastrophic:\r\n                return QualityEventType.NetworkRecvCatastrophic;\r\n            case Enums.QualityEventType.CpuInsufficient:\r\n                return QualityEventType.CpuInsufficient;\r\n            case Enums.QualityEventType.DeviceCaptureMute:\r\n                return QualityEventType.DeviceCaptureMute;\r\n            case Enums.QualityEventType.DeviceCaptureNotMuteButSilent:\r\n                return QualityEventType.DeviceCaptureNotMuteButSilent;\r\n            case Enums.QualityEventType.DeviceSpeakWhileMuted:\r\n                return QualityEventType.DeviceSpeakWhileMuted;\r\n            case Enums.QualityEventType.VideoVbssRendered:\r\n                return QualityEventType.VideoVbssRendered;\r\n            case Enums.QualityEventType.NetworkEthernetInterfaceUsed:\r\n                return QualityEventType.NetworkEthernetInterfaceUsed;\r\n            case Enums.QualityEventType.NetworkWlanInterfaceUsed:\r\n                return QualityEventType.NetworkWlanInterfaceUsed;\r\n            case Enums.QualityEventType.NetworkWwanInterfaceUsed:\r\n                return QualityEventType.NetworkWwanInterfaceUsed;\r\n            case Enums.QualityEventType.RelayWhiteListing:\r\n                return QualityEventType.NetworkRelaysNotReachable;\r\n            case Enums.QualityEventType.VideoCapturerDeviceStartFailed:\r\n                return QualityEventType.VideoCapturerDeviceStartFailed;\r\n            case Enums.QualityEventType.VideoCapturerDeviceStartTimedOut:\r\n                return QualityEventType.VideoCapturerDeviceStartTimedOut;\r\n            case Enums.QualityEventType.VideoCapturerDeviceStartFailureLackSystemRes:\r\n                return QualityEventType.VideoCapturerDeviceStartFailureLackSystemRes;\r\n            case Enums.QualityEventType.VideoCapturerDeviceStartFailureMFResConflict:\r\n                return QualityEventType.VideoCapturerDeviceStartFailureMFResConflict;\r\n            case Enums.QualityEventType.ZeroCaptureDevicesEnumerated:\r\n                return QualityEventType.ZeroCaptureDevicesEnumerated;\r\n            case Enums.QualityEventType.ZeroRenderDevicesEnumerated:\r\n                return QualityEventType.ZeroRenderDevicesEnumerated;\r\n            case Enums.QualityEventType.NoNetwork:\r\n                return QualityEventType.NoNetwork;\r\n            case Enums.QualityEventType.NetworkNotWorking:\r\n                return QualityEventType.NetworkNotWorking;\r\n            case Enums.QualityEventType.DeviceCaptureNotFunctioningAudioSrvNotRunning:\r\n                return QualityEventType.DeviceCaptureNotFunctioningAudioSrvNotRunning;\r\n            case Enums.QualityEventType.DeviceRenderNotFunctioningAudioSrvNotRunning:\r\n                return QualityEventType.DeviceRenderNotFunctioningAudioSrvNotRunning;\r\n            case Enums.QualityEventType.DeviceCaptureNotFunctioningDeviceInUse:\r\n                return QualityEventType.DeviceCaptureNotFunctioningDeviceInUse;\r\n            case Enums.QualityEventType.DeviceRenderNotFunctioningDeviceInUse:\r\n                return QualityEventType.DeviceRenderNotFunctioningDeviceInUse;\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n\r\n    private static convertQualityLevel(value: Enums.QualityLevel): QualityLevel {\r\n        switch (value) {\r\n            case Enums.QualityLevel.Unknown:\r\n                return QualityLevel.Unknown;\r\n            case Enums.QualityLevel.Good:\r\n                return QualityLevel.Good;\r\n            case Enums.QualityLevel.Poor:\r\n                return QualityLevel.Poor;\r\n            case Enums.QualityLevel.Bad:\r\n                return QualityLevel.Bad;\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n\r\n    private static convertMediaType(value: Enums.MediaType): MediaType {\r\n        switch (value) {\r\n            case Enums.MediaType.Audio:\r\n                return MediaType.Audio;\r\n            case Enums.MediaType.Video:\r\n                return MediaType.Video;\r\n            case Enums.MediaType.PanoramicCamera:\r\n                return MediaType.PanoramicVideo;\r\n            case Enums.MediaType.AppSharing:\r\n                return MediaType.ScreenShare;\r\n            case Enums.MediaType.Data:\r\n                return MediaType.Data;\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n\r\n    private static toMediaDirection(value: MediaDirection): Enums.MediaDirection {\r\n        switch (value) {\r\n            case MediaDirection.Disabled:\r\n                return Enums.MediaDirection.Disabled;\r\n            case MediaDirection.Inactive:\r\n                return Enums.MediaDirection.Inactive;\r\n            case MediaDirection.SendOnly:\r\n                return Enums.MediaDirection.SendToPeer;\r\n            case MediaDirection.ReceiveOnly:\r\n                return Enums.MediaDirection.ReceiveFromPeer;\r\n            case MediaDirection.Bidirectional:\r\n                return Enums.MediaDirection.Bidirectional;\r\n            default:\r\n                return Enums.MediaDirection.Disabled;\r\n        }\r\n    }\r\n\r\n    private static toAnswerMediaType(value: AnswerMediaType): Enums.AnswerMediaType {\r\n        switch (value) {\r\n            case AnswerMediaType.AnswerWithAudioOnly:\r\n                return Enums.AnswerMediaType.AnswerWithAudioOnly;\r\n            case AnswerMediaType.AnswerWithAudioVideo:\r\n                return Enums.AnswerMediaType.AnswerWithAudioVideo;\r\n            case AnswerMediaType.AnswerWithScreenshareOnly:\r\n                return Enums.AnswerMediaType.AnswerWithScreenshareOnly;\r\n            default:\r\n                return Enums.AnswerMediaType.AnswerWithAudioOnly;\r\n        }\r\n    }\r\n\r\n    private static convertMuteScope(value: MuteScope): Enums.MuteScope {\r\n        switch (value) {\r\n            case MuteScope.All:\r\n                return Enums.MuteScope.All;\r\n            case MuteScope.Specified:\r\n                return Enums.MuteScope.Specified;\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n\r\n    private static convertToSlimCoreMediaPeerType(mediaPeerType: MediaPeerType): Enums.MediaPeerType {\r\n        switch (mediaPeerType) {\r\n            case MediaPeerType.ConsumerTwoParty:\r\n                return Enums.MediaPeerType.ConsumerTwoParty;\r\n            case MediaPeerType.ConsumerPstn:\r\n                return Enums.MediaPeerType.ConsumerPstn;\r\n            case MediaPeerType.ConsumerMultiParty:\r\n                return Enums.MediaPeerType.ConsumerMultiParty;\r\n            case MediaPeerType.EnterpriseTwoPartyOnlineOnly:\r\n                return Enums.MediaPeerType.EnterpriseTwoPartyOnlineOnly;\r\n            case MediaPeerType.EnterpriseTwoPartyHybrid:\r\n                return Enums.MediaPeerType.EnterpriseTwoPartyHybrid;\r\n            case MediaPeerType.EnterprisePstnOnlineOnly:\r\n                return Enums.MediaPeerType.EnterprisePstnOnlineOnly;\r\n            case MediaPeerType.EnterprisePstnHybrid:\r\n                return Enums.MediaPeerType.EnterprisePstnHybrid;\r\n            case MediaPeerType.EnterpriseMultiParty:\r\n                return Enums.MediaPeerType.EnterpriseMultiParty;\r\n            case MediaPeerType.EnterpriseFederated:\r\n                return Enums.MediaPeerType.EnterpriseFederated;\r\n            case MediaPeerType.EnterpriseUnknown:\r\n                return Enums.MediaPeerType.EnterpriseUnknown;\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n\r\n    public static convertPushHandlingResult(result: Enums.PushHandlingResult): CallAcknowledgeResult {\r\n        switch (result) {\r\n            case Enums.PushHandlingResult.BadNotificationPayload:\r\n                return { code: CallAcknowledgeResultCode.BadNotificationPayload, fatal: true };\r\n            case Enums.PushHandlingResult.CallSetupSucceeded:\r\n                return { code: CallAcknowledgeResultCode.CallSetupSucceeded, success: true };\r\n            case Enums.PushHandlingResult.BadNotificationEventType:\r\n                return { code: CallAcknowledgeResultCode.BadNotificationEventType, fatal: true };\r\n            case Enums.PushHandlingResult.CallSetupSucceededCallAlreadyExists:\r\n                return { code: CallAcknowledgeResultCode.CallAlreadyExists };\r\n            case Enums.PushHandlingResult.CallSetupFailedCannotConnect:\r\n                return { code: CallAcknowledgeResultCode.CallFailedCannotConnect, fatal: true };\r\n            case Enums.PushHandlingResult.CallSetupFailedNoSignaling:\r\n                return { code: CallAcknowledgeResultCode.CallFailedNoSignaling, fatal: true };\r\n            case Enums.PushHandlingResult.CallSetupFailedConflict:\r\n                return { code: CallAcknowledgeResultCode.CallFailedConflict };\r\n            case Enums.PushHandlingResult.CallSetupFailedPushIgnored:\r\n                return { code: CallAcknowledgeResultCode.CallFailedPushIgnored };\r\n            case Enums.PushHandlingResult.CallSetupFailedAnsweredElsewhere:\r\n                return { code: CallAcknowledgeResultCode.CallFailedAnsweredElsewhere };\r\n            case Enums.PushHandlingResult.CallSetupFailedAlreadyEnded:\r\n                return { code: CallAcknowledgeResultCode.CallFailedCallAlreadyEnded };\r\n            case Enums.PushHandlingResult.CallSetupProgress:\r\n                return { code: CallAcknowledgeResultCode.CallSetupInProgress, success: true };\r\n            case Enums.PushHandlingResult.CallSetupFailed:\r\n            case Enums.PushHandlingResult.CallSetupFailedNoPermission:\r\n            case Enums.PushHandlingResult.CallSetupFailedNoCommonCodec:\r\n            default:\r\n                return { code: CallAcknowledgeResultCode.CallSetupFailed, fatal: true };\r\n        }\r\n    }\r\n\r\n    public get isAudioStreamConnected(): boolean {\r\n        return this._isAudioStreamConnected;\r\n    }\r\n\r\n    public set isAudioStreamConnected(value: boolean) {\r\n        if (this._isAudioStreamConnected === value) {\r\n            return;\r\n        }\r\n\r\n        this._isAudioStreamConnected = value;\r\n        this._wasAudioStreamConnected = this._wasAudioStreamConnected || value;\r\n        this.raiseChanged();\r\n    }\r\n\r\n    public static isCallConnected(status: Enums.CallStatus): boolean {\r\n        return status === Enums.CallStatus.InProgress;\r\n    }\r\n\r\n    public static isCallRinging(status: Enums.CallStatus): boolean {\r\n        switch (status) {\r\n            case Enums.CallStatus.RingingOut:\r\n            case Enums.CallStatus.RingingIn:\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    public static isCallConnecting(status: Enums.CallStatus): boolean {\r\n        return status === Enums.CallStatus.Routing;\r\n    }\r\n\r\n    public static isCallEarlyMedia(status: Enums.CallStatus): boolean {\r\n        return status === Enums.CallStatus.EarlyMedia;\r\n    }\r\n\r\n    public static isCallInLobby(status: Enums.CallStatus): boolean {\r\n        return status === Enums.CallStatus.InLobby;\r\n    }\r\n\r\n    public static isCallTerminated(status: Enums.CallStatus): boolean {\r\n        switch (status) {\r\n            case Enums.CallStatus.Missed:\r\n            case Enums.CallStatus.Refused:\r\n            case Enums.CallStatus.Busy:\r\n            case Enums.CallStatus.Cancelled:\r\n            case Enums.CallStatus.Finished:\r\n            case Enums.CallStatus.Failed:\r\n            case Enums.CallStatus.Dropped:\r\n            case Enums.CallStatus.DeniedInLobby:\r\n            case Enums.CallStatus.TimedOutInLobby:\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    private _cleanCallResources(): Promise<void> {\r\n        return Promise.resolve()\r\n            .then(() => {\r\n                let participantsCleanUpPromises = _.map(this.participants, (p) => SlimCoreCommon.forgetAndLog(p.cleanUpAsync(), this._logger, 'cleanCallResources: Participant clean-up failed'));\r\n                return Promise.all(participantsCleanUpPromises);\r\n            })\r\n            .then(() => {\r\n                if (this._localScreenShareStream) {\r\n                    return SlimCoreCommon.forgetAndLog(this.stopScreenSharing(), this._logger, 'cleanCallResources: LocalScreenShare stop failed');\r\n                }\r\n            })\r\n            .then(() => {\r\n                if (this._localVideo) {\r\n                    return SlimCoreCommon.forgetAndLog(this._localVideo.stop(), this._logger, 'cleanCallResources: LocalVideo stop failed');\r\n                }\r\n            })\r\n            .then(() => {\r\n                if (this._localVideoPreview) {\r\n                    return SlimCoreCommon.forgetAndLog(this._localVideoPreview.stop(), this._logger, 'cleanCallResources: LocalVideoPreview stop failed');\r\n                }\r\n            })\r\n            .then(() => {\r\n                if (this.lightWeightMeeting) {\r\n                    this._removeLightWeightMeeting();\r\n                }\r\n\r\n                this.contentSharingSessions.forEach((session) => {\r\n                    session.setContentSharingStatus(ContentSharingStatus.Done);\r\n                    session.dispose();\r\n                });\r\n                this.contentSharingSessions = [];\r\n            })\r\n            .then(() => this.dispose(), e => this.dispose());\r\n    }\r\n\r\n    public dispose(): void {\r\n        this._logger.info('SlimCoreElectronCall.dispose()');\r\n        if (this.subscriptions.length) {\r\n            this._logger.warn(`${this.subscriptions.length} subscriptions will be lost`);\r\n        }\r\n\r\n        if (this._slimCoreElectronRemoteManager) {\r\n            this._slimCoreElectronRemoteManager.dispose();\r\n        }\r\n        this.mediaStreams[StreamType.Video] = [];\r\n        this.mediaStreams[StreamType.ScreenSharing] = [];\r\n\r\n        if (this._localScreenShareStream) {\r\n            this._localScreenShareStream.dispose();\r\n            this._localScreenShareStream = null;\r\n        }\r\n\r\n        if (this._localVideo) {\r\n            this._localVideo.dispose();\r\n            this._localVideo = null;\r\n        }\r\n\r\n        if (this._localVideoPreview) {\r\n            this._localVideoPreview.dispose();\r\n            this._localVideoPreview = null;\r\n        }\r\n\r\n        if (this._localVideoContainer) {\r\n            this._localVideoContainer = null;\r\n        }\r\n\r\n        // Dispose screenSharingControl before\r\n        // data channel since screenSharingControl\r\n        // needs to unregister source/sink on the channel\r\n        // first\r\n        if (this.screenSharingControl) {\r\n            this.screenSharingControl.dispose();\r\n            this.screenSharingControl = null;\r\n        }\r\n\r\n        if (this.holographicInteractionControl) {\r\n            this.holographicInteractionControl.dispose();\r\n            this.holographicInteractionControl = null;\r\n        }\r\n\r\n        if (this._dataChannel) {\r\n            this._dataChannel.dispose();\r\n            this._dataChannel = null;\r\n        }\r\n\r\n        if (this._dataChannelUsers) {\r\n            this._dataChannelUsers = null;\r\n        }\r\n\r\n        this.participants.forEach(p => p.dispose());\r\n\r\n        super.dispose();\r\n\r\n        this.slimcoreCallId = 0;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronCall.ts","/// <reference path=\"../typings/slimcore.d.ts\" />\r\n/// <reference path=\"../typings/slimcore-enums.d.ts\" />\r\n\r\nimport { CallingLogger } from 'skype-calling-interface';\r\nimport { IRenderTarget } from 'skype-calling-interface';\r\nimport { ScalingMode } from 'skype-calling-interface';\r\nimport { StartStreamOptions } from 'skype-calling-interface';\r\nimport { VideoDeviceDesc } from 'skype-calling-interface';\r\n\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\nimport SlimCoreElectronDeviceManager from './SlimCoreElectronDeviceManager';\r\nimport SlimCoreElectronVideoRenderer from './SlimCoreElectronVideoRenderer';\r\n\r\n// From electron/typings/slimcore-enums.d.ts:\r\nimport Enums = SlimCore.Enums;\r\n\r\nexport default class SlimCoreElectronLocalVideoPreview extends SlimCoreElectronVideoRenderer {\r\n    public isStreaming = false;\r\n    public isAvailable = true;\r\n    public id: number;\r\n\r\n    private _previewVideoObjectId = 0;\r\n\r\n    private _currentStartPromise: Promise<void>;\r\n    private _currentStopPromise: Promise<void>;\r\n\r\n    private _currentCamera: VideoDeviceDesc;\r\n\r\n    public constructor(\r\n        private _currentTarget: IRenderTarget,\r\n        private _deviceManager: SlimCoreElectronDeviceManager,\r\n        settings: SlimCoreCommon.Settings,\r\n        logger: CallingLogger,\r\n        private _videoType: Enums.VideoType,\r\n        private _options?: StartStreamOptions,\r\n    ) {\r\n        super(logger.createChild(() => `LocalVideoPreview[${this._previewVideoObjectId}]`), settings);\r\n        this._logger.log('constructor');\r\n        if (this._videoType !== Enums.VideoType.ScreenShare) {\r\n            this.registerCallback(this._deviceManager.on('devicesChanged', () => this._devicesChanged()));\r\n        }\r\n    }\r\n\r\n    private _devicesChanged() {\r\n        this._logger.info('Devices changed - checking if video needs to be restarted');\r\n        let selectedDevices = this._deviceManager.getSelectedDevices();\r\n\r\n        if (!this._currentTarget) {\r\n            this._logger.warn('Current VideoTarget not set. Ignoring request');\r\n            return;\r\n        }\r\n\r\n        if (this._currentCamera && selectedDevices.camera && selectedDevices.camera !== this._currentCamera.id) {\r\n            this._logger.info(`Changing video device to ${selectedDevices.camera}`);\r\n\r\n            this.stop()\r\n                .then(() => this.startVideoAsync())\r\n                .catch((e) => {\r\n                    this._logger.error(`Caught error while trying to stop\\start local video after device change. Error: ${e}`);\r\n                });\r\n        }\r\n    }\r\n\r\n    public startVideoAsync(): Promise<void> {\r\n        this._logger.info('startVideoAsync called');\r\n        if (this._currentStartPromise) {\r\n            this._logger.info(`Start requested but pending start exists. Returning previous promise`);\r\n            return this._currentStartPromise;\r\n        }\r\n\r\n        let initialPromise: Promise<void>;\r\n        if (this._currentStopPromise) {\r\n            this._logger.info(`Waiting for stop promise to finish.`);\r\n            initialPromise = this._currentStopPromise;\r\n        } else {\r\n            initialPromise = Promise.resolve<void>();\r\n        }\r\n\r\n        this._currentStartPromise = initialPromise\r\n            .then(this._startVideo)\r\n            .catch(error => {\r\n                this._logger.error(`Failed to start Local Video. Err: ${error}`);\r\n                this._currentStartPromise = null;\r\n                this.stop();\r\n                throw error;\r\n            });\r\n\r\n        return this._currentStartPromise;\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        this._logger.info('stop called');\r\n        let always = () => {\r\n            this._currentStopPromise = null;\r\n            this._currentStartPromise = null;\r\n        };\r\n\r\n        if (this._currentStopPromise) {\r\n            this._logger.info(`Stop requested but pending stop exists. Returning previous promise`);\r\n            return this._currentStopPromise;\r\n        }\r\n\r\n        let initialPromise: Promise<void>;\r\n        if (this._currentStartPromise) {\r\n            this._logger.info('Waiting for start promise to finish.');\r\n            initialPromise = this._currentStartPromise;\r\n        } else {\r\n            initialPromise = Promise.resolve<void>();\r\n        }\r\n\r\n        this._currentStopPromise = initialPromise\r\n            .then(this._stopVideo)\r\n            .then(always, error => {\r\n                this._logger.error(`Failed to stop LocalVideo. Error: ${error}`);\r\n                always();\r\n                throw error;\r\n            });\r\n\r\n        return this._currentStopPromise;\r\n    }\r\n\r\n    public dispose() {\r\n        this.stop()\r\n        .then(() => {this._currentTarget = null; });\r\n        super.dispose();\r\n    }\r\n\r\n    private _startVideo = () => {\r\n        let label = '';\r\n        let path = '';\r\n        if (this._videoType !== Enums.VideoType.ScreenShare) {\r\n            let selectedCamera = this._deviceManager.getSelectedCamera();\r\n            if (!selectedCamera) {\r\n                throw new Error('No camera selected to start video on');\r\n            }\r\n\r\n            this._logger.info(`Starting local video using camera: ${JSON.stringify(selectedCamera)}`);\r\n\r\n            this._currentCamera = selectedCamera;\r\n\r\n            label = selectedCamera.label;\r\n            path = selectedCamera.id;\r\n        }\r\n        return this._deviceManager.getPreviewVideo(this._videoType, label, path)\r\n            .then((videoObjectId) => {\r\n                return this._deviceManager.getRendererBindingManager().acquire(this, videoObjectId)\r\n                    .then((binding) => {\r\n                        this._previewVideoObjectId = videoObjectId;\r\n                        this._videoBinding = binding;\r\n\r\n                        let options = this._options || {\r\n                            scalingMode: ScalingMode.Crop,\r\n                            transparent: false,\r\n                        };\r\n\r\n                        this._createVideoRenderer(this._currentTarget, options, true);\r\n                    });\r\n            });\r\n    }\r\n\r\n    private _stopVideo = () => {\r\n        if (this._previewVideoObjectId && this._videoBinding) {\r\n            this._logger.info('Waiting for VideoBinding to be released');\r\n            this._disposeVideoRenderer();\r\n            let releasePromise = this._deviceManager.getRendererBindingManager().release(this, this._previewVideoObjectId);\r\n            this._previewVideoObjectId = 0;\r\n            this._videoBinding = null;\r\n            return releasePromise;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronLocalVideoPreview.ts","import * as _ from 'lodash';\r\n\r\nimport { CallingLogger } from 'skype-calling-interface';\r\nimport { CallParticipantStreamMap } from 'skype-calling-interface';\r\nimport { StreamType } from 'skype-calling-interface';\r\n\r\nimport SlimCoreElectronBase from './SlimCoreElectronBase';\r\nimport SlimCoreElectronRemoteStream from './SlimCoreElectronRemoteStream';\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\n\r\n// From electron/typings/slimcore-enums.d.ts:\r\nimport Enums = SlimCore.Enums;\r\n\r\n// Manages remote streams for a participant and manages the roster state for creation/removal\r\n// Needs to be created per participant\r\nexport default class SlimCoreElectronRemoteStreamManager extends SlimCoreElectronBase<{}> {\r\n    public _streams: CallParticipantStreamMap = {};\r\n    private _slimcoreParticipantObjectId: number;\r\n\r\n    public constructor(\r\n        private _callHandler: SlimCoreCommon.CallHandler,\r\n        logger: CallingLogger,\r\n        private _slimcoreInstance: SlimCoreCommon.Engine,\r\n        private _settings: SlimCoreCommon.Settings,\r\n        participantObjectId: number,\r\n        _streams: CallParticipantStreamMap,\r\n    ) {\r\n        super(logger.createChild(() => `SlimCoreElectronRemoteStreamManager[${this._slimcoreParticipantObjectId}]`));\r\n        this._logger.log('constructor');\r\n\r\n        this._streams[StreamType.Video] = [];\r\n        this._streams[StreamType.ScreenSharing] = [];\r\n\r\n        if (participantObjectId) {\r\n            this._streams = _streams;\r\n            this._slimcoreParticipantObjectId = participantObjectId;\r\n\r\n            // keeping it for legacy backward compat\r\n            this.registerCallback(SlimCoreCommon.onObjectPropertyChanged(\r\n                this._slimcoreInstance,\r\n                Enums.Property.ParticipantVideoCountChanged,\r\n                this._slimcoreParticipantObjectId,\r\n                data => this._onVideoCountChanged()),\r\n                true);\r\n            this.registerCallback(SlimCoreCommon.onRemoteVideosCountChanged(\r\n                this._callHandler,\r\n                this._slimcoreParticipantObjectId,\r\n                data => this._onVideoCountChanged()),\r\n                true);\r\n            this._onVideoCountChanged();\r\n        }\r\n        else {\r\n            throw new Error('SlimCoreElectronRemoteStreamManager: participantObjectId cannot be null or zero');\r\n        }\r\n    }\r\n\r\n    public getStrProperty(property: Enums.Property, fallback?: string): string {\r\n        return this._getStrProperty(this._callHandler, this._slimcoreParticipantObjectId, property, fallback);\r\n    }\r\n\r\n    public getIntProperty(property: Enums.Property, fallback?: number): number {\r\n        return this._getIntProperty(this._callHandler, this._slimcoreParticipantObjectId, property, fallback);\r\n    }\r\n\r\n    private _onVideoCountChanged(eventData?: SlimCoreCommon.ObjectChangedEvent) {\r\n        let videoObjectIds: number[] = this._callHandler.callGetParticipantVideos(this._slimcoreParticipantObjectId);\r\n        if (!videoObjectIds) return;\r\n\r\n        let videoObjectsByType: { [type: number]: SlimCoreCommon.IVideoObjectChangedEventData[] } = {};\r\n        videoObjectsByType[Enums.VideoType.Video] = [];\r\n        videoObjectsByType[Enums.VideoType.ScreenShare] = [];\r\n\r\n        videoObjectIds.forEach((videoObjectId) => {\r\n            let mediaType = this._getIntProperty(this._callHandler, videoObjectId, Enums.Property.VideoType);\r\n            let mediaStatus = this._getIntProperty(this._callHandler, videoObjectId, Enums.Property.VideoStatus);\r\n\r\n            // Ignore Augmented for now\r\n            if (mediaType === Enums.VideoType.Augmented) return;\r\n\r\n            videoObjectsByType[mediaType].push({\r\n                videoObjectId: videoObjectId,\r\n                videoType: mediaType,\r\n                videoStatus: mediaStatus,\r\n            });\r\n        });\r\n\r\n        this._handleVideoCountChanged(Enums.VideoType.Video, videoObjectsByType[Enums.VideoType.Video]);\r\n        this._handleVideoCountChanged(Enums.VideoType.ScreenShare, videoObjectsByType[Enums.VideoType.ScreenShare]);\r\n        this.raiseChanged();\r\n    }\r\n\r\n    /* VIDEO streams OPERATIONS */\r\n    private _handleVideoCountChanged(videoType: Enums.VideoType, videoObjects: SlimCoreCommon.IVideoObjectChangedEventData[]) {\r\n        const streamType = SlimCoreElectronRemoteStreamManager.SlimcoreVideoTypeToStreamType(videoType);\r\n        const streamsOfType = this._streams[streamType];\r\n        const removals = _.filter(streamsOfType, s => !_.some(videoObjects, v => v.videoObjectId === s.id));\r\n\r\n        _.each(removals, stream => {\r\n            this._logger.info(`_handleVideoCountChanged: removing stream ${stream.id} (stream type: ${streamType})`);\r\n            _.remove(streamsOfType, stream);\r\n            stream.stop()\r\n                .then(() => SlimCoreCommon.forgetAndLog((stream as SlimCoreElectronRemoteStream).cleanUpAsync(), this._logger, 'Failed to clean-up remote video stream'))\r\n                .then(() => stream.dispose());\r\n        });\r\n\r\n        // create objects for the _streams that exist in slimcore\r\n        _.each(videoObjects, video => {\r\n            if (!_.some(streamsOfType, s => s.id === video.videoObjectId)) {\r\n                this._logger.info(`_handleVideoCountChanged: adding stream ${video.videoObjectId} (stream type: ${streamType})`);\r\n                let newStream = new SlimCoreElectronRemoteStream(\r\n                    video.videoObjectId,\r\n                    streamType,\r\n                    this._callHandler,\r\n                    this._logger,\r\n                    this._slimcoreInstance,\r\n                    this._settings,\r\n                );\r\n                this._streams[streamType].push(newStream);\r\n                newStream.changed(() => this.raiseChanged());\r\n            }\r\n        });\r\n    }\r\n\r\n    public cleanUpAsync(): Promise<void> {\r\n        return Promise.all(_.flatMap(_.values(this._streams),\r\n            streams => _.map(streams,\r\n                s => SlimCoreCommon.forgetAndLog((s as SlimCoreElectronRemoteStream).cleanUpAsync(),\r\n                    this._logger,\r\n                    `cleanUpAsync: Remote stream ${s.id} clean-up failed`))))\r\n            .then(_.noop);\r\n    }\r\n\r\n    public dispose(): void {\r\n        _.each(_.values(this._streams), _streams => _.each(_streams, s => s.dispose()));\r\n        this._streams[StreamType.Video] = [];\r\n        this._streams[StreamType.ScreenSharing] = [];\r\n        this._slimcoreParticipantObjectId = 0;\r\n        super.dispose();\r\n    }\r\n\r\n    private static SlimcoreVideoTypeToStreamType(videoType: Enums.VideoType): StreamType {\r\n        switch (videoType) {\r\n            case Enums.VideoType.ScreenShare:\r\n                return StreamType.ScreenSharing;\r\n            case Enums.VideoType.Video:\r\n                return StreamType.Video;\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronRemoteStreamManager.ts","import * as _ from 'lodash';\r\n\r\nimport { CallingLogger } from 'skype-calling-interface';\r\nimport { CallParticipantBalanceUpdate } from 'skype-calling-interface';\r\nimport { CallParticipantBalanceUpdateMap } from 'skype-calling-interface';\r\nimport { CallParticipantEndpointDetails } from 'skype-calling-interface';\r\nimport { CallParticipantEndpoints } from 'skype-calling-interface';\r\nimport { CallParticipantStreamMap } from 'skype-calling-interface';\r\nimport { Capabilities } from 'skype-calling-interface';\r\nimport { ICallParticipant } from 'skype-calling-interface';\r\nimport { ParticipantState } from 'skype-calling-interface';\r\nimport { ParticipantLightWeightMeetingRole } from 'skype-calling-interface';\r\nimport { ParticipantRosterRole } from 'skype-calling-interface';\r\nimport { ParticipantStateReason } from 'skype-calling-interface';\r\nimport { MediaType } from 'skype-calling-interface';\r\nimport { ParticipantContentSharingRole } from 'skype-calling-interface';\r\nimport { StreamType } from 'skype-calling-interface';\r\nimport { CallEndDiagnosticsInfo } from 'skype-calling-interface';\r\n\r\nimport SlimCoreElectronBase from './SlimCoreElectronBase';\r\nimport SlimCoreElectronCall from './SlimCoreElectronCall';\r\nimport SlimCoreElectronRemoteStreamManager from './SlimCoreElectronRemoteStreamManager';\r\n\r\nimport * as async from '../../common/ts/async';\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\n\r\n// From electron/typings/slimcore-enums.d.ts:\r\nimport Enums = SlimCore.Enums;\r\n\r\n// SourceID used for P2P\r\nconst SOURCE_ID_ANY = 0xFFFFFFFE;\r\n\r\nexport interface EndpointMediaStreamInfo {\r\n    direction: string;\r\n    label: string;\r\n    sourceId: number;\r\n    type: string;\r\n}\r\n\r\nexport interface EndpointMediaStreams {\r\n    mediaStreams: EndpointMediaStreamInfo[];\r\n}\r\n\r\nexport interface CallParticipantEndpointDetailsWithStreamInfo extends CallParticipantEndpointDetails {\r\n    mediaStreams: EndpointMediaStreamInfo[];   // for multi-party, contains information about streams\r\n}\r\n\r\nconst validStateTransitions: { [key: number]: ParticipantState[]; } = {\r\n    // ParticipatnState.None to Participant.Hold is possible for lobby scenario.  A lobby user admitted to the conference would first creates\r\n    // the participants in the conference. Then it notices some participant in the conference is onhold when it tries to attachSlimcoreObjectId,\r\n    // and setState to be hold.\r\n    [ParticipantState.None]: [ParticipantState.Connecting, ParticipantState.Ringing, ParticipantState.Connected, ParticipantState.Disconnected, ParticipantState.EarlyMedia, ParticipantState.InLobby, ParticipantState.OnHold],\r\n    [ParticipantState.Connecting]: [ParticipantState.Ringing, ParticipantState.Connected, ParticipantState.Disconnected, ParticipantState.EarlyMedia, ParticipantState.InLobby, ParticipantState.None],\r\n    [ParticipantState.Ringing]: [ParticipantState.None, ParticipantState.Connecting, ParticipantState.Connected, ParticipantState.Disconnected, ParticipantState.EarlyMedia, ParticipantState.InLobby],\r\n    [ParticipantState.Connected]: [ParticipantState.Ringing, ParticipantState.Connecting, ParticipantState.Disconnected, ParticipantState.OnHold, ParticipantState.None, ParticipantState.InLobby],\r\n    [ParticipantState.Disconnected]: [ParticipantState.None],\r\n    [ParticipantState.OnHold]: [ParticipantState.Connected, ParticipantState.Disconnected, ParticipantState.None],\r\n    [ParticipantState.EarlyMedia]: [ParticipantState.Connected, ParticipantState.Disconnected, ParticipantState.None],\r\n    [ParticipantState.InLobby]: [ParticipantState.Connected, ParticipantState.Disconnected, ParticipantState.None],\r\n};\r\n\r\nexport default class SlimCoreElectronCallParticipant extends SlimCoreElectronBase<{}> implements ICallParticipant {\r\n    public streams: CallParticipantStreamMap = {\r\n        [StreamType.Video]: [],\r\n        [StreamType.ScreenSharing]: [],\r\n    };\r\n    public slimcoreObjectId: number;\r\n\r\n    public voiceLevel = 0;\r\n    public isServerMuted = false;\r\n    public dominantSpeakerRank = 0;\r\n    public state = ParticipantState.None;\r\n    public stateReason: ParticipantStateReason;\r\n    public endpoints: CallParticipantEndpoints;\r\n    public lightWeightMeetingRole = ParticipantLightWeightMeetingRole.None;\r\n    public id: string = null;\r\n    public role: ParticipantRosterRole = null;\r\n    public tenantId: string = null;\r\n    public displayName: string;\r\n    public contentSharingRole: ParticipantContentSharingRole;\r\n    public participantCapabilities: Capabilities;\r\n    public acceptedBy: string;\r\n    public balanceUpdates: CallParticipantBalanceUpdateMap = {};\r\n    public callEndDiagnosticsInfo?: CallEndDiagnosticsInfo;\r\n\r\n    private _admitParticipantDeffered: async.Deferred<void>;\r\n    private _rawEndpoints: string;\r\n    private _rawCallEndDiagnosticsInfo: string;\r\n    private _slimCoreElectronRemoteStreamManager: SlimCoreElectronRemoteStreamManager;\r\n\r\n    public constructor(\r\n        mri: string,\r\n        private _callHandler: SlimCoreCommon.CallHandler,\r\n        logger: CallingLogger,\r\n        private _slimcoreInstance: SlimCoreCommon.Engine,\r\n        private _settings: SlimCoreCommon.Settings,\r\n        attachParticipantId: number = 0,\r\n    ) {\r\n        super(logger.createChild(() => `SlimCoreElectronCallParticipant[${this.slimcoreObjectId}::${this.id}]`));\r\n        this._logger.log('constructor');\r\n\r\n        this.id = SlimCoreCommon.stripMriAliases(mri);\r\n\r\n        this.participantCapabilities = SlimCoreElectronCallParticipant.convertCapabilities(SlimCore.Enums.Capability.All);\r\n\r\n        if (attachParticipantId && attachParticipantId !== 0) {\r\n            this.attachSlimcoreObjectId(attachParticipantId);\r\n        }\r\n    }\r\n\r\n    public attachSlimcoreObjectId(_attachParticipantId: number) {\r\n        if (this.slimcoreObjectId && this.slimcoreObjectId !== 0) {\r\n            this._logger.debug('Attach called on existing participant');\r\n            return;\r\n        }\r\n\r\n        this.slimcoreObjectId = _attachParticipantId;\r\n        this.displayName = this.getStrProperty(Enums.Property.ParticipantDisplayName);\r\n        this.role = this.getStrProperty(Enums.Property.ParticipantRole) as ParticipantRosterRole;\r\n        this.tenantId = this.getStrProperty(Enums.Property.ParticipantTenantId);\r\n        let capabilities = this.getIntProperty(Enums.Property.ParticipantCapabilities, SlimCore.Enums.Capability.All);\r\n        this.participantCapabilities = SlimCoreElectronCallParticipant.convertCapabilities(capabilities);\r\n        this.acceptedBy = this.getStrProperty(Enums.Property.ParticipantAcceptedBy);\r\n        this.isServerMuted = !!this.getIntProperty(Enums.Property.ParticipantIsServerMuted);\r\n\r\n        this._slimCoreElectronRemoteStreamManager = new SlimCoreElectronRemoteStreamManager(\r\n            this._callHandler,\r\n            this._logger,\r\n            this._slimcoreInstance,\r\n            this._settings,\r\n            this.slimcoreObjectId,\r\n            this.streams);\r\n        this._slimCoreElectronRemoteStreamManager.changed(() => this.raiseChanged());\r\n\r\n        this._updateEndpointDetails(this.getStrProperty(Enums.Property.ParticipantEndpointDetails));\r\n\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantStatus, data => this._onStatusChanged(data));\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantIsServerMuted, data => this._onIsServerMuted(data));\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantFailureReason, data => this._onFailureReasonChange(data));\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantAdmitFailureReason, data => this._onAdmitFailureReasonChange(data));\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantIsActiveSpeaker, data => this._onIsActiveSpeakerChanged(data));\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantDominantSpeakerRank, data => this._onDominantSpeakerRankChanged(data));\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantEndpointDetails, data => this._onEndpointDetailsChanged(data));\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantCapabilities, data => this._onCapabilitiesChanged(data));\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantAcceptedBy, data => this._onAcceptedByChanged(data));\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantRole, data => this._onRoleChanged(data));\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantTenantId, data => this._onTenantIdChanged(data));\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantLightWeightMeetingRole, data => this._onParticipantLightWeightMeetingRoleChanged(data));\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantContentRole, data => this._onParticipantContentSharingRoleChanged(data));\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantBalanceUpdate, data => this._onBalanceUpdateChanged(data));\r\n        this._onParticipantPropertyChanged(Enums.Property.ParticipantDiagnosticsCode, data => this._onParticipantDiagnosticsCodeChanged(data));\r\n\r\n        let participantStatus = this.getIntProperty(Enums.Property.ParticipantStatus);\r\n        this._onStatusChanged({\r\n            objectType: Enums.ObjectType.Participant,\r\n            objectId: this.slimcoreObjectId,\r\n            propKey: Enums.Property.ParticipantStatus,\r\n            value: participantStatus,\r\n        });\r\n\r\n        let lightWeightMeetingRole = this.getIntProperty(Enums.Property.ParticipantLightWeightMeetingRole, Enums.LightWeightMeetingRole.None);\r\n        this._onParticipantLightWeightMeetingRoleChanged({\r\n            objectType: Enums.ObjectType.Participant,\r\n            objectId: this.slimcoreObjectId,\r\n            propKey: Enums.Property.ParticipantLightWeightMeetingRole,\r\n            value: lightWeightMeetingRole,\r\n        });\r\n\r\n        let contentSharingRole = this.getIntProperty(Enums.Property.ParticipantContentRole, Enums.ContentSharingRole.None);\r\n        this._onParticipantContentSharingRoleChanged({\r\n            objectType: Enums.ObjectType.Participant,\r\n            objectId: this.slimcoreObjectId,\r\n            propKey: Enums.Property.ParticipantContentRole,\r\n            value: contentSharingRole,\r\n        });\r\n    }\r\n\r\n    public getStrProperty(property: Enums.Property, fallback?: string): string {\r\n        return this._getStrProperty(this._callHandler, this.slimcoreObjectId, property, fallback);\r\n    }\r\n\r\n    public getIntProperty(property: Enums.Property, fallback?: number): number {\r\n        return this._getIntProperty(this._callHandler, this.slimcoreObjectId, property, fallback);\r\n    }\r\n\r\n    private _onParticipantPropertyChanged(propKey: SlimCore.Enums.Property, listener: SlimCoreCommon.ObjectChangedCallback) {\r\n        this.registerCallback(SlimCoreCommon.onObjectPropertyChanged(this._slimcoreInstance, propKey, this.slimcoreObjectId, listener), true);\r\n    }\r\n\r\n    private _onEndpointDetailsChanged(eventData: SlimCoreCommon.ObjectChangedEvent) {\r\n        this._updateEndpointDetails(eventData.value as string);\r\n    }\r\n\r\n    private _onCapabilitiesChanged(eventData: SlimCoreCommon.ObjectChangedEvent) {\r\n        let caps: Capabilities = SlimCoreElectronCallParticipant.convertCapabilities(eventData.value);\r\n        if (caps !== this.participantCapabilities) {\r\n            this._logger.info(`Computed capabilities: ${JSON.stringify(caps)}`);\r\n            this.participantCapabilities = caps;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _onAcceptedByChanged(eventData: SlimCoreCommon.ObjectChangedEvent) {\r\n        let acceptedEndpoint: string = eventData.value;\r\n        if (acceptedEndpoint !== this.acceptedBy) {\r\n            this._logger.info(`Accepted by is set to ${acceptedEndpoint}`);\r\n            this.acceptedBy = acceptedEndpoint;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _onRoleChanged(eventData: SlimCoreCommon.ObjectChangedEvent) {\r\n        let role: string = eventData.value;\r\n        if (role !== this.role) {\r\n            this._logger.info(`Role is set to ${role}`);\r\n            this.role = role as ParticipantRosterRole;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _onTenantIdChanged(eventData: SlimCoreCommon.ObjectChangedEvent) {\r\n        let tenantId: string = eventData.value;\r\n        if (tenantId !== this.tenantId) {\r\n            this._logger.info(`TenantId is set to ${tenantId}`);\r\n            this.tenantId = tenantId;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    // Returns -1 if error\r\n    public getSourceIdForMediaType(mediaType: MediaType): number {\r\n        let sourceId: number = -1;\r\n\r\n        try {\r\n            if (this.endpoints) {\r\n                outerloop:\r\n                for (let endpointDetail of this.endpoints.endpointDetails) {\r\n                    let endpointDetailWithStreams = endpointDetail as CallParticipantEndpointDetailsWithStreamInfo;\r\n                    if (endpointDetailWithStreams !== null && endpointDetailWithStreams.mediaStreams !== undefined) {\r\n                        for (let stream of endpointDetailWithStreams.mediaStreams) {\r\n                            if (SlimCoreCommon.mapMediaTypeStringToMediaType(stream.type) === mediaType) {\r\n                                sourceId = stream.sourceId;\r\n                                break outerloop;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // If there's no endpointDetailWithStreams, then it's a 1:1 call\r\n                        sourceId = SOURCE_ID_ANY;\r\n                    }\r\n                }\r\n            }\r\n        } catch (error) {\r\n            this._logger.error(`getSourceIdForMediaType caught exception error=` + error);\r\n        }\r\n        return sourceId;\r\n    }\r\n\r\n    private _updateEndpointDetails(rawEndpointDetails: string) {\r\n        if (this._rawEndpoints === rawEndpointDetails || !rawEndpointDetails) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            this.endpoints = JSON.parse(rawEndpointDetails) as CallParticipantEndpoints;\r\n            this._rawEndpoints = rawEndpointDetails;\r\n            this._logger.info(`Updating endpointDetails`);\r\n        } catch (e) {\r\n            this._logger.warn(`Failed to parse call member endpointDetails - ${e} -${rawEndpointDetails}`);\r\n            return;\r\n        }\r\n\r\n        this.raiseChanged();\r\n    }\r\n\r\n    private _onStatusChanged(data: SlimCoreCommon.ObjectChangedEvent) {\r\n        this._logger.info(`Status changed ${data.value}`);\r\n        const failure = this.getIntProperty(Enums.Property.ParticipantFailureReason);\r\n        this.setState(\r\n            SlimCoreElectronCallParticipant.convertParticipantStatus(data.value),\r\n            SlimCoreElectronCall.convertStatusAndFailureReasonToParticipantReason(data.value, failure));\r\n\r\n        if (this._admitParticipantDeffered && SlimCoreElectronCallParticipant.isParticipantActive(this.state)) {\r\n            this._admitParticipantDeffered.resolve();\r\n            this._admitParticipantDeffered = null;\r\n        }\r\n    }\r\n\r\n    private _onParticipantLightWeightMeetingRoleChanged(data: SlimCoreCommon.ObjectChangedEvent) {\r\n        this._logger.info(`Light weight meeting role changed ${data.value}`);\r\n        this.setLightWeightMeetingRole(SlimCoreElectronCallParticipant.convertLightWeightMeetingRole(data.value));\r\n    }\r\n\r\n    private _onParticipantContentSharingRoleChanged(data: SlimCoreCommon.ObjectChangedEvent) {\r\n        this._logger.info(`Content sharing role changed ${data.value}`);\r\n        this.setContentSharingRole(SlimCoreElectronCallParticipant.convertContentSharingRole(data.value));\r\n    }\r\n\r\n    private _onFailureReasonChange(data: SlimCoreCommon.ObjectChangedEvent) {\r\n        this._logger.info(`Failure reason changed ${data.value}`);\r\n        const state = this.getIntProperty(Enums.Property.ParticipantStatus);\r\n        this.setState(SlimCoreElectronCallParticipant.convertParticipantStatus(state),\r\n            SlimCoreElectronCall.convertFailureReasonToParticipantReason(data.value));\r\n    }\r\n\r\n    private _onAdmitFailureReasonChange(data: SlimCoreCommon.ObjectChangedEvent) {\r\n        this._logger.info(`Admit failure reason changed ${data.value}`);\r\n\r\n        let reason = SlimCoreElectronCall.convertFailureReasonToParticipantReason(data.value);\r\n\r\n        if (this._admitParticipantDeffered) {\r\n            this._admitParticipantDeffered.reject(reason);\r\n            this._admitParticipantDeffered = null;\r\n        }\r\n    }\r\n\r\n    private _onIsActiveSpeakerChanged(data: SlimCoreCommon.ObjectChangedEvent) {\r\n        if (this.voiceLevel === data.value) {\r\n            return;\r\n        }\r\n\r\n        this.voiceLevel = data.value;\r\n        this.raiseChanged();\r\n    }\r\n\r\n    private _onIsServerMuted(data: SlimCoreCommon.ObjectChangedEvent) {\r\n        const isServerMuted = !!data.value;\r\n        if (isServerMuted !== this.isServerMuted) {\r\n            this.isServerMuted = isServerMuted;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _onDominantSpeakerRankChanged(data: SlimCoreCommon.ObjectChangedEvent) {\r\n        if (this.dominantSpeakerRank === data.value) {\r\n            return;\r\n        }\r\n\r\n        this._logger.info(`DominantSpeakerRank changing from ${this.dominantSpeakerRank} to ${data.value}`);\r\n\r\n        this.dominantSpeakerRank = data.value;\r\n        this.raiseChanged();\r\n    }\r\n\r\n    private _onBalanceUpdateChanged(eventData: SlimCoreCommon.ObjectChangedEvent) {\r\n        let rawBalanceUpdate: string = eventData.value;\r\n\r\n        // Balance updates can occur at a frequency of up to one per minute per\r\n        // remote endpoint.\r\n        if (_.isEmpty(rawBalanceUpdate)) {\r\n            if (!_.isEmpty(this.balanceUpdates)) {\r\n                this.balanceUpdates = {};\r\n                this.raiseChanged();\r\n            }\r\n            return;\r\n        }\r\n\r\n        try {\r\n            let balanceUpdate: CallParticipantBalanceUpdate = JSON.parse(rawBalanceUpdate);\r\n\r\n            if (_.isEqual(this.balanceUpdates[balanceUpdate.sender.endpointId], balanceUpdate)) {\r\n                return;\r\n            }\r\n\r\n            this.balanceUpdates[balanceUpdate.sender.endpointId] = balanceUpdate;\r\n        } catch (e) {\r\n            this._logger.warn(`Failed to parse call member balanceUpdate - ${e} -${rawBalanceUpdate}`);\r\n            return;\r\n        }\r\n\r\n        this.raiseChanged();\r\n    }\r\n\r\n    private _onParticipantDiagnosticsCodeChanged(eventData: SlimCoreCommon.ObjectChangedEvent) {\r\n        this._updateDiagnosticsCode(eventData.value as string);\r\n    }\r\n\r\n    private _updateDiagnosticsCode(diagnosticsCode: string) {\r\n        if (this._rawCallEndDiagnosticsInfo === diagnosticsCode || !diagnosticsCode) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            this.callEndDiagnosticsInfo = JSON.parse(diagnosticsCode) as CallEndDiagnosticsInfo;\r\n            this._rawCallEndDiagnosticsInfo = diagnosticsCode;\r\n            this.raiseChanged();\r\n        } catch (err) {\r\n            this._logger.info(`Failed to parse raw diagnostis details. Error: ${err}, diagnosticsCode: ${diagnosticsCode}`);\r\n        }\r\n    }\r\n\r\n    public setLightWeightMeetingRole(role: ParticipantLightWeightMeetingRole): void {\r\n        if (this.lightWeightMeetingRole === role) {\r\n            return;\r\n        }\r\n\r\n        this.lightWeightMeetingRole = role;\r\n        this.raiseChanged();\r\n    }\r\n\r\n    public setContentSharingRole(role: ParticipantContentSharingRole): void {\r\n        if (this.contentSharingRole === role) {\r\n            return;\r\n        }\r\n\r\n        this.contentSharingRole = role;\r\n        this.raiseChanged();\r\n    }\r\n\r\n    public setState(state: ParticipantState, reason?: ParticipantStateReason): void {\r\n        if (this.state === state) {\r\n            return;\r\n        }\r\n        const validNextStates = validStateTransitions[this.state];\r\n        const isValidNextState = validNextStates.indexOf(state) >= 0;\r\n\r\n        if (!isValidNextState) {\r\n            throw new Error(`Invalid state transition ${this.state} -> ${state} attempted for participant ${this.id}`);\r\n        }\r\n\r\n        this._logger.info(`Participant setState: ${this.state} -> ${state} reason: ${this.stateReason} -> ${reason}`);\r\n        this.state = state;\r\n        this.stateReason = reason;\r\n\r\n        if (this.state === ParticipantState.Connected) {\r\n            const endpointDetails = this.getStrProperty(Enums.Property.ParticipantEndpointDetails);\r\n            this._updateEndpointDetails(endpointDetails);\r\n        } else if (this.state === ParticipantState.Disconnected) {\r\n            const diagnostics = this.getStrProperty(Enums.Property.ParticipantDiagnosticsCode);\r\n            this._updateDiagnosticsCode(diagnostics);\r\n        }\r\n\r\n        this.raiseChanged();\r\n    }\r\n\r\n    private static convertParticipantStatus(status: Enums.CallStatus) {\r\n        if (SlimCoreElectronCall.isCallRinging(status)) {\r\n            return ParticipantState.Ringing;\r\n        }\r\n        else if (SlimCoreElectronCall.isCallTerminated(status)) {\r\n            return ParticipantState.Disconnected;\r\n        }\r\n        else if (SlimCoreElectronCall.isCallConnected(status)) {\r\n            return ParticipantState.Connected;\r\n        }\r\n        else if (SlimCoreElectronCall.isCallConnecting(status)) {\r\n            return ParticipantState.Connecting;\r\n        }\r\n        else if (SlimCoreElectronCall.isCallEarlyMedia(status)) {\r\n            return ParticipantState.EarlyMedia;\r\n        }\r\n        else if (SlimCoreElectronCall.isCallInLobby(status)) {\r\n            return ParticipantState.InLobby;\r\n        }\r\n        else if (status === Enums.CallStatus.LocalHold || status === Enums.CallStatus.RemoteHold) {\r\n            return ParticipantState.OnHold;\r\n        }\r\n\r\n        return ParticipantState.None;\r\n    }\r\n\r\n    public static isParticipantActive(state: ParticipantState) {\r\n        switch (state) {\r\n            case ParticipantState.Connected:\r\n            case ParticipantState.EarlyMedia:\r\n            case ParticipantState.OnHold:\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    private static convertLightWeightMeetingRole(role: Enums.LightWeightMeetingRole) {\r\n        switch (role) {\r\n            case Enums.LightWeightMeetingRole.Attendee:\r\n                return ParticipantLightWeightMeetingRole.Attendee;\r\n            default:\r\n                return ParticipantLightWeightMeetingRole.None;\r\n        }\r\n    }\r\n\r\n    private static convertContentSharingRole(role: Enums.ContentSharingRole) {\r\n        switch (role) {\r\n            case Enums.ContentSharingRole.Attendee:\r\n                return ParticipantContentSharingRole.Attendee;\r\n            case Enums.ContentSharingRole.Presenter:\r\n                return ParticipantContentSharingRole.Presenter;\r\n            default:\r\n                return ParticipantContentSharingRole.None;\r\n        }\r\n    }\r\n\r\n    private static convertCapabilities(caps: Enums.Capability): Capabilities {\r\n        /* tslint:disable:no-bitwise */\r\n        return {\r\n            canConference: !!(caps & Enums.Capability.Conference),\r\n            canShareScreen: !!(caps & Enums.Capability.ShareScreen),\r\n            canMerge: !!(caps & Enums.Capability.Merge),\r\n        };\r\n        /* tslint:enable:no-bitwise */\r\n    }\r\n\r\n    public addAdmitParticipantDeferred(admitParticipantDeffered: async.Deferred<void>): void {\r\n        this._admitParticipantDeffered = admitParticipantDeffered;\r\n    }\r\n\r\n    public rejectAdmitParticipantDeferred(terminatedReason: ParticipantStateReason): void {\r\n        if (this._admitParticipantDeffered) {\r\n            this._admitParticipantDeffered.reject(terminatedReason);\r\n            this._admitParticipantDeffered = null;\r\n        }\r\n    }\r\n\r\n    public cleanUpAsync(): Promise<void> {\r\n        return this._slimCoreElectronRemoteStreamManager.cleanUpAsync();\r\n    }\r\n\r\n    public dispose(): void {\r\n        if (this._slimCoreElectronRemoteStreamManager) {\r\n            this._slimCoreElectronRemoteStreamManager.dispose();\r\n        }\r\n        this.streams[StreamType.Video] = [];\r\n        this.streams[StreamType.ScreenSharing] = [];\r\n\r\n        if (this._admitParticipantDeffered) {\r\n            this._admitParticipantDeffered.resolve();\r\n            this._admitParticipantDeffered = null;\r\n        }\r\n\r\n        this.slimcoreObjectId = 0;\r\n        super.dispose();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronCallParticipant.ts","import { CallingLogger } from 'skype-calling-interface';\r\nimport { ICall } from 'skype-calling-interface';\r\nimport { ICallRegistry } from 'skype-calling-interface';\r\nimport { CallState } from 'skype-calling-interface';\r\nimport { IDisposable } from 'skype-calling-interface';\r\nimport { IncomingCallType } from 'skype-calling-interface';\r\nimport { ISlimCoreElectronApplicationHooks } from '../typings/skype-calling-electron-embedded';\r\nimport { SkypeIdentity } from 'skype-calling-interface';\r\nimport { ICallRegistryEvents } from 'skype-calling-interface';\r\nimport { TransferorType } from 'skype-calling-interface';\r\n\r\nimport * as _ from 'lodash';\r\nimport * as async from '../../common/ts/async';\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\nimport Guid from '../../common/ts/guid';\r\nimport SlimCoreElectronBase from './SlimCoreElectronBase';\r\nimport SlimCoreElectronCall from './SlimCoreElectronCall';\r\nimport SlimCoreElectronDeviceManager from './SlimCoreElectronDeviceManager';\r\nimport { UwpCallHandlerWrapped } from './SlimCoreUwpEventWrapper';\r\n\r\n// From electron/typings/slimcore-enums.d.ts:\r\nimport Enums = SlimCore.Enums;\r\n\r\nexport interface ISlimCoreElectronCallRegistryCallbacks {\r\n    onCallStarted(callId: number, call: ICall): void;\r\n    onCallEnded(callId: number): void;\r\n}\r\n\r\nexport default class SlimCoreElectronCallRegistry extends SlimCoreElectronBase<ICallRegistryEvents> implements ICallRegistry, ISlimCoreElectronCallRegistryCallbacks {\r\n    public calls: SlimCoreElectronCall[] = [];\r\n    private _slimcoreCalls: { [callId: number]: ICall } = {};\r\n    private _lastSkypeToken: string;\r\n    private _skypeIdentity: SkypeIdentity;\r\n    private _slimcoreCallHandler: SlimCoreCommon.CallHandler;\r\n    private _loginPromiseDefered = async.defer<SlimCoreCommon.CallHandler>();\r\n    private _logoutPromiseDefered = async.defer<SlimCoreCommon.CallHandler>();\r\n    private slimcoreInstanceStarted: boolean = false;\r\n\r\n    public constructor(\r\n        logger: CallingLogger,\r\n        private _slimcoreInstance: SlimCoreCommon.Engine,\r\n        private _deviceManager: SlimCoreElectronDeviceManager,\r\n        private _settings: SlimCoreCommon.Settings,\r\n        private _appHooks: ISlimCoreElectronApplicationHooks,\r\n    ) {\r\n        super(logger.createChild('CallRegistry', true));\r\n        this._logger.log('constructor');\r\n\r\n        this._slimcoreInstance.setMaxListeners(0);\r\n    }\r\n\r\n    public get loginPromise(): Promise<SlimCoreCommon.CallHandler> {\r\n        return this._loginPromiseDefered.promise;\r\n    }\r\n\r\n    public get logoutPromise(): Promise<SlimCoreCommon.CallHandler> {\r\n        return this._logoutPromiseDefered.promise;\r\n    }\r\n\r\n    private _initCall(call: SlimCoreElectronCall, callObjectId: number): void {\r\n        call.callerMri = SlimCoreCommon.stripMriAliases(this._getStrProperty(this._slimcoreCallHandler, callObjectId, Enums.Property.CallerMriIdentity));\r\n\r\n        if (!call.callerMri) {\r\n            this._logger.error('Unable to get callerMRI from call object. Ignoring incoming call');\r\n            return;\r\n        }\r\n\r\n        const callQueueInfo = this._getStrProperty(this._slimcoreCallHandler, callObjectId, Enums.Property.CallQueueInfo);\r\n\r\n        call.transferorMri = SlimCoreCommon.stripMriAliases(this._getStrProperty(this._slimcoreCallHandler, callObjectId, Enums.Property.CallTransferorMri));\r\n        call.transferorDisplayName = this._getStrProperty(this._slimcoreCallHandler, callObjectId, Enums.Property.CallTransferorDisplayName);\r\n        call.transferorType = this._getStrProperty(this._slimcoreCallHandler, callObjectId, Enums.Property.CallTransferorType) as TransferorType;\r\n        call.onBehalfOfMri = SlimCoreCommon.stripMriAliases(this._getStrProperty(this._slimcoreCallHandler, callObjectId, Enums.Property.CallOnBehalfOfMri));\r\n        call.callQueueInfo = callQueueInfo && JSON.parse(callQueueInfo).callQueueInfo;\r\n        call.incomingCallType = this._getStrProperty(this._slimcoreCallHandler, callObjectId, Enums.Property.CallIncomingType) as IncomingCallType;\r\n        call.isIncomingOneOnOneVideoCall = (this._getIntProperty(this._slimcoreCallHandler, callObjectId, Enums.Property.CallIsIncomingOneOnOneVideoCall) === 1);\r\n        call.messageId = this._getStrProperty(this._slimcoreCallHandler, callObjectId, Enums.Property.CallMessageId);\r\n        call.attachSlimCoreCallObject(callObjectId);\r\n        if (this._getIntProperty(this._slimcoreCallHandler, callObjectId, Enums.Property.CallStatus) === Enums.CallStatus.RingingIn) {\r\n            call.setCallStateNotified();\r\n        }\r\n    }\r\n\r\n    private _incomingCallMonitor(data: SlimCoreCommon.ObjectChangedEvent) {\r\n        if (!(data.propKey === Enums.Property.CallStatus && data.value === Enums.CallStatus.RingingIn)) {\r\n            return;\r\n        }\r\n\r\n        let callId = this._getStrProperty(this._slimcoreCallHandler, data.objectId, Enums.Property.CallName);\r\n        let localParticipantId = this._getStrProperty(this._slimcoreCallHandler, data.objectId, Enums.Property.CallLegId);\r\n\r\n        try {\r\n            this.getCall(callId, localParticipantId);\r\n        } catch (error) {\r\n            this._logger.warn(`getCall failed to find the call(${callId}): ${error}`);\r\n        }\r\n    }\r\n\r\n    public init(skypeIdentity: SkypeIdentity): Promise<void> {\r\n        let accountStatusCallback: IDisposable = null;\r\n\r\n        if (!this.slimcoreInstanceStarted) {\r\n            this._slimcoreInstance.start(true);\r\n            this._logger.info('init: starting slimcoreInstance');\r\n            this.slimcoreInstanceStarted = true;\r\n        } else {\r\n            this._logger.info('init: skipping slimcoreInstance start, because it was already started');\r\n        }\r\n\r\n        this._skypeIdentity = skypeIdentity;\r\n        this._skypeIdentity.tokenProvider()\r\n            .then((token: string) => {\r\n                // Set up platform callbacks for AccountStatus\r\n                this._logger.info('init: setting up stack callbacks');\r\n                accountStatusCallback = SlimCoreCommon.onPropertyChanged(this._slimcoreInstance, Enums.Property.AccountStatus, (eventData: SlimCoreCommon.ObjectChangedEvent) => {\r\n                    if (eventData.value === Enums.AccountStatus.LoggedIn) {\r\n                        if (this._settings.platform === SlimCoreCommon.PlatformType.Uwp) {\r\n                            this._slimcoreCallHandler = SlimCoreCommon.wrap(new UwpCallHandlerWrapped(this._slimcoreInstance.createCallInterface()).objectAsWrapped);\r\n                        } else {\r\n                            this._slimcoreCallHandler = SlimCoreCommon.wrap(this._slimcoreInstance.createCallInterface());\r\n                        }\r\n                        this._logger.info('init: createCallInterface returned');\r\n                        this._loginPromiseDefered.resolve(this._slimcoreCallHandler);\r\n\r\n                        if (accountStatusCallback) {\r\n                            accountStatusCallback.dispose();\r\n                            accountStatusCallback = null;\r\n                        }\r\n\r\n                        this._hookCallRegistryEvents();\r\n                    }\r\n                });\r\n\r\n                SlimCoreCommon.onPropertyChanged(this._slimcoreInstance, Enums.Property.CallStatus, eventData => this._incomingCallMonitor(eventData));\r\n                this._initializeSlimCore(this._slimcoreInstance, this._skypeIdentity, token);\r\n                this._logger.info('init: initialize returned');\r\n            })\r\n            .catch((err: any) => {\r\n                this._loginPromiseDefered.reject(err);\r\n            });\r\n\r\n        return this.loginPromise.then(_.noop);\r\n    }\r\n\r\n    public uninit(): Promise<void> {\r\n        let accountStatusCallback: IDisposable = null;\r\n        try {\r\n            this._logger.info('uninit: setting up stack callbacks');\r\n            accountStatusCallback = SlimCoreCommon.onPropertyChanged(this._slimcoreInstance, Enums.Property.AccountStatus, (eventData: SlimCoreCommon.ObjectChangedEvent) => {\r\n                if (eventData.value === Enums.AccountStatus.LoggedOut) {\r\n                    this._logoutPromiseDefered.resolve();\r\n                    if (accountStatusCallback) {\r\n                        accountStatusCallback.dispose();\r\n                        accountStatusCallback = null;\r\n                    }\r\n                }\r\n            });\r\n            this._logger.info('uninit(): calling slimcore.logout()');\r\n            this._slimcoreInstance.logout();\r\n        } catch (e) {\r\n            this._logger.error('slimcore.logout() failed.', e);\r\n            this._logoutPromiseDefered.reject(e);\r\n        }\r\n\r\n        this.slimcoreInstanceStarted = false;\r\n        return this.logoutPromise.then(_.noop);\r\n    }\r\n\r\n    public createCall(threadId: string, callId?: string, localParticipantId?: string): ICall {\r\n        this._logger.info('createCall');\r\n        if (this._slimcoreCallHandler === null || this._slimcoreCallHandler === undefined) {\r\n            throw new Error('Stack not initialized yet');\r\n        }\r\n\r\n        // Set the additional sipUri's for the call\r\n        if (this._skypeIdentity.sipUri) {\r\n            this.setAdditionalIdentities('2:' + this._skypeIdentity.sipUri);\r\n        }\r\n\r\n        // Make sure skype token is up-to-date before creating a new call\r\n        this._skypeIdentity.tokenProvider().then(token => {\r\n            if (token && (token !== this._lastSkypeToken)) { // tslint:disable-line:possible-timing-attack #1237311 (Closed Won't Fix Bug)\r\n                this._logger.info('Updating Skype Token...');\r\n                this._lastSkypeToken = token;\r\n                this._slimcoreInstance.updateSkypeToken(token);\r\n                this._logger.info('Token update complete');\r\n            }\r\n        });\r\n\r\n        if (!callId) {\r\n            callId = Guid.generate();\r\n        }\r\n\r\n        const call = new SlimCoreElectronCall(\r\n            this,\r\n            this._slimcoreCallHandler,\r\n            this._slimcoreInstance,\r\n            this._deviceManager,\r\n            this._settings,\r\n            this._logger,\r\n            this._appHooks,\r\n            threadId,\r\n            callId,\r\n            this._skypeIdentity,\r\n            localParticipantId);\r\n\r\n        this.calls.push(call);\r\n        this.event('callAdded').raise(call);\r\n        this.raiseChanged();\r\n\r\n        return call;\r\n    }\r\n\r\n    public getCall(callId: string, localParticipantId: string): ICall {\r\n        this._logger.info(`getCall(${callId})`);\r\n        if (this._slimcoreCallHandler === null || this._slimcoreCallHandler === undefined) {\r\n            throw new Error('Stack not initialized yet');\r\n        }\r\n\r\n        let call = _.find(this.calls, (call) => (call.callId === callId && call.participantId === localParticipantId));\r\n        if (call) {\r\n            if (call.state === CallState.Observing) {\r\n                this._initCall(call, call.slimcoreCallId);\r\n            } else {\r\n                this._logger.warn(`Call Registry already has an entry for SlimCore call ${call.slimcoreCallId}`);\r\n            }\r\n            return call;\r\n        }\r\n\r\n        let slimCoreCallObjectId = _.find(this._slimcoreCallHandler.getActiveCalls(),\r\n            (callObjectId) => (this._slimcoreCallHandler.getStrProperty(callObjectId, Enums.Property.CallName) === callId) &&\r\n                (this._slimcoreCallHandler.getStrProperty(callObjectId, Enums.Property.CallLegId) === localParticipantId));\r\n\r\n        if (!slimCoreCallObjectId) {\r\n            throw new Error(`call(${callId}) does not exist/ is not active`);\r\n        }\r\n\r\n        const threadId = this._slimcoreCallHandler.getStrProperty(slimCoreCallObjectId, Enums.Property.CallThreadId);\r\n\r\n        call = new SlimCoreElectronCall(\r\n            this,\r\n            this._slimcoreCallHandler,\r\n            this._slimcoreInstance,\r\n            this._deviceManager,\r\n            this._settings,\r\n            this._logger,\r\n            this._appHooks,\r\n            threadId,\r\n            callId,\r\n            this._skypeIdentity,\r\n            localParticipantId);\r\n\r\n        this._initCall(call, slimCoreCallObjectId);\r\n        this.calls.push(call);\r\n        this.event('callAdded').raise(call);\r\n        this.raiseChanged();\r\n        return call;\r\n    }\r\n\r\n    public deleteCall(call: ICall, final = true): boolean {\r\n        this._logger.info(`deleteCall ${call.callId}`);\r\n\r\n        let deletedCalls = false;\r\n        _.each(_.remove(this.calls, c => c === call), c => {\r\n            deletedCalls = true;\r\n            if (final) {\r\n                this.event('callRemoved').raise(call);\r\n                (c as SlimCoreElectronCall).dispose();\r\n            }\r\n        });\r\n\r\n        if (deletedCalls) {\r\n            this.raiseChanged();\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public debugInformation(call?: ICall): Promise<string> {\r\n        let content = this._slimcoreCallHandler.getDebugInformation('/callinfo');\r\n        if (call && (!content || _.isEmpty(content))) {\r\n            content = 'CallInformation\\n * CallId=' + call.callId;\r\n        }\r\n\r\n        return Promise.resolve(content);\r\n    }\r\n\r\n    public onCallStarted(callId: number, call: ICall) {\r\n        this._logger.info(`onCallStarted ${call.callId}`);\r\n        if (!this._slimcoreCalls.hasOwnProperty(callId.toString())) {\r\n            this._slimcoreCalls[callId] = call;\r\n        }\r\n    }\r\n\r\n    public onCallEnded(callId: number) {\r\n        this._logger.info(`onCallEnded ${callId}`);\r\n        if (this._slimcoreCalls.hasOwnProperty(callId.toString())) {\r\n            delete this._slimcoreCalls[callId];\r\n        }\r\n    }\r\n\r\n    public updateSkypeToken(skypeToken: string): void {\r\n        this._slimcoreInstance.updateSkypeToken(skypeToken);\r\n    }\r\n\r\n    // Ideally to be set as soon as you login.\r\n    // Can be of the format - <rc_id1>:<userId1>;aliases=<rc_id2>:<userId2>,<rc_id3>:<userId3>\r\n    // Example: 8:identity;aliases=2:sipId@microsoft.com,4:+100000001\r\n    public setAdditionalIdentities(identities: string): void {\r\n        this._slimcoreInstance.setAdditionalIdentities(identities);\r\n    }\r\n\r\n    private _initializeSlimCore(platform: SlimCore.Engine, skypeIdentity: SkypeIdentity, token: string) {\r\n        try {\r\n            this._logger.info('ctor: initializing stack!');\r\n            platform.login(skypeIdentity.id, token, skypeIdentity.displayName);\r\n        } catch (e) {\r\n            this._logger.error('initialization failed.', e);\r\n        }\r\n    }\r\n\r\n    private _onSkypeTokenRequired(eventData: SlimCoreCommon.SkypeTokenRequiredEvent) {\r\n        this.event('skypeTokenRequired').raise(eventData.invalidToken);\r\n    }\r\n\r\n    private _hookCallRegistryEvents() {\r\n        this.registerCallback(SlimCoreCommon.onSkypeTokenRequired(this._slimcoreCallHandler, data => this._onSkypeTokenRequired(data)), true);\r\n        this.registerCallback(SlimCoreCommon.onSkypeTokenRequiredSkyLib(this._slimcoreInstance, data => this._onSkypeTokenRequired(data)), true);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronCallRegistry.ts","import { AudioDeviceDesc } from 'skype-calling-interface';\r\nimport { CallingLogger } from 'skype-calling-interface';\r\nimport { CameraPosition } from 'skype-calling-interface';\r\nimport { CompositeAudioDeviceDesc } from 'skype-calling-interface';\r\nimport { CompositeAudioDeviceFormFactor } from 'skype-calling-interface';\r\nimport { DeviceDesc } from 'skype-calling-interface';\r\nimport { DeviceId } from 'skype-calling-interface';\r\nimport { DeviceType } from 'skype-calling-interface';\r\nimport { DeviceAccess } from 'skype-calling-interface';\r\nimport { IDeviceManager } from 'skype-calling-interface';\r\nimport { IDeviceManagerEvents } from 'skype-calling-interface';\r\nimport { IRenderer } from 'skype-calling-interface';\r\nimport { IRenderTarget } from 'skype-calling-interface';\r\nimport { SelectedDevices } from 'skype-calling-interface';\r\nimport { StartStreamOptions } from 'skype-calling-interface';\r\nimport { VideoDeviceDesc } from 'skype-calling-interface';\r\nimport { ISlimCoreElectronApplicationHooks } from '../typings/skype-calling-electron-embedded';\r\n\r\nimport * as _ from 'lodash';\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\nimport SlimCoreElectronBase from './SlimCoreElectronBase';\r\nimport SlimCoreElectronLocalVideoPreview from './SlimCoreElectronLocalVideoPreview';\r\nimport { SlimCoreElectronBindingManager } from './SlimCoreElectronBindingManager';\r\n\r\n// From electron/typings/slimcore-enums.d.ts:\r\nimport Enums = SlimCore.Enums;\r\n\r\ntype BrowserAwareDeviceInfo = {\r\n    browserId?: string;\r\n};\r\n\r\nabstract class DeviceList<DeviceInfo extends SlimCore.DeviceInfo & BrowserAwareDeviceInfo> {\r\n    protected _list: DeviceInfo[] = [];\r\n    private _selectedDevice: DeviceId;\r\n\r\n    public constructor(protected _kind: DeviceType, private _logger: CallingLogger) {\r\n        this._logger.log('constructor');\r\n    }\r\n\r\n    public update(list: DeviceInfo[]) {\r\n        this._list = list;\r\n        this._logger.info(`update: ${JSON.stringify(this._list)}`);\r\n    }\r\n\r\n    public isAvailable(deviceId: string) {\r\n        return !!(deviceId && _.find(this._list, (device) => device.id === deviceId));\r\n    }\r\n\r\n    public getBestDevice(): DeviceId {\r\n        return this._getDeviceId(_.first(this._list));\r\n    }\r\n\r\n    public getSelectedDevice(): DeviceId {\r\n        if (this.isAvailable(this._selectedDevice)) {\r\n            this._logger.debug(`getSelectedDevice: ${this._selectedDevice}`);\r\n            return this._selectedDevice;\r\n        } else {\r\n            const deviceId = this.getBestDevice();\r\n            this._logger.debug(`getSelectedDevice - unknown device selected, returning preferred device: ${deviceId}`);\r\n            return deviceId;\r\n        }\r\n    }\r\n\r\n    public selectDevice(deviceId: DeviceId): void {\r\n        if (this.isAvailable(deviceId)) {\r\n            this._logger.info(`selectDevice: ${deviceId}`);\r\n            this._selectedDevice = deviceId;\r\n        } else {\r\n            this._logger.info(`selectDevice - unknown device selected, selecting preferred device`);\r\n            this._selectedDevice = null;\r\n        }\r\n    }\r\n\r\n    protected _getDeviceId(device: DeviceInfo): DeviceId {\r\n        return device ? device.id : null;\r\n    }\r\n\r\n    public abstract enumerate(): DeviceDesc[];\r\n}\r\n\r\nclass VideoDeviceList extends DeviceList<SlimCore.VideoDeviceInfo & BrowserAwareDeviceInfo> {\r\n\r\n    public getBestDevice(): DeviceId {\r\n        const externalCamera = this._findCamera(Enums.CameraFacing.External);\r\n        const frontCamera = this._findCamera(Enums.CameraFacing.Front);\r\n        const leftFrontCamera = this._findCamera(Enums.CameraFacing.LeftFront);\r\n        const rightFrontCamera = this._findCamera(Enums.CameraFacing.RightFront);\r\n        const nonVirtualCamera = this._findCamera();\r\n        const anyCamera = super.getBestDevice();\r\n\r\n        return externalCamera || frontCamera || leftFrontCamera || rightFrontCamera || nonVirtualCamera || anyCamera;\r\n    }\r\n\r\n    public enumerate(): VideoDeviceDesc[] {\r\n        return _.map(this._list, (device) => ({\r\n            id: device.id,\r\n            browserId: device.browserId,\r\n            label: device.label,\r\n            kind: this._kind,\r\n            position: this._getCameraPosition(device.cameraFacing),\r\n        }));\r\n    }\r\n\r\n    private _findCamera(facing?: Enums.CameraFacing): DeviceId {\r\n        const device = _.find(this._list, (device) =>\r\n            device.deviceType !== Enums.DeviceType.Virtual && (!facing || device.cameraFacing === facing));\r\n\r\n        return this._getDeviceId(device);\r\n    }\r\n\r\n    private _getCameraPosition(cameraFacing: Enums.CameraFacing): CameraPosition {\r\n        switch (cameraFacing) {\r\n            case Enums.CameraFacing.Front:\r\n                return CameraPosition.Front;\r\n            case Enums.CameraFacing.LeftFront:\r\n                return CameraPosition.LeftFront;\r\n            case Enums.CameraFacing.RightFront:\r\n                return CameraPosition.RightFront;\r\n            case Enums.CameraFacing.Back:\r\n                return CameraPosition.Back;\r\n            case Enums.CameraFacing.External:\r\n                return CameraPosition.External;\r\n            default:\r\n                return CameraPosition.Unknown;\r\n        }\r\n    }\r\n}\r\n\r\nclass AudioDeviceList extends DeviceList<SlimCore.AudioDeviceInfo & BrowserAwareDeviceInfo> {\r\n\r\n    public enumerate(): AudioDeviceDesc[] {\r\n        let index = 0;\r\n        return _.map(this._list, (device) => ({\r\n            id: device.id,\r\n            browserId: device.browserId,\r\n            label: device.label,\r\n            kind: this._kind,\r\n            isSystemDefault: index++ === 0,\r\n        }));\r\n    }\r\n}\r\n\r\nclass CompositeAudioDeviceList {\r\n    protected _list: SlimCore.CompositeAudioDeviceInfo[] = [];\r\n\r\n    public constructor(private _logger: CallingLogger) {\r\n        this._logger.log('constructor');\r\n    }\r\n\r\n    public update(list: SlimCore.CompositeAudioDeviceInfo[]) {\r\n        this._list = list;\r\n        this._logger.info(`update: ${JSON.stringify(this._list)}`);\r\n    }\r\n\r\n    public enumerate(): CompositeAudioDeviceDesc[] {\r\n        return _.map(this._list, (device) => ({\r\n                id: null,\r\n                browserId: null,\r\n                label: device.label,\r\n                kind: DeviceType.CompositeAudioDevice,\r\n                microphoneId: device.microphoneId,\r\n                speakerId: device.speakerId,\r\n                formFactor: this._getCompositeDeviceFormFactor(device.deviceType),\r\n            }));\r\n    }\r\n\r\n    private _getCompositeDeviceFormFactor(type: Enums.CompositeAudioDeviceType): CompositeAudioDeviceFormFactor {\r\n        switch (type) {\r\n            case Enums.CompositeAudioDeviceType.Speakers:\r\n                return CompositeAudioDeviceFormFactor.Speakers;\r\n            case Enums.CompositeAudioDeviceType.Headphones:\r\n                return CompositeAudioDeviceFormFactor.Headphones;\r\n            case Enums.CompositeAudioDeviceType.Headset:\r\n                return CompositeAudioDeviceFormFactor.Headset;\r\n            case Enums.CompositeAudioDeviceType.Handset:\r\n                return CompositeAudioDeviceFormFactor.Handset;\r\n            case Enums.CompositeAudioDeviceType.Speakerphone:\r\n                return CompositeAudioDeviceFormFactor.Speakerphone;\r\n            default:\r\n                return CompositeAudioDeviceFormFactor.Unknown;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction getMediaDeviceIdSubstring(mediaDeviceLabel: string, slimcoreDeviceLabel: string): string | undefined {\r\n    const devicePostfix = mediaDeviceLabel.split(slimcoreDeviceLabel)[1].trim();\r\n    const found = devicePostfix.match(/\\((.+):(.+)\\)/);\r\n    if (found) {\r\n        const [vid, pid] = found.slice(1);\r\n        return `vid_${vid}&pid_${pid}`;\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport default class SlimCoreElectronDeviceManager extends SlimCoreElectronBase<IDeviceManagerEvents> implements IDeviceManager {\r\n    private readonly _cameras: VideoDeviceList;\r\n    private readonly _microphones: AudioDeviceList;\r\n    private readonly _speakers: AudioDeviceList;\r\n    private readonly _compositeDevices: CompositeAudioDeviceList;\r\n    private _browserDevicesPromise: Promise<void>;\r\n    private readonly _initPromise: Promise<void>;\r\n    private _browserDevices: MediaDeviceInfo[] = [];\r\n    private _previewVideoManager: SlimCoreElectronBindingManager<void>;\r\n    private _rendererBindingManager: SlimCoreElectronBindingManager<SlimCore.VideoBindingRenderer>;\r\n    private _screenShareBindingManager: SlimCoreElectronBindingManager<SlimCore.VideoBindingScreenShare>;\r\n\r\n    public constructor(\r\n        logger: CallingLogger,\r\n        private _slimCoreInstance: SlimCoreCommon.Engine,\r\n        private _settings: SlimCoreCommon.Settings,\r\n        private _loginPromise: Promise<SlimCoreCommon.CallHandler>,\r\n        private _appHooks: ISlimCoreElectronApplicationHooks,\r\n    ) {\r\n        super(logger.createChild('DeviceManager'));\r\n        this._logger.log('constructor');\r\n\r\n        this._cameras = new VideoDeviceList(DeviceType.Camera, this._logger.createChild('cameras'));\r\n        this._microphones = new AudioDeviceList(DeviceType.Microphone, this._logger.createChild('microphones'));\r\n        this._speakers = new AudioDeviceList(DeviceType.Speaker, this._logger.createChild('speakers'));\r\n\r\n        this._compositeDevices = new CompositeAudioDeviceList(this._logger.createChild('compositeaudiodevices'));\r\n        this._initPromise = this._loginPromise.then(() => this._updateBrowserDevices());\r\n\r\n        this._initPromise.then(() => {\r\n            this._updateAudioDevices();\r\n            this._updateVideoDevices();\r\n            this._handleDisplaysChanged();\r\n        });\r\n        this._previewVideoManager = new SlimCoreElectronBindingManager<void>(this._startPreviewVideo, this._stopPreviewVideo, this._logger);\r\n        this._rendererBindingManager = new SlimCoreElectronBindingManager<SlimCore.VideoBindingRenderer>(this._createRendererBinding, this._releaseRendererBinding, this._logger);\r\n        this._screenShareBindingManager = new SlimCoreElectronBindingManager<SlimCore.VideoBindingScreenShare>(this._createScreenShareBinding, this._releaseScreenShareBinding, this._logger);\r\n        // hook device changed event\r\n        this.registerCallback(this._slimCoreInstance.handle('device-list-changed', eventData => this._slimCoreDevicesChangedHander(eventData)));\r\n        this.registerCallback(this._appHooks.onDisplaysChanged(() => this._handleDisplaysChanged()));\r\n    }\r\n\r\n    public getRendererBindingManager(): SlimCoreElectronBindingManager<SlimCore.VideoBindingRenderer> {\r\n        return this._rendererBindingManager;\r\n    }\r\n\r\n    public getScreenShareBindingManager(): SlimCoreElectronBindingManager<SlimCore.VideoBindingScreenShare> {\r\n        return this._screenShareBindingManager;\r\n    }\r\n\r\n    public getPreviewVideo(type: Enums.VideoType, name?: string, path?: string): Promise<number> {\r\n        let videoObjectId = 0;\r\n        return this._loginPromise.then(callHandler => {\r\n            videoObjectId = this._slimCoreInstance.createPreviewVideo(type, name, path);\r\n            if (videoObjectId === 0) {\r\n                throw new Error('SlimCore returned invalid video object ID 0');\r\n            }\r\n            this._logger.info(`Got preview video. Waiting for video to become AVAILABLE|STARTING|RUNNING`);\r\n            // todo: with current slimcore we could bail out immediately when preview video state goes to NOT_AVAILABLE, not sure about old cl though...\r\n            return SlimCoreCommon.waitForVideoObjectToBeAvailable(this._slimCoreInstance, callHandler, videoObjectId, this._logger, SlimCoreCommon.videoObjectTimeout(this._settings));\r\n        }).then(() => videoObjectId);\r\n    }\r\n\r\n    public get isAudioOutputSelectionSupported(): boolean {\r\n        return true;\r\n    }\r\n\r\n    private _handleDisplaysChanged() {\r\n        try {\r\n            this._slimCoreInstance.setDeviceRotation(SlimCore.queryDeviceRotation());\r\n        } catch (err) {\r\n            this._logger.warn(`Displays Changed handling error: ${err}`);\r\n        }\r\n    }\r\n\r\n    private _updateVideoDevices() {\r\n        this._cameras.update(this._fillBrowserDeviceIds(this._slimCoreInstance.getCameraList(), 'videoinput'));\r\n    }\r\n\r\n    private _updateAudioDevices() {\r\n        this._microphones.update(this._fillBrowserDeviceIds(this._slimCoreInstance.getMicrophoneList(), 'audioinput'));\r\n        this._speakers.update(this._fillBrowserDeviceIds(this._slimCoreInstance.getSpeakerList(), 'audiooutput'));\r\n\r\n        if (this._slimCoreInstance.getCompositeAudioDevices) {\r\n            this._compositeDevices.update(this._slimCoreInstance.getCompositeAudioDevices());\r\n        }\r\n\r\n        this._selectAudioDevices();\r\n    }\r\n\r\n    private _updateBrowserDevices(): Promise<void> {\r\n        if (typeof navigator !== 'object') {\r\n            this._logger.warn('Browser-backed device list won\\'t be fetched as navigator is not available');\r\n            return Promise.resolve<void>();\r\n        }\r\n\r\n        // Guard against parallel calls\r\n        if (this._browserDevicesPromise) {\r\n            return this._browserDevicesPromise;\r\n        }\r\n        return this._browserDevicesPromise = navigator.mediaDevices.enumerateDevices().then((deviceList: MediaDeviceInfo[]) => {\r\n            this._browserDevices = deviceList;\r\n            this._browserDevicesPromise = undefined;\r\n        });\r\n    }\r\n\r\n    private _fillBrowserDeviceIds<DeviceInfo extends SlimCore.DeviceInfo & BrowserAwareDeviceInfo>(deviceList: DeviceInfo[], kind: string): DeviceInfo[] {\r\n        if (!deviceList) {\r\n            return deviceList;\r\n        }\r\n        for (let device of deviceList) {\r\n            const browserDevice = this._browserDevices.find((mediaDeviceInfo) => {\r\n                if (mediaDeviceInfo.kind !== kind) {\r\n                    return false;\r\n                }\r\n                if (mediaDeviceInfo.label === device.label) {\r\n                    return true;\r\n                } else if (mediaDeviceInfo.label.indexOf(device.label) === 0) {\r\n                    // Check for Windows device identifier match: vid_046d&pid_0843\r\n                    const deviceIdSubstring = getMediaDeviceIdSubstring(mediaDeviceInfo.label, device.label);\r\n                    return device.id.indexOf(deviceIdSubstring) > -1;\r\n                }\r\n            });\r\n            if (browserDevice) {\r\n                device.browserId = browserDevice.deviceId;\r\n            } else if (this._browserDevices.length > 0) {\r\n                this._logger.warn(`No browser device found for device ${device.label}`);\r\n            }\r\n        }\r\n        return deviceList;\r\n    }\r\n\r\n    private _selectAudioDevices() {\r\n        const microphone = this._microphones.getSelectedDevice();\r\n        const speaker = this._speakers.getSelectedDevice();\r\n\r\n        this._logger.info(`SlimCore - selectAudioDevices: ${microphone}, ${speaker}`);\r\n        this._slimCoreInstance.selectAudioDevices(microphone, speaker);\r\n    }\r\n\r\n    private _slimCoreDevicesChangedHander(args: SlimCore.Engine.Events.DeviceListChangedArgs) {\r\n        this._logger.info(`SlimCore Devices changed: ${JSON.stringify(args)}`);\r\n\r\n        this._updateBrowserDevices().then(() => {\r\n            if (args.video) {\r\n                this._updateVideoDevices();\r\n            } else {\r\n                this._updateAudioDevices();\r\n            }\r\n\r\n            this._raiseDevicesChanged();\r\n        });\r\n    }\r\n\r\n    private _raiseDevicesChanged() {\r\n        this.raiseChanged();\r\n        this.event('devicesChanged').raise(this._enumerateDevices());\r\n    }\r\n\r\n    private _enumerateDevices(): DeviceDesc[] {\r\n        const cameras = this._cameras.enumerate();\r\n        const microphones = this._microphones.enumerate();\r\n        const speakers = this._speakers.enumerate();\r\n        const compositeAudioDevices = this._compositeDevices.enumerate();\r\n\r\n        return [].concat(cameras, microphones, speakers, compositeAudioDevices);\r\n    }\r\n\r\n    public askDevicePermission(constraints?: DeviceAccess): Promise<DeviceAccess> {\r\n        return Promise.resolve().then(() => {\r\n            return { audio: true, video: true };\r\n        });\r\n    }\r\n\r\n    public enumerateDevicesAsync(): Promise<DeviceDesc[]> {\r\n        return this._initPromise.then(() => {\r\n            return this._enumerateDevices();\r\n        });\r\n    }\r\n\r\n    public selectDevices(devices: SelectedDevices): void {\r\n        this._initPromise.then(() => {\r\n            this._selectDevices(devices);\r\n        });\r\n    }\r\n\r\n    private _selectDevices(devices: SelectedDevices): void {\r\n        this._logger.debug(`selectDevices - ${JSON.stringify(devices)}`);\r\n\r\n        if (devices.camera !== undefined) {\r\n            this._cameras.selectDevice(devices.camera);\r\n        }\r\n\r\n        if (devices.microphone !== undefined) {\r\n            this._microphones.selectDevice(devices.microphone);\r\n        }\r\n\r\n        if (devices.speaker !== undefined) {\r\n            this._speakers.selectDevice(devices.speaker);\r\n        }\r\n\r\n        this._selectAudioDevices();\r\n        this._raiseDevicesChanged();\r\n    }\r\n\r\n    public enableTtySupport(enable: boolean): Promise<void> {\r\n        return Promise.resolve()\r\n            .then(() => {\r\n                if (this._slimCoreInstance.createMediaConfig) {\r\n                    let config = this._slimCoreInstance.createMediaConfig();\r\n                    if (config.enableTtySupport) {\r\n                        return config.enableTtySupport(enable);\r\n                    }\r\n                }\r\n\r\n                return this._slimCoreInstance.enableTtySupport(enable);\r\n            })\r\n            .catch(error => {\r\n                // Catch exception due to mismatch where ts calling has\r\n                // enableTtySupport, but older native binaries do not have implementation.\r\n                this._logger.error(`Error in enableTtySupport(), error = ${error}`);\r\n            });\r\n    }\r\n\r\n    public getSelectedDevices(): SelectedDevices {\r\n        const result: SelectedDevices = {\r\n            camera: this._cameras.getSelectedDevice(),\r\n            microphone: this._microphones.getSelectedDevice(),\r\n            speaker: this._speakers.getSelectedDevice(),\r\n        };\r\n\r\n        this._logger.debug(`getSelectedDevices - ${JSON.stringify(result)}`);\r\n        return result;\r\n    }\r\n\r\n    public getSelectedCamera(): VideoDeviceDesc {\r\n        let deviceId = this._cameras.getSelectedDevice();\r\n        let device = _.find(this._cameras.enumerate(), (device) => device.id === deviceId);\r\n\r\n        this._logger.debug(`getSelectedCamera - ${JSON.stringify(device)}`);\r\n        return device;\r\n    }\r\n\r\n    public createPreviewRenderer(target: IRenderTarget, options?: StartStreamOptions): Promise<IRenderer> {\r\n        const renderer = new SlimCoreElectronLocalVideoPreview(\r\n            target,\r\n            this,\r\n            this._settings,\r\n            this._logger,\r\n            Enums.VideoType.Video,\r\n            options,\r\n        );\r\n\r\n        return Promise.resolve()\r\n            .then(() => renderer.startVideoAsync())\r\n            .then(() => renderer);\r\n    }\r\n\r\n    public createScreenSharingPreviewRenderer(target: IRenderTarget, options?: StartStreamOptions): Promise<IRenderer> {\r\n        const renderer = new SlimCoreElectronLocalVideoPreview(\r\n            target,\r\n            this,\r\n            this._settings,\r\n            this._logger,\r\n            Enums.VideoType.ScreenShare,\r\n            options,\r\n        );\r\n\r\n        return Promise.resolve()\r\n            .then(() => renderer.startVideoAsync())\r\n            .then(() => renderer);\r\n    }\r\n\r\n    public getDeviceNameAsync(deviceId: DeviceId): Promise<string> {\r\n        return Promise.resolve()\r\n            .then(() => {\r\n                const device = _.find(this._enumerateDevices(), device => device.id === deviceId);\r\n                if (!device) {\r\n                    throw new Error('Device with id: ' + deviceId + ' not found');\r\n                }\r\n                return device.label;\r\n            });\r\n    }\r\n\r\n    private _startPreviewVideo = (videoObjectId: number) => {\r\n        // in AVAILABLE state video is fully stopped and no bindings on it\r\n        return this._loginPromise.then(callHandler => {\r\n            this._logger.info('Wait AVAILABLE for preview video ' + videoObjectId);\r\n            return SlimCoreCommon.waitForVideoObjectState({\r\n                    slimcoreInstance: this._slimCoreInstance,\r\n                    callHandler: callHandler,\r\n                    videoObjectId,\r\n                    logger: this._logger,\r\n                    resolveStates: [Enums.VideoStatus.Available],\r\n                    rejectStates: [Enums.VideoStatus.NotAvailable],\r\n                    timeout: SlimCoreCommon.videoObjectTimeout(this._settings),\r\n                })\r\n                .then(() => {\r\n                    this._logger.info('Starting preview video ' + videoObjectId);\r\n                    this._slimCoreInstance.videoStart(videoObjectId);\r\n                })\r\n                // in order to perform full stop that would bring video state back to AVAILABLE we need to wait for state\r\n                // that is not AVAILABLE best place doing this is after start (alternativley could also be done before stop)\r\n                .then(() => SlimCoreCommon.waitForVideoObjectState({\r\n                    slimcoreInstance: this._slimCoreInstance,\r\n                    callHandler: callHandler,\r\n                    videoObjectId,\r\n                    logger: this._logger,\r\n                    resolveStates: [Enums.VideoStatus.Starting, Enums.VideoStatus.Running],\r\n                    rejectStates: [Enums.VideoStatus.NotAvailable],\r\n                    timeout: SlimCoreCommon.videoObjectTimeout(this._settings),\r\n                }))\r\n                .then(() => this._logger.info('Now can use preview video ' + videoObjectId));\r\n        });\r\n    }\r\n\r\n    private _stopPreviewVideo = (videoObjectId: number) => {\r\n        return Promise.resolve().then(() => {\r\n            this._logger.info('Stopping preview video ' + videoObjectId);\r\n            this._slimCoreInstance.videoStop(videoObjectId);\r\n        });\r\n    }\r\n\r\n    private _createRendererBinding = (videoObjectId: number) => {\r\n        let binding: SlimCore.VideoBindingRenderer;\r\n        return this._previewVideoManager.acquire(this._rendererBindingManager, videoObjectId)\r\n            .then(() => {\r\n                // use new method if available\r\n                if (this._slimCoreInstance.createVideoBindingRenderer) {\r\n                    binding = this._slimCoreInstance.createVideoBindingRenderer({\r\n                        enableDXVA: this._settings.enableDXVA,\r\n                    });\r\n                }\r\n                // use old method for backwards compatibility\r\n                else {\r\n                    binding = SlimCore.createVideoBindingRenderer();\r\n                }\r\n                this._logger.info('Create rendering binding for preview video ' + videoObjectId);\r\n                return this._slimCoreInstance.videoCreateBinding(videoObjectId, binding);\r\n            }).then(() => {\r\n                this._logger.info('Created rendering binding for preview video ' + videoObjectId);\r\n                return binding;\r\n            });\r\n    }\r\n\r\n    private _releaseRendererBinding = (videoObjectId: number, binding: SlimCore.VideoBindingRenderer) => {\r\n        return Promise.resolve().then(() => {\r\n            this._logger.info('Release rendering binding for preview video ' + videoObjectId);\r\n            return this._slimCoreInstance.videoReleaseBinding(videoObjectId, binding);\r\n        }).then(() => {\r\n            this._logger.info('Released rendering binding for preview video ' + videoObjectId);\r\n            return this._previewVideoManager.release(this._rendererBindingManager, videoObjectId);\r\n        });\r\n    }\r\n\r\n    private _createScreenShareBinding = (videoObjectId: number) => {\r\n        let binding: SlimCore.VideoBindingScreenShare;\r\n        return this._previewVideoManager.acquire(this._screenShareBindingManager, videoObjectId)\r\n            .then(() => {\r\n                binding = SlimCore.createVideoBindingScreenShare();\r\n                this._logger.info('Create screenshare binding for preview video ' + videoObjectId);\r\n                return this._slimCoreInstance.videoCreateBinding(videoObjectId, binding);\r\n            }).then(() => {\r\n                this._logger.info('Created screenshare binding for preview video ' + videoObjectId);\r\n                return binding;\r\n            });\r\n    }\r\n\r\n    private _releaseScreenShareBinding = (videoObjectId: number, binding: SlimCore.VideoBindingScreenShare) => {\r\n        return Promise.resolve().then(() => {\r\n            this._logger.info('Release screenshare binding for preview video ' + videoObjectId);\r\n            return this._slimCoreInstance.videoReleaseBinding(videoObjectId, binding);\r\n        }).then(() => {\r\n            this._logger.info('Released screenshare binding for preview video ' + videoObjectId);\r\n            return this._previewVideoManager.release(this._screenShareBindingManager, videoObjectId);\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronDeviceManager.ts","/**\r\n * SlimCoreElectronEcsProvider.ts\r\n * Author: Richard Speyer\r\n * Copyright: Microsoft 2017\r\n *\r\n * SlimCore IECSProvider implementation\r\n */\r\n\r\nimport { EcsConfig, IEcsProvider } from 'skype-calling-interface';\r\n\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\n\r\nexport default class SlimCoreElectronEcsProvider implements IEcsProvider {\r\n  public constructor(private _slimCoreInstance: SlimCoreCommon.Engine) { }\r\n\r\n  public setEcsConfig(config: EcsConfig): Promise<void> {\r\n    try {\r\n      this._slimCoreInstance.setEcsConfig(config.ecsBlob, config.userIdentity, config.etag, true);\r\n      return Promise.resolve<void>();\r\n    } catch (e) {\r\n      return Promise.reject(e);\r\n    }\r\n  }\r\n\r\n  public getEcsQueryParameters(): Promise<string> {\r\n    try {\r\n      return Promise.resolve<string>(this._slimCoreInstance.getEcsQueryParameters());\r\n    } catch (e) {\r\n      return Promise.reject(e);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronEcsProvider.ts","/// <reference path=\"../typings/slimcore.d.ts\" />\r\n/// <reference path=\"../typings/slimcore-enums.d.ts\" />\r\n\r\nimport { CallingLogger } from 'skype-calling-interface';\r\nimport { ISharingSource } from 'skype-calling-interface';\r\nimport { IStream } from 'skype-calling-interface';\r\nimport { SharingSourceType } from 'skype-calling-interface';\r\n\r\nimport * as _ from 'lodash';\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\nimport SlimCoreElectronBase from './SlimCoreElectronBase';\r\nimport { ISlimCoreElectronApplicationHooks } from '../typings/skype-calling-electron-embedded';\r\nimport { ISlimCoreElectronControlInjector } from '../typings/skype-calling-electron-embedded';\r\nimport { Rectangle } from '../typings/skype-calling-electron-embedded';\r\n\r\nimport { SharingControlDisableReason } from 'skype-calling-interface';\r\nimport SlimCoreElectronScreenSharingControl from './SlimCoreElectronScreenSharingControl';\r\nimport SlimCoreElectronDeviceManager from './SlimCoreElectronDeviceManager';\r\n\r\n// From electron/typings/slimcore-enums.d.ts:\r\nimport Enums = SlimCore.Enums;\r\n\r\nimport ScreenScraper = SlimCore.ScreenScraper;\r\nimport MonitorInfo = ScreenScraper.MonitorInfo;\r\nimport WindowInfo = ScreenScraper.WindowInfo;\r\nimport VideoBindingScreenShare = SlimCore.VideoBindingScreenShare;\r\n\r\nconst VIDEO_OBJECT_WAIT_TIMEOUT_MS = 500;\r\n\r\ninterface SlimCoreElectronLocalScreenShareEvents {\r\n    sharingSourceLost: () => void; // tslint:disable-line:prefer-method-signature\r\n    windowClosed(): void;\r\n}\r\n\r\nexport default class SlimCoreElectronLocalScreenShare extends SlimCoreElectronBase<SlimCoreElectronLocalScreenShareEvents> implements IStream {\r\n    public isStreaming = false;\r\n    public isAvailable = true;\r\n\r\n    private _localVideoObjectId: number = 0;\r\n    private _previewVideoObjectId: number = 0;\r\n    private _videoBindingScreenShare: VideoBindingScreenShare;\r\n    private _screenScraper: SlimCore.ScreenScraper;\r\n    private _selectedMonitor: MonitorInfo;\r\n    private _selectedWindow: WindowInfo;\r\n    private _editViewPPTWindowId: number = 0;\r\n    private _currentStartPromise: Promise<void>;\r\n    private _currentStopPromise: Promise<void>;\r\n\r\n    public constructor(\r\n        private _callObjectId: number,\r\n        private _callHandler: SlimCoreCommon.CallHandler,\r\n        private _slimcoreInstance: SlimCoreCommon.Engine,\r\n        private _deviceManager: SlimCoreElectronDeviceManager,\r\n        logger: CallingLogger,\r\n        private _appHooks: ISlimCoreElectronApplicationHooks,\r\n        private _screenSharingControl: SlimCoreElectronScreenSharingControl,\r\n    ) {\r\n        super(logger.createChild(() => `LocalScreenShare[${this._localVideoObjectId}]`));\r\n        this._logger.log('constructor');\r\n\r\n        const screenScraperImpl = SlimCoreCommon.isSlimCoreRTModuleAvailable() ? (SlimCoreRT as any).SlimCore.ScreenScraper : SlimCore.ScreenScraper;\r\n        this._screenScraper = screenScraperImpl ? new screenScraperImpl() : null;\r\n\r\n        this.registerCallback(this._appHooks.onDisplaysChanged(() => this.handleDisplaysChanged()));\r\n        // TODO: Register a callback for window closed\r\n    }\r\n\r\n    public isActive(): boolean {\r\n        return this.isAvailable && this.isStreaming;\r\n    }\r\n\r\n    private _showSharingIndicator(region: Rectangle) {\r\n\r\n        this._appHooks.showSharingIndicator(region);\r\n\r\n        let controlInjector: ISlimCoreElectronControlInjector = this._appHooks.getControlInjector();\r\n        if (controlInjector && controlInjector.setInjectionRect) {\r\n            controlInjector.setInjectionRect(region).catch((error) => {\r\n                let errorDetails: string = JSON.stringify({ errorMsg: error, region: region });\r\n                this._screenSharingControl.enableScreenSharingControl(false, SharingControlDisableReason.SetInjectionFailed, errorDetails);\r\n                this._logger.error(`Set control Injector failure, disable screen sharing control. Error: ${error}`);\r\n            });\r\n        }\r\n    }\r\n\r\n    private _videoObjectChanged(eventData: SlimCoreCommon.ObjectChangedEvent) {\r\n        this.isAvailable = SlimCoreCommon.isVideoAvailable(eventData.value);\r\n        this.isStreaming = false;\r\n        if (SlimCoreCommon.isVideoInState(eventData.value, [Enums.VideoStatus.Starting, Enums.VideoStatus.Running])) {\r\n            if (!this._selectedMonitor && !this._selectedWindow) {\r\n                // we're screen sharing but no monitor selected. stop screensharing\r\n                SlimCoreCommon.forgetAndLog(this.stop(), this._logger, 'stopping screen sharing due to no monitor being selected');\r\n            } else {\r\n                this.isStreaming = true;\r\n                this._appHooks.showSharingIndicator((this._selectedMonitor && this._selectedMonitor.region) || (this._selectedWindow && this._selectedWindow.windowId));\r\n            }\r\n        }\r\n\r\n        if (SlimCoreCommon.isVideoInState(eventData.value, [Enums.VideoStatus.Paused])) {\r\n            this._appHooks.hideSharingIndicator();\r\n        }\r\n\r\n        this.raiseChanged();\r\n    }\r\n\r\n    private _setCaptureRegionAndWindow(region?: ScreenScraper.Region, windowId?: number) {\r\n        if (this._slimcoreInstance.setScreenCaptureRectangle) {\r\n            this._slimcoreInstance.setScreenCaptureRectangle(this._localVideoObjectId, region, undefined, windowId);\r\n            return;\r\n        }\r\n\r\n        if (this._videoBindingScreenShare) {\r\n            this._videoBindingScreenShare.setCaptureRegionAndWindow(region, windowId);\r\n            return;\r\n        }\r\n\r\n        throw new Error('Failed to set capture region / window');\r\n    }\r\n\r\n    private _handleScraperEvent(args: SlimCore.VideoBindingScreenShare.Events.ScraperEventArgs) {\r\n        this._logger.info('Handle Scraper event, event = ' + args.event + ' window id = ' + args.data);\r\n        let eventWindowId = args.data;\r\n\r\n        switch (args.event) {\r\n            case Enums.ScraperEvent.PPTPresenterView_Enter:\r\n                this._editViewPPTWindowId = this._selectedWindow.windowId;\r\n                this._selectedWindow.windowId = eventWindowId;\r\n                this._appHooks.showSharingIndicator(eventWindowId);\r\n                this._setCaptureRegionAndWindow(undefined, eventWindowId);\r\n                this._logger.info(`shared PPT entered presenter mode`);\r\n                break;\r\n            case Enums.ScraperEvent.PPTPresenterView_Exit:\r\n                this._selectedWindow.windowId = this._editViewPPTWindowId;\r\n                this._appHooks.showSharingIndicator(this._selectedWindow.windowId);\r\n                this._setCaptureRegionAndWindow(undefined, this._selectedWindow.windowId);\r\n                this._logger.info(`shared PPT exited presenter mode`);\r\n                break;\r\n            case Enums.ScraperEvent.WindowClosed:\r\n                // make sure that the window for the event matches the current window id\r\n                if (this._selectedWindow.windowId !== eventWindowId) return;\r\n                this._logger.info(`Application window closed. Stopping the screenshare`);\r\n                this.event('windowClosed').raise();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    private _startPreviewVideoObject(): Promise<void> {\r\n        if (!this._shouldUseVideoBindingScreenShare()) {\r\n            return Promise.resolve<void>();\r\n        }\r\n        return this._deviceManager.getPreviewVideo(Enums.VideoType.ScreenShare)\r\n            .then((videoObjectId) => {\r\n                return this._deviceManager.getScreenShareBindingManager().acquire(this, videoObjectId)\r\n                    .then((binding) => {\r\n                        this._previewVideoObjectId = videoObjectId;\r\n                        this._videoBindingScreenShare = binding; // from now on we must release binding\r\n                        this._videoBindingScreenShare.on('scraper-event', (args) => this._handleScraperEvent(args));\r\n                    });\r\n            });\r\n    }\r\n\r\n    private _stopPreviewVideoObject(): Promise<void> {\r\n        if (!this._shouldUseVideoBindingScreenShare()) {\r\n            return Promise.resolve<void>();\r\n        }\r\n        if (this._previewVideoObjectId && this._videoBindingScreenShare) {\r\n            this._logger.info(`calling slimcore video release binding`);\r\n            this._videoBindingScreenShare.removeAllListeners('scraper-event');\r\n            let releasePromise = this._deviceManager.getScreenShareBindingManager().release(this, this._previewVideoObjectId)\r\n                .catch(error => this._logger.error(`Failed on releasing screen sharing binding. Error: ${error}`));\r\n            this._previewVideoObjectId = 0;\r\n            this._videoBindingScreenShare = null;\r\n            return releasePromise;\r\n        }\r\n    }\r\n\r\n    private _shouldUseVideoBindingScreenShare() {\r\n        return !this._slimcoreInstance.setScreenCaptureRectangle && SlimCore.createVideoBindingScreenShare;\r\n    }\r\n\r\n    public start(source?: ISharingSource): Promise<void> {\r\n        this._logger.info(`local screen share start`);\r\n\r\n        if (this._currentStartPromise) {\r\n            this._logger.info(`Start requested but pending start exists. Returning previous promise`);\r\n            return this._currentStartPromise;\r\n        }\r\n\r\n        const sourceInfo = this.sourceToInfo(source);\r\n\r\n        this._currentStartPromise = Promise.resolve()\r\n            .then(() => {\r\n                // if there's a pending stop, wait for that to finish first\r\n                if (this._currentStopPromise) {\r\n                    this._logger.info(`Start requested but pending stop exists. Waiting for previous stop promise`);\r\n                    return this._currentStopPromise;\r\n                }\r\n            })\r\n            .then(() => {\r\n                if (!sourceInfo) {\r\n                    throw new Error('Unable to start sharing, source could not be found');\r\n                }\r\n            })\r\n            .then(() => {\r\n                this._logger.info(`calling slimcore create local video`);\r\n                this._localVideoObjectId = this._slimcoreInstance.createLocalVideo(Enums.VideoType.ScreenShare, '', '');\r\n                this.registerCallback(SlimCoreCommon.onObjectPropertyChanged(this._slimcoreInstance, Enums.Property.VideoStatus, this._localVideoObjectId, eventData => this._videoObjectChanged(eventData)), true);\r\n\r\n                let videoStatus = this._getIntProperty(this._callHandler, this._localVideoObjectId, Enums.Property.VideoStatus);\r\n                this._videoObjectChanged({\r\n                    objectType: Enums.ObjectType.Video,\r\n                    objectId: this._localVideoObjectId,\r\n                    propKey: Enums.Property.VideoStatus,\r\n                    value: videoStatus,\r\n                });\r\n\r\n                this._callHandler.callAttachSendVideo(this._callObjectId, this._localVideoObjectId);\r\n            })\r\n            .then(() => {\r\n                this._logger.info(`waiting for video object to be available`);\r\n                return SlimCoreCommon.waitForVideoObjectToBeAvailable(this._slimcoreInstance, this._callHandler, this._localVideoObjectId, this._logger, VIDEO_OBJECT_WAIT_TIMEOUT_MS);\r\n            })\r\n            .then(() => {\r\n                this._logger.info(`start preview video object`);\r\n                return this._startPreviewVideoObject();\r\n            })\r\n            .then(() => {\r\n                this._logger.info(`calling slimcore video start`);\r\n                this.selectSource(source, sourceInfo);\r\n                this._slimcoreInstance.videoStart(this._localVideoObjectId);\r\n                this.isStreaming = true;\r\n                this.raiseChanged();\r\n            }).catch(error => {\r\n                this._logger.error(`Failed to start LocalScreenShare. Error: ${error}`);\r\n                this._currentStartPromise = null;\r\n                this.stop();\r\n                throw error;\r\n            });\r\n\r\n        return this._currentStartPromise;\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        if (this._currentStopPromise) {\r\n            this._logger.info(`Stop requested but pending stop exists. Returning previous promise`);\r\n            return this._currentStopPromise;\r\n        }\r\n\r\n        const always = () => {\r\n            this._appHooks.hideSharingIndicator();\r\n\r\n            this.disposeCallbacks();\r\n\r\n            this._localVideoObjectId = 0;\r\n            this.isStreaming = false;\r\n            this._selectedMonitor = null;\r\n            this._selectedWindow = null;\r\n            this._editViewPPTWindowId = 0;\r\n            this._currentStopPromise = null;\r\n            this._currentStartPromise = null;\r\n\r\n            this.raiseChanged();\r\n        };\r\n\r\n        this._currentStopPromise = Promise.resolve()\r\n            .then(() => {\r\n                if (this._currentStartPromise) {\r\n                    this._logger.info(`Waiting for start promise to finish.`);\r\n                    return this._currentStartPromise;\r\n                }\r\n            })\r\n            .then(() => this._stopPreviewVideoObject())\r\n            .then(() => {\r\n                if (this._localVideoObjectId !== 0) {\r\n                    this._logger.info(`calling slimcore video stop`);\r\n                    this._slimcoreInstance.videoStop(this._localVideoObjectId);\r\n                }\r\n            })\r\n            .then(always, error => {\r\n                this._logger.error(`Failed to stop LocalScreenShare. Error: ${error}`);\r\n                always();\r\n                throw error;\r\n            });\r\n        return this._currentStopPromise;\r\n    }\r\n\r\n    public dispose() {\r\n        this._logger.info('Disposing of LocalScreenShare');\r\n        if (this._localVideoObjectId !== 0 || this._previewVideoObjectId !== 0) {\r\n            this.stop();\r\n        }\r\n\r\n        super.dispose();\r\n    }\r\n\r\n    private selectSource(source: ISharingSource, sourceInfo: MonitorInfo | WindowInfo) {\r\n        if (source && source.getType() === SharingSourceType.Window) {\r\n            this.selectWindow(sourceInfo as WindowInfo);\r\n        } else {\r\n            this.selectMonitor(sourceInfo as MonitorInfo);\r\n        }\r\n    }\r\n\r\n    private selectMonitor(monitor: MonitorInfo) {\r\n        this._showSharingIndicator(monitor.region);\r\n        this._setCaptureRegionAndWindow(monitor.region);\r\n        this._selectedMonitor = monitor;\r\n    }\r\n\r\n    private selectWindow(window: WindowInfo) {\r\n        this._appHooks.showSharingIndicator(window.windowId);\r\n        this._setCaptureRegionAndWindow(undefined, window.windowId);\r\n        this._selectedWindow = window;\r\n    }\r\n\r\n    private handleDisplaysChanged() {\r\n        if (!this._selectedMonitor || !this._screenScraper) return;\r\n\r\n        let monitors = this._screenScraper.getMonitorList() || [];\r\n        let monitor = this.handleDuplicateToExtend(monitors) || this.pickSameMonitor(monitors);\r\n\r\n        if (monitor) {\r\n            this.selectMonitor(monitor);\r\n        } else {\r\n            SlimCoreCommon.forgetAndLog(this.stop(), this._logger, 'stopping screen share because displays changed');\r\n            this.event('sharingSourceLost').raise();\r\n        }\r\n    }\r\n\r\n    private pickSameMonitor(monitors: MonitorInfo[]): MonitorInfo {\r\n        let id = this._selectedMonitor ? this._selectedMonitor.monitorId : null;\r\n        if (null !== id) {\r\n            return _.find(monitors, (monitor) => {\r\n                return monitor.monitorId === id || _.isEqual(monitor.region, this._selectedMonitor.region);\r\n            });\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private handleDuplicateToExtend(monitors: MonitorInfo[]): MonitorInfo {\r\n        let isDuplicated = this._selectedMonitor && this._selectedMonitor.isDuplicated;\r\n        // if display configuration changes from duplicate to extend\r\n        if (isDuplicated && this.isExtendConfiguration(monitors)) {\r\n            // continue sharing the external screen\r\n            return _.find(monitors, monitor => !monitor.isInternal);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private isExtendConfiguration(monitors: MonitorInfo[]) {\r\n        let duplicated = count(monitors, monitor => monitor.isDuplicated);\r\n        let internal = count(monitors, monitor => monitor.isInternal);\r\n        let external = count(monitors, monitor => !monitor.isInternal);\r\n\r\n        return duplicated === 0 && internal === 1 && external === 1;\r\n    }\r\n\r\n    private sourceToInfo(source: ISharingSource): MonitorInfo | WindowInfo {\r\n        if (!this._screenScraper) {\r\n            if (!source) {\r\n                this._logger.error('ScreenShare has no way to recover primary monitor');\r\n                return null;\r\n            }\r\n\r\n            // For platforms that do not support enumeration take the region from source at face value\r\n            // as primary monitor dimensions intead of trying to recover the monitorInfo\r\n            return {\r\n                monitorId: 0,\r\n                name: source.getDescription(),\r\n                region: source.getBounds(),\r\n                isPrimary: true,\r\n                isInternal: true,\r\n                isDuplicated: false,\r\n            };\r\n        }\r\n\r\n        if (!source) {\r\n            let sourceList = this._screenScraper.getMonitorList() || [];\r\n            return _.find(sourceList, (screen) => screen.isPrimary);\r\n        }\r\n\r\n        switch (source.getType()) {\r\n            case SharingSourceType.Window: {\r\n                let sourceList = this._screenScraper.getWindowList() || [];\r\n                return _.find(sourceList, (application) => {\r\n                    return application.windowId === source.getId();\r\n                });\r\n            }\r\n\r\n            case SharingSourceType.Monitor: {\r\n                let sourceList = this._screenScraper.getMonitorList() || [];\r\n                return _.find(sourceList, (screen) => {\r\n                    return screen.monitorId === source.getId() || _.isEqual(screen.region, source.getBounds());\r\n                });\r\n            }\r\n\r\n            default:\r\n                throw new Error(`Invalid source type: ${source.getType()}`);\r\n        }\r\n    }\r\n}\r\n\r\nfunction count<T>(collection: T[], predicate: (value: T) => boolean): number {\r\n    return _.reduce(collection, (result, item) => predicate(item) ? result + 1 : result, 0);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronLocalScreenShare.ts","/// <reference path=\"../typings/slimcore-enums.d.ts\" />\r\n\r\nimport { CallState } from 'skype-calling-interface';\r\nimport { CallingLogger } from 'skype-calling-interface';\r\nimport { IDisposable } from 'skype-calling-interface';\r\nimport { IStream } from 'skype-calling-interface';\r\nimport { VideoDeviceDesc } from 'skype-calling-interface';\r\n\r\nimport * as _ from 'lodash';\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\nimport SlimCoreElectronBase from './SlimCoreElectronBase';\r\nimport SlimCoreElectronDeviceManager from './SlimCoreElectronDeviceManager';\r\n\r\n// From electron/typings/slimcore-enums.d.ts:\r\nimport Enums = SlimCore.Enums;\r\nconst VIDEO_OBJECT_WAIT_TIMEOUT = 500;\r\n\r\nexport default class SlimCoreElectronLocalVideo extends SlimCoreElectronBase<{}> implements IStream, IDisposable {\r\n    public isStreaming = false;\r\n    public isAvailable = true;\r\n    public isStoppingOrNotStarted = false;\r\n    public isRendering = false;\r\n    public isPaused = false;\r\n\r\n    public id: number;\r\n\r\n    private _videoObjectId = 0;\r\n    private _callState: CallState;\r\n    private _requestedVideoOn = false;\r\n    private _currentStartPromise: Promise<void>;\r\n    private _currentStopPromise: Promise<void>;\r\n    private _currentCamera: VideoDeviceDesc;\r\n    private _internalVideoStartPromise: Promise<void>;\r\n\r\n    public constructor(\r\n        private _callObjectId: number,\r\n        private _callHandler: SlimCoreCommon.CallHandler,\r\n        private _slimcoreInstance: SlimCoreCommon.Engine,\r\n        private _deviceManager: SlimCoreElectronDeviceManager,\r\n        logger: CallingLogger,\r\n    ) {\r\n        super(logger.createChild(() => `LocalVideo[${this._videoObjectId}]`));\r\n        this._logger.log('constructor');\r\n\r\n        this.registerCallback(this._deviceManager.on('devicesChanged', () => this._devicesChanged()));\r\n    }\r\n\r\n    public isActive(): boolean {\r\n        return this.isAvailable && this.isStreaming;\r\n    }\r\n\r\n    private _devicesChanged() {\r\n        this._logger.info('Devices changed - checking if video needs to be restarted');\r\n        let selectedDevices = this._deviceManager.getSelectedDevices();\r\n\r\n        if (this._currentCamera && selectedDevices.camera && selectedDevices.camera !== this._currentCamera.id) {\r\n            this._logger.info(`Changing video device to ${selectedDevices.camera}`);\r\n\r\n            this.stop()\r\n                .then(() => this.start())\r\n                .catch((e) => {\r\n                    this._logger.error(`Caught error while trying to stop\\start local video after device change. Error: ${e}`);\r\n                });\r\n        }\r\n    }\r\n\r\n    private _videoObjectChanged(eventData: SlimCoreCommon.ObjectChangedEvent) {\r\n        this._logger.info(`Video state changed -> ${eventData.value}`);\r\n\r\n        const isAvailable = SlimCoreCommon.isVideoAvailable(eventData.value);\r\n        const isRunning = eventData.value === Enums.VideoStatus.Running;\r\n\r\n        this.isPaused = eventData.value === Enums.VideoStatus.Paused;\r\n        this.isStoppingOrNotStarted = (eventData.value === Enums.VideoStatus.Stopping || eventData.value === Enums.VideoStatus.NotStarted);\r\n        this.isAvailable = isAvailable;\r\n        this.isStreaming = isRunning;\r\n        this.isRendering = isRunning;\r\n        this.raiseChanged();\r\n    }\r\n\r\n    private _executeOperationAndExpectVideoStateTransition(transitionTriggerFunc: Function, videoObjectId: number, expectedFinalVideoStates:  number[]) {\r\n        return new Promise<void>((resolve, reject) => {\r\n            let done  = false;\r\n            let videoStatusChangedCallback: IDisposable = null;\r\n\r\n            let _onVideoObjectStateChanged = (eventData: SlimCoreCommon.ObjectChangedEvent) => {\r\n                this._logger.info(`Video state changed for monitored video ID[${videoObjectId}] -> ${eventData.value}`);\r\n\r\n                if (!done && _.indexOf(expectedFinalVideoStates, eventData.value) !== -1) {\r\n                    done = true;\r\n                    if (videoStatusChangedCallback) {\r\n                        videoStatusChangedCallback.dispose();\r\n                        videoStatusChangedCallback = null;\r\n                    }\r\n                    resolve();\r\n                }\r\n            };\r\n\r\n            setTimeout(() => {\r\n                if (!done) {\r\n                    if (videoStatusChangedCallback) {\r\n                        videoStatusChangedCallback.dispose();\r\n                        videoStatusChangedCallback = null;\r\n                    }\r\n\r\n                    let currentState = this._getIntProperty(this._callHandler, videoObjectId, Enums.Property.VideoStatus);\r\n                    this._logger.info(`_executeOperationAndExpectVideoStateTransition[${videoObjectId}] time out. Current State = ${currentState}.`);\r\n\r\n                    if (_.indexOf(expectedFinalVideoStates, currentState) !== -1) {\r\n                        resolve();\r\n                    } else {\r\n                        const errorMessage = `_executeOperationAndExpectVideoStateTransition[${videoObjectId}] time out. Video not in expected final state`;\r\n                        this._logger.info(errorMessage);\r\n                        reject(errorMessage);\r\n                    }\r\n                }\r\n            }, VIDEO_OBJECT_WAIT_TIMEOUT);\r\n\r\n            // Subscribe to object changes\r\n            videoStatusChangedCallback = SlimCoreCommon.onObjectPropertyChanged(this._slimcoreInstance, Enums.Property.VideoStatus, videoObjectId, eventData => _onVideoObjectStateChanged(eventData));\r\n            transitionTriggerFunc();\r\n        });\r\n    }\r\n\r\n    private _startInternalVideo() {\r\n        if (this._internalVideoStartPromise) {\r\n            return this._internalVideoStartPromise;\r\n        }\r\n\r\n        this._internalVideoStartPromise = Promise.resolve<void>(undefined)\r\n            .then(() => {\r\n                let selectedCamera = this._deviceManager.getSelectedCamera();\r\n                if (!selectedCamera) throw new Error('No camera selected to start video on');\r\n\r\n                this._logger.info(`Starting local video using camera: ${JSON.stringify(selectedCamera)}`);\r\n\r\n                this._currentCamera = selectedCamera;\r\n\r\n                this._videoObjectId = this._slimcoreInstance.createLocalVideo(Enums.VideoType.Video, selectedCamera.label, selectedCamera.id);\r\n                if (this._videoObjectId === 0) {\r\n                    throw new Error('SlimCore returned invalid video object ID 0');\r\n                }\r\n\r\n                this._callHandler.callAttachSendVideo(this._callObjectId, this._videoObjectId);\r\n            })\r\n            .then(() => SlimCoreCommon.waitForVideoObjectToBeAvailable(this._slimcoreInstance, this._callHandler, this._videoObjectId, this._logger))\r\n            .then(() => {\r\n                this._logger.info(`Local Video is AVAILABLE. Starting Video`);\r\n\r\n                // hook up property changes for Local Video object\r\n                this.registerCallback(SlimCoreCommon.onObjectPropertyChanged(this._slimcoreInstance, Enums.Property.VideoStatus, this._videoObjectId, eventData => this._videoObjectChanged(eventData)), true);\r\n\r\n                let videoStatus = this._getIntProperty(this._callHandler, this._videoObjectId, Enums.Property.VideoStatus);\r\n                this._videoObjectChanged({\r\n                    objectType: Enums.ObjectType.Video,\r\n                    objectId: this._videoObjectId,\r\n                    propKey: Enums.Property.VideoStatus,\r\n                    value: videoStatus,\r\n                });\r\n\r\n                // reject promise if local video does not go to Running state\r\n                return this._executeOperationAndExpectVideoStateTransition(() => {\r\n                    this._slimcoreInstance.videoStart(this._videoObjectId);\r\n                }, this._videoObjectId, [Enums.VideoStatus.Running, Enums.VideoStatus.Starting]);\r\n            });\r\n\r\n        return this._internalVideoStartPromise;\r\n    }\r\n\r\n    private canToggleVideo = () => {\r\n        return this._callState === CallState.Connected ||\r\n            this._callState === CallState.LocalHold ||\r\n            this._callState === CallState.RemoteHold ||\r\n            this._callState === CallState.InLobby;\r\n    }\r\n\r\n    public setCallState(callState: CallState): void {\r\n        this._callState = callState;\r\n        if (this.canToggleVideo() && this._requestedVideoOn) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    public start(): Promise<void> {\r\n        this._logger.warn('Local video START requested');\r\n\r\n        if (!this.canToggleVideo()) {\r\n            this._logger.warn('Local video start requested but call is not connected, skipping operation');\r\n            this._requestedVideoOn = true;\r\n            return Promise.resolve(null);\r\n        }\r\n\r\n        if (this._currentStartPromise) {\r\n            this._logger.info(`Start requested but pending start exists. Returning previous promise`);\r\n            return this._currentStartPromise;\r\n        }\r\n\r\n        let initialPromise: Promise<void>;\r\n        // do a synchronous check to avoid start/stop deadlock, if there's a pending stop, wait for that to finish first\r\n        if (this._currentStopPromise) {\r\n            this._logger.info(`Start requested but pending stop exists. Waiting for previous stop promise`);\r\n            initialPromise = this._currentStopPromise;\r\n        } else {\r\n            initialPromise = Promise.resolve<void>();\r\n        }\r\n\r\n        this._currentStartPromise = initialPromise\r\n            .then(() => this._startInternalVideo())\r\n            .then(() => {\r\n                this._currentStartPromise = null;\r\n            })\r\n            .catch(error => {\r\n                this._logger.error(`Failed to start Local Video. Err: ${error}`);\r\n                this._currentStartPromise = null;\r\n                this.stop();\r\n                throw error;\r\n            });\r\n\r\n        return this._currentStartPromise;\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        this._logger.warn('Local video STOP requested');\r\n\r\n        let always = () => {\r\n            this.disposeCallbacks();\r\n\r\n            this._videoObjectId = 0;\r\n\r\n            this._currentCamera = null;\r\n            this._currentStopPromise = null;\r\n            this._currentStartPromise = null;\r\n            this._internalVideoStartPromise = null;\r\n        };\r\n\r\n        if (this._currentStopPromise) {\r\n            this._logger.info(`Stop requested but pending stop exists. Returning previous promise`);\r\n            return this._currentStopPromise;\r\n        }\r\n\r\n        let initialPromise: Promise<void>;\r\n        // do a synchronous check to avoid start/stop deadlock, if there's a pending start, wait for that to finish first\r\n        if (this._currentStartPromise) {\r\n            this._logger.info(`Waiting for start promise to finish.`);\r\n            initialPromise = this._currentStartPromise;\r\n        } else  {\r\n            initialPromise = Promise.resolve<void>();\r\n        }\r\n\r\n        this._currentStopPromise = initialPromise\r\n            .then(() => {\r\n                this._logger.info('Stopping SlimCore video objects');\r\n\r\n                if (this._videoObjectId !== 0) {\r\n                    this._slimcoreInstance.videoStop(this._videoObjectId);\r\n                }\r\n            })\r\n            .then(() => {\r\n                if (this.canToggleVideo()) {\r\n                    return SlimCoreCommon.waitForVideoObjectToBeAvailable(this._slimcoreInstance, this._callHandler, this._videoObjectId, this._logger);\r\n                } else {\r\n                    return Promise.resolve<void>();\r\n                }\r\n            })\r\n            .then(() => {\r\n                this._logger.info('VideoBinding was released');\r\n            })\r\n            .then(always, error => {\r\n                this._logger.error(`Failed to stop LocalVideo. Error: ${error}`);\r\n                always();\r\n                throw error;\r\n            });\r\n\r\n        return this._currentStopPromise;\r\n    }\r\n\r\n    public dispose() {\r\n        const always = () => super.dispose();\r\n        Promise.resolve(() => this._videoObjectId !== 0 ? this.stop() : true)\r\n        .then(always).catch(always);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronLocalVideo.ts","/// <reference path=\"../typings/slimcore-enums.d.ts\" />\r\n\r\nimport { CallingLogger } from 'skype-calling-interface';\r\nimport { ICallParticipantStream } from 'skype-calling-interface';\r\nimport { IRenderer } from 'skype-calling-interface';\r\nimport { IRenderTarget } from 'skype-calling-interface';\r\nimport { StartStreamOptions } from 'skype-calling-interface';\r\nimport { StreamType } from 'skype-calling-interface';\r\n\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\nimport SlimCoreElectronBase from './SlimCoreElectronBase';\r\nimport SlimCoreElectronRemoteVideoRenderer from './SlimCoreElectronRemoteVideoRenderer';\r\n\r\n// From electron/typings/slimcore-enums.d.ts:\r\nimport Enums = SlimCore.Enums;\r\n\r\nlet NEXT_RANK = 0;\r\n\r\nexport default class SlimCoreElectronRemoteStream extends SlimCoreElectronBase<{}> implements ICallParticipantStream {\r\n    public rank: number;\r\n    public endpointId: string;\r\n    public participantId: string;\r\n\r\n    public renderer: SlimCoreElectronRemoteVideoRenderer = null;\r\n    private _remoteVideoId = 0;\r\n    private _videoStatus: Enums.VideoStatus = null;\r\n    private _videoBinding: SlimCore.VideoBindingRenderer;\r\n    private _internalVideoStartPromise: Promise<void>;\r\n    private _currentStopPromise: Promise<void>;\r\n    private _currentCleanUpPromise: Promise<void>;\r\n\r\n    private _mediaType: Enums.VideoType;\r\n    private _stateCancelEvent = new SlimCoreCommon.VideoStateCancelEvent();\r\n\r\n    public constructor(\r\n        public id: number,\r\n        public type: StreamType,\r\n        private _callHandler: SlimCoreCommon.CallHandler,\r\n        logger: CallingLogger,\r\n        private _slimcoreInstance: SlimCoreCommon.Engine,\r\n        private _settings: SlimCoreCommon.Settings,\r\n    ) {\r\n        super(logger.createChild(() => `RemoteStream[${this._remoteVideoId}:${this.rank}:${this._mediaType}]`));\r\n        this._logger.log('constructor');\r\n\r\n        this._remoteVideoId = id;\r\n        this.rank = NEXT_RANK++;\r\n\r\n        this._mediaType = this._getIntProperty(this._callHandler, this._remoteVideoId, Enums.Property.VideoType);\r\n\r\n        // Subscribe to object changes\r\n        this.registerCallback(SlimCoreCommon.onObjectPropertyChanged(this._slimcoreInstance, Enums.Property.VideoStatus, this.id, eventData => this._onVideoObjectStateChanged(eventData)));\r\n\r\n        // get current status in case we missed any property update\r\n        let videoStatus = this._getIntProperty(this._callHandler, this._remoteVideoId, Enums.Property.VideoStatus);\r\n        this._onVideoObjectStateChanged({\r\n            objectType: Enums.ObjectType.Video,\r\n            objectId: this.id,\r\n            propKey: Enums.Property.VideoStatus,\r\n            value: videoStatus,\r\n        });\r\n\r\n        this.endpointId = this._getStrProperty(this._callHandler, this._remoteVideoId, Enums.Property.VideoEndpointId);\r\n        this.participantId = this._getStrProperty(this._callHandler, this._remoteVideoId, Enums.Property.VideoParticipantLegId);\r\n    }\r\n\r\n    public get isAvailable(): boolean {\r\n        return SlimCoreCommon.isVideoAvailable(this._videoStatus);\r\n    }\r\n\r\n    public get isStreaming(): boolean {\r\n        return this._videoStatus === Enums.VideoStatus.Running;\r\n    }\r\n\r\n    public isActive(): boolean {\r\n        return this.isAvailable && this.isStreaming;\r\n    }\r\n\r\n    private _onVideoObjectStateChanged(eventData: SlimCoreCommon.ObjectChangedEvent) {\r\n        this._logger.info(`VideoStateChanged: ${this._videoStatus} -> ${eventData.value}`);\r\n\r\n        if (this._videoStatus !== eventData.value) {\r\n            this._videoStatus = eventData.value;\r\n\r\n            if (this._videoStatus === Enums.VideoStatus.Stopping) {\r\n                SlimCoreCommon.forgetAndLog(this.cleanUpAsync(), this._logger, 'VideoStateChanged: Clean-up failed');\r\n            }\r\n\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _startInternalVideo(): Promise<void> {\r\n        this._logger.info('InternalStart');\r\n        if (this._internalVideoStartPromise) {\r\n            this._logger.info('InternalStart: Internal start already called. Returning previous promise');\r\n            return this._internalVideoStartPromise;\r\n        }\r\n\r\n        this._internalVideoStartPromise = Promise.resolve<void>(undefined)\r\n            .then(() => {\r\n                this._logger.info(`InternalStart: Waiting for video ${this._remoteVideoId} to become AVAILABLE`);\r\n                return SlimCoreCommon.waitForVideoObjectToBeAvailable(\r\n                    this._slimcoreInstance,\r\n                    this._callHandler,\r\n                    this._remoteVideoId,\r\n                    this._logger,\r\n                    0,\r\n                    this._stateCancelEvent);\r\n            })\r\n            .then(() => {\r\n                if (!this._videoBinding) {\r\n                    this._logger.info(`InternalStart: Video ${this._remoteVideoId} is now AVAILABLE. Creating Video Binding`);\r\n\r\n                    // use new method if available\r\n                    if (this._slimcoreInstance.createVideoBindingRenderer) {\r\n                        this._logger.info(`InternalStart: createVideoBindingRenderer`);\r\n                        this._videoBinding = this._slimcoreInstance.createVideoBindingRenderer({\r\n                            enableDXVA: this._settings.enableDXVA,\r\n                        });\r\n                    }\r\n                    // use old method for backwards compatibility\r\n                    else {\r\n                        this._logger.info(`InternalStart: old createVideoBindingRenderer`);\r\n                        this._videoBinding = SlimCore.createVideoBindingRenderer();\r\n                    }\r\n                    this._logger.info('InternalStart: videoStart');\r\n                    this._slimcoreInstance.videoStart(this._remoteVideoId);\r\n                    this._logger.info('InternalStart: videoCreateBinding');\r\n                    return this._slimcoreInstance.videoCreateBinding(this._remoteVideoId, this._videoBinding)\r\n                        .then(() => {\r\n                            this._logger.info('InternalStart: binding created');\r\n                            this._slimcoreInstance.setIncomingTransmissionsDesired(this._remoteVideoId, true);\r\n                        }).catch(e => {\r\n                            this._videoBinding = null;\r\n                            this._logger.info('InternalStart: Error while creating video binding', e, 'null binding');\r\n                        });\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this._logger.error(`InternalStart: Failed to start remote video; Error ${error}`);\r\n                throw error;\r\n            });\r\n\r\n        return this._internalVideoStartPromise;\r\n    }\r\n\r\n    public start(target: IRenderTarget, options?: StartStreamOptions): Promise<IRenderer> {\r\n        this._logger.info('Start: requested');\r\n\r\n        return Promise.resolve()\r\n            .then(() => {\r\n                // if there's a pending stop, wait for that to finish first\r\n                if (this._currentStopPromise) {\r\n                    this._logger.info(`Start: pending stop exists. Waiting for previous stop promise`);\r\n                    return this._currentStopPromise;\r\n                }\r\n            })\r\n            .then(() => this._startInternalVideo())\r\n            .then(() => this.renderer = new SlimCoreElectronRemoteVideoRenderer(\r\n                    target,\r\n                    this._mediaType,\r\n                    this._logger,\r\n                    this._settings,\r\n                    this._videoBinding,\r\n                    options),\r\n                )\r\n            .catch(error => {\r\n                  this._logger.error(`Start: Failed to start remote video; Error ${error}`);\r\n                  throw error;\r\n                });\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        this._logger.info('Stop: Stream ', this._remoteVideoId , 'stop video requested');\r\n\r\n        let always = () => {\r\n            this._logger.info('Stop: cleaning up');\r\n            this._internalVideoStartPromise = null;\r\n            this._currentStopPromise = null;\r\n        };\r\n\r\n        if (this._currentStopPromise) {\r\n            this._logger.info('Stop: pending stop exists. Returning previous promise');\r\n            return this._currentStopPromise;\r\n        }\r\n\r\n        this._currentStopPromise = Promise.resolve()\r\n            .then(() => {\r\n                if (this._internalVideoStartPromise) {\r\n                    this._logger.info('Stop: awaiting internal video start');\r\n                    return this._internalVideoStartPromise;\r\n                }\r\n            })\r\n            .then(() => {\r\n                if (!this._internalVideoStartPromise) {\r\n                    this._logger.info('Stop: Video was not started, not much to clean up');\r\n                    return;\r\n                }\r\n            })\r\n            .then(always, error => {\r\n                this._logger.error('Failed to stop or release binding.', error);\r\n                always();\r\n                throw error;\r\n            });\r\n\r\n        return this._currentStopPromise;\r\n    }\r\n\r\n    public cleanUpAsync(): Promise<void> {\r\n        this._logger.info(`CleanUp: requested`);\r\n        if (this._currentCleanUpPromise) {\r\n            this._logger.info('CleanUp: pending clean-up already exists');\r\n            return this._currentCleanUpPromise;\r\n        }\r\n\r\n        let always = () => {\r\n            this._logger.info('CleanUp: finished');\r\n            this._videoBinding = null;\r\n            this._currentCleanUpPromise = null;\r\n        };\r\n\r\n        this._currentCleanUpPromise = Promise.resolve()\r\n            .then(() => {\r\n                this._logger.info(`CleanUp: _internalVideoStartPromise`, !!this._internalVideoStartPromise);\r\n                if (this._internalVideoStartPromise) {\r\n                    return SlimCoreCommon.forgetAndLog(this.stop(), this._logger, 'CleanUp: Stop failed, but continuing binding cleanup');\r\n                }\r\n            })\r\n            .then(() => {\r\n                this._logger.info('CleanUp: _videoBinding', !!this._videoBinding);\r\n                if (this._videoBinding) {\r\n                    this._logger.info('CleanUp: Waiting for VideoBinding to be released');\r\n                    return this._slimcoreInstance.videoReleaseBinding(this._remoteVideoId, this._videoBinding);\r\n                }\r\n            })\r\n            .then(always, error => {\r\n                this._logger.error('CleanUp: Failed to stop or release binding.',  error);\r\n                always();\r\n                throw error;\r\n            });\r\n\r\n        this._stateCancelEvent.fire();\r\n        return this._currentCleanUpPromise;\r\n    }\r\n\r\n    public dispose() {\r\n        this._logger.info('Dispose');\r\n        const always = () => super.dispose();\r\n        Promise.resolve(() => (this._internalVideoStartPromise || this._videoBinding) ? this.stop() : true)\r\n        .then(() => SlimCoreCommon.forgetAndLog(this.cleanUpAsync(), this._logger, 'Failed to clean-up remote video stream'))\r\n        .then(always).catch(always);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronRemoteStream.ts","/// <reference path=\"../typings/slimcore-enums.d.ts\" />\r\n\r\nimport { CallingLogger } from 'skype-calling-interface';\r\nimport { IRenderTarget } from 'skype-calling-interface';\r\nimport { ScalingMode } from 'skype-calling-interface';\r\nimport { StartStreamOptions } from 'skype-calling-interface';\r\n\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\nimport SlimCoreElectronVideoRenderer from './SlimCoreElectronVideoRenderer';\r\n\r\n// From electron/typings/slimcore-enums.d.ts:\r\nimport Enums = SlimCore.Enums;\r\n\r\nexport default class SlimCoreElectronRemoteVideoRenderer extends SlimCoreElectronVideoRenderer {\r\n\r\n    public get videoRenderer() {\r\n        return this._renderer;\r\n    }\r\n\r\n    public get renderTarget() {\r\n        return this._renderTarget;\r\n    }\r\n\r\n    public constructor(\r\n        private _renderTarget: IRenderTarget,\r\n        private _videoType: Enums.VideoType,\r\n        logger: CallingLogger,\r\n        settings: SlimCoreCommon.Settings,\r\n        videoBinding: SlimCore.VideoBindingRenderer,\r\n        private _options: StartStreamOptions,\r\n    ) {\r\n        super(logger.createChild(() => 'RemoteVideoRenderer'), settings);\r\n\r\n        const isScreenShare = (_videoType === Enums.VideoType.ScreenShare);\r\n        this._videoBinding = videoBinding;\r\n\r\n        _options = _options || {\r\n            scalingMode: isScreenShare ? ScalingMode.Fit : ScalingMode.Crop,\r\n            transparent: isScreenShare,\r\n        };\r\n\r\n        this._createVideoRenderer(this._renderTarget, _options, false);\r\n    }\r\n\r\n    public clone(renderTarget: IRenderTarget): SlimCoreElectronRemoteVideoRenderer {\r\n        return new SlimCoreElectronRemoteVideoRenderer(\r\n            renderTarget,\r\n            this._videoType,\r\n            this._logger,\r\n            this._settings,\r\n            this._videoBinding,\r\n            this._options,\r\n        );\r\n    }\r\n\r\n    public dispose() {\r\n        super.dispose();\r\n        this._renderTarget = null;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronRemoteVideoRenderer.ts","import { CallingLogger } from 'skype-calling-interface';\r\nimport { IScreenSharingManager } from 'skype-calling-interface';\r\nimport { IScreenSharingManagerEvents } from 'skype-calling-interface';\r\nimport { ISharingSource } from 'skype-calling-interface';\r\nimport { Rectangle } from 'skype-calling-interface';\r\nimport { SharingSourceType } from 'skype-calling-interface';\r\nimport { ISlimCoreElectronApplicationHooks } from '../typings/skype-calling-electron-embedded';\r\n\r\nimport * as async from '../../common/ts/async';\r\nimport SlimCoreElectronBase from './SlimCoreElectronBase';\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\n\r\nexport default class SlimCoreElectronScreenSharingManager extends SlimCoreElectronBase<IScreenSharingManagerEvents> implements IScreenSharingManager {\r\n    private _screenScraper: SlimCore.ScreenScraper = null;\r\n\r\n    public constructor(\r\n        logger: CallingLogger,\r\n        private _appHooks: ISlimCoreElectronApplicationHooks,\r\n    ) {\r\n        super(logger.createChild('ScreenSharingManager'));\r\n        this._logger.log('constructor');\r\n\r\n        const screenScraperImpl = SlimCoreCommon.isSlimCoreRTModuleAvailable() ? (SlimCoreRT as any).SlimCore.ScreenScraper : SlimCore.ScreenScraper;\r\n        this._screenScraper = screenScraperImpl ? new screenScraperImpl() : null;\r\n\r\n        this.registerCallback(this._appHooks.onDisplaysChanged(() => this._raiseScreensChanged()));\r\n    }\r\n\r\n    public enumerateScreensAsync(): Promise<ISharingSource[]> {\r\n        return async.asap(() => this._enumerateScreens());\r\n    }\r\n\r\n    public enumerateWindowsAsync(): Promise<ISharingSource[]> {\r\n        return async.asap(() => this._enumerateWindows());\r\n    }\r\n\r\n    private _enumerateScreens(): ISharingSource[] {\r\n        try {\r\n            let monitors = this._screenScraper && this._screenScraper.getMonitorList() || [];\r\n            this._logger.debug(`ScreenScraper.getMonitorList() result: ${JSON.stringify(monitors)}`);\r\n\r\n            let monitorSources = [];\r\n            for (let monitorInfo of monitors) {\r\n                monitorSources.push(new SlimCoreElectronScreenSharingSource(monitorInfo, this._logger, this._screenScraper));\r\n            }\r\n            return monitorSources;\r\n        }\r\n        catch (error) {\r\n            this._logger.error(`ScreenScraper.getMonitorList() failed: ${error}`);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    private _enumerateWindows(): ISharingSource[] {\r\n        try {\r\n            let windows = this._screenScraper && this._screenScraper.getWindowList() || [];\r\n            this._logger.debug(`ScreenScraper.getWindowList() result: ${JSON.stringify(windows)}`);\r\n\r\n            let windowSources = [];\r\n            for (let windowInfo of windows) {\r\n                windowSources.push(new SlimcoreElectronWindowSharingSource(windowInfo, this._logger, this._screenScraper));\r\n            }\r\n            return windowSources;\r\n        }\r\n        catch (error) {\r\n            this._logger.error(`ScreenScraper.getWindowList() failed: ${error}`);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    private _raiseScreensChanged() {\r\n        this._logger.debug('raising onScreensChanged');\r\n        this.event('screensChanged').raise();\r\n    }\r\n}\r\n\r\nclass SlimCoreElectronScreenSharingSource implements ISharingSource {\r\n    public constructor(private _monitorInfo: SlimCore.ScreenScraper.MonitorInfo, private _logger: CallingLogger, private _screenScraper: SlimCore.ScreenScraper) {\r\n    }\r\n\r\n    public getId(): number {\r\n        return this._monitorInfo.monitorId;\r\n    }\r\n\r\n    public getType(): SharingSourceType {\r\n        return SharingSourceType.Monitor;\r\n    }\r\n\r\n    public getPreviewAsync(width?: number, height?: number, asImage?: boolean): Promise<ImageData> {\r\n        return new Promise<ImageData>(resolve => {\r\n            resolve(this._screenScraper.getMonitorPreview(this.getId(), width, height, asImage, this._monitorInfo.region));\r\n        })\r\n            .then(result => {\r\n                this._logger.debug(`ScreenScraper.getMonitorPreview(${this.getId()}) result: ${result.width}x${result.height}`);\r\n                return result;\r\n            }, error => {\r\n                this._logger.error(`ScreenScraper.getMonitorPreview(${this.getId()}) failed: ${error}`);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    public getDescription(): string {\r\n        return this._monitorInfo.name;\r\n    }\r\n\r\n    public getIcon(width?: number, height?: number): Promise<ImageData> {\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n    public getBounds(): Rectangle {\r\n        return {\r\n            x: this._monitorInfo.region.x,\r\n            y: this._monitorInfo.region.y,\r\n            width: this._monitorInfo.region.width,\r\n            height: this._monitorInfo.region.height,\r\n        };\r\n    }\r\n}\r\n\r\nclass SlimcoreElectronWindowSharingSource implements ISharingSource {\r\n    public constructor(private _windowInfo: SlimCore.ScreenScraper.WindowInfo, private _logger: CallingLogger, private _screenScraper: SlimCore.ScreenScraper) {\r\n    }\r\n\r\n    public getId(): number {\r\n        return this._windowInfo.windowId;\r\n    }\r\n\r\n    public getType(): SharingSourceType {\r\n        return SharingSourceType.Window;\r\n    }\r\n\r\n    public getPreviewAsync(width?: number, height?: number, asImage?: boolean): Promise<ImageData> {\r\n        let windowId = this._windowInfo.windowId;\r\n        return new Promise<ImageData>(resolve => {\r\n            resolve(this._screenScraper.getWindowPreview(windowId, width, height, asImage));\r\n        })\r\n            .then(result => {\r\n                this._logger.debug(`ScreenScraper.getWindowPreview(${windowId}) result: ${result.width}x${result.height}`);\r\n                return result;\r\n            }, error => {\r\n                this._logger.error(`ScreenScraper.getWindowPreview(${windowId}) failed: ${error}`);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    public getDescription(): string {\r\n        return this._windowInfo.title;\r\n    }\r\n\r\n    public getIcon(width?: number, height?: number, asImage?: boolean): Promise<ImageData> {\r\n        let windowId = this._windowInfo.windowId;\r\n        return new Promise<ImageData>(resolve => {\r\n            resolve(this._screenScraper.getWindowIcon(windowId, width, height, asImage));\r\n        })\r\n            .then(result => {\r\n                this._logger.debug(`ScreenScraper.getWindowIcon(${windowId}) result: ${result.width}x${result.height}`);\r\n                return result;\r\n            }, error => {\r\n                this._logger.error(`ScreenScraper.getWindowIcon(${windowId}) failed: ${error}`);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    public getBounds(): Rectangle {\r\n        return undefined;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronScreenSharingManager.ts","/**\r\n * SlimCoreElectronSetup.ts\r\n * Author: Richard Speyer\r\n * Copyright: Microsoft 2017\r\n *\r\n * SlimCore ISetup implementation\r\n */\r\n\r\nimport { ISetup } from 'skype-calling-interface';\r\n\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\n\r\nexport default class SlimCoreElectronSetup implements ISetup {\r\n  public constructor(private _slimCoreInstance: SlimCoreCommon.Engine) { }\r\n\r\n  public setString(key: string, value: string): Promise<void> {\r\n    try {\r\n      this._slimCoreInstance.setupSetStr(key, value);\r\n      return Promise.resolve<void>();\r\n    } catch (e) {\r\n      return Promise.reject(e);\r\n    }\r\n  }\r\n\r\n  public setNumber(key: string, value: number): Promise<void> {\r\n    try {\r\n      this._slimCoreInstance.setupSetInt(key, value);\r\n      return Promise.resolve<void>();\r\n    } catch (e) {\r\n      return Promise.reject(e);\r\n    }\r\n  }\r\n\r\n  public getString(key: string): Promise<string> {\r\n    try {\r\n      const result = this._slimCoreInstance.setupGetStr(key);\r\n      return Promise.resolve(result);\r\n    } catch (e) {\r\n      return Promise.reject(e);\r\n    }\r\n  }\r\n\r\n  public getNumber(key: string): Promise<number> {\r\n    try {\r\n      const result = this._slimCoreInstance.setupGetInt(key);\r\n      return Promise.resolve(result);\r\n    } catch (e) {\r\n      return Promise.reject(e);\r\n    }\r\n  }\r\n\r\n  public delete(key: string): Promise<void> {\r\n    try {\r\n      this._slimCoreInstance.setupDelete(key);\r\n      return Promise.resolve<void>();\r\n    } catch (e) {\r\n      return Promise.reject(e);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronSetup.ts","import { CallSupport } from 'skype-calling-interface';\r\nimport { CallingIntent } from 'skype-calling-interface';\r\nimport { ICallingStack } from 'skype-calling-interface';\r\nimport { ICallingStackError } from 'skype-calling-interface';\r\nimport { ICallRegistry } from 'skype-calling-interface';\r\nimport { IDeviceManager } from 'skype-calling-interface';\r\nimport { IEcsProvider } from 'skype-calling-interface';\r\nimport { IScreenSharingManager } from 'skype-calling-interface';\r\nimport { ISetup } from 'skype-calling-interface';\r\nimport { ISlimCoreElectronStackFactory, ISlimCoreUwpStackFactory } from '../typings/skype-calling-electron-embedded';\r\nimport { SlimCoreElectronStackConfig } from '../typings/skype-calling-electron-embedded';\r\n\r\nimport * as _ from 'lodash';\r\nimport * as async from '../../common/ts/async';\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\nimport SlimCoreElectronCallRegistry from './SlimCoreElectronCallRegistry';\r\nimport SlimCoreElectronDeviceManager from './SlimCoreElectronDeviceManager';\r\nimport SlimCoreElectronEcsProvider from './SlimCoreElectronEcsProvider';\r\nimport SlimCoreElectronScreenSharingManager from './SlimCoreElectronScreenSharingManager';\r\nimport SlimCoreElectronSetup from './SlimCoreElectronSetup';\r\nimport { UwpEngineWrapped } from './SlimCoreUwpEventWrapper';\r\n\r\n// From electron/typings/slimcore-enums.d.ts:\r\nimport Enums = SlimCore.Enums;\r\n\r\nconst REQUIRED_API_VERSION = 7;\r\n\r\nclass SlimCoreElectronStackError extends Error implements ICallingStackError {\r\n    public readonly callSupport: CallSupport;\r\n\r\n    public constructor(message: string, callSupport: CallSupport = CallSupport.BrowserNotSupported) {\r\n        super(message);\r\n        this.callSupport = callSupport;\r\n    }\r\n}\r\n\r\nexport class SlimCoreElectronStack implements ICallingStack {\r\n    private _slimCoreInstance: SlimCoreCommon.Engine;\r\n    private _callRegistry: SlimCoreElectronCallRegistry;\r\n    private _deviceManager: SlimCoreElectronDeviceManager;\r\n    private _screenSharingManager: SlimCoreElectronScreenSharingManager;\r\n    private _setup: SlimCoreElectronSetup;\r\n    private _ecsProvider: SlimCoreElectronEcsProvider;\r\n\r\n    public constructor(config: SlimCoreElectronStackConfig) {\r\n        if (!isModuleAvailable()) {\r\n            throw new SlimCoreElectronStackError('slimcore module is not available', CallSupport.BrowserNotSupported);\r\n        }\r\n\r\n        if (getApiVersion() < REQUIRED_API_VERSION) {\r\n            throw new SlimCoreElectronStackError(`slimcore module API version ${getApiVersion()} incompatible with required ${REQUIRED_API_VERSION}`, CallSupport.IncompatibleVersions);\r\n        }\r\n\r\n        this._slimCoreInstance = SlimCoreCommon.wrap(config.slimCoreInstance);\r\n        this._setup = new SlimCoreElectronSetup(this._slimCoreInstance);\r\n        this._ecsProvider = new SlimCoreElectronEcsProvider(this._slimCoreInstance);\r\n\r\n        const deferredLoginPromise = async.defer<SlimCoreCommon.CallHandler>();\r\n\r\n        let settings = _.assign<SlimCoreCommon.Settings>(config.settings, {\r\n            platform: SlimCoreCommon.PlatformType.Electron,\r\n        });\r\n\r\n        this._deviceManager = new SlimCoreElectronDeviceManager(config.logger, this._slimCoreInstance, settings, deferredLoginPromise.promise, config.appHooks);\r\n        this._callRegistry = new SlimCoreElectronCallRegistry(config.logger, this._slimCoreInstance, this._deviceManager, settings, config.appHooks);\r\n\r\n        this._callRegistry.loginPromise.then(deferredLoginPromise.resolve, deferredLoginPromise.reject);\r\n\r\n        this._screenSharingManager = new SlimCoreElectronScreenSharingManager(config.logger, config.appHooks);\r\n    }\r\n\r\n    public getCallRegistry(): ICallRegistry {\r\n        return this._callRegistry;\r\n    }\r\n\r\n    public getDeviceManager(): IDeviceManager {\r\n        return this._deviceManager;\r\n    }\r\n\r\n    public getScreenSharingManager(): IScreenSharingManager {\r\n        return this._screenSharingManager;\r\n    }\r\n\r\n    public getSetup(): ISetup {\r\n        return this._setup;\r\n    }\r\n\r\n    public getEcsProvider(): IEcsProvider {\r\n        return this._ecsProvider;\r\n    }\r\n\r\n    public fireIntent(callingIntent: CallingIntent, identity?: string) {\r\n      if (!this._slimCoreInstance) {\r\n        return;\r\n      }\r\n\r\n      const slimcoreIntent = SlimCoreElectronStack._callingIntentToSlimcoreIntent(callingIntent);\r\n      if (!slimcoreIntent) {\r\n        return;\r\n      }\r\n\r\n      this._slimCoreInstance.fireIntent(slimcoreIntent, identity);\r\n    }\r\n\r\n    private static _callingIntentToSlimcoreIntent(callingIntent: CallingIntent): Enums.Intent {\r\n      switch (callingIntent) {\r\n        case CallingIntent.Incoming:\r\n          return Enums.Intent.CallPush;\r\n        case CallingIntent.Outgoing:\r\n          return Enums.Intent.CallUser;\r\n        case CallingIntent.WarmPush:\r\n          return Enums.Intent.CallPreheat;\r\n        default:\r\n          return undefined;\r\n      }\r\n    }\r\n}\r\n\r\nexport class SlimCoreUwpStack implements ICallingStack {\r\n    private _slimCoreInstance: SlimCoreCommon.Engine;\r\n    private _callRegistry: SlimCoreElectronCallRegistry;\r\n    private _deviceManager: SlimCoreElectronDeviceManager;\r\n    private _setup: SlimCoreElectronSetup;\r\n    private _screenSharingManager: SlimCoreElectronScreenSharingManager;\r\n\r\n    public constructor(private config: SlimCoreElectronStackConfig) {\r\n        if (!SlimCoreCommon.isSlimCoreRTModuleAvailable()) {\r\n            throw new SlimCoreElectronStackError('slimcore module is not available', CallSupport.BrowserNotSupported);\r\n        }\r\n\r\n        this._slimCoreInstance = SlimCoreCommon.wrap(new UwpEngineWrapped(config.slimCoreInstance).objectAsWrapped);\r\n        this._setup = new SlimCoreElectronSetup(this._slimCoreInstance);\r\n        this._createCallRegistry(config);\r\n        this.config.logger.log('UWP stack config constructor');\r\n        this._screenSharingManager = new SlimCoreElectronScreenSharingManager(config.logger, config.appHooks);\r\n    }\r\n\r\n    private _createCallRegistry(config: SlimCoreElectronStackConfig): void {\r\n        const deferredLoginPromise = async.defer<SlimCoreCommon.CallHandler>();\r\n\r\n        let settings = _.assign<SlimCoreCommon.Settings>(config.settings, {\r\n            platform: SlimCoreCommon.PlatformType.Uwp,\r\n        });\r\n\r\n        this._deviceManager = new SlimCoreElectronDeviceManager(config.logger, this._slimCoreInstance, settings, deferredLoginPromise.promise, config.appHooks);\r\n        this._callRegistry = new SlimCoreElectronCallRegistry(config.logger, this._slimCoreInstance, this._deviceManager, settings, config.appHooks);\r\n\r\n        this._callRegistry.loginPromise.then(deferredLoginPromise.resolve, deferredLoginPromise.reject);\r\n    }\r\n\r\n    public getCallRegistry(): ICallRegistry {\r\n        this.config.logger.log('retrieving call registry');\r\n        return this._callRegistry;\r\n    }\r\n\r\n    public getDeviceManager(): IDeviceManager {\r\n        this.config.logger.log('retrieving device manager');\r\n        return this._deviceManager;\r\n    }\r\n\r\n    public getScreenSharingManager(): IScreenSharingManager {\r\n        // TODO: implement, waiting for support in wrapper\r\n        return this._screenSharingManager;\r\n    }\r\n\r\n    public getSetup(): ISetup {\r\n        return this._setup;\r\n    }\r\n\r\n    public getEcsProvider(): IEcsProvider {\r\n        // TODO: implement, waiting for support in wrapper\r\n        return null;\r\n    }\r\n\r\n    public fireIntent(callingIntent: CallingIntent, identity?: string) {\r\n        // TODO: implement once wrapper supports this\r\n    }\r\n}\r\n\r\nexport const slimCoreElectronStackFactory: ISlimCoreElectronStackFactory = {\r\n    build(config: SlimCoreElectronStackConfig): Promise<ICallingStack> {\r\n        return Promise.resolve()\r\n            .then(() => new SlimCoreElectronStack(config))\r\n            .catch((error: Error) => {\r\n                if (error instanceof SlimCoreElectronStackError) {\r\n                    throw error;\r\n                } else {\r\n                    throw new SlimCoreElectronStackError(`${error}`);\r\n                }\r\n            });\r\n    },\r\n};\r\n\r\nexport const slimCoreUwpStackFactory: ISlimCoreUwpStackFactory = {\r\n    build(config: SlimCoreElectronStackConfig): Promise<ICallingStack> {\r\n        return Promise.resolve()\r\n            .then(() => new SlimCoreUwpStack(config))\r\n            .catch((error: Error) => {\r\n                if (error instanceof SlimCoreElectronStackError) {\r\n                    throw error;\r\n                } else {\r\n                    throw new SlimCoreElectronStackError(`${error}`);\r\n                }\r\n            });\r\n    },\r\n};\r\n\r\nfunction getApiVersion(): number {\r\n    return SlimCore.getApiVersion && SlimCore.getApiVersion();\r\n}\r\n\r\nfunction isModuleAvailable(): boolean {\r\n    return !!(SlimCore && SlimCore.getVersion);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronStack.ts","/**\r\n * events.ts\r\n * Author: Adrian Potra\r\n * Copyright: Microsoft 2016\r\n *\r\n * Event sources and subscriptions.\r\n */\r\n\r\nimport * as _ from 'lodash';\r\nimport {IDisposable} from 'skype-calling-interface';\r\n\r\n// Event subscriptions are disposable objects\r\nexport interface EventSubscription extends IDisposable {}\r\n\r\n// Defines the interface for event sources\r\nexport interface EventSource<E> extends IDisposable {\r\n  subscribe(eventHandler: E): EventSubscription;\r\n}\r\n\r\nexport class EventSourceImpl<E> implements EventSource<E> {\r\n  // Array of event subscriptions\r\n  protected subscriptions: EventSubscriptionImpl<E>[] = [];\r\n\r\n  subscribe(eventHandler: E): EventSubscription {\r\n    return new EventSubscriptionImpl(this.subscriptions, eventHandler);\r\n  }\r\n\r\n  dispose() {\r\n    this.subscriptions = [];\r\n  }\r\n\r\n  // Raise the specified event with the associated event data\r\n  protected raiseEvents(exec: (eventHandler: E) => void) {\r\n    let subscriptions = this.subscriptions.slice();\r\n    subscriptions.forEach(subscription => subscription.eventHandler && exec(subscription.eventHandler));\r\n  }\r\n}\r\n\r\nclass EventSubscriptionImpl<E> implements EventSubscription {\r\n    constructor(\r\n        private subscriptions: EventSubscriptionImpl<E>[],\r\n        public eventHandler: E) {\r\n\r\n        this.subscriptions.push(this);\r\n    }\r\n\r\n    dispose() {\r\n      _.remove(this.subscriptions, subscription => subscription === this);\r\n      this.eventHandler = null;\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ../common/ts/events.ts","/**\r\n * guid.ts\r\n * Author: Adrian Potra\r\n * Copyright: Microsoft 2016\r\n *\r\n * Simple GUID generator.\r\n */\r\n\r\nexport default class Guid {\r\n    public static generate(): string {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0;/* #1237308 (Closed Won't Fix Bug) *//* tslint:disable-line:insecure-random */\r\n            var v = c == 'x' ? r : r & 3 | 8;\r\n            return v.toString(16);\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../common/ts/guid.ts","import { CallingLogger } from 'skype-calling-interface';\r\nimport SlimCoreElectronBase from './SlimCoreElectronBase';\r\n\r\nconst MOUSE_EVENT_SIZE = 7;\r\nconst KEYBOARD_EVENT_SIZE = 3;\r\nconst CTRL_MOUSE_MAXPOS = 65535;\r\nconst POLL_TIME = 3000; // three seconds\r\nconst REACT_TIME = 250; // 250ms\r\nconst CTRL_VK_MENU = 0x12;\r\nconst CTRL_VK_CONTROL = 0x11;\r\nconst CTRL_VK_SHIFT = 0x10;\r\n\r\nexport type CaptureRegion = {\r\n    left: number;\r\n    top: number;\r\n    width: number;\r\n    height: number;\r\n};\r\n\r\ntype VideoSize = {\r\n    width: number;\r\n    height: number;\r\n};\r\n\r\nexport const enum CtrlEventType {\r\n    Keyboard = 0,\r\n    Mouse = 1,\r\n    Clipboard_Text = 2,\r\n    StopSending = 3,\r\n    Reserved = 255,\r\n}\r\n\r\nexport const enum CtrlMouseEventType {\r\n    Move = 0,\r\n    Wheel = 1,\r\n    Button = 2,\r\n}\r\n\r\nexport const enum CtrlMouseButtonType {\r\n    Button1 = 0,\r\n    Button2 = 1,\r\n    Button3 = 2,\r\n    XButton1 = 3,\r\n    XButton2 = 4,\r\n    XButton3 = 5,\r\n}\r\n\r\ninterface CtrlMouseData {\r\n    type: CtrlMouseEventType;\r\n    buttonType?: CtrlMouseButtonType;\r\n    buttonDown?: boolean;\r\n    wheelButtonDown?: boolean;\r\n    xPos?: number;\r\n    yPos?: number;\r\n    wheelRotation?: number;\r\n}\r\n\r\nenum CtrlKbdCodeType {\r\n    ScanCode = 0,\r\n    VirtualKey = 1,\r\n    NonKbdInput = 2,\r\n    Invalid = 3,\r\n}\r\n\r\ninterface CtrlKbdData {\r\n    codeType: CtrlKbdCodeType;\r\n    keyUp: boolean;\r\n    repeat: boolean;\r\n    code: number;\r\n}\r\n\r\n/*\r\nstruct CtrlMouseData {\r\n    // The followng data fields take a byte\r\n    uint8_t type : 2;\r\n    uint8_t buttonType : 3;\r\n    bool fButtonDown : 1;\r\n    bool fWheelButtonDown : 1;\r\n    uint8_t reserved : 1;\r\n    //*************************************\r\n    uint16_t xPos : 16;\r\n    uint16_t yPos : 16;\r\n    int8_t wheelRotation : 8;\r\n};\r\n\r\nstruct CtrlKbdData {\r\n    // The followng data fields take a byte\r\n    uint8_t codeType : 2;\r\n    uint8_t reserved : 2;\r\n    bool fKeyUp : 1;\r\n    bool fRepeat : 1;\r\n    bool fExtended : 1;\r\n    bool fExtended1 : 1;\r\n    //*************************************\r\n    uint8_t code : 8;\r\n};\r\n\r\nstruct CtrlClipboardData {\r\n    uint32_t size;\r\n    uint8_t data;\r\n};\r\n\r\nstruct CtrlInputData {\r\n    uint8_t type; // CtrlEventType\r\n    union {\r\n        CtrlMouseData mouse;\r\n        CtrlKbdData kbd;\r\n        CtrlClipboardData clipboard;\r\n    };\r\n};\r\n*/\r\n\r\nexport const enum CaptureMode {\r\n    Disabled,\r\n    Detection,\r\n    Pointer,\r\n    Control,\r\n}\r\n\r\nexport const enum CaptureEvent {\r\n    MouseClick,\r\n    MouseEntering,\r\n    MouseLeaving,\r\n}\r\n\r\nexport interface SlimCoreElectronControlCapturerEvents {\r\n    controlEvent: (data: Uint8Array) => void; // tslint:disable-line:prefer-method-signature\r\n    captureEvent: (event: CaptureEvent) => void; // tslint:disable-line:prefer-method-signature\r\n}\r\nexport default class SlimCoreElectronControlCapturer extends SlimCoreElectronBase<SlimCoreElectronControlCapturerEvents> {\r\n    private _videoSize: VideoSize;\r\n    private _origElementSize: VideoSize;\r\n    private _captureRegion: CaptureRegion;\r\n    private _mouseMoveCount: number = 0;\r\n    private _isMouseOnRenderer: boolean = false;\r\n    private _captureMode: CaptureMode = CaptureMode.Disabled;\r\n    private _pollTimerID: number;\r\n    private _resizeTimerID: number;\r\n    private _altKeyDown:  boolean = false;\r\n\r\n    public get captureMode(): CaptureMode {\r\n        return this._captureMode;\r\n    }\r\n\r\n    public get captureRegion(): CaptureRegion {\r\n        return this._captureRegion;\r\n    }\r\n\r\n    public constructor(logger: CallingLogger, private _element: HTMLElement, private _captureRegionPreserveAspectRatio: boolean = true) {\r\n        super(logger);\r\n\r\n        this._initialize();\r\n    }\r\n\r\n    public dispose() {\r\n        this._logger.info('Disposing of Control Capturer');\r\n        window.clearTimeout(this._pollTimerID);\r\n        this._element.ownerDocument.defaultView.removeEventListener('resize', this._handleResizeEvents, false);\r\n        super.dispose();\r\n    }\r\n\r\n    public updateVideoSize(width: number, height: number) {\r\n        this._videoSize.width = width;\r\n        this._videoSize.height = height;\r\n        this.updateCaptureRegion();\r\n    }\r\n\r\n    public updateCaptureRegion() {\r\n        // Scale to show the whole video (screen sharing), while preserving aspect ratio\r\n        if (this._captureRegionPreserveAspectRatio) {\r\n            this._captureRegion.width = this._element.clientWidth;\r\n            this._captureRegion.height = this._element.clientWidth * this._videoSize.height / this._videoSize.width;\r\n\r\n            if (this._captureRegion.height > this._element.clientHeight) {\r\n                this._captureRegion.width = this._element.clientHeight * this._videoSize.width / this._videoSize.height;\r\n                this._captureRegion.height = this._element.clientHeight;\r\n                this._captureRegion.left = (this._element.clientWidth - this._captureRegion.width) / 2;\r\n                this._captureRegion.top = 0;\r\n            } else {\r\n                this._captureRegion.left = 0;\r\n                this._captureRegion.top = (this._element.clientHeight - this._captureRegion.height) / 2;\r\n            }\r\n        }\r\n        // Fit and crop the video (webcam, for holographic interaction)\r\n        else  {\r\n            this._captureRegion.width = this._element.clientWidth;\r\n            this._captureRegion.height = this._element.clientHeight;\r\n            this._captureRegion.top = 0;\r\n            this._captureRegion.left = 0;\r\n        }\r\n    }\r\n\r\n    public setCaptureMode(mode: CaptureMode) {\r\n        if (this._captureMode === CaptureMode.Control && mode !== CaptureMode.Control) {\r\n            this._syncKeyStates(true); // When user is swtiching mode out of control while losing focus\r\n        }\r\n\r\n        this._captureMode = mode;\r\n        if (mode !== CaptureMode.Disabled) {\r\n            this._element.addEventListener('mousemove', this._handleMouseMove); // listen to mouse\r\n            this._element.addEventListener('mousedown', this._handleMouseDown);\r\n            this._element.addEventListener('mouseup', this._handleMouseUp);\r\n            this._element.addEventListener('mouseleave', this._handleMouseLeave);\r\n            this._element.addEventListener('mouseenter', this._handleMouseEnter);\r\n            this._element.addEventListener('click', this._handleClick);\r\n\r\n            // touch events\r\n            this._element.addEventListener('touchstart', this._handleTouchAsMouseEvents);\r\n            this._element.addEventListener('touchend', this._handleTouchAsMouseEvents);\r\n            this._element.addEventListener('touchmove', this._handleTouchAsMouseEvents);\r\n\r\n            if (mode === CaptureMode.Control) {\r\n                this._element.addEventListener('wheel', this._handleWheel);\r\n                this._element.addEventListener('keydown', this._handleKeyDown);\r\n                this._element.addEventListener('keyup', this._handleKeyUp);\r\n                this._element.addEventListener('contextmenu', this._handleContextMenu);  // to prevent browser default right click menu\r\n                this._element.addEventListener('blur', this._handleLosingFocus);\r\n            } else {\r\n                this._element.removeEventListener('wheel', this._handleWheel);\r\n                this._element.removeEventListener('keydown', this._handleKeyDown);\r\n                this._element.removeEventListener('keyup', this._handleKeyUp);\r\n                this._element.removeEventListener('contextmenu', this._handleContextMenu);\r\n                this._element.removeEventListener('blur', this._handleLosingFocus);\r\n            }\r\n        } else {\r\n            this._element.removeEventListener('mousemove', this._handleMouseMove);\r\n            this._element.removeEventListener('mousedown', this._handleMouseDown);\r\n            this._element.removeEventListener('mouseup', this._handleMouseUp);\r\n            this._element.removeEventListener('mouseleave', this._handleMouseLeave);\r\n            this._element.removeEventListener('mouseenter', this._handleMouseEnter);\r\n            this._element.removeEventListener('blur', this._handleLosingFocus);\r\n            this._element.removeEventListener('click', this._handleClick);\r\n            this._element.removeEventListener('wheel', this._handleWheel);\r\n            this._element.removeEventListener('keydown', this._handleKeyDown);\r\n            this._element.removeEventListener('keyup', this._handleKeyUp);\r\n            this._element.removeEventListener('contextmenu', this._handleContextMenu);\r\n            this._element.removeEventListener('touchstart', this._handleTouchAsMouseEvents);\r\n            this._element.removeEventListener('touchend', this._handleTouchAsMouseEvents);\r\n            this._element.removeEventListener('touchmove', this._handleTouchAsMouseEvents);\r\n        }\r\n    }\r\n\r\n    private _initialize() {\r\n        this._element.ownerDocument.defaultView.addEventListener('resize', this._handleResizeEvents, false);\r\n        this._captureRegion = {left: 0,  top: 0, width: this._element.clientWidth, height: this._element.clientHeight};\r\n        this._videoSize = {width: 640, height: 360};\r\n        this._origElementSize = {width: 0, height: 0};\r\n        this._checkElementSize();\r\n    }\r\n\r\n    private _handleResizeEvents = () => {\r\n        clearTimeout(this._resizeTimerID);\r\n        this._resizeTimerID = window.setTimeout(() => this.updateCaptureRegion(), REACT_TIME);\r\n    }\r\n\r\n    private _checkElementSize() {\r\n        if (this._origElementSize.width !== this._element.clientWidth || this._origElementSize.height !== this._element.clientHeight) {\r\n            this.updateCaptureRegion();\r\n            this._origElementSize.width = this._element.clientWidth;\r\n            this._origElementSize.height = this._element.clientHeight;\r\n        }\r\n        this._pollTimerID = window.setTimeout(() => this._checkElementSize(), POLL_TIME);\r\n    }\r\n\r\n    private _handleTouchAsMouseEvents = (event: TouchEvent) => {\r\n        let touch: Touch = event.changedTouches[0];\r\n        let mouseEventType: string;\r\n\r\n        switch (event.type) {\r\n          case 'touchstart':\r\n            mouseEventType = 'mousedown';\r\n            break;\r\n          case 'touchend':\r\n            mouseEventType = 'mouseup';\r\n            break;\r\n          case 'touchmove':\r\n            mouseEventType = 'mousemove';\r\n            break;\r\n          default:\r\n            return;\r\n        }\r\n\r\n        let mouseEvent: MouseEvent = new MouseEvent(mouseEventType, {\r\n            bubbles: true,\r\n            cancelable: true,\r\n            view: window,\r\n            detail: 1,\r\n            screenX: touch.screenX,\r\n            screenY: touch.screenY,\r\n            clientX: touch.clientX,\r\n            clientY: touch.clientY,\r\n            ctrlKey: false,\r\n            altKey: false,\r\n            shiftKey: false,\r\n            metaKey: false,\r\n            button: 0 /* left mouse button */,\r\n            relatedTarget: null,\r\n        });\r\n\r\n        touch.target.dispatchEvent(mouseEvent);\r\n\r\n        // Prevent dispatching 'emulated' mouse events (happens automaticaly for touch events with 1 active touch point)\r\n        event.preventDefault();\r\n    }\r\n\r\n    private _handleMouseLeave = (event: MouseEvent) => {\r\n        if (!this._isOnScreenContent(event) && this._isMouseOnRenderer) {\r\n            this._raiseCaptureEvent(CaptureEvent.MouseLeaving);\r\n            this._logger.info('Mouse leaving render region');\r\n        }\r\n        this._isMouseOnRenderer = false;\r\n        this._logger.info('Mouse leaving Teams canvas');\r\n    }\r\n\r\n    private _handleMouseEnter = (event: MouseEvent) => {\r\n        this._logger.info('Mouse entering Teams canvas');\r\n\r\n        if (!this._isOnScreenContent(event)) return;\r\n        this._isMouseOnRenderer = true;\r\n        this._raiseCaptureEvent(CaptureEvent.MouseEntering);\r\n        this._logger.info('Mouse entering render region');\r\n    }\r\n\r\n    private _handleLosingFocus = (event: FocusEvent) => {\r\n        this._altKeyDown = false;\r\n        this._syncKeyStates(true);\r\n    }\r\n\r\n    private _handleClick = (event: MouseEvent) => {\r\n        if (!this._isOnScreenContent(event)) return;\r\n        this._raiseCaptureEvent(CaptureEvent.MouseClick);\r\n        this._logger.info('Mouse clicked');\r\n    }\r\n\r\n    private _handleMouseMove = (event: MouseEvent) => {\r\n        if (!this._isOnScreenContent(event) && this._isMouseOnRenderer) {\r\n            this._raiseCaptureEvent(CaptureEvent.MouseLeaving);\r\n            this._isMouseOnRenderer = false;\r\n            this._logger.info('Mouse leaving render region');\r\n            return;\r\n        } else if (this._isOnScreenContent(event) && !this._isMouseOnRenderer) {\r\n            this._raiseCaptureEvent(CaptureEvent.MouseEntering);\r\n            this._isMouseOnRenderer = true;\r\n            this._logger.info('Mouse entering render region');\r\n        }\r\n\r\n        if (this._captureMode !== CaptureMode.Pointer && this._captureMode !== CaptureMode.Control) return;\r\n\r\n        this._mouseMoveCount++;\r\n        if (!this._isOnScreenContent(event) || this._mouseMoveCount % 2 === 0) return;\r\n\r\n        let data: CtrlMouseData = {\r\n            type: CtrlMouseEventType.Move,\r\n        };\r\n\r\n        this._normalizeMousePosition(event, data);\r\n        this._raiseMouseEvent(data);\r\n    }\r\n\r\n    private _handleMouseDown = (event: MouseEvent) => {\r\n        if (this._captureMode !== CaptureMode.Pointer && this._captureMode !== CaptureMode.Control) return;\r\n        if (!this._isOnScreenContent(event)) return;\r\n\r\n        let data: CtrlMouseData = {\r\n            type: CtrlMouseEventType.Button,\r\n            buttonType: convertButton(event.button),\r\n            buttonDown: true,\r\n        };\r\n\r\n        this._normalizeMousePosition(event, data);\r\n        this._raiseMouseEvent(data);\r\n    }\r\n\r\n    private _handleMouseUp = (event: MouseEvent) => {\r\n        if (this._captureMode !== CaptureMode.Pointer && this._captureMode !== CaptureMode.Control) return;\r\n        if (!this._isOnScreenContent(event)) return;\r\n\r\n        let data: CtrlMouseData = {\r\n            type: CtrlMouseEventType.Button,\r\n            buttonType: convertButton(event.button),\r\n            buttonDown: false,\r\n        };\r\n\r\n        this._normalizeMousePosition(event, data);\r\n\r\n        this._raiseMouseEvent(data);\r\n    }\r\n\r\n    private _handleKeyDown = (event: KeyboardEvent) => {\r\n        if (event.keyCode !== CTRL_VK_MENU) {\r\n            if (this._altKeyDown) { // send out the queued altKey\r\n                this._raiseKeyboardEvent({\r\n                    codeType: CtrlKbdCodeType.VirtualKey,\r\n                    code: CTRL_VK_MENU,\r\n                    repeat: false,\r\n                    keyUp: false,\r\n                });\r\n                this._altKeyDown = false;\r\n            }\r\n\r\n            this._raiseKeyboardEvent({\r\n                    codeType: CtrlKbdCodeType.VirtualKey,\r\n                    code: event.keyCode,\r\n                    repeat: event.repeat,\r\n                    keyUp: false,\r\n                });\r\n        } else {\r\n           this._altKeyDown = true;\r\n        }\r\n\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    }\r\n\r\n    private _handleKeyUp = (event: KeyboardEvent) => {\r\n        if (event.keyCode === CTRL_VK_MENU) {\r\n            if (this._altKeyDown) { // send out the queued altKey\r\n                this._raiseKeyboardEvent({\r\n                    codeType: CtrlKbdCodeType.VirtualKey,\r\n                    code: CTRL_VK_MENU,\r\n                    repeat: false,\r\n                    keyUp: false,\r\n                });\r\n                this._altKeyDown = false;\r\n            }\r\n        }\r\n        this._raiseKeyboardEvent({\r\n            codeType: CtrlKbdCodeType.VirtualKey,\r\n            code: event.keyCode,\r\n            repeat: event.repeat,\r\n            keyUp: true,\r\n        });\r\n\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    }\r\n\r\n    private _handleWheel = (event: WheelEvent) => {\r\n        this._raiseMouseEvent({\r\n            type: CtrlMouseEventType.Wheel,\r\n            wheelRotation: event.deltaY > 0 ? -120 : 120,\r\n        });\r\n    }\r\n\r\n    private _raiseMouseEvent(data: CtrlMouseData) {\r\n        let buffer = new ArrayBuffer(MOUSE_EVENT_SIZE);\r\n        let dataView = new DataView(buffer);\r\n\r\n        let type = (data.type & 0b11) << 0; // tslint:disable-line:no-bitwise\r\n        let buttonType = (data.buttonType & 0b111) << 2; // tslint:disable-line:no-bitwise\r\n        let fButtonDown = (data.buttonDown ? 1 : 0) << 5; // tslint:disable-line:no-bitwise\r\n        let fWheelButtonDown = (data.wheelButtonDown ? 1 : 0) << 6; // tslint:disable-line:no-bitwise\r\n        let reserved = 0;\r\n\r\n        dataView.setUint8(0, CtrlEventType.Mouse);\r\n        dataView.setUint8(1, type | buttonType | fButtonDown | fWheelButtonDown | reserved); // tslint:disable-line:no-bitwise\r\n        dataView.setUint16(2, data.xPos, true);\r\n        dataView.setUint16(4, data.yPos, true);\r\n        dataView.setUint8(6, data.wheelRotation);\r\n\r\n        this._raiseCtrlEvent(buffer);\r\n    }\r\n\r\n    private _raiseKeyboardEvent(data: CtrlKbdData) {\r\n        let buffer = new ArrayBuffer(KEYBOARD_EVENT_SIZE);\r\n        let dataView = new DataView(buffer);\r\n\r\n        let codeType = (data.codeType & 0b11) << 0; // tslint:disable-line:no-bitwise\r\n        let reserved = 0; // tslint:disable-line:no-bitwise\r\n        let fKeyUp = (data.keyUp ? 1 : 0) << 4; // tslint:disable-line:no-bitwise\r\n        let fRepeat = (data.repeat ? 1 : 0) << 5; // tslint:disable-line:no-bitwise\r\n        let fExtended = 0;\r\n        let fExtended1 = 0;\r\n\r\n        dataView.setUint8(0, CtrlEventType.Keyboard);\r\n        dataView.setUint8(1, codeType | reserved | fKeyUp | fRepeat | fExtended | fExtended1); // tslint:disable-line:no-bitwise\r\n        dataView.setUint8(2, data.code);\r\n\r\n        this._raiseCtrlEvent(buffer);\r\n    }\r\n\r\n    private _handleContextMenu = (event: MouseEvent) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    private _raiseCtrlEvent(data: ArrayBuffer) {\r\n        this.event('controlEvent').raise(new Uint8Array(data));\r\n    }\r\n\r\n    private _raiseCaptureEvent(event: CaptureEvent) {\r\n        this.event('captureEvent').raise(event);\r\n    }\r\n\r\n    private _normalizeMousePosition(event: MouseEvent, data: CtrlMouseData) {\r\n        data.xPos = (event.offsetX - this._captureRegion.left) / this._captureRegion.width * CTRL_MOUSE_MAXPOS;\r\n        data.yPos = (event.offsetY - this._captureRegion.top) / this._captureRegion.height * CTRL_MOUSE_MAXPOS;\r\n    }\r\n\r\n    private _isOnScreenContent(event: MouseEvent) {\r\n        let minX = this._captureRegion.left;\r\n        let maxX = this._captureRegion.left + this._captureRegion.width;\r\n        let minY = this._captureRegion.top;\r\n        let maxY = this._captureRegion.top + this._captureRegion.height;\r\n\r\n        return (minX <= event.offsetX && event.offsetX < maxX && minY <= event.offsetY && event.offsetY < maxY);\r\n    }\r\n\r\n    // Modifier key is pressed while the input capture window is losing focus, and it is released afterwards\r\n    private _syncKeyStates(captureWindowLoseFocus: boolean) {\r\n        this._raiseKeyboardEvent({\r\n            codeType: CtrlKbdCodeType.VirtualKey,\r\n            code: CTRL_VK_CONTROL,\r\n            repeat: false,\r\n            keyUp: captureWindowLoseFocus,\r\n        });\r\n\r\n        this._raiseKeyboardEvent({\r\n            codeType: CtrlKbdCodeType.VirtualKey,\r\n            code: CTRL_VK_SHIFT,\r\n            repeat: false,\r\n            keyUp: captureWindowLoseFocus,\r\n        });\r\n        this._logger.info('Synced Key states.');\r\n    }\r\n}\r\n\r\nfunction convertButton(button: number) {\r\n    switch (button) {\r\n        case 0: // left button\r\n            return CtrlMouseButtonType.Button1;\r\n        case 2: // right button\r\n            return CtrlMouseButtonType.Button2;\r\n        case 1: // middle button\r\n            return CtrlMouseButtonType.Button3;\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronControlCapturer.ts","\r\nimport { CallingLogger } from 'skype-calling-interface';\r\nimport { ICallParticipant } from 'skype-calling-interface';\r\nimport { IMediaDataChannel } from 'skype-calling-interface';\r\nimport { IMediaDataChannelEvents } from 'skype-calling-interface';\r\nimport { MediaDataChannelState } from 'skype-calling-interface';\r\n\r\nimport * as async from '../../common/ts/async';\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\nimport SlimCoreElectronBase from './SlimCoreElectronBase';\r\nimport SlimCoreElectronCall from './SlimCoreElectronCall';\r\n\r\n// From electron/typings/slimcore-enums.d.ts:\r\nimport Enums = SlimCore.Enums;\r\n\r\nexport const enum DataChannelProtocolType {\r\n    ScreenSharingControl = 0,\r\n    HolographicInteractionControl, // Hololens (annotation and inking)\r\n    Last,\r\n}\r\n\r\nexport type DataChannelProtocolMessage = {\r\n    type: DataChannelProtocolType;\r\n    message: string;\r\n};\r\n\r\n// Interface implemented by users of the SlimCore.DataChannel\r\n// that share the Protocol source for sending protocol messages\r\nexport interface IMediaDataChannelUser {\r\n    setDataChannel(channel: SlimCoreElectronDataChannel): Promise<void>;\r\n    onDataChannelStatusChanged(dataChannelStatus: number): Promise<void>;\r\n    setProtocolDataSource(source: SlimCore.DataSource): Promise<void>;\r\n    processProtocolMessage(message: string, senderParticipant: ICallParticipant, senderSourceId: number): Promise<void>;\r\n}\r\n\r\nexport default class SlimCoreElectronDataChannel extends SlimCoreElectronBase<IMediaDataChannelEvents> implements IMediaDataChannel {\r\n\r\n    private _dataChannelActive: boolean = false;\r\n    private _protocolDataSource: SlimCore.DataSource = null;\r\n    private _protocolDataSink: SlimCore.DataSink = null;\r\n    public _lastDataChannelState: SlimCore.Enums.DataChannelStatus = SlimCore.Enums.DataChannelStatus.Unknown;\r\n\r\n    public constructor(\r\n        logger: CallingLogger,\r\n        private _call: SlimCoreElectronCall,\r\n        private _slimcoreInstance: SlimCoreCommon.Engine,\r\n        private _dataChannel: SlimCore.DataChannel,\r\n        private _dataChannelUsers: IMediaDataChannelUser[],\r\n        public id: number,\r\n    ) {\r\n\r\n        super(logger.createChild(() => `SlimCoreElectronDataChannel`));\r\n\r\n        // Listen for data channel status changes\r\n        this._hookSlimCorePropertyChangedEvents();\r\n\r\n        // Initialize the array of data channel users - for now there's only screen sharing control\r\n        this._logger.info('Setting DataChannel on all users');\r\n        for (let i = 0; i < DataChannelProtocolType.Last; i++) {\r\n            if (this._dataChannelUsers[i]) {\r\n                try {\r\n                    this._dataChannelUsers[i].setDataChannel(this);\r\n                }\r\n                catch (error) {\r\n                    this._logger.error('Exception calling setDataChannel for i=' + i + ' error=' + error);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _hookSlimCorePropertyChangedEvents() {\r\n        this.registerCallback(SlimCoreCommon.onPropertyChanged(this._slimcoreInstance, Enums.Property.DataChannelStatus, data => this._onDataChannelStatusChanged(data.value)), true);\r\n    }\r\n\r\n    public start(): Promise<void> {\r\n        if (this._dataChannelActive) {\r\n            this._logger.info('start() called when channel already active');\r\n            return Promise.resolve<void>();\r\n        }\r\n        return async.asap(() => this._startDataChannel());\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        if (!this._dataChannelActive) {\r\n            this._logger.info('stop() called when channel not active');\r\n            return Promise.resolve<void>();\r\n        }\r\n        return async.asap(() => this._stopDataChannel());\r\n    }\r\n\r\n    public registerDataSource(dataSource: SlimCore.DataSource): Promise<void>\r\n    {\r\n        return async.asap(() => this._dataChannel.registerDataSource(dataSource));\r\n    }\r\n\r\n    public unregisterDataSource(dataSource: SlimCore.DataSource): Promise<void>\r\n    {\r\n        return async.asap(() => this._dataChannel.unregisterDataSource(dataSource));\r\n    }\r\n\r\n    public registerDataSink(dataSink: SlimCore.DataSink): Promise<void>\r\n    {\r\n        return async.asap(() => this._dataChannel.registerDataSink(dataSink));\r\n    }\r\n\r\n    public unregisterDataSink(dataSink: SlimCore.DataSink): Promise<void>\r\n    {\r\n        return async.asap(() => this._dataChannel.unregisterDataSink(dataSink));\r\n    }\r\n\r\n    private _onDataChannelStatusChanged(dataChannelStatus: number) {\r\n        this._logger.info('Data channel status = ' + dataChannelStatus);\r\n\r\n        if (dataChannelStatus === SlimCore.Enums.DataChannelStatus.Active) {\r\n\r\n            try {\r\n                this._dataChannel.setDataDevices();\r\n            } catch (error) {\r\n                this._logger.error('setDataDevices threw exception:' + error);\r\n            }\r\n\r\n            if (this._dataChannel && !this._dataChannelActive) {\r\n                this._dataChannelActive = true;\r\n\r\n                // Create and attach protocol devices\r\n                this._createAndAttachProtocolDevices();\r\n                this._logger.info('Data channel ready');\r\n            }\r\n        }\r\n        else if (dataChannelStatus === SlimCore.Enums.DataChannelStatus.Available) {\r\n            if (this._dataChannel && this._dataChannelActive) {\r\n                // reset some state\r\n                this._dataChannelActive = false;\r\n\r\n                // detach and delete protocol devices\r\n                this._detachAndDeleteProtocolDevices();\r\n                this._logger.info('Data channel disposed');\r\n            }\r\n        }\r\n\r\n        // Notify data channel users of status change\r\n        for (let i = 0; i < DataChannelProtocolType.Last; i++) {\r\n            try {\r\n                this._dataChannelUsers[i].onDataChannelStatusChanged(dataChannelStatus);\r\n            }\r\n            catch (error) {\r\n                this._logger.error('Exception calling onDataChannelStatusChanged for i=' + i + ' error=' + error);\r\n            }\r\n        }\r\n\r\n        if (this._lastDataChannelState !== dataChannelStatus) {\r\n            this.event('stateChange').raise(SlimCoreElectronDataChannel._mapDataChannelStatus(dataChannelStatus));\r\n            this._lastDataChannelState = dataChannelStatus;\r\n        }\r\n    }\r\n\r\n    private _updateProtocolDataSource(dataSource: SlimCore.DataSource) {\r\n        // Loop through all the data channel users, and update their\r\n        // protocol data source accordingly:\r\n        this._logger.info('Setting Protocol DataSource on all users');\r\n        for (let i = 0; i < DataChannelProtocolType.Last; i++) {\r\n            if (this._dataChannelUsers[i]) {\r\n                try {\r\n                    this._dataChannelUsers[i].setProtocolDataSource(dataSource);\r\n                }\r\n                catch (error) {\r\n                    this._logger.error('Exception calling setProtocolDataSource for i=' + i + ' error=' + error);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _createAndAttachProtocolDevices(): void {\r\n        this._logger.info('_createAndAttachProtocolDevices()');\r\n        if (!SlimCore.createDataSource || !SlimCore.createDataSink) {\r\n            this._logger.warn('createDataSource or createDataSink not implemented');\r\n            return;\r\n        }\r\n\r\n        if (this._dataChannel) {\r\n\r\n            // Create/register source/sink\r\n            if (!this._protocolDataSource) {\r\n                this._protocolDataSource = SlimCore.createDataSource(SlimCore.Enums.DataDeviceId.Protocol);\r\n                try {\r\n                    this._dataChannel.registerDataSource(this._protocolDataSource);\r\n                    this._logger.info('created Protocol data source');\r\n                } catch (error) {\r\n                    this._logger.error('registerDataSource threw exception:' + error);\r\n                }\r\n          }\r\n\r\n            if (!this._protocolDataSink) {\r\n                this._protocolDataSink = SlimCore.createDataSink(SlimCore.Enums.DataDeviceId.Protocol);\r\n                try {\r\n                    this._dataChannel.registerDataSink(this._protocolDataSink);\r\n                    this._logger.info('created Protocol data sink');\r\n                } catch (error) {\r\n                    this._logger.error('registerDataSink threw exception:' + error);\r\n                }\r\n          }\r\n\r\n            // Attach protocol callback\r\n            this._protocolDataSink.on('data', ((args: SlimCore.DataSink.Events.DataArgs) => {\r\n                try {\r\n                    let protocolMessage: DataChannelProtocolMessage = JSON.parse(SlimCoreCommon.bufferToString(args.data));\r\n\r\n                    for (let i = 0; i < DataChannelProtocolType.Last; i++) {\r\n                        if (protocolMessage.type === i) {\r\n                            // This message is meant for this data channel user, so invoke the process\r\n                            // method on it\r\n                            try {\r\n                                let senderParticipant: ICallParticipant = this._call.mapDataChannelSourceIdToParticipant(args.sourceID);\r\n                                this._dataChannelUsers[i].processProtocolMessage(protocolMessage.message, senderParticipant, args.sourceID);\r\n                            }\r\n                            catch (error) {\r\n                                this._logger.error('Error calling processProtocolMessage i=' + i + ' error=' + error);\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    this._logger.error('Error handling protocol message error=' + error);\r\n                }\r\n            }));\r\n\r\n            // Set the procotol data source on all data channel users\r\n            this._updateProtocolDataSource(this._protocolDataSource);\r\n\r\n        } else {\r\n            this._logger.warn('_createAndAttachProtocolDevices() null dataChannel');\r\n        }\r\n    }\r\n\r\n    private _detachAndDeleteProtocolDevices(): void {\r\n        this._logger.info('_detachAndDeleteProtocolDevices()');\r\n\r\n        // Remove data callback\r\n        if (this._protocolDataSink) {\r\n            this._protocolDataSink.removeAllListeners('data');\r\n        }\r\n\r\n        if (this._dataChannel) {\r\n            // Unregister the source/sink\r\n            if (this._protocolDataSource) {\r\n                try {\r\n                    this._dataChannel.unregisterDataSource(this._protocolDataSource);\r\n                } catch (error) {\r\n                    this._logger.error('unregisterDataSource threw exception:' + error);\r\n                }\r\n                this._protocolDataSource = null;\r\n\r\n                // Set the procotol data source on all data channel users\r\n                this._updateProtocolDataSource(null);\r\n                this._logger.info('deleted Protocol data source');\r\n           }\r\n\r\n            if (this._protocolDataSink) {\r\n                try {\r\n                    this._dataChannel.unregisterDataSink(this._protocolDataSink);\r\n                } catch (error) {\r\n                    this._logger.error('unregisterDataSink threw exception:' + error);\r\n                }\r\n                this._protocolDataSink = null;\r\n                this._logger.info('deleted Protocol data sink');\r\n           }\r\n        } else {\r\n            this._logger.warn('_detachAndDeleteProtocolDevices() null dataChannel');\r\n        }\r\n\r\n    }\r\n\r\n    private _startDataChannel() {\r\n        this._logger.info('_startDataChannel()');\r\n\r\n        if (this._dataChannel) {\r\n            this._lastDataChannelState = SlimCore.Enums.DataChannelStatus.NotStarted;\r\n            this.event('stateChange').raise(SlimCoreElectronDataChannel._mapDataChannelStatus(this._lastDataChannelState));\r\n            try {\r\n                this._dataChannel.start();\r\n            } catch (error) {\r\n                this._logger.error('_dataChannel.start threw exception:' + error);\r\n            }\r\n            this._logger.info('Data channel started');\r\n        }\r\n    }\r\n\r\n    private _stopDataChannel() {\r\n        this._logger.info('_stopDataChannel()');\r\n\r\n        if (this._dataChannel) {\r\n            try {\r\n                this._dataChannel.stop();\r\n            } catch (error) {\r\n                this._logger.error('_dataChannel.stop threw exception:' + error);\r\n            }\r\n            this._logger.info('Data channel stopping');\r\n        }\r\n    }\r\n\r\n    public static _mapDataChannelStatus(dataChannelStatus: number): MediaDataChannelState {\r\n        switch (dataChannelStatus) {\r\n            case SlimCore.Enums.DataChannelStatus.Available:\r\n                return MediaDataChannelState.Available;\r\n            case SlimCore.Enums.DataChannelStatus.Starting:\r\n                return MediaDataChannelState.Starting;\r\n            case SlimCore.Enums.DataChannelStatus.Active:\r\n                return MediaDataChannelState.Active;\r\n            case SlimCore.Enums.DataChannelStatus.Stopping:\r\n                return MediaDataChannelState.Stopping;\r\n            case SlimCore.Enums.DataChannelStatus.NotStarted:\r\n                return MediaDataChannelState.NotStarted;\r\n            case SlimCore.Enums.DataChannelStatus.Unknown:\r\n            default:\r\n                return MediaDataChannelState.Unknown;\r\n        }\r\n    }\r\n\r\n    public dispose() {\r\n        this._logger.info('SlimCoreElectronDataChannel.dispose()');\r\n\r\n        this._detachAndDeleteProtocolDevices();\r\n        this._call = null;\r\n\r\n        if (this._dataChannel) {\r\n            if (this._dataChannel.dispose) {\r\n                this._dataChannel.dispose();\r\n            }\r\n            this._dataChannel = null;\r\n        }\r\n\r\n        super.dispose();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronDataChannel.ts","/// <reference path=\"../typings/slimcore-enums.d.ts\" />\r\n\r\nimport { CallingLogger } from 'skype-calling-interface';\r\nimport { ElectronElement } from 'skype-calling-interface';\r\nimport { FrameType } from 'skype-calling-interface';\r\nimport { IElectronVideoFrame } from '../typings/skype-calling-electron-embedded';\r\nimport { IRenderer } from 'skype-calling-interface';\r\nimport { IRendererEvents } from 'skype-calling-interface';\r\nimport { IRendererError } from 'skype-calling-interface';\r\nimport { IRenderTarget } from 'skype-calling-interface';\r\nimport { IVideoFrame } from 'skype-calling-interface';\r\nimport { RendererErrorType } from 'skype-calling-interface';\r\nimport { RendererStats } from 'skype-calling-interface';\r\nimport { RendererType } from 'skype-calling-interface';\r\nimport { ScalingMode } from 'skype-calling-interface';\r\nimport { Size } from 'skype-calling-interface';\r\nimport { StartStreamOptions } from 'skype-calling-interface';\r\n\r\nimport * as async from '../../common/ts/async';\r\nimport SlimCoreElectronBase from './SlimCoreElectronBase';\r\n\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\n\r\nexport default class SlimCoreElectronVideoRenderer extends SlimCoreElectronBase<IRendererEvents> implements IRenderer {\r\n    public isRendering: boolean = false;\r\n    public streamSize: Size;\r\n\r\n    protected _renderer: SlimCore.VideoRenderer;\r\n    protected _videoBinding: SlimCore.VideoBindingRenderer;\r\n\r\n    private _videoElement: HTMLVideoElement;\r\n    private _paused: boolean = false;\r\n    private _isFrameSinkSet = false;\r\n\r\n    public constructor(logger: CallingLogger, protected _settings: SlimCoreCommon.Settings) {\r\n        super(logger);\r\n    }\r\n\r\n    public dispose() {\r\n        this._disposeVideoRenderer();\r\n        super.dispose();\r\n    }\r\n\r\n    public get rendererType(): RendererType {\r\n        if (this._renderer && this._renderer.getRendererType) {\r\n            return convertRendererType(this._renderer.getRendererType());\r\n        }\r\n\r\n        if (this._videoElement) {\r\n            return RendererType.VideoElement;\r\n        }\r\n\r\n        return RendererType.Unknown;\r\n    }\r\n\r\n    public get frameType(): FrameType {\r\n        if (this._frameSink && this._frameSink.getFrameType) {\r\n            return convertFrameType(this._frameSink.getFrameType());\r\n        }\r\n\r\n        return FrameType.Unknown;\r\n    }\r\n\r\n    public get paused(): boolean {\r\n        return this._paused;\r\n    }\r\n\r\n    public set paused(value: boolean) {\r\n        if (this._settings.platform !== SlimCoreCommon.PlatformType.Electron) {\r\n            throw new Error('Only implemented for Electron renderer');\r\n        }\r\n\r\n        if (value === this._paused) return;\r\n        if (this._frameSink) {\r\n            this._controlFrameSink(!value);\r\n        }\r\n        this._paused = value;\r\n    }\r\n\r\n    public captureFrame(timeoutMs: number): Promise<IVideoFrame> {\r\n        if (!this._videoBinding) {\r\n            return Promise.resolve<IVideoFrame>();\r\n        }\r\n        return this._videoBinding.captureFrame({timeout: timeoutMs})\r\n            .then((slimcoreVideoFrame) => {\r\n                return new VideoFrame(slimcoreVideoFrame.image, slimcoreVideoFrame.mirror);\r\n            });\r\n    }\r\n\r\n    public getStats(): Promise<RendererStats> {\r\n        return async.asap(() => this._getStats());\r\n    }\r\n\r\n    public setScalingMode(scalingMode: ScalingMode): Promise<void> {\r\n        if (this._renderer) {\r\n            return this._renderer.setScalingMode(convertScalingMode(scalingMode));\r\n        }\r\n\r\n        if (this._videoElement) {\r\n            return new Promise<void>(() => {\r\n                this._videoElement.msZoom = (scalingMode === ScalingMode.Crop);\r\n            });\r\n        }\r\n\r\n        return Promise.reject('No video renderer');\r\n    }\r\n\r\n    protected _createVideoRenderer(target: IRenderTarget, options: StartStreamOptions, isLocalPreview: boolean) {\r\n        switch (this._settings.platform) {\r\n            case SlimCoreCommon.PlatformType.Electron:\r\n                return this._createVideoRendererElectron(target, options);\r\n\r\n            case SlimCoreCommon.PlatformType.Uwp:\r\n                return this._createVideoRendererUwp(target, options, isLocalPreview);\r\n\r\n            default:\r\n                throw new Error(`Unsupported platform: ${this._settings.platform}`);\r\n        }\r\n    }\r\n\r\n    private _createVideoRendererElectron(target: IRenderTarget, options: StartStreamOptions) {\r\n        if (isElectronElement(target)) {\r\n            this._renderer = target.renderer;\r\n        } else {\r\n            this._renderer = this._createVideoRendererImpl(target as HTMLElement, options);\r\n        }\r\n\r\n        this._renderer.on('video-size-changed', (args) => this._videoSizeChanged(args.width, args.height));\r\n\r\n        if (this._frameSink) {\r\n            this._frameSink.on('frame-type-changed', this._frameTypeChanged);\r\n            this._frameSink.on('frame-size-changed', this._frameSizeChanged);\r\n            this._controlFrameSink(true);\r\n        }\r\n    }\r\n\r\n    private _createVideoRendererUwp(target: IRenderTarget, options: StartStreamOptions, isLocalPreview: boolean) {\r\n        this._logger.info(`Creating uwp video renderer with uri ${this._videoBindingRT.uri}`);\r\n        this._videoBindingRT.on('video-uri-changed', this._videoUriChangedUwp);\r\n\r\n        let container = (target as HTMLElement);\r\n\r\n        this._videoElement = container.ownerDocument.createElement('video');\r\n        container.appendChild(this._videoElement);\r\n\r\n        this._videoElement.autoplay = true;\r\n        this._videoElement.msHorizontalMirror = isLocalPreview;\r\n        this._videoElement.msZoom = (options.scalingMode === ScalingMode.Crop);\r\n        this._videoElement.style.backgroundColor = options.transparent ? '' : 'black';\r\n        this._videoElement.addEventListener('resize', this._videoSizeChangedUwp);\r\n        this._videoElement.src = this._videoBindingRT.uri || '';\r\n    }\r\n\r\n    protected _disposeVideoRenderer() {\r\n        if (this._frameSink) {\r\n            this._frameSink.removeListener('frame-type-changed', this._frameTypeChanged);\r\n            this._frameSink.removeListener('frame-size-changed', this._frameSizeChanged);\r\n            this._controlFrameSink(false);\r\n        }\r\n\r\n        if (this._renderer) {\r\n            this._renderer.removeAllListeners();\r\n            this._renderer.dispose();\r\n            this._renderer = null;\r\n        }\r\n\r\n        if (this._videoBindingRT) {\r\n            this._videoBindingRT.removeListener('video-uri-changed', this._videoUriChangedUwp);\r\n        }\r\n\r\n        if (this._videoElement) {\r\n            this._videoElement.removeEventListener('resize', this._videoSizeChangedUwp);\r\n            this._videoElement.remove();\r\n            this._videoElement = null;\r\n        }\r\n    }\r\n\r\n    protected get _frameSink() {\r\n        return this._renderer ? this._renderer.getFrameSink() : null;\r\n    }\r\n\r\n    private _videoSizeChanged(width: number, height: number) {\r\n        this._logger.info(`video-size-changed: ${width} x ${height}`);\r\n\r\n        this.streamSize = { width, height };\r\n        this.isRendering = width > 0 && height > 0;\r\n        this.raiseChanged();\r\n    }\r\n\r\n    private _frameTypeChanged = (args: SlimCore.FrameSink.Events.FrameTypeChangedArgs) => {\r\n        this._logger.info(`frame-type-changed: ${args.type}`);\r\n\r\n        this.event('frameTypeChanged').raise(convertFrameType(args.type));\r\n    }\r\n\r\n    private _frameSizeChanged = (args: SlimCore.FrameSink.Events.FrameSizeChangedArgs) => {\r\n        this._logger.info(`frame-size-changed: ${args.width} x ${args.height}`);\r\n    }\r\n\r\n    private _getStats() {\r\n        if (!this._frameSink) {\r\n            throw new Error('Renderer is not initialized');\r\n        }\r\n\r\n        if (this._frameSink.getStats) {\r\n            return this._frameSink.getStats();\r\n        } else {\r\n            throw new Error('Renderer does not support stats');\r\n        }\r\n    }\r\n\r\n    public get frameSinkMetadata(): SlimCore.FrameSink.Metadata {\r\n        if (!this._frameSink || !this._frameSink.getMetadata) return null;\r\n        return this._frameSink.getMetadata();\r\n    }\r\n\r\n    private _createVideoRendererImpl(container: HTMLElement, options: StartStreamOptions): SlimCore.VideoRenderer {\r\n        const args: SlimCore.VideoRenderer.ConstructorArgs = {\r\n            container: container,\r\n            transparent: options.transparent,\r\n            scalingMode: convertScalingMode(options.scalingMode),\r\n            useCropInfo: true,\r\n            useWebGL2: true,\r\n            useLowPowerGPU: true,\r\n            useBufferSharing: !!this._settings.enableBufferSharing,\r\n            logger: this._logger,\r\n        };\r\n\r\n        let method: string;\r\n\r\n        try {\r\n            if (this._settings.useChromiumRenderer) {\r\n                this._logger.info('createVideoRenderer: creating ChromiumVideoRenderer');\r\n                method = 'createChromiumVideoRenderer';\r\n                return VideoRenderer.createChromiumVideoRenderer(SlimCore.createPepperFrameSink(), args);\r\n            }\r\n            else if (this._settings.usePepperRenderer) {\r\n                this._logger.info('createVideoRenderer: creating PepperVideoRenderer');\r\n                method = 'createPepperVideoRenderer';\r\n                return VideoRenderer.createPepperVideoRenderer(SlimCore.createPepperFrameSink(), args);\r\n            }\r\n            else {\r\n                this._logger.info('createVideoRenderer: creating CanvasVideoRenderer');\r\n                method = 'createCanvasVideoRenderer';\r\n                return VideoRenderer.createCanvasVideoRenderer(SlimCore.createCanvasFrameSink(), args);\r\n            }\r\n        }\r\n        catch (error) {\r\n            this._logger.error(`${method} failed: ${error}`);\r\n            throw new SlimCoreElectronRendererError(error, convertRendererError(error));\r\n        }\r\n    }\r\n\r\n    private _videoUriChangedUwp = (args: SlimCoreRT.VideoBindingRenderer.Events.VideoUriChangedArgs) => {\r\n        if (this._videoElement) {\r\n            this._videoElement.src = args.uri || '';\r\n        }\r\n    }\r\n\r\n    private _videoSizeChangedUwp = () => {\r\n        this._videoSizeChanged(this._videoElement.videoWidth, this._videoElement.videoHeight);\r\n    }\r\n\r\n    private get _videoBindingRT(): SlimCoreRT.VideoBindingRenderer {\r\n        return this._videoBinding as SlimCoreRT.VideoBindingRenderer;\r\n    }\r\n\r\n    private _controlFrameSink(shouldBeSet: boolean): void {\r\n        // nothe this implementation does not check iff frame sink has changed or if binding has changed!\r\n        if (this._videoBinding && this._isFrameSinkSet !== shouldBeSet) {\r\n            this._isFrameSinkSet = shouldBeSet;\r\n            if (shouldBeSet) {\r\n                this._videoBinding.addFrameSink(this._frameSink);\r\n            }\r\n            else {\r\n                this._videoBinding.removeFrameSink(this._frameSink);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass VideoFrame implements IElectronVideoFrame {\r\n    public constructor(private _imageData: ImageData, private _mirrored: boolean) {\r\n    }\r\n\r\n    public getImageData(): ImageData {\r\n        return this._imageData;\r\n    }\r\n\r\n    public getSize(): Size {\r\n        return { width: this._imageData.width, height: this._imageData.height };\r\n    }\r\n\r\n    public isMirrored(): boolean {\r\n       return this._mirrored;\r\n    }\r\n}\r\n\r\nclass SlimCoreElectronRendererError implements IRendererError {\r\n    public constructor(public reason: any, public errorType: RendererErrorType = RendererErrorType.Unknown) {\r\n    }\r\n\r\n    public toString() {\r\n        return `Reason=${this.reason}, errorType=${this.errorType}`;\r\n    }\r\n}\r\n\r\nfunction isElectronElement(target: IRenderTarget): target is ElectronElement {\r\n    return (target as ElectronElement).renderer !== undefined;\r\n}\r\n\r\nfunction convertRendererType(type: SlimCore.VideoRenderer.RendererType): RendererType {\r\n    switch (type) {\r\n        case SlimCore.VideoRenderer.RendererType.WebGLv1:\r\n            return RendererType.WebGLv1;\r\n        case SlimCore.VideoRenderer.RendererType.WebGLv2:\r\n            return RendererType.WebGLv2;\r\n        case SlimCore.VideoRenderer.RendererType.Pepper:\r\n            return RendererType.Pepper;\r\n        case SlimCore.VideoRenderer.RendererType.Chromium:\r\n            return RendererType.VideoElement;\r\n        default:\r\n            return RendererType.Unknown;\r\n    }\r\n}\r\n\r\nfunction convertFrameType(type: SlimCore.FrameSink.FrameType): FrameType {\r\n    switch (type) {\r\n        case SlimCore.FrameSink.FrameType.None:\r\n            return FrameType.None;\r\n        case SlimCore.FrameSink.FrameType.Software:\r\n            return FrameType.Software;\r\n        case SlimCore.FrameSink.FrameType.Hardware:\r\n            return FrameType.Hardware;\r\n        default:\r\n            return FrameType.Unknown;\r\n    }\r\n}\r\n\r\nfunction convertRendererError(error: Error): RendererErrorType {\r\n    let videoRendererError = error as SlimCore.VideoRendererError;\r\n\r\n    if (videoRendererError.reason === SlimCore.VideoRenderer.ErrorReason.ContextFailed) {\r\n        return RendererErrorType.RendererFailedGpuContext;\r\n    } else {\r\n        return RendererErrorType.RendererFailed;\r\n    }\r\n}\r\n\r\nfunction convertScalingMode(scalingMode: ScalingMode): SlimCore.VideoRenderer.ScalingMode {\r\n    switch (scalingMode) {\r\n        case ScalingMode.Stretch:\r\n            return SlimCore.VideoRenderer.ScalingMode.Stretch;\r\n        case ScalingMode.Crop:\r\n            return SlimCore.VideoRenderer.ScalingMode.Crop;\r\n        case ScalingMode.Fit:\r\n            return SlimCore.VideoRenderer.ScalingMode.Fit;\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronVideoRenderer.ts","// Enum MetatagType is used for unpacking the event payload from the WinRTWrapper\r\n// As this is specific only to RT, moving it to UWPEventWrapper file.\r\n// We should look into what is the equivalent step on electron side.\r\n// If  we decide to retain this design, we should then keep it common for electron as well\r\n// and move it to slimcore-enums-d.ts\r\n\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\n\r\nenum MetatagType {\r\n    Integer = 0,\r\n    String = 1,\r\n    Binary = 2,\r\n}\r\n\r\nexport class UwpNativeWrapper<T> {\r\n    public constructor(objectToWrap: T) {\r\n        let methodNames = objectToWrap['wrappableUwpPublicMethodNames'];\r\n        if (methodNames) {\r\n            Object.keys(methodNames).forEach((key) => {\r\n                let value = methodNames[key];\r\n                if (objectToWrap[value] && !this[value]) {\r\n                    this[value] = function wrapper() {\r\n                        return objectToWrap[value].apply(objectToWrap, arguments);\r\n            }; }});\r\n        }\r\n    }\r\n\r\n    public get objectAsWrapped() {\r\n        return this as any as T;\r\n    }\r\n}\r\n\r\nexport class UwpEventWrapper<T, U> extends UwpNativeWrapper<T> implements SlimCore.EventEmitter<U> {\r\n    private eventListenerArrays: any;\r\n\r\n    public constructor(objectToWrap: T) {\r\n        super(objectToWrap);\r\n        this.eventListenerArrays = {};\r\n\r\n        if (objectToWrap['oncommonwrapperevent'] !== undefined) {\r\n            objectToWrap['oncommonwrapperevent'] = (eventPayload: SlimCoreRT.CommonWrapperEventPayload) => {\r\n                let args = this.argsFromCommonWrapperEventPayload(eventPayload);\r\n                let eventListeners: any[] = this.eventListenerArrays[eventPayload.target];\r\n                if (eventListeners) {\r\n                    eventListeners.forEach((listener: SlimCore.EventHandler<any>) => {\r\n                        listener(args);\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n    private argsFromCommonWrapperEventPayload(eventPayload: SlimCoreRT.CommonWrapperEventPayload): any {\r\n        if (eventPayload.target === 'object-property-changed') {\r\n            let args = {} as SlimCore.Engine.Events.ObjectPropertyChangedArgs;\r\n            let sourceArgs = eventPayload.detail[0] as SlimCore.Engine.Events.ObjectPropertyChangedArgs;\r\n            args.objectType = sourceArgs.objectType;\r\n            args.objectId = sourceArgs.objectId;\r\n            args.propKey = sourceArgs.propKey;\r\n            switch (sourceArgs.value.type) {\r\n                case MetatagType.Integer:\r\n                    args.value = sourceArgs.value.intVal;\r\n                    break;\r\n                case MetatagType.String:\r\n                    args.value = sourceArgs.value.strVal;\r\n                    break;\r\n                case MetatagType.Binary:\r\n                    args.value = sourceArgs.value.binVal;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            return args;\r\n        }\r\n        return eventPayload.detail[0];\r\n    }\r\n\r\n    public addListener <P extends keyof U>(event: P, listener: SlimCore.EventHandler<U[P]>): this {\r\n        let eventListeners: any[] = this.eventListenerArrays[event];\r\n        if (!eventListeners) eventListeners = this.eventListenerArrays[event] = [];\r\n        if (eventListeners.indexOf(listener) === -1) eventListeners.push(listener);\r\n        return;\r\n    }\r\n\r\n    public on <P extends keyof U>(event: P, listener: SlimCore.EventHandler<U[P]>): this {\r\n        return this.addListener(event, listener);\r\n    }\r\n\r\n    public once <P extends keyof U>(event: P, listener: SlimCore.EventHandler<U[P]>): this {\r\n        return this.addListener(event, listener);\r\n    }\r\n\r\n    public removeListener <P extends keyof U>(event: P, listener: SlimCore.EventHandler<U[P]>): this {\r\n        let eventListeners: any[] = this.eventListenerArrays[event];\r\n        if (eventListeners) {\r\n            let index = eventListeners.indexOf(listener);\r\n            if (index > -1) eventListeners.splice(index, 1);\r\n        }\r\n        return;\r\n    }\r\n\r\n    public removeAllListeners <P extends keyof U>(event?: P): this {\r\n        if (event) {\r\n            let eventListeners: any[] = this.eventListenerArrays[event];\r\n            if (eventListeners) eventListeners = this.eventListenerArrays[event] = [];\r\n            return;\r\n        }\r\n        Object.keys(this.eventListenerArrays).forEach((key) => {\r\n            this.eventListenerArrays[key] = [];\r\n        });\r\n        return;\r\n    }\r\n\r\n    public getMaxListeners(): number {\r\n        // TODO: fix this\r\n        return 0;\r\n    }\r\n\r\n    public setMaxListeners(n: number): void {\r\n        // TODO: fix this\r\n    }\r\n\r\n    public listeners <P extends keyof U>(event: P): Function[] {\r\n        return this.eventListenerArrays[event];\r\n    }\r\n\r\n    public emit <P extends keyof U>(event: P, args: U[P]): boolean {\r\n        let eventListeners: any[] = this.eventListenerArrays[event];\r\n        if (eventListeners) {\r\n            eventListeners.forEach((listener: SlimCore.EventHandler<any>) => {\r\n                listener(args as any);\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class UwpEngineWrapped extends UwpEventWrapper<SlimCore.Engine, SlimCore.Engine.Events> {\r\n    public constructor(private objectToWrap: SlimCore.Engine) {\r\n        super(objectToWrap);\r\n    }\r\n\r\n    // TODO: remove once no longer needed\r\n    public get config(): SlimCoreRT.Config {\r\n        return (this.objectToWrap as any).config;\r\n    }\r\n\r\n    // TODO: remove once no longer needed\r\n    public set config(config: SlimCoreRT.Config) {\r\n        (this.objectToWrap as any).config = config;\r\n    }\r\n\r\n    // TODO: remove once this API method can be wrapped like others\r\n    private _skypeToken: string;\r\n    public login(userId: string, skypeToken: string, displayName?: string): void {\r\n        this._skypeToken = skypeToken;\r\n        this.objectToWrap.login(userId, skypeToken, displayName);\r\n    }\r\n\r\n    // TODO: remove, only here for testing\r\n    public loginAgain(): void {\r\n        this.objectAsWrapped.updateSkypeToken(this._skypeToken);\r\n    }\r\n\r\n    public createVideoBindingRenderer(args: SlimCore.VideoBindingRendererArgs): SlimCoreRT.VideoBindingRenderer {\r\n        let slimcoreVideoBinding = (this.objectToWrap as any).createVideoBindingRenderer();\r\n        let slimcoreVideoBindingWrapped = new UwpVideoBindingWrapped(slimcoreVideoBinding);\r\n        return SlimCoreCommon.wrap(slimcoreVideoBindingWrapped.objectAsWrapped);\r\n    }\r\n\r\n    public videoCreateBinding(videoObjectId: SlimCore.ObjectId, videoBinding: SlimCoreRT.VideoBindingRenderer): Promise<void> {\r\n        let bindingResolver: () => void = null;\r\n\r\n        let bindingCreatePromise = new Promise<void>((resolver) => {\r\n            bindingResolver = resolver;\r\n        });\r\n\r\n        if (((videoBinding as any as UwpVideoBindingWrapped).objectToWrap)['onvideobindingcreatedevent'] !== undefined) {\r\n            ((videoBinding as any as UwpVideoBindingWrapped).objectToWrap)['onvideobindingcreatedevent'] = () => {\r\n                bindingResolver();\r\n            };\r\n        }\r\n\r\n        (this.objectToWrap as any).videoCreateBinding(videoObjectId, (videoBinding as any as UwpVideoBindingWrapped).objectToWrap);\r\n\r\n        return bindingCreatePromise;\r\n    }\r\n\r\n    public videoReleaseBinding(videoObjectId: SlimCore.ObjectId, videoBinding: SlimCore.VideoBindingRenderer): Promise<void> {\r\n\r\n        let bindingResolver: () => void = null;\r\n        let bindingReleasePromise = new Promise<void>((resolver) => {\r\n            bindingResolver = resolver;\r\n        });\r\n\r\n        if (((videoBinding as any as UwpVideoBindingWrapped).objectToWrap)['onvideobindingreleasedevent'] !== undefined) {\r\n            ((videoBinding as any as UwpVideoBindingWrapped).objectToWrap)['onvideobindingreleasedevent'] = () => {\r\n                bindingResolver();\r\n            };\r\n        }\r\n\r\n        (this.objectToWrap as any).videoReleaseBinding(videoObjectId, (videoBinding as any as UwpVideoBindingWrapped).objectToWrap);\r\n\r\n        return bindingReleasePromise;\r\n    }\r\n}\r\n\r\nexport class UwpCallHandlerWrapped extends UwpEventWrapper<SlimCore.CallHandler, SlimCore.CallHandler.Events> {\r\n    public constructor(objectToWrap: SlimCore.CallHandler) {\r\n        super(objectToWrap);\r\n    }\r\n}\r\n\r\nexport class UwpVideoBindingWrapped extends UwpEventWrapper<SlimCoreRT.VideoBindingRenderer, SlimCoreRT.VideoBindingRenderer.Events> {\r\n    public constructor(private _objectToWrap: SlimCoreRT.VideoBindingRenderer) {\r\n        super(_objectToWrap);\r\n    }\r\n\r\n    public get uri(): string {\r\n        return this._objectToWrap.uri;\r\n    }\r\n\r\n    public get objectToWrap(): SlimCore.VideoBindingRenderer {\r\n        return this._objectToWrap;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreUwpEventWrapper.ts","export {slimCoreElectronStackFactory, slimCoreUwpStackFactory } from './SlimCoreElectronStack';\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/public.ts","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/webpack/buildin/global.js\n// module id = 25\n// module chunks = 0","import * as _ from 'lodash';\r\nimport * as async from './async';\r\n\r\ntype DeferredOperations<T> = {[key: string]: async.Deferred<T>};\r\ntype DeferredOperationName = string;\r\ntype DeferredOperationId = string;\r\n\r\ntype Logger = {\r\n    log: (...values: any[]) => void;\r\n    info: (...values: any[]) => void;\r\n    error: (...values: any[]) => void;\r\n    warn: (...values: any[]) => void;\r\n}\r\nexport default class AsyncOperationHandler {\r\n    private _endOperationDeferred: async.Deferred<void>;\r\n\r\n    private _deferredOperations:  DeferredOperations<any>;\r\n    private _deferredOperationGroups: {[key: string]: {[key: string]: async.Deferred<any>}};\r\n\r\n    private _logger: Logger;\r\n\r\n    constructor(logger: Logger) {\r\n        this._endOperationDeferred = async.defer<void>();\r\n        this._deferredOperations = {};\r\n        this._deferredOperationGroups = {};\r\n        this._logger = logger;\r\n    }\r\n\r\n    registerPromise(asyncOperationName: string, asyncOperation: Promise<void>) {\r\n        let asyncOperationDone = false;\r\n        const always = () => { asyncOperationDone = true; };\r\n        asyncOperation.then(always, always);\r\n\r\n        const endOperationPromise = this._endOperationDeferred.promise.catch(error => {\r\n            if (!asyncOperationDone) {\r\n                throw new Error('Operation ' + asyncOperationName + ' did not complete, reason:' + error);\r\n            }\r\n        });\r\n        return Promise.race([endOperationPromise, asyncOperation]);\r\n    }\r\n\r\n    createDeferred<T>(deferredOperationName: DeferredOperationName, deferredOperationId?: DeferredOperationId): Promise<T> {\r\n        const deferredOperation = async.defer<T>();\r\n        this._logger.info('createDeferred operation:', deferredOperationName);\r\n        if (deferredOperationId) {\r\n            if (!this._deferredOperationGroups[deferredOperationName]) {\r\n                this._deferredOperationGroups[deferredOperationName] = {};\r\n            }\r\n            if (this._deferredOperationGroups[deferredOperationName][deferredOperationId]) {\r\n                this._logger.warn('Deferred operation with given name and operation id is already defined:' + deferredOperationName + '/' + deferredOperationId);\r\n                return Promise.reject(new Error('Deferred operation with given name is already defined:' + deferredOperationName + '/' + deferredOperationId));\r\n            } else {\r\n                this._deferredOperationGroups[deferredOperationName][deferredOperationId] = deferredOperation;\r\n            }\r\n\r\n        } else {\r\n            if (!this._deferredOperations[deferredOperationName]) {\r\n                this._deferredOperations[deferredOperationName] = deferredOperation;\r\n            } else {\r\n                this._logger.warn('Deferred operation with given name is already defined:' + deferredOperationName);\r\n                return Promise.reject(new Error('Deferred operation with given name is already defined:' + deferredOperationName));\r\n            }\r\n        }\r\n        const endOperationPromise = this._endOperationDeferred.promise.catch(error => {\r\n            if (this.hasDeferred(deferredOperationName, deferredOperationId)) {\r\n                return Promise.reject(new Error('Operation ' + deferredOperationName + ' did not complete, reason:' + error));\r\n            }\r\n\r\n            return Promise.resolve<T>();\r\n        });\r\n\r\n        return Promise.race<T>([endOperationPromise, deferredOperation.promise]);\r\n    }\r\n\r\n    hasDeferred(deferredOperationName: string, deferredOperationId?: string): boolean {\r\n        if (!deferredOperationId) {\r\n            return !!this._deferredOperations[deferredOperationName];\r\n        } else if (this._deferredOperationGroups[deferredOperationName]){\r\n            return !!this._deferredOperationGroups[deferredOperationName][deferredOperationId];\r\n        }\r\n        return false;\r\n    }\r\n\r\n    waitForDeferred(deferredOperationName: string, deferredOperationId?: string): Promise<any> {\r\n        if (this._deferredOperations[deferredOperationName]) {\r\n            return this._deferredOperations[deferredOperationName].promise;\r\n\r\n        } else if (deferredOperationId &&\r\n            this._deferredOperationGroups[deferredOperationName] &&\r\n            this._deferredOperationGroups[deferredOperationName][deferredOperationId]) {\r\n            return this._deferredOperationGroups[deferredOperationName][deferredOperationId].promise;\r\n        }\r\n\r\n        return Promise.reject('Unable to find deferred operation: ' + deferredOperationName + '/' + deferredOperationId);\r\n    }\r\n\r\n    resolveDeferred<T>(deferredOperationName: DeferredOperationName, resolveResult?: T, deferredOperationId?: DeferredOperationName): Promise<T> {\r\n        this._logger.info('resolveDeferred operation:', deferredOperationName);\r\n        if (!deferredOperationName) {\r\n            return Promise.reject('Unable to resolve deferred operation with empty name');\r\n        }\r\n\r\n        if (this._deferredOperations[deferredOperationName]) {\r\n\r\n            const promise = this._deferredOperations[deferredOperationName].promise;\r\n            this._deferredOperations[deferredOperationName].resolve(resolveResult);\r\n            delete this._deferredOperations[deferredOperationName];\r\n            return promise;\r\n        }\r\n        \r\n        if (this._deferredOperationGroups[deferredOperationName] &&\r\n            this._deferredOperationGroups[deferredOperationName][deferredOperationId]) {\r\n                \r\n            const promise = this._deferredOperationGroups[deferredOperationName][deferredOperationId].promise;\r\n            this._deferredOperationGroups[deferredOperationName][deferredOperationId].resolve(resolveResult);\r\n            delete this._deferredOperationGroups[deferredOperationName][deferredOperationId];\r\n            return promise;\r\n\r\n        }\r\n        return Promise.reject('Unable to resolve deferred operation ' + deferredOperationName + '/' + deferredOperationId);\r\n    }\r\n\r\n    maybeResolveDeferred<T>(deferredOperationName: DeferredOperationName, resolveResult?: T, deferredOperationId?: DeferredOperationName): Promise<T> {\r\n        if (this.hasDeferred(deferredOperationName, deferredOperationId)) {\r\n            return this.resolveDeferred(deferredOperationName, resolveResult, deferredOperationId);\r\n        }\r\n\r\n        this._logger.log('Maybe resolve deferred:', deferredOperationName, ' ', deferredOperationId, ' is undefined, ignoring');\r\n        return Promise.resolve<T>();\r\n    }\r\n\r\n    rejectDeferred<T>(deferredOperationName: DeferredOperationName, reason?: T, deferredOperationId?: DeferredOperationId): Promise<T> {\r\n        this._logger.info('rejectDeferred operation:', deferredOperationName);\r\n        if (!deferredOperationName) {\r\n            return Promise.reject('Unable to reject deferred operation with empty name');\r\n        }\r\n\r\n        if (this._deferredOperations[deferredOperationName]) {\r\n            const promise = this._deferredOperations[deferredOperationName].promise;\r\n            this._deferredOperations[deferredOperationName].reject(reason);\r\n            delete this._deferredOperations[deferredOperationName];\r\n            return promise;\r\n        }\r\n        \r\n        if (this._deferredOperationGroups[deferredOperationName] &&\r\n            this._deferredOperationGroups[deferredOperationName][deferredOperationId]) {\r\n\r\n            const promise = this._deferredOperationGroups[deferredOperationName][deferredOperationId].promise;\r\n            this._deferredOperationGroups[deferredOperationName][deferredOperationId].reject(reason);\r\n            delete this._deferredOperationGroups[deferredOperationName][deferredOperationId];\r\n            return promise;\r\n        }\r\n        return Promise.reject('Unable to reject deferred operation' + deferredOperationName + '/' + deferredOperationId);\r\n    }\r\n\r\n    maybeRejectDeferred<T>(deferredOperationName: DeferredOperationName, reason?: T, deferredOperationId?: DeferredOperationName): Promise<T> {\r\n        if (this.hasDeferred(deferredOperationName, deferredOperationId)) {\r\n            return this.rejectDeferred(deferredOperationName, reason, deferredOperationId);\r\n        } \r\n\r\n        this._logger.log('Maybe reject deferred:', deferredOperationName, ' ', deferredOperationId, ' is undefined, ignoring');\r\n        return Promise.resolve<T>();\r\n    }\r\n\r\n    rejectPendingOperations(reason: any) {\r\n        this._logger.info('rejectPendingOperations reason:', reason);\r\n        const rejectDeferred = (deferred: async.Deferred<any>, reason: any) => deferred.reject(reason);\r\n\r\n        _.each(this._deferredOperations, rejectDeferred);\r\n        _.each(this._deferredOperationGroups, deferredGroup => {\r\n            _.each(deferredGroup, rejectDeferred);\r\n        });\r\n        this._deferredOperations = {};\r\n        this._deferredOperationGroups = {};\r\n        this._endOperationDeferred.reject(reason);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../common/ts/asyncOperationHandler.ts","import * as _ from 'lodash';\r\nimport { \r\n    CallingLogger, \r\n    ContentSharingStatus, \r\n    TerminatedReason\r\n} from 'skype-calling-interface';\r\n\r\nimport * as async from '../../common/ts/async';\r\n\r\ninterface ContentSharingResultEvent {\r\n    failureReason: number;\r\n    code: number;\r\n    subCode: number;\r\n}\r\n\r\ninterface ContentSharingSessionStateUpdateResultEvent {\r\n    id: string;\r\n    failureReason: number;\r\n    code: number;\r\n    subCode: number;\r\n}\r\n\r\nexport interface ContentSharingPlatformImpl {\r\n    noFailureReason: number;\r\n    contentSharingStatus: ContentSharingStatus;\r\n    contentSharingGuid: string;\r\n    convertFailureReason(reason: number): TerminatedReason;\r\n    convertContentSharingStatus(status: number): ContentSharingStatus;\r\n\r\n    callStartContentSharing(): Promise<void>;\r\n    callStopContentSharing(): Promise<void>;\r\n    callUpdateContentSharingSessionState(commandId: string, sessionState: string): Promise<void>;\r\n    callTakeContentSharingControl(): Promise<void>;\r\n    callUpdateContentSharingParticipantState(): Promise<void>;\r\n}\r\n\r\nexport class ContentSharingSession {\r\n    private _pendingDeferreds: async.Deferred<void>[] = [];\r\n    private _updateContentSharingSessionStateDeferredPromises: { [id: string]: async.Deferred<void> } = {};\r\n    private _takeControlDeferredPromise: async.Deferred<void>;\r\n    private _updateParticipantStateDeferredPromise: async.Deferred<void>;\r\n    private _stopContentSharingDeferredPromise: async.Deferred<void>;\r\n    private _joinContenSharingDeferredPromise: async.Deferred<void>;\r\n    private _startContentSharingDeferredPromise: async.Deferred<void>;\r\n\r\n    public constructor(\r\n        private _platformImpl: ContentSharingPlatformImpl, \r\n        private _logger: CallingLogger) \r\n    {}\r\n\r\n    public statusChanged(status: ContentSharingStatus): void {\r\n        if (status === ContentSharingStatus.Done || \r\n            status === ContentSharingStatus.Failed) {\r\n            if (this._stopContentSharingDeferredPromise) {\r\n                this._invokeDeferred(this._stopContentSharingDeferredPromise);\r\n            }\r\n\r\n            this._rejectPendingPromises('Content sharing is disconnected');\r\n        } else \r\n        if (status === ContentSharingStatus.Ringing || \r\n            status === ContentSharingStatus.Viewing) {\r\n            if (this._stopContentSharingDeferredPromise) {\r\n                this._rejectDeferred(this._stopContentSharingDeferredPromise, 'Content sharing cannot be ended when not presenting');\r\n            }\r\n        } else \r\n        if (status === ContentSharingStatus.Presenting) {\r\n            if (this._startContentSharingDeferredPromise) {\r\n                this._invokeDeferred(this._startContentSharingDeferredPromise);\r\n            }\r\n\r\n            if (this._takeControlDeferredPromise) {\r\n                this._invokeDeferred(this._takeControlDeferredPromise);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Start a new content sharing session\r\n    public startContentSharing(): Promise<void> {\r\n        if (this._startContentSharingDeferredPromise) {\r\n            return this._startContentSharingDeferredPromise.promise;\r\n        }\r\n\r\n        // Ensure we are in the initial state\r\n        if (this._platformImpl.contentSharingStatus !== ContentSharingStatus.None) {\r\n            throw (new Error(`Content sharing cannot be started as it is not in the initial state`));\r\n        }\r\n\r\n        this._logger.log(`Start content sharing for : ${this._platformImpl.contentSharingGuid}`);\r\n\r\n        this._startContentSharingDeferredPromise = async.defer<void>();\r\n        let always = () => {\r\n            this._startContentSharingDeferredPromise = null;\r\n        };\r\n        this._startContentSharingDeferredPromise.promise.then(always, always);\r\n\r\n        // Promise resolves when we go to presenting state\r\n        return Promise.resolve(undefined)\r\n            .then(() => this._platformImpl.callStartContentSharing())\r\n            .then(() => this._pendingDeferreds.push(this._startContentSharingDeferredPromise))\r\n            .then(() => this._startContentSharingDeferredPromise.promise)\r\n            .catch(error => {\r\n                this._logger.error(`Error in startContentSharing(), contentSharingGuid = ${this._platformImpl.contentSharingGuid}, error = ${error}`);\r\n                throw error;\r\n            });\r\n    }\r\n \r\n    // Join an incoming content sharing session\r\n    public joinContentSharing(): Promise<void> {\r\n        if (this._joinContenSharingDeferredPromise) {\r\n            return this._joinContenSharingDeferredPromise.promise;\r\n        }\r\n\r\n        // Ensure we are in the ringing state\r\n        if (this._platformImpl.contentSharingStatus !== ContentSharingStatus.Ringing) {\r\n            throw(new Error(`Content sharing is not in ringing state`));\r\n        }\r\n\r\n        this._logger.log(`Join content sharing for : ${this._platformImpl.contentSharingGuid}`);\r\n\r\n        this._joinContenSharingDeferredPromise = async.defer<void>();\r\n        let always = () => {\r\n            this._joinContenSharingDeferredPromise = null;\r\n        };\r\n        this._joinContenSharingDeferredPromise.promise.then(always, always);\r\n\r\n        // Promise resolves when join status result comes back and state goes to connected\r\n        return Promise.resolve(undefined)\r\n            .then(() => this._platformImpl.callStartContentSharing())\r\n            .then(() => this._pendingDeferreds.push(this._joinContenSharingDeferredPromise))\r\n            .then(() => this._joinContenSharingDeferredPromise.promise)\r\n            .catch(error => {\r\n                this._logger.error(`Error in joinContentSharing(), contentSharingGuid = ${this._platformImpl.contentSharingGuid}, error = ${error}`);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    public onJoinResultEvent = (event: ContentSharingResultEvent) => {\r\n        if (!this._joinContenSharingDeferredPromise) {\r\n            this._logger.warn(`No pending promise for join. Event data: ${event}`);\r\n            return;\r\n        }\r\n\r\n        this._logger.log(`JoinContentSharing completed for: ${this._platformImpl.contentSharingGuid}, status: ${JSON.stringify(event)}`);\r\n\r\n        if (event.failureReason === this._platformImpl.noFailureReason) {\r\n            this._invokeDeferred(this._joinContenSharingDeferredPromise);\r\n        } else {\r\n            this._rejectDeferred(this._joinContenSharingDeferredPromise, `Join failed with reason ${this._platformImpl.convertFailureReason(event.failureReason)}`);\r\n        }\r\n    }\r\n \r\n    // Update content sharing participant state for an incoming session. This will cause the\r\n    // endpoint to appear as viewer for the session in the roster update to other participants\r\n    public updateContentSharingParticipantStateToViewer(): Promise<void> {\r\n        if (this._updateParticipantStateDeferredPromise) {\r\n            return this._updateParticipantStateDeferredPromise.promise;\r\n        }\r\n\r\n        // Ensure we are in the connected state\r\n        if (this._platformImpl.contentSharingStatus !== ContentSharingStatus.Connected) {\r\n            throw(new Error(`Content sharing is not in connected state`));\r\n        }\r\n\r\n        this._logger.log(`Update content sharing participant state for : ${this._platformImpl.contentSharingGuid}`);\r\n\r\n        this._updateParticipantStateDeferredPromise = async.defer<void>();\r\n        let always = () => {\r\n            this._updateParticipantStateDeferredPromise = null;\r\n        };\r\n        this._updateParticipantStateDeferredPromise.promise.then(always, always);\r\n\r\n        // Promise resolves when result comes back and state goes to viewing\r\n        return Promise.resolve(undefined)\r\n            .then(() => this._platformImpl.callUpdateContentSharingParticipantState())\r\n            .then(() => this._pendingDeferreds.push(this._updateParticipantStateDeferredPromise))\r\n            .then(() => this._updateParticipantStateDeferredPromise.promise)\r\n            .catch(error => {\r\n                this._logger.error(`Error in updateContentSharingParticipantStateToViewer(), contentSharingGuid = ${this._platformImpl.contentSharingGuid}, error = ${error}`);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    public onUpdateParticipantStateResultEvent = (event: ContentSharingResultEvent) => {\r\n        if (!this._updateParticipantStateDeferredPromise) {\r\n            this._logger.warn(`No pending promise for update participant state. Event data: ${event}`);\r\n            return;\r\n        }\r\n\r\n        this._logger.log(`UpdateContentSharingParticipantStateToViewer completed for: ${this._platformImpl.contentSharingGuid}, status: ${JSON.stringify(event)}`);\r\n        if (event.failureReason === this._platformImpl.noFailureReason) {\r\n            this._invokeDeferred(this._updateParticipantStateDeferredPromise);\r\n        } else {\r\n            this._rejectDeferred(this._updateParticipantStateDeferredPromise, `Update participant state failed with reason ${this._platformImpl.convertFailureReason(event.failureReason)}`);\r\n        }\r\n    }\r\n \r\n    // Update metadata for the session if presenting\r\n    public updateContentSharingSessionState(id: string, sessionState: string): Promise<void> {\r\n        if (this._updateContentSharingSessionStateDeferredPromises[id]) {\r\n            return this._updateContentSharingSessionStateDeferredPromises[id].promise;\r\n        }\r\n\r\n        // Ensure we are in the presenting state\r\n        if (this._platformImpl.contentSharingStatus !== ContentSharingStatus.Presenting) {\r\n            throw(new Error(`Content sharing is not in presenting state`));\r\n        }\r\n\r\n        let deferred = async.defer<void>();\r\n        this._updateContentSharingSessionStateDeferredPromises[id] = deferred;\r\n        let always = () => {\r\n            delete this._updateContentSharingSessionStateDeferredPromises[id];\r\n        };\r\n        this._updateContentSharingSessionStateDeferredPromises[id].promise.then(always, always);\r\n\r\n        this._logger.log(`Update content sharing session state for : ${this._platformImpl.contentSharingGuid}`);\r\n\r\n        // Promise resolves when result comes back\r\n        return Promise.resolve(undefined)\r\n            .then(() => this._platformImpl.callUpdateContentSharingSessionState(id, sessionState))\r\n            .then(() => this._updateContentSharingSessionStateDeferredPromises[id].promise)\r\n            .catch(error => {\r\n                this._logger.error(`Error in updateContentSharingSessionState(), contentSharingGuid = ${this._platformImpl.contentSharingGuid}, error = ${error}`);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    public onSessionStateResultEvent = (event: ContentSharingSessionStateUpdateResultEvent) => {\r\n        this._logger.log(`UpdateContentSharingSessionState completed for: ${this._platformImpl.contentSharingGuid}, status: ${JSON.stringify(event)}`);\r\n        \r\n        if (this._updateContentSharingSessionStateDeferredPromises.hasOwnProperty(event.id)) {\r\n            if (event.failureReason === this._platformImpl.noFailureReason) {\r\n                this._updateContentSharingSessionStateDeferredPromises[event.id].resolve();\r\n            } else {\r\n                this._updateContentSharingSessionStateDeferredPromises[event.id].reject(`Update SessionState failed with reason ${this._platformImpl.convertFailureReason(event.failureReason)}`);\r\n            }\r\n        }\r\n    }\r\n \r\n    // Take control of the session to become a presenter if you are currently an attendee\r\n    public takeContentSharingControl(): Promise<void> {\r\n        if (this._takeControlDeferredPromise) {\r\n            return this._takeControlDeferredPromise.promise;\r\n        }\r\n\r\n        // Ensure we are in the viewing state\r\n        if (this._platformImpl.contentSharingStatus !== ContentSharingStatus.Viewing) {\r\n            throw(new Error(`Content sharing is not in viewing state`));\r\n        }\r\n\r\n        this._logger.log(`Taking control of content sharing for : ${this._platformImpl.contentSharingGuid}`);\r\n\r\n        this._takeControlDeferredPromise = async.defer<void>();\r\n        let always = () => {\r\n            this._takeControlDeferredPromise = null;\r\n        };\r\n        this._takeControlDeferredPromise.promise.then(always, always);\r\n\r\n        // Promise resolves when result comes back or when we go to presenting state\r\n        return Promise.resolve(undefined)\r\n            .then(() => this._platformImpl.callTakeContentSharingControl())\r\n            .then(() => this._pendingDeferreds.push(this._takeControlDeferredPromise))\r\n            .then(() => this._takeControlDeferredPromise)\r\n            .catch(error => {\r\n                this._logger.error(`Error in takeContentSharingControl(), contentSharingGuid = ${this._platformImpl.contentSharingGuid}, error = ${error}`);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    public onTakeControlResultEvent = (event: ContentSharingResultEvent) => {\r\n        if (!this._takeControlDeferredPromise) {\r\n            this._logger.warn(`No pending promise for take control. Event data: ${event}`);\r\n            return;\r\n        }\r\n\r\n        this._logger.log(`TakeContentSharingControl completed for: ${this._platformImpl.contentSharingGuid}, ${JSON.stringify(event)}`);\r\n\r\n        if (event.failureReason === this._platformImpl.noFailureReason) {\r\n            this._invokeDeferred(this._takeControlDeferredPromise);\r\n        } else {\r\n            this._rejectDeferred(this._takeControlDeferredPromise, `Take content sharing control failed with reason ${this._platformImpl.convertFailureReason(event.failureReason)}`);\r\n        }\r\n    }\r\n \r\n    // Stop the session\r\n    public stopContentSharing(): Promise<void> {\r\n        if (this._stopContentSharingDeferredPromise) {\r\n            return this._stopContentSharingDeferredPromise.promise;\r\n        }\r\n\r\n        // Ensure we are not in the viewing/ringing/connected state\r\n        if (this._platformImpl.contentSharingStatus === ContentSharingStatus.Ringing ||\r\n            this._platformImpl.contentSharingStatus === ContentSharingStatus.Connected ||\r\n            this._platformImpl.contentSharingStatus === ContentSharingStatus.Viewing) {\r\n            throw(new Error(`Incoming content sharing cannot be stopped`));\r\n        }\r\n\r\n        this._stopContentSharingDeferredPromise = async.defer<void>();\r\n        let always = () => {\r\n            this._stopContentSharingDeferredPromise = null;\r\n        };\r\n        this._stopContentSharingDeferredPromise.promise.then(always, always);\r\n\r\n        this._logger.log(`Stop content sharing for : ${this._platformImpl.contentSharingGuid}`);\r\n\r\n        // Promise resolves when we go to finished state\r\n        return Promise.resolve(undefined)\r\n            .then(() => this._platformImpl.callStopContentSharing())\r\n            .then(() => this._pendingDeferreds.push(this._stopContentSharingDeferredPromise))\r\n            .then(() => this._stopContentSharingDeferredPromise)\r\n            .catch(error => {\r\n                this._logger.error(`Error in stopContentSharing(), contentSharingGuid = ${this._platformImpl.contentSharingGuid}, error = ${error}`);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    private _rejectPendingPromises(terminatedReason: any) {\r\n        this._logger.info('rejectPendingPromises');\r\n\r\n        this._pendingDeferreds.forEach((deferred) => {\r\n            deferred.reject(terminatedReason);\r\n        });\r\n        this._pendingDeferreds = [];\r\n\r\n        _.forEach(this._updateContentSharingSessionStateDeferredPromises, (deferred) => {\r\n            deferred.reject(terminatedReason);\r\n        });\r\n        this._updateContentSharingSessionStateDeferredPromises = {};\r\n    }\r\n\r\n    private _invokeDeferred(deferred: async.Deferred<void>) {\r\n        this._logger.info('_invokeDeferred');\r\n\r\n        if (deferred) {\r\n            _.pull(this._pendingDeferreds, deferred);\r\n            deferred.resolve();\r\n        }\r\n    }\r\n\r\n    private _rejectDeferred(deferred: async.Deferred<void>, terminatedReason: any) {\r\n        this._logger.info('_invokeDeferred');\r\n\r\n        if (deferred) {\r\n            _.pull(this._pendingDeferreds, deferred);\r\n            deferred.reject(terminatedReason);\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ../common/ts/contentSharingSession.ts","/**\r\n * observableBase.ts\r\n * Author: Adrian Potra\r\n * Copyright: Microsoft 2016\r\n *\r\n * Implementation for observable objects.\r\n */\r\n\r\nimport { IDisposable } from 'skype-calling-interface';\r\nimport { EventCallback} from 'skype-calling-interface';\r\nimport { IObservableObject } from 'skype-calling-interface';\r\nimport { ObservableChangedCallback } from 'skype-calling-interface';\r\n\r\nimport { EventSourceImpl } from './events';\r\n\r\nexport interface ObservableEventCallback {\r\n    name: string;\r\n    handler: EventCallback;\r\n}\r\n\r\nexport interface Callback {\r\n    changed: ObservableChangedCallback;\r\n    on: ObservableEventCallback;\r\n}\r\n\r\nexport default class ObservableBase<T> extends EventSourceImpl<Callback> implements IObservableObject<T> {\r\n    public changed(callback: ObservableChangedCallback): IDisposable {\r\n        return this.subscribe({\r\n            changed: callback,\r\n            on: null\r\n        });\r\n    }\r\n\r\n    public on<P extends keyof T>(eventName: P, callback: T[P]): IDisposable {\r\n        return this.subscribe({\r\n            changed: null,\r\n            on: {\r\n                name: eventName,\r\n                handler: this._toEventCallback<P>(callback)\r\n            }\r\n        });\r\n    }\r\n\r\n    public once<P extends keyof T>(eventName: P, callback: T[P]): IDisposable {\r\n        let subscription: IDisposable;\r\n        let onceSubscription = (...args: any[]) => {\r\n            subscription.dispose();\r\n            this._toEventCallback<P>(callback)(...args);\r\n        };\r\n\r\n        return subscription = this.on(eventName, this._fromEventCallback<P>(onceSubscription));\r\n    }\r\n\r\n    protected raiseChanged(): void {\r\n        this.raiseEvents(callback => callback.changed && callback.changed());\r\n    }\r\n\r\n    protected event<P extends keyof T>(eventName: P): { raise: T[P] } {\r\n        return {\r\n            raise: this._fromEventCallback<P>((...args: any[]) => this._raiseEventImpl(eventName, ...args))\r\n        };\r\n    }\r\n\r\n    protected _raiseEventImpl(eventName: string, ...args: any[]): void {\r\n        this.raiseEvents(callback => callback.on && callback.on.name === eventName && callback.on.handler(...args));\r\n    }\r\n\r\n    private _toEventCallback<P extends keyof T>(callback: T[P]): EventCallback {\r\n        return callback as any;\r\n    }\r\n\r\n    private _fromEventCallback<P extends keyof T>(callback: EventCallback): T[P] {\r\n        return callback as any;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../common/ts/observableBase.ts","import { CallingLogger } from 'skype-calling-interface';\r\n\r\ninterface BindingRecord<T> {\r\n    createPromise: Promise<T>;\r\n    owners: any[];\r\n    chained: boolean;\r\n    releasePromise?: Promise<void>;\r\n}\r\n\r\ninterface BindingMap<T> {\r\n    [key: number]: BindingRecord<T>;\r\n}\r\n\r\nexport class SlimCoreElectronBindingManager<T> {\r\n    private _bindingMap: BindingMap<T> = { };\r\n\r\n    public constructor(\r\n        private _create: (id: number) => Promise<T>,\r\n        private _release: (id: number, binding: T) => Promise<void>,\r\n        private _logger: CallingLogger)\r\n    {\r\n        this._logger.log('BindingManager created');\r\n    }\r\n\r\n    public acquire(owner: any, videoObjectId: number): Promise<T> {\r\n        if (!this._bindingMap[videoObjectId] || this._bindingMap[videoObjectId].releasePromise) {\r\n            let chained = false;\r\n            let prequisitePromise: Promise<void>;\r\n            if (this._bindingMap[videoObjectId]) {\r\n                prequisitePromise = this._bindingMap[videoObjectId].releasePromise.catch(e => this._logger.log(`Release binding error: ${e}`));\r\n                chained = true;\r\n            } else {\r\n                prequisitePromise = Promise.resolve<void>();\r\n            }\r\n            const createPromise = prequisitePromise.then(() => this._create(videoObjectId)).then(binding => {\r\n                return binding;\r\n            }).catch(e => {\r\n                delete this._bindingMap[videoObjectId];\r\n                throw e;\r\n            });\r\n            this._bindingMap[videoObjectId] = { createPromise, owners: [], chained };\r\n        }\r\n\r\n        this._bindingMap[videoObjectId].owners.push(owner);\r\n        return this._bindingMap[videoObjectId].createPromise;\r\n    }\r\n\r\n    public release(owner: any, videoObjectId: number): Promise<void> {\r\n        if (this._bindingMap[videoObjectId]) {\r\n            return this._bindingMap[videoObjectId].createPromise.then(binding => {\r\n                let index = this._bindingMap[videoObjectId].owners.indexOf(owner);\r\n                if (index > -1) {\r\n                    this._bindingMap[videoObjectId].owners.splice(index, 1);\r\n                }\r\n                if (this._bindingMap[videoObjectId].owners.length === 0) {\r\n                    this._bindingMap[videoObjectId].releasePromise = this._release(videoObjectId, binding)\r\n                    .then(() => {\r\n                        if (!this._bindingMap[videoObjectId].chained) {\r\n                            // delete only if not chained to create again\r\n                            delete this._bindingMap[videoObjectId];\r\n                        }\r\n                    });\r\n                    return this._bindingMap[videoObjectId].releasePromise;\r\n                }\r\n            });\r\n        }\r\n        return Promise.resolve<void>();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronBindingManager.ts","import { CallingLogger } from 'skype-calling-interface';\r\nimport { ContentSharingStatus } from 'skype-calling-interface';\r\nimport { IContentSharingSession } from 'skype-calling-interface';\r\nimport { SessionTerminatedReason } from 'skype-calling-interface';\r\nimport { TerminatedReason } from 'skype-calling-interface';\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\n\r\nimport { ContentSharingPlatformImpl, ContentSharingSession } from '../../common/ts/contentSharingSession';\r\nimport SlimCoreElectronBase from './SlimCoreElectronBase';\r\n\r\n// From electron/typings/slimcore-enums.d.ts:\r\nimport Enums = SlimCore.Enums;\r\n\r\nexport default class SlimCoreElectronContentSharing extends SlimCoreElectronBase<{}> implements IContentSharingSession, ContentSharingPlatformImpl {\r\n    public contentSharingState: string;\r\n    public contentSharingStatus: ContentSharingStatus;\r\n    public contentSharingTerminationReason: SessionTerminatedReason;\r\n    public contentSharingIdentity: string;\r\n    public contentSharingGuid: string;\r\n\r\n    public noFailureReason = SlimCore.Enums.ContentSharingFailureReason.NoFailure;\r\n\r\n    private _callId: any;\r\n\r\n    private _session: ContentSharingSession;\r\n\r\n    public constructor(\r\n        private _slimcoreInstance: SlimCoreCommon.Engine,\r\n        private _slimcoreCallHandler: SlimCoreCommon.CallHandler,\r\n        public slimCoreContentSharingObjectId: SlimCore.ObjectId,\r\n        private _nativeContentSharing: SlimCore.ContentSharing,\r\n        parentLogger: CallingLogger,\r\n    ) {\r\n        super(parentLogger.createChild(() => `ContentSharing[${this.slimCoreContentSharingObjectId}]`));\r\n        this._logger.log('constructor');\r\n\r\n        this._session = new ContentSharingSession(this, this._logger);\r\n\r\n        this._onContentSharingPropertyChanged(SlimCore.Enums.Property.ContentSharingStatus, data => this._onContentSharingStatusChanged(data));\r\n        this._onContentSharingPropertyChanged(SlimCore.Enums.Property.ContentSharingState, data => this._onContentSharingStateChanged(data));\r\n\r\n        this._callId = this.getIntProperty(Enums.Property.ContentSharingCallId);\r\n        this.contentSharingStatus = this.convertContentSharingStatus(this.getIntProperty(SlimCore.Enums.Property.ContentSharingStatus));\r\n        this.contentSharingGuid = this.getStrProperty(SlimCore.Enums.Property.ContentSharingId);\r\n        this.contentSharingState = this.getStrProperty(SlimCore.Enums.Property.ContentSharingState);\r\n        this.contentSharingIdentity = this.getStrProperty(SlimCore.Enums.Property.ContentSharingIdentity);\r\n\r\n        this._nativeContentSharing.on('update-session-state-result', data => this._onSessionStateResult(data));\r\n        this._nativeContentSharing.on('take-control-result', data => this._onTakeControlResult(data));\r\n        this._nativeContentSharing.on('update-participant-state-result', data => this._onUpdateParticipantStateResult(data));\r\n        this._nativeContentSharing.on('join-result', data => this._onJoinResult(data));\r\n    }\r\n\r\n    private _onContentSharingPropertyChanged(propKey: SlimCore.Enums.Property, listener: SlimCoreCommon.ObjectChangedCallback) {\r\n        this.registerCallback(SlimCoreCommon.onObjectPropertyChanged(this._slimcoreInstance, propKey, this.slimCoreContentSharingObjectId, listener), true);\r\n    }\r\n\r\n    public setContentSharingStatus(status: ContentSharingStatus) {\r\n        this._logger.log(`setContentSharingStatus. currentStatus: ${this.contentSharingStatus} newStatus: ${status}`);\r\n        if (this.contentSharingStatus === status) {\r\n            return;\r\n        }\r\n\r\n        // Check if we are already in the final state\r\n        if (this.contentSharingStatus === ContentSharingStatus.Done || this.contentSharingStatus === ContentSharingStatus.Failed) {\r\n            return;\r\n        }\r\n\r\n        this._logger.log(`Changing content sharing status to: ${status}`);\r\n        this.contentSharingStatus = status;\r\n\r\n        if (status === ContentSharingStatus.Done ||\r\n            status === ContentSharingStatus.Failed)\r\n        {\r\n            const failure = this.getIntProperty(Enums.Property.ContentSharingFailureReason);\r\n            const code = this.getIntProperty(Enums.Property.ContentSharingFailureCode);\r\n            const subCode = this.getIntProperty(Enums.Property.ContentSharingFailureSubCode);\r\n            const reason = this.convertFailureReason(failure);\r\n\r\n            this._logger.info(`setting failure reason for content sharing session. reason: ${reason}`);\r\n\r\n            this.contentSharingTerminationReason = {\r\n                terminatedReason: reason,\r\n                terminatedReasonCode: code,\r\n                terminatedReasonSubCode: subCode,\r\n            };\r\n        }\r\n\r\n        this._session.statusChanged(status);\r\n\r\n        this.raiseChanged();\r\n    }\r\n\r\n    private getStrProperty(property: Enums.Property, fallback?: string): string {\r\n        return this._getStrProperty(this._slimcoreCallHandler, this.slimCoreContentSharingObjectId, property, fallback);\r\n    }\r\n\r\n    private getIntProperty(property: Enums.Property, fallback?: number): number {\r\n        return this._getIntProperty(this._slimcoreCallHandler, this.slimCoreContentSharingObjectId, property, fallback);\r\n    }\r\n\r\n    private _onContentSharingStatusChanged(eventData: SlimCoreCommon.ObjectChangedEvent) {\r\n        this._logger.log(`_onContentSharingStateChanged called`);\r\n        this.setContentSharingStatus(this.convertContentSharingStatus(eventData.value));\r\n    }\r\n\r\n    private _onContentSharingStateChanged(eventData: SlimCoreCommon.ObjectChangedEvent) {\r\n        this._logger.log(`_onContentSharingStateChanged called`);\r\n        this.contentSharingState = eventData.value;\r\n        this.raiseChanged();\r\n    }\r\n\r\n    public convertContentSharingStatus(slimCoreContentSharingStatus: number): ContentSharingStatus {\r\n        switch (slimCoreContentSharingStatus) {\r\n            case SlimCore.Enums.ContentSharingStatus.Routing:\r\n                return ContentSharingStatus.Connecting;\r\n            case SlimCore.Enums.ContentSharingStatus.Ringing:\r\n                return ContentSharingStatus.Ringing;\r\n            case SlimCore.Enums.ContentSharingStatus.Connected:\r\n                return ContentSharingStatus.Connected;\r\n            case SlimCore.Enums.ContentSharingStatus.Presenting:\r\n                return ContentSharingStatus.Presenting;\r\n            case SlimCore.Enums.ContentSharingStatus.Viewing:\r\n                return ContentSharingStatus.Viewing;\r\n            case SlimCore.Enums.ContentSharingStatus.Finishing:\r\n                return ContentSharingStatus.Finishing;\r\n            case SlimCore.Enums.ContentSharingStatus.Done:\r\n            case SlimCore.Enums.ContentSharingStatus.Failed:\r\n            case SlimCore.Enums.ContentSharingStatus.TimedOut:\r\n                return ContentSharingStatus.Done;\r\n            default:\r\n                return ContentSharingStatus.None;\r\n        }\r\n    }\r\n\r\n    // Start a new content sharing session\r\n    public startContentSharing(): Promise<void> {\r\n        return this._session.startContentSharing();\r\n    }\r\n\r\n    // Join an incoming content sharing session\r\n    public joinContentSharing(): Promise<void> {\r\n        return this._session.joinContentSharing();\r\n    }\r\n\r\n    private _onJoinResult(eventData: SlimCore.ContentSharingEvents.Events.ContentSharingResultArgs) {\r\n        this._session.onJoinResultEvent(eventData);\r\n    }\r\n\r\n    // Update content sharing participant state for an incoming session. This will cause the\r\n    // endpoint to appear as viewer for the session in the roster update to other participants\r\n    public updateContentSharingParticipantStateToViewer(): Promise<void> {\r\n        return this._session.updateContentSharingParticipantStateToViewer();\r\n    }\r\n\r\n    private _onUpdateParticipantStateResult(eventData: SlimCore.ContentSharingEvents.Events.ContentSharingResultArgs) {\r\n        this._session.onUpdateParticipantStateResultEvent(eventData);\r\n    }\r\n\r\n    // Update metadata for the session if presenting\r\n    public updateContentSharingSessionState(id: string, sessionState: string): Promise<void> {\r\n        return this._session.updateContentSharingSessionState(id, sessionState);\r\n    }\r\n\r\n    private _onSessionStateResult(eventData: SlimCore.ContentSharingEvents.Events.ContentSharingSessionStateUpdateResultArgs) {\r\n        this._session.onSessionStateResultEvent(eventData);\r\n    }\r\n\r\n    // Take control of the session to become a presenter if you are currently an attendee\r\n    public takeContentSharingControl(): Promise<void> {\r\n        return this._session.takeContentSharingControl();\r\n    }\r\n\r\n    private _onTakeControlResult(eventData: SlimCore.ContentSharingEvents.Events.ContentSharingResultArgs) {\r\n        this._session.onTakeControlResultEvent(eventData);\r\n    }\r\n\r\n    // Stop the session\r\n    public stopContentSharing(): Promise<void> {\r\n        return this._session.stopContentSharing();\r\n    }\r\n\r\n    // Delete the session (including for other presenter endpoints)\r\n    public deleteContentSharing(): Promise<void> {\r\n        return Promise.reject('deleteContentSharing not implemented');\r\n    }\r\n\r\n    // calls to native\r\n    public callStartContentSharing(): Promise<void> {\r\n        this._nativeContentSharing.startContentSharing();\r\n        return Promise.resolve<void>();\r\n    }\r\n    public callStopContentSharing(): Promise<void> {\r\n        this._nativeContentSharing.stopContentSharing();\r\n        return Promise.resolve<void>();\r\n    }\r\n    public callUpdateContentSharingSessionState(commandId: string, sessionState: string): Promise<void> {\r\n        this._nativeContentSharing.updateContentSharingSessionState(commandId, sessionState);\r\n        return Promise.resolve<void>();\r\n    }\r\n    public callTakeContentSharingControl(): Promise<void> {\r\n        this._nativeContentSharing.takeContentSharingControl();\r\n        return Promise.resolve<void>();\r\n    }\r\n    public callUpdateContentSharingParticipantState(): Promise<void> {\r\n        this._nativeContentSharing.updateContentSharingParticipantState();\r\n        return Promise.resolve<void>();\r\n    }\r\n\r\n    public convertFailureReason(reason: Enums.ContentSharingFailureReason): TerminatedReason {\r\n        switch (reason) {\r\n            case Enums.ContentSharingFailureReason.NoFailure:\r\n                return TerminatedReason.Success;\r\n            case Enums.ContentSharingFailureReason.SessionNotFound:\r\n                return TerminatedReason.SessionNotFound;\r\n            case Enums.ContentSharingFailureReason.SessionTimedOut:\r\n                return TerminatedReason.SessionTimedOut;\r\n            case Enums.ContentSharingFailureReason.Failure:\r\n                return TerminatedReason.UnknownError;\r\n            default:\r\n                return TerminatedReason.UnknownError;\r\n        }\r\n    }\r\n\r\n    public dispose(): void {\r\n        this.slimCoreContentSharingObjectId = 0;\r\n        super.dispose();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronContentSharing.ts","import { CallingLogger } from 'skype-calling-interface';\r\nimport { IDisposable } from 'skype-calling-interface';\r\nimport { MediaType } from 'skype-calling-interface';\r\nimport { HolographicInteractionState } from 'skype-calling-interface';\r\nimport { IRenderer } from 'skype-calling-interface';\r\nimport { ICallParticipant } from 'skype-calling-interface';\r\nimport { IHolographicInteractionControl } from 'skype-calling-interface';\r\nimport { IHolographicInteractionControlEvents } from 'skype-calling-interface';\r\nimport { HolographicInteractionMode } from 'skype-calling-interface';\r\nimport { HolographicInteractionTerminatedReason } from 'skype-calling-interface';\r\nimport { StreamType } from 'skype-calling-interface';\r\nimport { CaptureMode } from './SlimCoreElectronControlCapturer';\r\nimport { CaptureRegion } from './SlimCoreElectronControlCapturer';\r\nimport { CtrlEventType } from './SlimCoreElectronControlCapturer';\r\nimport { CtrlMouseEventType } from './SlimCoreElectronControlCapturer';\r\nimport { CtrlMouseButtonType } from './SlimCoreElectronControlCapturer';\r\nimport { CaptureEvent } from './SlimCoreElectronControlCapturer';\r\nimport { EventSubscription } from '../../common/ts/events';\r\nimport { IMediaDataChannelUser } from './SlimCoreElectronDataChannel';\r\n\r\nimport * as async from '../../common/ts/async';\r\nimport SlimCoreElectronBase from './SlimCoreElectronBase';\r\nimport SlimCoreElectronCallParticipant from './SlimCoreElectronCallParticipant';\r\nimport SlimCoreElectronControlCapturer from './SlimCoreElectronControlCapturer';\r\nimport SlimCoreElectronDataChannel from './SlimCoreElectronDataChannel';\r\nimport SlimCoreElectronRemoteVideoRenderer from './SlimCoreElectronRemoteVideoRenderer';\r\nimport SlimCoreElectronRemoteStream from './SlimCoreElectronRemoteStream';\r\n\r\nconst CTRL_MOUSE_MAXPOS = 65535;\r\nconst ANNOTATION_EVENT_SIZE = 17;\r\nconst PAUSE_EVENT_SIZE = 1;\r\nconst RESUME_EVENT_SIZE = 1;\r\nconst DELETE_ANNOTATION_EVENT_SIZE = 8;\r\nconst RECOVER_ANNOTATION_EVENT_SIZE = 7;\r\nconst REQUEST_ID_SIZE = 4;\r\n// We have had to define this here as the enum that should be used is defined in the SlimCoreElectron repo and would\r\n// require a new version to be published from there first. For now, use our own arbitary id and fight that battle later.\r\n// Reusing ids from from SlimCore.Enums.DataDeviceId causes the send function to crash for one of the data sources\r\n// depending on the order they happen to be registered in.\r\nconst HOLOGRAPHIC_INTERACTION_DATAID = 12; // GO HAWKS!!\r\n\r\nconst VIDEOCLONE_TIMEOUT = 10000;\r\nconst CAPTUREDFRAME_ELEMENT_CLASSNAME = 'captured-frame';\r\n\r\nenum HolographicEvent {\r\n    PlaceArrow = 0,\r\n    DeleteAnnotation = 1,\r\n    RecoverAnnotation = 2,\r\n    PauseVideo = 3,\r\n    ResumeVideo = 4,\r\n    InkingStart = 5,\r\n    InkingStop = 6,\r\n    InkingInProgress = 7,\r\n    // DeleteAnnotation_v0     = 8, // Deprecated\r\n    // RecoverAnnotation_v0    = 9, // Deprecated\r\n}\r\n\r\nclass CapturedFrame implements IDisposable {\r\n    public constructor(private _logger: CallingLogger, private _element: HTMLElement, private _attachment: Uint8Array, private _renderer: IRenderer) {\r\n\r\n    }\r\n\r\n    public get element(): HTMLElement {\r\n        return this._element;\r\n    }\r\n\r\n    public get attachment(): Uint8Array {\r\n        return this._attachment;\r\n    }\r\n\r\n    public get renderer(): IRenderer {\r\n      return this._renderer;\r\n    }\r\n\r\n    public dispose() {\r\n        if (this._logger) {\r\n            this._logger.info('Disposing captured frame');\r\n            this._logger = null;\r\n        }\r\n\r\n        if (this._renderer) {\r\n            this._renderer.dispose();\r\n            this._renderer = null;\r\n        }\r\n\r\n        if (this._element) {\r\n            this._element.remove();\r\n            this._element = null;\r\n        }\r\n\r\n        this._attachment = null;\r\n    }\r\n}\r\n\r\nenum AnnotationEvent {\r\n    AnnotationCreated   = 0,\r\n    AnnotationModified  = 1,\r\n    AnnotationRemoved   = 2,\r\n    InteractionReady = 3,\r\n    InteractionTerminated = 4,\r\n}\r\n\r\nexport default class SlimCoreElectronHolographicInteractionControl extends SlimCoreElectronBase<IHolographicInteractionControlEvents>\r\n    implements IHolographicInteractionControl, IMediaDataChannelUser {\r\n\r\n    private static annotationRequestId: number = 0;\r\n\r\n    private _featureFlagEnabled: boolean = false;\r\n    private _interactionVideoRenderer: SlimCore.VideoRenderer = null;\r\n    private _dataChannel: SlimCoreElectronDataChannel = null;\r\n    private _annotationDataSource: SlimCore.DataSource = null;\r\n    private _annotationDataSink: SlimCore.DataSink = null;\r\n    private _controlCapturer: SlimCoreElectronControlCapturer = null;\r\n    private _holographicControlEventSubscription: EventSubscription = null;\r\n    private _holographicCaptureEventSubscription: EventSubscription = null;\r\n    private _holographicInteractionMode: HolographicInteractionMode = HolographicInteractionMode.Drawing;\r\n    private _holographicInteractionColor: number;\r\n    private _participant: ICallParticipant = null;\r\n    private _dataChannelActive: boolean = false;\r\n    private _wasLeftMouseButtonDown: boolean = false;\r\n    private _isStarted = false;\r\n    private _currentPoseAndProjection: Uint8Array = null;\r\n    private _legacyRenderer: IRenderer = null;\r\n\r\n    private readonly defaultColorOther: number = 0x5558AF;\r\n    private readonly defaultColorSelf: number = 0x3CD139;\r\n\r\n    // Inking\r\n    private _isInkingInProgress: boolean = false;\r\n    private _currentRequestId: number = 0;\r\n\r\n    public get state(): HolographicInteractionState {\r\n        if (this._isStarted && this._dataChannelActive) {\r\n            return HolographicInteractionState.Active;\r\n        } else if (this._isStarted) {\r\n            return HolographicInteractionState.Started;\r\n        }\r\n        return HolographicInteractionState.Idle;\r\n    }\r\n\r\n    public get mode(): HolographicInteractionMode {\r\n        return this._holographicInteractionMode;\r\n    }\r\n\r\n    public get color(): number {\r\n        return this._holographicInteractionColor;\r\n    }\r\n\r\n    public set color(newColor: number) {\r\n        this._holographicInteractionColor = newColor;\r\n    }\r\n\r\n    public get controlCapturer() {\r\n        return this._controlCapturer;\r\n    }\r\n\r\n    public constructor(\r\n        logger: CallingLogger,\r\n        public callId: string,\r\n    ) {\r\n        super(logger.createChild(() => `SlimCoreElectronHolographicInteractionControl`));\r\n        this._logger.log('constructor');\r\n\r\n        // initialize the color to the default color for Desktop user\r\n        this.color = this.defaultColorSelf;\r\n\r\n        this._disposeControlCapturer();\r\n    }\r\n\r\n    public setFeatureFlag(enabled: boolean): void {\r\n        this._featureFlagEnabled = enabled;\r\n    }\r\n\r\n    public startHolographicInteraction(renderer: IRenderer): Promise<void> {\r\n        this._logger.info('startHolographicInteraction');\r\n\r\n        if (this.state !== HolographicInteractionState.Idle || !this._dataChannel || !this._featureFlagEnabled) {\r\n            return Promise.reject(new Error('cannot start holographic interaction'));\r\n        }\r\n\r\n        this._legacyRenderer = renderer;\r\n\r\n        return Promise.resolve<void>()\r\n            .then(() => this._dataChannel.start())\r\n            .then(() => this._start());\r\n    }\r\n\r\n    public stopHolographicInteraction(): Promise<void> {\r\n        this._logger.info('stopHolographicInteraction');\r\n        this._legacyRenderer = null;\r\n        return this._setRenderer(null)\r\n            .then(() => this._stop());\r\n    }\r\n\r\n    private _start(): void {\r\n        this._isStarted = true;\r\n    }\r\n\r\n    private _stop(): void {\r\n        this._isStarted = false;\r\n    }\r\n\r\n    public setParticipant(sharer: ICallParticipant): void {\r\n        this._logger.info('setParticipant()');\r\n\r\n        // Check if sharer has changed and needs to be updated\r\n        if (this._participant) {\r\n            if (this._participant.id !== sharer.id) {\r\n                this._logger.info('setParticipant() sharer switched, new sharer id=' + sharer.id);\r\n            }\r\n        } else {\r\n            this._logger.info('setParticipant() setting sharer to id=' + sharer.id);\r\n        }\r\n        this._participant = sharer;\r\n    }\r\n\r\n    public removeParticipant(sharer?: ICallParticipant): void {\r\n        this._logger.info('removeParticipant()');\r\n\r\n        if (sharer === null || sharer === undefined ||\r\n            (this._participant !== null && sharer.id === this._participant.id)) {\r\n            // We should shutdown control for viewer if sharer param is null, or\r\n            // sharer matches our sharer\r\n            this._logger.info('removeParticipant: set participant to null');\r\n            this._participant = null;\r\n        }\r\n    }\r\n\r\n    public dispose() {\r\n        this._logger.info('SlimCoreElectronHolographicInteractionControl - dispose()');\r\n\r\n        this._detachAndDeleteControlDevices();\r\n        this._disposeControlCapturer();\r\n        this._participant = null;\r\n        this._dataChannel = null;\r\n\r\n        super.dispose();\r\n    }\r\n\r\n    public handleCallDisconnected(): void {\r\n        this._logger.info('handleCallDisconnected()');\r\n\r\n        this._participant = null;\r\n        this._detachAndDeleteControlDevices();\r\n        this._disposeControlCapturer();\r\n    }\r\n\r\n    public deleteAnnotations(requestIds: number[], isPermanent: boolean): Promise<void> {\r\n        return async.asap(() =>\r\n        {\r\n           let buffer = new ArrayBuffer(DELETE_ANNOTATION_EVENT_SIZE + requestIds.length * REQUEST_ID_SIZE);\r\n           let dataView = new DataView(buffer);\r\n           dataView.setUint8(0, HolographicEvent.DeleteAnnotation);\r\n           dataView.setUint32(1, 1, true); // Temporary placeholder for remote owner id\r\n           dataView.setUint8(5, isPermanent ? 1 : 0);\r\n           dataView.setUint16(6, requestIds.length, true);\r\n\r\n           for (let index = 0; index < requestIds.length; ++index) {\r\n               dataView.setUint32(8 + index * REQUEST_ID_SIZE, requestIds[index], true);\r\n           }\r\n\r\n           this._sendHolographicData(new Uint8Array(buffer));\r\n        });\r\n    }\r\n\r\n    public deleteAllAnnotations(): Promise<void> {\r\n        return async.asap(() =>\r\n        {\r\n           let buffer = new ArrayBuffer(DELETE_ANNOTATION_EVENT_SIZE);\r\n           let dataView = new DataView(buffer);\r\n           dataView.setUint8(0, HolographicEvent.DeleteAnnotation);\r\n           dataView.setUint32(1, 1, true); // Temporary placeholder for remote owner id\r\n           dataView.setUint8(5, 1); // isPermanent === true, as 'delete all' outside of pause can't be undone\r\n           dataView.setUint16(6, 0, true);\r\n\r\n           this._sendHolographicData(new Uint8Array(buffer), true);\r\n        });\r\n    }\r\n\r\n    public recoverAnnotations(requestIds: number[]): Promise<void> {\r\n        return async.asap(() =>\r\n        {\r\n           let buffer = new ArrayBuffer(RECOVER_ANNOTATION_EVENT_SIZE + requestIds.length * REQUEST_ID_SIZE);\r\n           let dataView = new DataView(buffer);\r\n           dataView.setUint8(0, HolographicEvent.RecoverAnnotation);\r\n           dataView.setUint32(1, 1, true); // Temporary placeholder for remote owner id\r\n           dataView.setUint16(5, requestIds.length, true);\r\n\r\n           for (let index = 0; index < requestIds.length; ++index) {\r\n               dataView.setUint32(7 + index * REQUEST_ID_SIZE, requestIds[index], true);\r\n           }\r\n\r\n           this._sendHolographicData(new Uint8Array(buffer));\r\n        });\r\n    }\r\n\r\n    public disableAnnotations(): Promise<void> {\r\n        if (!this.controlCapturer) {\r\n            return Promise.resolve<void>();\r\n        }\r\n\r\n        return async.asap(() => {\r\n            this._currentPoseAndProjection = null;\r\n            this._setCapture(CaptureMode.Disabled);\r\n            this._setRenderer(null);\r\n        });\r\n    }\r\n\r\n    public enableAnnotations(frameContainer: HTMLElement): Promise<IDisposable> {\r\n        if (this.state !== HolographicInteractionState.Active || !this._dataChannel || !this._featureFlagEnabled) {\r\n            return Promise.reject(new Error('cannot enable annotations!'));\r\n        }\r\n\r\n        return this._captureFrame(frameContainer)\r\n            .then((capturedFrame) => {\r\n            this._currentPoseAndProjection = capturedFrame.attachment;\r\n\r\n            let renderer = !!this._legacyRenderer ? this._legacyRenderer : capturedFrame.renderer;\r\n\r\n            return this._setRenderer(renderer)\r\n                .then(() => capturedFrame);\r\n        });\r\n    }\r\n\r\n    public switchToArrows(): Promise<void> {\r\n        return async.asap(() => { this._holographicInteractionMode = HolographicInteractionMode.Arrows; });\r\n    }\r\n\r\n    public switchToDrawing(): Promise<void> {\r\n        return async.asap(() => { this._holographicInteractionMode = HolographicInteractionMode.Drawing; });\r\n    }\r\n\r\n    private _setRenderer(renderer: IRenderer): Promise<void> {\r\n        return async.asap(() => this._setViewingRenderer(renderer));\r\n    }\r\n\r\n    public setDataChannel(channel: SlimCoreElectronDataChannel): Promise<void> {\r\n        return async.asap(() => this._setDataChannel(channel));\r\n    }\r\n\r\n    public onDataChannelStatusChanged(dataChannelStatus: number): Promise<void> {\r\n        return async.asap(() => this._onDataChannelStatusChanged(dataChannelStatus));\r\n    }\r\n\r\n    public setProtocolDataSource(source: SlimCore.DataSource): Promise<void> {\r\n        // This is a filler function\r\n        return Promise.resolve<void>();\r\n    }\r\n\r\n    public processProtocolMessage(message: string, sender: ICallParticipant, senderSourceId: number): Promise<void> {\r\n        // This is a filler function\r\n        return Promise.resolve<void>();\r\n    }\r\n\r\n    private _createAndAttachControlDevices(): void {\r\n        this._logger.info('_createAndAttachControlDevices()');\r\n\r\n        if (this._dataChannel) {\r\n            // Create/register source/sink\r\n            if (!this._annotationDataSource) {\r\n                // Holographic annotations and screen control are mutually exclusive, thus re-using the Control enum\r\n                // Pending changes to SlimCore to define a separate value\r\n                this._annotationDataSource = SlimCore.createDataSource(HOLOGRAPHIC_INTERACTION_DATAID);\r\n                try {\r\n                    this._dataChannel.registerDataSource(this._annotationDataSource);\r\n                    this._logger.info('created annotation data source');\r\n\r\n                } catch (error) {\r\n                    this._logger.info('registerDataSource threw exception: ' + error);\r\n                }\r\n            }\r\n\r\n            if (!this._annotationDataSink) {\r\n                this._annotationDataSink = SlimCore.createDataSink(HOLOGRAPHIC_INTERACTION_DATAID);\r\n                try {\r\n                    this._dataChannel.registerDataSink(this._annotationDataSink);\r\n                } catch (error) {\r\n                    this._logger.info('registerDataSink threw exception: ' + error);\r\n                }\r\n\r\n                this._logger.info('created Control data sink');\r\n\r\n                this._annotationDataSink.on('data', ((args: SlimCore.DataSink.Events.DataArgs) => {\r\n                    this._logger.info('Received data on AnnotationDataSink: ' + args);\r\n                    this._processIncomingMessage(args);\r\n                }));\r\n            }\r\n\r\n            this.event('interactionReady').raise();\r\n        } else {\r\n            this._logger.warn('_createAndAttachControlDevices() null dataChannel');\r\n        }\r\n    }\r\n\r\n    private _detachAndDeleteControlDevices(): void {\r\n        this._logger.info('_detachAndDeleteControlDevices()');\r\n\r\n        // Remove data callback\r\n        if (this._annotationDataSink !== null) {\r\n            this._annotationDataSink.removeAllListeners('data');\r\n        }\r\n\r\n        if (this._dataChannel) {\r\n            // Unregister the source/sink\r\n            if (this._annotationDataSource !== null) {\r\n                try {\r\n                    this._dataChannel.unregisterDataSource(this._annotationDataSource);\r\n                } catch (error) {\r\n                    this._logger.warn('unregisterDataSource threw exception: ' + error);\r\n                }\r\n\r\n                this._annotationDataSource = null;\r\n                this._logger.info('deleted Annotation data source');\r\n           }\r\n\r\n            if (this._annotationDataSink !== null) {\r\n                try {\r\n                    this._dataChannel.unregisterDataSink(this._annotationDataSink);\r\n                } catch (error) {\r\n                    this._logger.warn('unregisterDataSink threw exception: ' + error);\r\n                }\r\n\r\n                this._annotationDataSink = null;\r\n                this._logger.info('deleted Annotation data sink');\r\n            }\r\n\r\n            this.event('interactionTerminated').raise(HolographicInteractionTerminatedReason.ControlDevicesDetached);\r\n        } else {\r\n            this._logger.warn('_detachAndDeleteControlDevices() null dataChannel');\r\n        }\r\n\r\n    }\r\n\r\n    private _videoSizeChanged(width: number, height: number) {\r\n        if (this._controlCapturer != null) {\r\n            this._controlCapturer.updateVideoSize(width, height);\r\n        }\r\n    }\r\n\r\n    private _setViewingRenderer(renderer: IRenderer): void {\r\n        this._logger.info('_setViewingRenderer()');\r\n        try {\r\n            this._interactionVideoRenderer = null;\r\n            this._disposeControlCapturer();\r\n\r\n            // Save the new renderer and create the capturer\r\n            let videoStreamRenderer = renderer as SlimCoreElectronRemoteVideoRenderer;\r\n            if (videoStreamRenderer) {\r\n                this._interactionVideoRenderer = videoStreamRenderer.videoRenderer;\r\n                this._interactionVideoRenderer.on('video-size-changed', (args) => this._videoSizeChanged(args.width, args.height));\r\n\r\n                // Set the preferred way of handling the capture on video feed when instantiating ControlCapturer (last parameter)\r\n                // (webcam stream is scaled to fill in as much screen as possible, we want this to be reflected on the capture region)\r\n                this._controlCapturer = new SlimCoreElectronControlCapturer(this._logger, videoStreamRenderer.renderTarget as HTMLElement, false);\r\n\r\n                this._setCapture(CaptureMode.Control);\r\n                this._logger.info('_setViewingRenderer: _interactionVideoRenderer is set');\r\n            } else {\r\n                this._logger.info('_setViewingRenderer: _interactionVideoRenderer is null');\r\n            }\r\n        } catch (error) {\r\n            this._logger.error('_setViewingRenderer: unable to set _interactionVideoRenderer error = ' + error);\r\n        }\r\n    }\r\n\r\n    private _setCapture(captureMode: CaptureMode) {\r\n        this._logger.info('_setCapture() - new CaptureMode: ' + captureMode);\r\n\r\n        if (!!this._controlCapturer) {\r\n            // Holographic interaction control handles only annotation/inking related events, which originate from controlCapturer with CaptureMode === Control\r\n            if (captureMode !== CaptureMode.Disabled && captureMode !== CaptureMode.Control) {\r\n                this._logger.error('_setCapture(): Unable to set the capture mode to: ' + captureMode);\r\n                return;\r\n            }\r\n\r\n            // Check if we're changing to a different value for CaptureMode (and not same as it's currently set),\r\n            // to avoid unnecessary cleaning subscriptions/re-subscribing and raising events\r\n            if (this._controlCapturer.captureMode === captureMode) {\r\n                return;\r\n            }\r\n\r\n            this._controlCapturer.setCaptureMode(captureMode);\r\n\r\n            // Remove existing callbacks\r\n            this._clearCapturerEventSubscriptions();\r\n\r\n            if (captureMode === CaptureMode.Disabled) {\r\n                this.event('interactionDisabled').raise();\r\n\r\n                let buffer = new ArrayBuffer(RESUME_EVENT_SIZE);\r\n                let dataView = new DataView(buffer);\r\n                dataView.setUint8(0, HolographicEvent.ResumeVideo);\r\n                this._sendHolographicData(new Uint8Array(buffer), true);\r\n            } else if (captureMode === CaptureMode.Control) {\r\n                this._setCapturerEventSubscriptions();\r\n                this.event('interactionEnabled').raise();\r\n                let poseAndProjection = this._getPoseAndProjection();\r\n\r\n                let buffer = new ArrayBuffer(PAUSE_EVENT_SIZE + poseAndProjection.length);\r\n                let dataView = new DataView(buffer);\r\n                dataView.setUint8(0, HolographicEvent.PauseVideo);\r\n\r\n                let packet = new Uint8Array(buffer);\r\n                packet.set(poseAndProjection, PAUSE_EVENT_SIZE);\r\n\r\n                this._sendHolographicData(new Uint8Array(buffer));\r\n            }\r\n        } else {\r\n            this._logger.warn('_controlCapturer not found when trying to setup viewer capture mode');\r\n        }\r\n    }\r\n\r\n    private _setDataChannel(channel: SlimCoreElectronDataChannel): void {\r\n        // We always need to store the data channel as it's possible it will be set from SlimCoreElectronDataChannel before we know if the feature is enabled or not\r\n        if (this._dataChannel && channel === null) {\r\n            this._detachAndDeleteControlDevices();\r\n        }\r\n        this._dataChannel = channel;\r\n    }\r\n\r\n    private _mapParticipantToSourceId(participant: ICallParticipant): number {\r\n        let sourceId: number = -1;\r\n        if (participant !== null) {\r\n            let p: SlimCoreElectronCallParticipant = participant as SlimCoreElectronCallParticipant;\r\n            sourceId = p.getSourceIdForMediaType(MediaType.Data);\r\n        }\r\n        else {\r\n            this._logger.error('_mapParticipantToSourceId unexpected null participant');\r\n        }\r\n        return sourceId;\r\n    }\r\n\r\n    private _getHoloLensRenderer(): SlimCoreElectronRemoteVideoRenderer {\r\n        if (!this._participant) throw new Error('HIC in wrong state: No active participant has been set');\r\n\r\n        let streams = this._participant.streams[StreamType.Video];\r\n        if (streams.length === 0) throw new Error('HIC in wrong state: HoloLens is not sending video');\r\n        if (streams.length !== 1) throw new Error('HIC in wrong state: HoloLens should only be able to send one stream');\r\n\r\n        let stream = streams[0] as SlimCoreElectronRemoteStream;\r\n        return stream.renderer;\r\n    }\r\n\r\n    // Attempts to resolve the most recent frame's meta data from the HoloLens participant\r\n    // Should always return a valid Uint8Array or throw an exception if the call is in the wrong state\r\n    private _getPoseAndProjection(): Uint8Array {\r\n        if (this._currentPoseAndProjection) return this._currentPoseAndProjection;\r\n\r\n        let renderer = this._getHoloLensRenderer();\r\n        if (!renderer || !renderer.frameSinkMetadata) return new Uint8Array(0);\r\n\r\n        let attachment = renderer.frameSinkMetadata.attachment;\r\n        if (!attachment) return new Uint8Array(0);\r\n\r\n        return attachment;\r\n    }\r\n\r\n    private _captureFrame(frameContainer: HTMLElement): Promise<CapturedFrame> {\r\n        return new Promise<CapturedFrame>((resolve, reject) => {\r\n            let renderer = this._getHoloLensRenderer();\r\n            if (!renderer) throw new Error(`HIC has no renderer for the remote participant`);\r\n\r\n            // I create a new container div so that I can remove the renderer elements from the DOM without having to know anything about them\r\n            let rendererContainer = frameContainer.ownerDocument.createElement('div');\r\n            rendererContainer.className = CAPTUREDFRAME_ELEMENT_CLASSNAME;\r\n            let clonedRenderer = renderer.clone(rendererContainer);\r\n\r\n            let changedSubscription: IDisposable = null;\r\n            let timeoutId = window.setTimeout(() => {\r\n                changedSubscription && changedSubscription.dispose();\r\n                clonedRenderer.dispose();\r\n                reject(new Error('Timed out while waiting for cloned renderer to start rendering'));\r\n            }, VIDEOCLONE_TIMEOUT);\r\n\r\n            changedSubscription = clonedRenderer.changed(() => {\r\n                // This event should fire when we get a video size changed event on the renderer\r\n                if (clonedRenderer.isRendering) {\r\n                    changedSubscription && changedSubscription.dispose();\r\n                    window.clearTimeout(timeoutId);\r\n                    clonedRenderer.paused = true;\r\n                    frameContainer.appendChild(rendererContainer);\r\n                    let attachment = !!clonedRenderer.frameSinkMetadata ? clonedRenderer.frameSinkMetadata.attachment : null;\r\n                    resolve(new CapturedFrame(this._logger, rendererContainer, attachment, clonedRenderer));\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    private _getNextRequestId(): number {\r\n        this._currentRequestId = ++SlimCoreElectronHolographicInteractionControl.annotationRequestId;\r\n\r\n        return this._currentRequestId;\r\n    }\r\n\r\n    public get currentRequestId(): number {\r\n        return this._currentRequestId;\r\n    }\r\n\r\n    private _setCapturerEventSubscriptions() {\r\n        this._logger.info('_setCapturerEventSubscriptions()');\r\n        this._setHolographicInteractionControlSubscriptions();\r\n        this._setHolographicInteractionCaptureSubscriptions();\r\n    }\r\n\r\n    private _setHolographicInteractionControlSubscriptions()\r\n    {\r\n        this._holographicControlEventSubscription = this._controlCapturer.on('controlEvent', ((data: Uint8Array) => {\r\n        if (!data || data.length === 0) {\r\n            this._logger.warn('_controlCapturer on controlEvent: received an empty event data!');\r\n            return;\r\n        }\r\n\r\n        let view = new DataView(data.buffer);\r\n        let isMouseEvent: boolean = (view.getUint8(0) === CtrlEventType.Mouse);\r\n\r\n        if (isMouseEvent) {\r\n            // decode the binary data from the mouse event\r\n            /*\r\n                ControlCapturer control event data is a x byte array buffer (x = 7 for mouse and 3 for KBD) carrying user input data.\r\n                HolographicInteraction makes use of this output data - reads it bitwise to understand user input.\r\n\r\n                From LSB to MSB:\r\n                1 byte (offset 0):\r\n                    Is mouse or keyboard event?\r\n\r\n                From here the data carried by event is different for mouse vs keyboard.\r\n\r\n                Mouse:\r\n                1 byte (offset 1):\r\n                    2 bits (0b11): Type of mouse (button, wheel, move) or keyboard (scan key, virtual key) event\r\n                    3 bits (0b11100): Which button\r\n                    1 bit (0b100000): Is button down\r\n                    1 bit (0b1000000): Is mouse wheel down\r\n                2 bytes (offset 2):\r\n                    Mouse position X\r\n                2 bytes (offset 4):\r\n                    Mouse position Y\r\n                1 byte (offset 6):\r\n                    Mouse wheel rotation\r\n            */\r\n            let mouseEventType: CtrlMouseEventType = (view.getUint8(1) & 0b11); // tslint:disable-line:no-bitwise\r\n            let button: CtrlMouseButtonType = (view.getUint8(1) >> 2 & 0b111);  // tslint:disable-line:no-bitwise\r\n            let isButtonDown: boolean = ((view.getUint8(1) >> 5 & 0b1) === 1);  // tslint:disable-line:no-bitwise\r\n            let xPos: number = view.getUint16(2, true);\r\n            let yPos: number = view.getUint16(4, true);\r\n            // let wheelRotation: number = view.getUint8(6);\r\n            let isMouseButtonEvent: boolean = (mouseEventType === CtrlMouseEventType.Button && button === CtrlMouseButtonType.Button1);\r\n\r\n            switch (this._holographicInteractionMode)\r\n            {\r\n                case HolographicInteractionMode.Arrows:\r\n                    // on left mouse button release\r\n                    if (isMouseButtonEvent && !isButtonDown && this._wasLeftMouseButtonDown) {\r\n                        this._prepareAndSendHolographicData(HolographicEvent.PlaceArrow, xPos, yPos, this._getNextRequestId());\r\n                    }\r\n                    break;\r\n\r\n                case HolographicInteractionMode.Drawing:\r\n                    // on left mouse button press - Inking Start\r\n                    if (isMouseButtonEvent && isButtonDown) {\r\n                        if (this._isInkingInProgress) {\r\n                            this._logger.error('Inking was already in progress when attempting to start new inking stroke!');\r\n                        }\r\n                        this._isInkingInProgress = true;\r\n                        this._prepareAndSendHolographicData(HolographicEvent.InkingStart, xPos, yPos, this._getNextRequestId());\r\n                    }\r\n\r\n                    // on left mouse button being held down - Inking In Progress\r\n                    // - note that the type is set to Move for mouse move, and the buttonDown is not being set explicitly for the Move event in ControlCapturer, thus checking previous value\r\n                    else if (mouseEventType === CtrlMouseEventType.Move && this._isInkingInProgress) {\r\n                        this._prepareAndSendHolographicData(HolographicEvent.InkingInProgress, xPos, yPos, this._currentRequestId);\r\n                    }\r\n\r\n                    // on left mouse button release - Inking Stop\r\n                    else if (isMouseButtonEvent && !isButtonDown && this._isInkingInProgress) {\r\n                        this._isInkingInProgress = false;\r\n                        this._prepareAndSendHolographicData(HolographicEvent.InkingStop, xPos, yPos, this._currentRequestId);\r\n                    }\r\n                    break;\r\n                default:\r\n                    this._logger.info('unsupported interaction mode!');\r\n                    break;\r\n            }\r\n\r\n            // remember the last seen state of the left mouse button (to detect button up/down and use during mouse move)\r\n            if (isMouseButtonEvent) {\r\n                this._wasLeftMouseButtonDown = isButtonDown;\r\n            }\r\n        }}));\r\n    }\r\n\r\n    private _setHolographicInteractionCaptureSubscriptions()\r\n    {\r\n        this._holographicCaptureEventSubscription = this._controlCapturer.on('captureEvent', ((data: CaptureEvent) => {\r\n            // Drawing\r\n            if (this._holographicInteractionMode === HolographicInteractionMode.Drawing) {\r\n                // Stop inking when mouse leaves the canvas with inking in progress\r\n                if (this._isInkingInProgress && data === CaptureEvent.MouseLeaving) {\r\n                    this._logger.info('_controlCapturer: inking stop on mouse leaving the area');\r\n                    this._prepareAndSendHolographicData(HolographicEvent.InkingStop, 0, 0, this._currentRequestId);\r\n                    this._isInkingInProgress = false;\r\n                }\r\n            }\r\n        }));\r\n    }\r\n\r\n    private _prepareAndSendHolographicData(eventType: HolographicEvent, xPos: number, yPos: number, requestId: number) {\r\n        let captureRegion: CaptureRegion = this._controlCapturer.captureRegion;\r\n        let buffer = new ArrayBuffer(ANNOTATION_EVENT_SIZE);\r\n        let dataView = new DataView(buffer);\r\n\r\n        dataView.setUint8(0, eventType);\r\n        dataView.setUint16(1, xPos, true);\r\n        dataView.setUint16(3, yPos, true);\r\n        dataView.setUint16(5, captureRegion.width, true);\r\n        dataView.setUint16(7, captureRegion.height, true);\r\n        dataView.setUint32(9, this.color, true);\r\n        dataView.setUint32(13, requestId, true);\r\n\r\n        let xScreenPosition: number = Math.round((xPos / CTRL_MOUSE_MAXPOS * captureRegion.width));\r\n        let yScreenPosition: number = Math.round((yPos / CTRL_MOUSE_MAXPOS * captureRegion.height));\r\n\r\n        switch (eventType)\r\n        {\r\n            case HolographicEvent.PlaceArrow:\r\n                this._logger.info('_controlCapturer: placing arrow at x=' + xScreenPosition + '/' + captureRegion.width + ' (width)'\r\n                    + ', y=' + yScreenPosition + '/' + captureRegion.height + ' (height)' + ', color=' + this.color.toString(16));\r\n                this.event('arrowPlace').raise(requestId, xScreenPosition, yScreenPosition, this.color);\r\n                break;\r\n            case HolographicEvent.InkingStart:\r\n                this._logger.info('_controlCapturer: inking start at x=' + xScreenPosition + ', y=' + yScreenPosition + ', color=' + this.color.toString(16));\r\n                this.event('inkingStart').raise(requestId, xScreenPosition, yScreenPosition, this.color);\r\n                break;\r\n            case HolographicEvent.InkingInProgress:\r\n                this.event('inkingInProgress').raise(requestId, xScreenPosition, yScreenPosition);\r\n                break;\r\n            case HolographicEvent.InkingStop:\r\n                this._logger.info('_controlCapturer: inking stop at x=' + xScreenPosition + ', y=' + yScreenPosition);\r\n                this.event('inkingStop').raise();\r\n                break;\r\n            default:\r\n                this._logger.info('_controlCapturer: unsupported event type!');\r\n                break;\r\n        }\r\n\r\n        this._sendHolographicData(new Uint8Array(buffer));\r\n    }\r\n\r\n    private _sendHolographicData(data: Uint8Array, sendIfDisabled: boolean = false) {\r\n        if (!!this._annotationDataSource\r\n         && ((!!this._controlCapturer && this._controlCapturer.captureMode !== CaptureMode.Disabled) || sendIfDisabled)\r\n         && !!this._participant\r\n         && this.state === HolographicInteractionState.Active) {\r\n            let sharerSourceId = this._mapParticipantToSourceId(this._participant);\r\n            let recipients: number[] = [sharerSourceId];\r\n            this._annotationDataSource.sendData(data, recipients);\r\n        }\r\n    }\r\n\r\n    private _processIncomingMessage(args: SlimCore.DataSink.Events.DataArgs) {\r\n        let view = new DataView(args.data.buffer);\r\n        let messageType: number = view.getUint8(0);\r\n\r\n        switch (messageType) {\r\n            case AnnotationEvent.AnnotationCreated:\r\n                this._processAnnotationCreatedMessage(view);\r\n                break;\r\n            case AnnotationEvent.AnnotationModified:\r\n                this._processAnnotationModifiedMessage(view);\r\n                break;\r\n            case AnnotationEvent.AnnotationRemoved:\r\n                this._processAnnotationRemovedMessage(view);\r\n                break;\r\n            case AnnotationEvent.InteractionReady:\r\n                this._processInteractionReadyMessage(view);\r\n                break;\r\n            case AnnotationEvent.InteractionTerminated:\r\n                this._processInteractionTerminatedMessage(view);\r\n                break;\r\n            default:\r\n                this._logger.error('Unexpected message type received: type = ' + messageType);\r\n                break;\r\n        }\r\n    }\r\n\r\n    private _processAnnotationCreatedMessage(view: DataView) {\r\n        let ownerId: number = view.getUint32(1, true);\r\n        let requestId: number = view.getUint32(5, true);\r\n        let annotationId: number = view.getUint32(9, true);\r\n        let annotationType: number = view.getUint8(13);\r\n        let positionX: number = view.getFloat32(14, true);\r\n        let positionY: number = view.getFloat32(18, true);\r\n        let scale: number = view.getFloat32(22, true);\r\n        let angleInDegrees: number = view.getFloat32(26, true);\r\n\r\n        // Backwards compatibility for messages without color\r\n        let color: number = 0;\r\n        if (view.byteLength > 30) {\r\n            color = view.getUint32(30, true);\r\n            this._logger.info('Using color provided with annotationCreated message: ' + color.toString(16));\r\n        } else {\r\n            // Return default color for Desktop and HL users\r\n            // Note: those values are defined in both WebClient and HL as constant IDs, they indicate whether the annotation was created\r\n            // by a Desktop or HoloLens user\r\n\r\n            // Other (HoloLens)\r\n            if (ownerId === 0) {\r\n                color = this.defaultColorOther; // purple\r\n            }\r\n            // Self (Desktop)\r\n            else if (ownerId === 1) {\r\n                color = this.defaultColorSelf; // green\r\n            } else {\r\n                this._logger.error('Returning default color for an unknown owner ID (red)');\r\n                color = 0xFF0000; // red - to indicate unexpected owner ID\r\n            }\r\n\r\n            this._logger.info('Using default color (annotationCreated message does not have color information): ' + color.toString(16));\r\n        }\r\n\r\n        this.event('annotationCreated').raise(ownerId, requestId, annotationId, annotationType, positionX, positionY, scale, angleInDegrees, color);\r\n    }\r\n\r\n    private _processAnnotationModifiedMessage(view: DataView) {\r\n        let ownerId: number = view.getUint32(1, true);\r\n        let requestId: number = view.getUint32(5, true);\r\n        let annotationId: number = view.getUint32(9, true);\r\n        let annotationType: number = view.getUint8(13);\r\n        let positionX: number = view.getFloat32(14, true);\r\n        let positionY: number = view.getFloat32(18, true);\r\n\r\n        this.event('annotationModified').raise(ownerId, requestId, annotationId, annotationType, positionX, positionY);\r\n    }\r\n\r\n    private _processAnnotationRemovedMessage(view: DataView) {\r\n        let ownerId: number = view.getUint32(1, true);\r\n        let requestId: number = view.getUint32(5, true);\r\n        let annotationId: number = view.getUint32(9, true);\r\n        let isPermanent: boolean = view.getUint8(13) === 1;\r\n\r\n        this.event('annotationRemoved').raise(ownerId, requestId, annotationId, isPermanent);\r\n    }\r\n\r\n    private _processInteractionReadyMessage(view: DataView) {\r\n        this.event('interactionReady').raise();\r\n    }\r\n\r\n    private _processInteractionTerminatedMessage(view: DataView) {\r\n        let terminatedReason: number = view.getUint8(1);\r\n\r\n        this.event('interactionTerminated').raise(terminatedReason);\r\n    }\r\n\r\n    private _clearCapturerEventSubscriptions() {\r\n        this._logger.info('_clearCapturerEventSubscriptions()');\r\n\r\n        if (this._holographicControlEventSubscription) {\r\n            this._holographicControlEventSubscription.dispose();\r\n            this._holographicControlEventSubscription = null;\r\n        }\r\n\r\n        if (this._holographicCaptureEventSubscription) {\r\n            this._holographicCaptureEventSubscription.dispose();\r\n            this._holographicCaptureEventSubscription = null;\r\n        }\r\n    }\r\n\r\n    private _disposeControlCapturer() {\r\n        this._logger.info('_disposeControlCapturer');\r\n\r\n        this._clearCapturerEventSubscriptions();\r\n\r\n        if (this._controlCapturer) {\r\n            this._controlCapturer.dispose();\r\n            this._controlCapturer = null;\r\n        }\r\n    }\r\n\r\n    private _onDataChannelStatusChanged(dataChannelStatus: number): void {\r\n        if (!this._featureFlagEnabled) { return; }\r\n\r\n        this._logger.info('Data channel status = ' + dataChannelStatus);\r\n\r\n        // 1. When call is established, sharer/viewer will get DataChannelStatus.Available status change\r\n        // 2. When sharer calls Start(), sharer gets status change to 'Starting', then 'Active',\r\n        // while viewer gets status change to 'Active'\r\n        // 3. When sharer calls Stop(), sharer gets status change to 'Stopping', then 'Available',\r\n        // while viewer gets status change to 'Available'\r\n        // So, this handler effectively only handles 'Active' and 'Available' status changes since both\r\n        // will get raised on sharer & viewer:\r\n\r\n        if (dataChannelStatus === SlimCore.Enums.DataChannelStatus.Active) {\r\n            if (this._dataChannel && !this._dataChannelActive) {\r\n                this._dataChannelActive = true;\r\n\r\n                // create and attach devices\r\n                this._createAndAttachControlDevices();\r\n                this._logger.info('_onDataChannelStatusChanged() - setting CaptureMode to Control');\r\n            }\r\n        }\r\n        else if (dataChannelStatus === SlimCore.Enums.DataChannelStatus.Available) {\r\n            if (this._dataChannel && this._dataChannelActive) {\r\n                this._dataChannelActive = false;\r\n\r\n                // detach any devices\r\n                this._detachAndDeleteControlDevices();\r\n                this._logger.info('_onDataChannelStatusChanged() - setting CaptureMode to Disabled');\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronHolographicInteractionControl.ts","import { CallingLogger } from 'skype-calling-interface';\r\nimport { ILightWeightMeeting } from 'skype-calling-interface';\r\nimport { LightWeightMeetingState } from 'skype-calling-interface';\r\nimport { SessionTerminatedReason } from 'skype-calling-interface';\r\nimport { TerminatedReason } from 'skype-calling-interface';\r\n\r\nimport SlimCoreElectronBase from './SlimCoreElectronBase';\r\nimport SlimCoreElectronCall from './SlimCoreElectronCall';\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\nimport * as _ from 'lodash';\r\nimport * as async from '../../common/ts/async';\r\n\r\n// From electron/typings/slimcore-enums.d.ts:\r\nimport Enums = SlimCore.Enums;\r\n\r\nconst validStateTransitions: { [key: number]: LightWeightMeetingState[]; } = {\r\n    [LightWeightMeetingState.None]: [LightWeightMeetingState.Connecting, LightWeightMeetingState.Connected, LightWeightMeetingState.Disconnecting, LightWeightMeetingState.Disconnected],\r\n    [LightWeightMeetingState.Connecting]: [LightWeightMeetingState.Connected, LightWeightMeetingState.Disconnecting, LightWeightMeetingState.Disconnected],\r\n    [LightWeightMeetingState.Connected]: [LightWeightMeetingState.Disconnecting, LightWeightMeetingState.Disconnected],\r\n    [LightWeightMeetingState.Disconnecting]: [LightWeightMeetingState.Disconnected],\r\n    [LightWeightMeetingState.Disconnected]: [],\r\n};\r\n\r\nexport default class SlimCoreElectronLightWeightMeeting extends SlimCoreElectronBase<{}> implements ILightWeightMeeting {\r\n    public metadata: string = null;\r\n    public state = LightWeightMeetingState.None;\r\n    public stateReason: SessionTerminatedReason = null;\r\n\r\n    private slimCoreLightWeightMeetingId: number;\r\n    private _waitForStartLightWeightMeeting: async.Deferred<void>;\r\n    private _pendingDeferreds: async.Deferred<void>[] = [];\r\n\r\n    public constructor(\r\n        private _callHandler: SlimCoreCommon.CallHandler,\r\n        logger: CallingLogger,\r\n        private _slimcoreInstance: SlimCoreCommon.Engine,\r\n    ) {\r\n        super(logger.createChild(() => `SlimCoreElectronLightWeightMeeting`));\r\n        this._logger.log('constructor');\r\n\r\n        this._waitForStartLightWeightMeeting = async.defer<void>();\r\n        this._pendingDeferreds.push(this._waitForStartLightWeightMeeting);\r\n    }\r\n\r\n    public waitForLightWeightMeetinJoin(): Promise<void> {\r\n        return Promise.resolve(undefined)\r\n            .then(() => this._waitForStartLightWeightMeeting.promise);\r\n    }\r\n\r\n    public attachSlimCoreLightWeightMeetingId(attachLightWeightMeetingId: number): void {\r\n        if (this.slimCoreLightWeightMeetingId && this.slimCoreLightWeightMeetingId !== 0) {\r\n            this._logger.warn('Attach called on existing light weight meeting');\r\n            return;\r\n        }\r\n\r\n        this.slimCoreLightWeightMeetingId = attachLightWeightMeetingId;\r\n        this.metadata = this.getStrProperty(Enums.Property.LightWeightMeetingState);\r\n\r\n        this._onLightWeightMeetingPropertyChanged(Enums.Property.LightWeightMeetingStatus, data => this._onStatusChanged(data));\r\n        this._onLightWeightMeetingPropertyChanged(Enums.Property.LightWeightMeetingState, data => this._metadataChanged(data));\r\n\r\n        let lightWeightMeetingStatus = this.getIntProperty(Enums.Property.LightWeightMeetingStatus);\r\n        this._onStatusChanged({\r\n            objectType: Enums.ObjectType.LightWeightMeeting,\r\n            objectId: this.slimCoreLightWeightMeetingId,\r\n            propKey: Enums.Property.LightWeightMeetingStatus,\r\n            value: lightWeightMeetingStatus,\r\n        });\r\n\r\n        this.raiseChanged();\r\n    }\r\n\r\n    public getStrProperty(property: Enums.Property, fallback?: string): string {\r\n        return this._getStrProperty(this._callHandler, this.slimCoreLightWeightMeetingId, property, fallback);\r\n    }\r\n\r\n    public getIntProperty(property: Enums.Property, fallback?: number): number {\r\n        return this._getIntProperty(this._callHandler, this.slimCoreLightWeightMeetingId, property, fallback);\r\n    }\r\n\r\n    private _onLightWeightMeetingPropertyChanged(propKey: SlimCore.Enums.Property, listener: SlimCoreCommon.ObjectChangedCallback) {\r\n        this.registerCallback(SlimCoreCommon.onObjectPropertyChanged(this._slimcoreInstance, propKey, this.slimCoreLightWeightMeetingId, listener), true);\r\n    }\r\n\r\n    private _metadataChanged(eventData: SlimCoreCommon.ObjectChangedEvent) {\r\n        let metadata: string = eventData.value;\r\n        if (metadata !== this.metadata) {\r\n            this._logger.info(`Metadata for light weight meeting changed`);\r\n            this.metadata = metadata;\r\n            this.raiseChanged();\r\n        }\r\n    }\r\n\r\n    private _onStatusChanged(data: SlimCoreCommon.ObjectChangedEvent) {\r\n        this._logger.info(`Light weight meeting status changed ${data.value}`);\r\n\r\n        this.setState(SlimCoreElectronLightWeightMeeting.convertLightWeightMeetingStatus(data.value));\r\n    }\r\n\r\n    public setState(state: LightWeightMeetingState): void {\r\n        if (this.state === state) {\r\n            return;\r\n        }\r\n\r\n        const validNextStates = validStateTransitions[this.state];\r\n        const isValidNextState = validNextStates.indexOf(state) >= 0;\r\n\r\n        if (!isValidNextState) {\r\n            throw new Error(`Invalid state transition ${this.state} -> ${state} attempted for light weight meeting`);\r\n        }\r\n\r\n        this._logger.info(`setState for light weight meeting called. state: ${this.state} -> ${state}`);\r\n        this.state = state;\r\n\r\n        if (this.state === LightWeightMeetingState.Connected)\r\n        {\r\n          this._invokeDeferred(this._waitForStartLightWeightMeeting);\r\n        } else if (this.state === LightWeightMeetingState.Disconnected)\r\n        {\r\n            const failure = this.getIntProperty(Enums.Property.LightWeightMeetingFailureReason);\r\n            const code = this.getIntProperty(Enums.Property.LightWeightMeetingFailureCode);\r\n            const subCode = this.getIntProperty(Enums.Property.LightWeightMeetingFailureSubCode);\r\n            const reason = SlimCoreElectronCall.convertLightWeightFailureReasonToTerminatedReason(failure);\r\n\r\n            this._logger.info(`set failure reason for light weight meeting called. reason: ${reason}`);\r\n\r\n            this.stateReason = {\r\n                terminatedReason: reason,\r\n                terminatedReasonCode: code,\r\n                terminatedReasonSubCode: subCode,\r\n            };\r\n\r\n            this._rejectPendingPromises(reason);\r\n        }\r\n\r\n        this.raiseChanged();\r\n    }\r\n\r\n    private static convertLightWeightMeetingStatus(status: Enums.LightWeightMeetingStatus) {\r\n        switch (status) {\r\n            case Enums.LightWeightMeetingStatus.Initial:\r\n                return LightWeightMeetingState.None;\r\n            case Enums.LightWeightMeetingStatus.Connecting:\r\n                return LightWeightMeetingState.Connecting;\r\n            case Enums.LightWeightMeetingStatus.Connected:\r\n                return LightWeightMeetingState.Connected;\r\n            case Enums.LightWeightMeetingStatus.Finishing:\r\n                return LightWeightMeetingState.Disconnecting;\r\n            case Enums.LightWeightMeetingStatus.Done:\r\n                return LightWeightMeetingState.Disconnected;\r\n            default:\r\n                return LightWeightMeetingState.None;\r\n        }\r\n    }\r\n\r\n    private _rejectPendingPromises(terminatedReason: TerminatedReason) {\r\n        this._logger.info('rejectPendingPromises : Terminated, reason = ' + terminatedReason);\r\n\r\n        this._pendingDeferreds.forEach((deferred) => {\r\n            deferred.reject(new Error('Light weight meeting is terminated. Reason = ' + terminatedReason));\r\n        });\r\n        this._pendingDeferreds = [];\r\n    }\r\n\r\n    private _invokeDeferred(deferred: async.Deferred<void>) {\r\n        this._logger.info('_invokeDeferred');\r\n\r\n        if (deferred) {\r\n            _.pull(this._pendingDeferreds, deferred);\r\n            deferred.resolve();\r\n        }\r\n    }\r\n\r\n    public dispose(): void {\r\n        this.slimCoreLightWeightMeetingId = 0;\r\n        super.dispose();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronLightWeightMeeting.ts","/**\r\n * SlimCoreElectronScreenSharingControl.ts\r\n * Author: Michael Tsu\r\n * Copyright: Microsoft 2017\r\n *\r\n * SlimCore IScreenSharingControl implementation\r\n */\r\nimport { CallingLogger } from 'skype-calling-interface';\r\nimport { CaptureEvent } from './SlimCoreElectronControlCapturer';\r\nimport { CaptureMode } from './SlimCoreElectronControlCapturer';\r\nimport { ControlState } from 'skype-calling-interface';\r\nimport { ControlTerminatedReason } from 'skype-calling-interface';\r\nimport { DataChannelProtocolMessage } from './SlimCoreElectronDataChannel';\r\nimport { DataChannelProtocolType } from './SlimCoreElectronDataChannel';\r\nimport { EventSubscription } from '../../common/ts/events';\r\nimport { ICallParticipant } from 'skype-calling-interface';\r\nimport { InjectorMode } from '../typings/skype-calling-electron-embedded';\r\nimport { InjectorConfig } from '../typings/skype-calling-electron-embedded';\r\nimport { IMediaDataChannelUser } from './SlimCoreElectronDataChannel';\r\nimport { IScreenSharingControl } from 'skype-calling-interface';\r\nimport { IScreenSharingControlEvents } from 'skype-calling-interface';\r\nimport { ISlimCoreElectronControlInjector } from '../typings/skype-calling-electron-embedded';\r\nimport { MediaType } from 'skype-calling-interface';\r\nimport { MediaDataChannelState } from 'skype-calling-interface';\r\nimport { SharingControlCapability } from 'skype-calling-interface';\r\nimport { SharingControlInfo } from 'skype-calling-interface';\r\nimport { SharingControlRole } from 'skype-calling-interface';\r\nimport { SharingControlErrorReason } from 'skype-calling-interface';\r\nimport { SharingControlError } from 'skype-calling-interface';\r\nimport { SharingControlDisableReason } from 'skype-calling-interface';\r\nimport { AvailableHandshakeStatus } from 'skype-calling-interface';\r\nimport { AvailableHandshakeTerminatedReason } from 'skype-calling-interface';\r\n\r\nimport * as async from '../../common/ts/async';\r\nimport Guid from '../../common/ts/guid';\r\nimport * as SlimCoreCommon from './SlimCoreCommon';\r\nimport SlimCoreElectronBase from './SlimCoreElectronBase';\r\nimport SlimCoreElectronCallParticipant from './SlimCoreElectronCallParticipant';\r\nimport SlimCoreElectronControlCapturer from './SlimCoreElectronControlCapturer';\r\nimport SlimCoreElectronDataChannel from './SlimCoreElectronDataChannel';\r\nimport SlimCoreElectronRemoteVideoRenderer from './SlimCoreElectronRemoteVideoRenderer';\r\n\r\n// Timeout when waiting for control request\r\nconst CONTROL_REQUEST_WAIT_TIMEOUT = 30000;\r\n\r\n// Timeout when waiting for control acks\r\nconst CONTROL_ACK_WAIT_TIMEOUT = 10000;\r\nconst AVAILABLE_ACK_WAIT_TIMEOUT = 5000;\r\n// Timeout when waiting for bulky bubbling input raw errors\r\nconst INPUT_RAW_ERROR_REPORTING_WAIT_TIMEOUT = 10000;\r\nconst AVAILABLE_RETRY_LIMIT = 5;\r\n\r\n// Local participant mri\r\nconst LOCAL_PARTICIPANT_MRI = '';\r\n\r\nconst enum ControlAction {\r\n    Available,\r\n    ControlRequest,\r\n    CancelControlRequest,\r\n    AcceptRequest,\r\n    RejectRequest,\r\n    Ack,\r\n    GiveControl,\r\n    TerminateNoAck,\r\n    Terminate,\r\n    AvailableAck,\r\n}\r\n\r\ntype ControlDataChannelStatus = {\r\n    id: number;\r\n    readyForControl: boolean;\r\n    state: MediaDataChannelState;\r\n};\r\n\r\ntype ControlMessage = {\r\n    action: ControlAction;\r\n    terminatedReason: ControlTerminatedReason;\r\n    handshakeId?: string;\r\n};\r\n\r\ntype ControlRequest = {\r\n    timestamp: Date;\r\n    participant: ICallParticipant;\r\n};\r\n\r\nexport default class SlimCoreElectronScreenSharingControl extends SlimCoreElectronBase<IScreenSharingControlEvents>\r\n    implements IScreenSharingControl, IMediaDataChannelUser {\r\n\r\n    public controlState: ControlState = ControlState.None;\r\n    public role: SharingControlRole = SharingControlRole.Unknown;\r\n    public controlDataChannelStatus: ControlDataChannelStatus = { id: null, readyForControl: false, state: MediaDataChannelState.Unknown };\r\n\r\n    private _enabled: boolean = false;\r\n    private _availableAckEnabled: boolean = true;\r\n    private _dataChannel: SlimCoreElectronDataChannel;\r\n    private _dataChannelActive: boolean = false;\r\n    private _dataChannelAvailableSent: boolean = false;\r\n    private _protocolDataSource: SlimCore.DataSource = null;\r\n    private _controlDataSource: SlimCore.DataSource = null;\r\n    private _controlDataSink: SlimCore.DataSink = null;\r\n    private _controlRequest: ControlRequest = null;\r\n    private _controllerParticipant: ICallParticipant = null;\r\n    private _screenSharingVideoRenderer: SlimCore.VideoRenderer = null;\r\n    private _sharerParticipant: ICallParticipant = null;\r\n    private _controlCapturer: SlimCoreElectronControlCapturer = null;\r\n    private _captureEventSubscription: EventSubscription = null;\r\n    private _controlEventSubscription: EventSubscription = null;\r\n    private _requestControlTimer: number = null;\r\n    private _grantControlTimer: number = null;\r\n    private _acceptControlTimer: number = null;\r\n    private _terminateControlTimer: number = null;\r\n    private _availableAckTimer: number = null;\r\n    private _retryAttempt: number = 0;\r\n    private _injectRawInputErrorTimer: number = null;\r\n    private _lastInjectRawInputErrorCount: number = 0;\r\n\r\n    private _terminateAvailableHandshake: (reason?: AvailableHandshakeTerminatedReason, ackHandshakeId?: string) => void;\r\n\r\n    // viewer's action promise\r\n    private _requestControlPromise: async.Deferred<void>;\r\n\r\n    // sharer's action promise\r\n    private _grantControlPromise: async.Deferred<void>;\r\n    private _acceptControlPromise: async.Deferred<void>;\r\n\r\n    // both viewer's and sharer's promise\r\n    private _terminateControlPromise: async.Deferred<void>;\r\n\r\n    public constructor(\r\n        logger: CallingLogger,\r\n        public callId: string,\r\n        private _controlInjector: ISlimCoreElectronControlInjector,\r\n    ) {\r\n        super(logger.createChild(() => `SlimCoreElectronScreenSharingControl`));\r\n        this._logger.log('constructor');\r\n    }\r\n\r\n    // this is the function on the sharer side to turn on/off the available ack\r\n    public enableScreenSharingControl(enabled: boolean, reason?: SharingControlDisableReason, detail?: string) {\r\n        if (this._availableAckEnabled === enabled) {\r\n            return;\r\n        }\r\n\r\n        if (!enabled) {\r\n            if (reason === SharingControlDisableReason.SetInjectionFailed) {\r\n                let controlError: SharingControlError = {\r\n                    reason: SharingControlErrorReason.SetInjectionRectError,\r\n                    detail: detail };\r\n                this.event('sharingControlError').raise(controlError);\r\n            }\r\n            this._raiseScreenSharingControlCapableEvent(false, LOCAL_PARTICIPANT_MRI);\r\n        } else {\r\n            this._raiseScreenSharingControlCapableEvent(true, LOCAL_PARTICIPANT_MRI);\r\n        }\r\n        this._availableAckEnabled = enabled;\r\n    }\r\n\r\n    // feature flag\r\n    public setScreenSharingControlFeatureFlag(enabled: boolean) {\r\n        this._enabled = enabled;\r\n        this._availableAckEnabled = enabled;\r\n    }\r\n\r\n    public isScreenSharingControlEnabled(): boolean {\r\n        return this._enabled;\r\n    }\r\n\r\n    public setRenderer(renderer: any): Promise<void> {\r\n        return async.asap(() => this._setViewingRenderer(renderer));\r\n    }\r\n\r\n    public setDataChannel(channel: SlimCoreElectronDataChannel): Promise<void> {\r\n        return async.asap(() => this._setDataChannel(channel));\r\n    }\r\n\r\n    private _setDataChannel(channel: SlimCoreElectronDataChannel): void {\r\n        this._logger.info(`Setting DataChannel ${channel && channel.id}`);\r\n        if (this._dataChannel && !channel) {\r\n            this._detachAndDeleteControlDevices();\r\n        }\r\n        this._dataChannel = channel;\r\n        if (channel) {\r\n            this.controlDataChannelStatus = {\r\n                id: channel.id,\r\n                readyForControl: false,\r\n                state: SlimCoreElectronDataChannel._mapDataChannelStatus(channel._lastDataChannelState),\r\n            };\r\n            this.event('controlDataChannelStateChanged').raise(this.controlDataChannelStatus);\r\n        }\r\n    }\r\n\r\n    public setProtocolDataSource(source: SlimCore.DataSource): Promise<void> {\r\n        return async.asap(() => this._setProtocolDataSource(source));\r\n   }\r\n\r\n    private _setProtocolDataSource(source: SlimCore.DataSource): void {\r\n        this._protocolDataSource = source;\r\n    }\r\n\r\n    private _raiseScreenSharingControlCapableEvent(isCapable: boolean, participantId: string): void {\r\n        if (this._enabled) {\r\n            // Notify app that local participant can use the control/pointer feature\r\n            this._logger.info('_raiseScreenSharingControlCapableEvent() enabled is true, raising control capability, capable=' + isCapable);\r\n            let capable: SharingControlCapability = { capable: isCapable, id: participantId };\r\n            this.event('sharingControlCapable').raise(capable);\r\n        } else {\r\n            this._logger.info('_raiseScreenSharingControlCapableEvent() enabled is false, disabling control capability');\r\n            let capable: SharingControlCapability = { capable: false, id: participantId };\r\n            this.event('sharingControlCapable').raise(capable);\r\n        }\r\n    }\r\n\r\n    public initControlForSharer(): void {\r\n        this._logger.info('initControlForSharer()');\r\n\r\n        // Reset some state\r\n        this._resetControlState();\r\n\r\n        // Sharer doesn't need renderer / capturer:\r\n        this._screenSharingVideoRenderer = null;\r\n        this._disposeControlCapturer();\r\n\r\n        this.role = SharingControlRole.Sharer;\r\n        this._dataChannelAvailableSent = false; // this is a viewer only flag, should be false for sharer\r\n\r\n        // Set seamless mode which tells injector\r\n        // we want multiple cursors\r\n        // @TODO: for now, set to disabled until we\r\n        // enable pointing\r\n        this._setInjectorMode(InjectorMode.Disabled);\r\n\r\n        // Notify app that local participant can use the control/pointer feature\r\n        this._raiseScreenSharingControlCapableEvent(true, LOCAL_PARTICIPANT_MRI);\r\n    }\r\n\r\n    public shutdownControlForSharer(): void {\r\n        this._logger.info('shutdownControlForSharer()');\r\n\r\n        // Check if there is any pending control requests...reject them here:\r\n        if (this._controlRequest) {\r\n            this._logger.warn('Rejecting pending control requests');\r\n\r\n            let controlRequesterSourceId = this._mapParticipantToSourceId(this._controlRequest.participant);\r\n            this._controlRequest = null;\r\n\r\n            this._sendRequest(\r\n                { action: ControlAction.RejectRequest, terminatedReason: ControlTerminatedReason.SharerTerminated }, controlRequesterSourceId);\r\n        }\r\n\r\n        this.role = SharingControlRole.Unknown;\r\n\r\n        if (this._controllerParticipant) {\r\n            // Notify app\r\n            let controlInfo: SharingControlInfo = {\r\n                inControl: false,\r\n                id: this._controllerParticipant.id,\r\n                terminatedReason: ControlTerminatedReason.SharerTerminated,\r\n            };\r\n            this.event('sharingControlChanged').raise(controlInfo);\r\n        }\r\n\r\n        // Reset some state\r\n        this._teardownSharerRemoteControl();\r\n        this._resetControlState();\r\n        this._availableAckEnabled = this._enabled;\r\n    }\r\n\r\n    public initControlForViewer(sharer: ICallParticipant): void {\r\n        this._logger.info('initControlForViewer()');\r\n\r\n        this.role = SharingControlRole.Viewer;\r\n\r\n        // Check if sharer has changed and needs to be updated\r\n        if (this._sharerParticipant) {\r\n            if (this._sharerParticipant.id !== sharer.id) {\r\n                this._logger.info('initControlForViewer() sharer switched, new sharer id=' + sharer.id);\r\n                // Sharer switched, we should send ControlAction.Available to the new sharer\r\n                this._dataChannelAvailableSent = false;\r\n\r\n                // And give up control if we had it\r\n                if (this.controlState === ControlState.LocalControlling) {\r\n                    this._terminateControl(false);\r\n                }\r\n            }\r\n        } else {\r\n            this._logger.info('initControlForViewer() setting sharer to id=' + sharer.id);\r\n            this._sharerParticipant = sharer;\r\n            this._dataChannelAvailableSent = false;\r\n        }\r\n\r\n        if (this._dataChannel && this._dataChannelActive && !this._dataChannelAvailableSent) {\r\n\r\n            // Reset some state\r\n            this._resetControlState();\r\n\r\n            this.role = SharingControlRole.Viewer;\r\n            this._sharerParticipant = sharer;\r\n\r\n            let sharerSourceId: number = this._mapParticipantToSourceId(this._sharerParticipant);\r\n            // Remote participant started screen sharing\r\n            // Send an 'Available' message to sharer\r\n            this._logger.info('initControlForViewer() sending Available message to sharer');\r\n            this._startAvailableHandshake(sharerSourceId);\r\n        }\r\n    }\r\n\r\n    public shutdownControlForViewer(sharer?: ICallParticipant): void {\r\n        this._logger.info('shutdownControlForViewer()');\r\n\r\n        let shouldShutdownControlForViewer: boolean = false;\r\n        if (!sharer ||\r\n            (this._sharerParticipant && sharer.id === this._sharerParticipant.id)) {\r\n            // We should shutdown control for viewer if sharer param is null, or\r\n            // sharer matches our sharer\r\n            this._logger.info('shutdownControlForViewer: setting shouldShutdownControlForViewer to true');\r\n            shouldShutdownControlForViewer = true;\r\n        }\r\n\r\n        if (shouldShutdownControlForViewer && this._isViewing()) {\r\n\r\n            if (this.controlState === ControlState.RequestSent) {\r\n\r\n                if (this._sharerParticipant) {\r\n                    let sharerSourceId: number = this._mapParticipantToSourceId(this._sharerParticipant);\r\n                    this._sendRequest(\r\n                        { action: ControlAction.CancelControlRequest, terminatedReason: ControlTerminatedReason.ViewerTerminated }, sharerSourceId);\r\n                }\r\n                else {\r\n                    this._logger.warn('shutdownControlForViewer: sharer participant is null');\r\n                }\r\n\r\n                // Raise an event notifying that the request was 'cancelled'\r\n                let controlInfo: SharingControlInfo = {\r\n                    inControl: false,\r\n                    id: LOCAL_PARTICIPANT_MRI, // local participant\r\n                    terminatedReason: ControlTerminatedReason.ViewerTerminated,\r\n                };\r\n\r\n                if (this._requestControlPromise) {\r\n                    this._requestControlPromise.reject(new Error(JSON.stringify({controlInfo: controlInfo, details: ''})));\r\n                } else {\r\n                    this._logger.error('Unexpected, no promise could be resolved - state =ControlState.RequestSent action =shutdownControlForViewer');\r\n                }\r\n            } else if (this.controlState === ControlState.LocalControlling) {\r\n                // Notify app\r\n                let controlInfo: SharingControlInfo = {\r\n                    inControl: false,\r\n                    id: LOCAL_PARTICIPANT_MRI,\r\n                    terminatedReason: ControlTerminatedReason.ViewerTerminated,\r\n                };\r\n                this.event('sharingControlChanged').raise(controlInfo);\r\n            }\r\n\r\n            // Reset some state\r\n            this._teardownViewerRemoteControl();\r\n            this._resetControlState();\r\n\r\n            this._screenSharingVideoRenderer = null;\r\n            this._disposeControlCapturer();\r\n            if (this._terminateAvailableHandshake) {\r\n                this._terminateAvailableHandshake(AvailableHandshakeTerminatedReason.Shutdown);\r\n            }\r\n\r\n            this._dataChannelAvailableSent = false;\r\n\r\n            // Raise an event indicating that local user cannot do control/pointers\r\n            this._raiseScreenSharingControlCapableEvent(false, LOCAL_PARTICIPANT_MRI);\r\n        }\r\n    }\r\n\r\n    public handleParticipantRemoved(participantId: string): void {\r\n        // A participant was removed, check if it is controller and if so, teardown the control session\r\n        if (this._isSharing()) {\r\n            if (this._controllerParticipant && this._controllerParticipant.id === participantId) {\r\n                this._logger.info('handleParticipantRemoved: controller left call, tearing down control session');\r\n                // The controller left the call, teardown the control session\r\n                this._teardownSharerRemoteControl();\r\n                this.controlState = ControlState.None;\r\n                this._controllerParticipant = null;\r\n\r\n                // Notify app that control terminated\r\n                let controlInfo: SharingControlInfo = {\r\n                    inControl: false,\r\n                    id: participantId,\r\n                    terminatedReason: ControlTerminatedReason.SharerTerminated,\r\n                };\r\n                this.event('sharingControlChanged').raise(controlInfo);\r\n            }\r\n\r\n            // Notify app that this participant is no longer control capable\r\n            this._raiseScreenSharingControlCapableEvent(false, participantId);\r\n        }\r\n        else {\r\n            // viewing\r\n            if (this._sharerParticipant && this._sharerParticipant.id === participantId && this.controlState === ControlState.LocalControlling) {\r\n                // The sharer left the call while we were in control, do some cleanup\r\n                this._logger.info('handleParticipantRemoved: sharer left call, tearing down control session');\r\n                this._teardownViewerRemoteControl();\r\n                this.controlState = ControlState.None;\r\n\r\n                // Notify app\r\n                let controlInfo: SharingControlInfo = {\r\n                    inControl: false,\r\n                    id: LOCAL_PARTICIPANT_MRI,\r\n                    terminatedReason: ControlTerminatedReason.ViewerTerminated,\r\n                };\r\n                this.event('sharingControlChanged').raise(controlInfo);\r\n            }\r\n        }\r\n    }\r\n\r\n    public handleCallDisconnected(): void {\r\n        this._logger.info('handleCallDisconnected()');\r\n\r\n        // Handle any cleanup when call has disconnected\r\n        if (this._isSharing()) {\r\n            this.shutdownControlForSharer();\r\n        } else {\r\n            this.shutdownControlForViewer();\r\n        }\r\n    }\r\n\r\n    private _videoSizeChanged(width: number, height: number) {\r\n        if (this._controlCapturer != null) {\r\n            this._controlCapturer.updateVideoSize(width, height);\r\n        }\r\n    }\r\n\r\n    private _setViewingRenderer(renderer: any): void {\r\n        try {\r\n\r\n            this._screenSharingVideoRenderer = null;\r\n            this._disposeControlCapturer();\r\n\r\n            // Save the new renderer and create the capturer\r\n            let screenSharingRenderer = renderer as SlimCoreElectronRemoteVideoRenderer;\r\n            if (screenSharingRenderer) {\r\n                this._screenSharingVideoRenderer = screenSharingRenderer.videoRenderer;\r\n                this._screenSharingVideoRenderer.on('video-size-changed', (args) => this._videoSizeChanged(args.width, args.height));\r\n\r\n                this._controlCapturer = new SlimCoreElectronControlCapturer(this._logger, screenSharingRenderer.renderTarget as HTMLElement);\r\n\r\n                if (this.controlState === ControlState.LocalControlling) {\r\n                    // We were already in control (could be that user switched from viewing\r\n                    // while in control, to chat), and the renderer has changed, let's continue\r\n                    // being in control\r\n                    this._logger.info('_setViewingRenderer: detected local state is controlling');\r\n                    this._setupViewerRemoteControl();\r\n                } else {\r\n                    // @TODO: For now, go to disabled - eventually go to detection mode\r\n                    // when we support pointers\r\n                    this._setCapturerMode(CaptureMode.Disabled);\r\n                }\r\n            } else {\r\n                this._logger.error('_setViewingRenderer: screenSharingRenderer is null');\r\n            }\r\n        } catch (error) {\r\n            this._logger.error('_setViewingRenderer: unable to set _screenSharingVideoRenderer error = ' + error);\r\n        }\r\n    }\r\n\r\n    private _isSharing(): boolean {\r\n        return (this.role === SharingControlRole.Sharer);\r\n    }\r\n\r\n    private _isViewing(): boolean {\r\n        return (this.role === SharingControlRole.Viewer);\r\n    }\r\n\r\n    private _createAndAttachControlDevices(): void {\r\n        this._logger.info('_createAndAttachControlDevices()');\r\n        if (!SlimCore.createDataSource || !SlimCore.createDataSink) {\r\n            this._logger.warn('createDataSource or createDataSink not implemented');\r\n            return;\r\n        }\r\n\r\n        if (this._dataChannel) {\r\n\r\n            let registerDataSource: Promise<void> = Promise.resolve<void>();\r\n            let registerDataSink: Promise<void> = Promise.resolve<void>();\r\n            // Create/register source/sink\r\n            if (!this._controlDataSource) {\r\n                this._controlDataSource = SlimCore.createDataSource(SlimCore.Enums.DataDeviceId.Control);\r\n                this._logger.info('created Control DataSource');\r\n\r\n                registerDataSource = this._dataChannel.registerDataSource(this._controlDataSource)\r\n                    .then(() => this._logger.info('registered Control DataSource'))\r\n                    .catch((error) => this._logger.error('registerDataSource threw exception:' + error));\r\n            }\r\n\r\n            if (!this._controlDataSink) {\r\n                this._controlDataSink = SlimCore.createDataSink(SlimCore.Enums.DataDeviceId.Control);\r\n                this._logger.info('created Control DataSink');\r\n\r\n                registerDataSink = this._dataChannel.registerDataSink(this._controlDataSink)\r\n                    .then(() => this._logger.info('registered Control DataSink'))\r\n                    .catch((error) => this._logger.error('registerDataSink threw exception:' + error));\r\n            }\r\n\r\n            Promise.all([registerDataSource, registerDataSink]).then(() => {\r\n                this.controlDataChannelStatus.readyForControl = true;\r\n                this.event('controlDataChannelStateChanged').raise(this.controlDataChannelStatus);\r\n            });\r\n\r\n            this._controlDataSink.on('data', ((args: SlimCore.DataSink.Events.DataArgs) => {\r\n                this._controlInjector.injectRawInput(args.data, args.sourceID).catch((error) => {\r\n                    this._lastInjectRawInputErrorCount++;\r\n                    if (this._injectRawInputErrorTimer === null) {\r\n                        this._injectRawInputErrorTimer = setTimeout(() => {\r\n\r\n                            let controlError: SharingControlError = {\r\n                                reason: SharingControlErrorReason.InjectRawInputError,\r\n                                detail: JSON.stringify({count: this._lastInjectRawInputErrorCount, errorMsg: error}) };\r\n                            this.event('sharingControlError').raise(controlError);\r\n\r\n                            this._lastInjectRawInputErrorCount = 0;\r\n                            this._injectRawInputErrorTimer = null;\r\n                        }, INPUT_RAW_ERROR_REPORTING_WAIT_TIMEOUT);\r\n                    }\r\n                });\r\n            }));\r\n        } else {\r\n            this._logger.warn('_createAndAttachControlDevices() null dataChannel');\r\n        }\r\n    }\r\n\r\n    private _detachAndDeleteControlDevices(): void {\r\n        this._logger.info('_detachAndDeleteControlDevices()');\r\n\r\n        // Remove data callback\r\n        if (this._controlDataSink) {\r\n            this._controlDataSink.removeAllListeners('data');\r\n        }\r\n\r\n        if (this._dataChannel) {\r\n            // Unregister the source/sink\r\n            if (this._controlDataSource) {\r\n\r\n                this._dataChannel.unregisterDataSource(this._controlDataSource)\r\n                    .then(() => this._logger.info('Control DataSource unregistered'))\r\n                    .catch((error) => this._logger.warn('unregisterDataSource threw exception:' + error));\r\n\r\n                this._controlDataSource = null;\r\n                this._logger.info('deleted Control data source');\r\n           }\r\n\r\n            if (this._controlDataSink) {\r\n\r\n                this._dataChannel.unregisterDataSink(this._controlDataSink)\r\n                    .then(() => this._logger.info('Control DataSink unregistered'))\r\n                    .catch((error) => this._logger.warn('unregisterDataSink threw exception:' + error));\r\n\r\n                this._controlDataSink = null;\r\n                this._logger.info('deleted Control data sink');\r\n            }\r\n        } else {\r\n            this._logger.warn('_detachAndDeleteControlDevices() null dataChannel');\r\n        }\r\n\r\n    }\r\n\r\n    public onDataChannelStatusChanged(dataChannelStatus: number): Promise<void> {\r\n        return async.asap(() => this._onDataChannelStatusChanged(dataChannelStatus));\r\n    }\r\n\r\n    private _onDataChannelStatusChanged(dataChannelStatus: number): void {\r\n        this._logger.info('Data channel status = ' + dataChannelStatus);\r\n        this.controlDataChannelStatus.readyForControl = this.controlDataChannelStatus.readyForControl && dataChannelStatus === SlimCore.Enums.DataChannelStatus.Active;\r\n        this.controlDataChannelStatus.state = SlimCoreElectronDataChannel._mapDataChannelStatus(dataChannelStatus);\r\n        this.event('controlDataChannelStateChanged').raise(this.controlDataChannelStatus);\r\n\r\n        // 1. When call is established, sharer/viewer will get DataChannelStatus.Available status change\r\n        // 2. When sharer calls Start(), sharer gets status change to 'Starting', then 'Active',\r\n        // while viewer gets status change to 'Active'\r\n        // 3. When sharer calls Stop(), sharer gets status change to 'Stopping', then 'Available',\r\n        // while viewer gets status change to 'Available'\r\n        // So, this handler effectively only handles 'Active' and 'Available' status changes since both\r\n        // will get raised on sharer & viewer:\r\n\r\n        if (dataChannelStatus === SlimCore.Enums.DataChannelStatus.Active) {\r\n\r\n            if (this._enabled) {\r\n                if (this._dataChannel && !this._dataChannelActive) {\r\n                    this._dataChannelActive = true;\r\n\r\n                    // create and attach devices\r\n                    this._createAndAttachControlDevices();\r\n\r\n                    if (this._isViewing()) {\r\n                        if (!this._dataChannelAvailableSent) {\r\n\r\n                            if (this._sharerParticipant) {\r\n\r\n                                let sharerSourceId: number = this._mapParticipantToSourceId(this._sharerParticipant);\r\n\r\n                                // Send an 'Available' message to sharer\r\n                                this._logger.info('_onDataChannelStatusChanged() sending Available message to sharer');\r\n                                this._startAvailableHandshake(sharerSourceId);\r\n                            } else {\r\n                                this._logger.error('Unexpected null _sharerParticipant trying to send Available to sharer');\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (this._isSharing()) {\r\n                        // Notify app that local participant can use the control/pointer feature\r\n                        this._raiseScreenSharingControlCapableEvent(true, LOCAL_PARTICIPANT_MRI);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (this._dataChannel && this._dataChannelActive) {\r\n                // reset some state\r\n                this._dataChannelActive = false;\r\n                this._dataChannelAvailableSent = false;\r\n                if (this._terminateAvailableHandshake) {\r\n                    this._terminateAvailableHandshake(AvailableHandshakeTerminatedReason.DataChannel);\r\n                } else {\r\n                    // Raise generic error when handshake already terminated\r\n                    let controlError: SharingControlError = {\r\n                        reason: SharingControlErrorReason.DataChannelInactive,\r\n                    };\r\n                    // Raise event to app\r\n                    this.event('sharingControlError').raise(controlError);\r\n                }\r\n\r\n                // detach any devices\r\n                this._detachAndDeleteControlDevices();\r\n\r\n                // Raise an event indicating that local user cannot do control/pointers\r\n                this._raiseScreenSharingControlCapableEvent(false, LOCAL_PARTICIPANT_MRI);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _mapParticipantToSourceId(participant: ICallParticipant): number {\r\n        let sourceId: number = -1;\r\n        if (participant) {\r\n            let p: SlimCoreElectronCallParticipant = participant as SlimCoreElectronCallParticipant;\r\n            sourceId = p.getSourceIdForMediaType(MediaType.Data);\r\n        }\r\n        else {\r\n            this._logger.error('_mapParticipantToSourceId unexpected null participant');\r\n        }\r\n        return sourceId;\r\n    }\r\n\r\n    public processProtocolMessage(message: string, sender: ICallParticipant, senderSourceId: number): Promise<void> {\r\n        return async.asap(() => this._processProtocolMessage(message, sender, senderSourceId));\r\n    }\r\n\r\n    public _processProtocolMessage(message: string, sender: ICallParticipant, senderSourceId: number): void {\r\n        // Parse the message:\r\n        let controlMessage: ControlMessage = JSON.parse(message);\r\n\r\n        this._logger.info('_processProtocolMessage action=' + controlMessage.action + ' sender=' + senderSourceId);\r\n\r\n        if (controlMessage.action === ControlAction.Available) {\r\n            if (this._enabled === false) {\r\n                this._logger.info('feature flag is off. no need to answer the available ack');\r\n            } else if (this._availableAckEnabled === false) {\r\n                this._logger.info('available ack is off. no need to answer the available ack');\r\n            } else {\r\n                if (sender && sender.id) {\r\n                    // A participant's data channel is ready to enable pointers/control\r\n                    this._raiseScreenSharingControlCapableEvent(true, sender.id);\r\n\r\n                    this._logger.info(`Acking Available for handShake:${senderSourceId}:${controlMessage.handshakeId}`);\r\n                    this.event('controlAvailableHandshake').raise(controlMessage.handshakeId, senderSourceId, AvailableHandshakeStatus.Acking);\r\n\r\n                    // Send an ack\r\n                    this._sendRequest(\r\n                        { action: ControlAction.AvailableAck, terminatedReason: ControlTerminatedReason.None, handshakeId: controlMessage.handshakeId }, senderSourceId);\r\n                } else {\r\n                    this._logger.error('Got Available message but could not find a sender participant, ignoring');\r\n                    this.event('controlAvailableHandshake').raise(controlMessage.handshakeId, senderSourceId, AvailableHandshakeStatus.Dropping, AvailableHandshakeTerminatedReason.UnknownSender);\r\n                }\r\n            }\r\n        }\r\n\r\n        else if (controlMessage.action === ControlAction.ControlRequest) {\r\n            if (this._enabled === false) {\r\n                this._logger.warn('Sharer control is disabled - rejecting request');\r\n\r\n                this._sendRequest(\r\n                    { action: ControlAction.RejectRequest, terminatedReason: ControlTerminatedReason.SharerControlDisabled }, senderSourceId);\r\n            } else if (this._controlRequest) {\r\n                this._logger.warn('Sharer is already processing a control request...rejecting new requests');\r\n\r\n                this._sendRequest(\r\n                    { action: ControlAction.RejectRequest, terminatedReason: ControlTerminatedReason.SharerBusy }, senderSourceId);\r\n            } else if (sender === this._controllerParticipant) {\r\n                // We got a request for control by someone who is already in control\r\n                this._logger.warn('Got control request for someone already in control');\r\n                this._sendRequest(\r\n                    {action: ControlAction.AcceptRequest, terminatedReason: ControlTerminatedReason.None}, senderSourceId);\r\n            } else {\r\n                if (sender) {\r\n                    this._controlRequest = { timestamp: new Date(), participant: sender };\r\n                    this.event('sharingIncomingControlRequest').raise(sender.id);\r\n                } else {\r\n                    this._logger.error('Got ControlRequest message but could not find a sender participant, ignoring');\r\n                }\r\n            }\r\n        }\r\n        else if (controlMessage.action === ControlAction.AcceptRequest) {\r\n\r\n            if (this.controlState === ControlState.RequestSent) {\r\n\r\n                // Send ack\r\n                let sent: boolean = this._sendRequest(\r\n                    { action: ControlAction.Ack, terminatedReason: ControlTerminatedReason.None }, senderSourceId);\r\n\r\n                if (sent) {\r\n                    this._setupViewerRemoteControl();\r\n                    this.controlState = ControlState.LocalControlling;\r\n\r\n                    if (this._requestControlPromise) {\r\n                        this._requestControlPromise.resolve();\r\n                    } else {\r\n                        this._logger.error(`Unexpected, no promise could be resolved - state =ControlState.RequestSent action =${controlMessage.action}`);\r\n                    }\r\n                } else {\r\n                    if (this._requestControlPromise) {\r\n                        this._requestControlPromise.reject(new Error(JSON.stringify({controlInfo: undefined, details: 'request control is accepted, but fail to send ack'})));\r\n                    } else {\r\n                        this._logger.error(`Unexpected, no promise could be resolved - state =${this.controlState} action =${controlMessage.action}`);\r\n                    }\r\n                }\r\n                this._cancelRequestControlTimer();\r\n\r\n            } else {\r\n                this._logger.warn('AcceptRequest message received in controlState=' + this.controlState);\r\n            }\r\n        }\r\n        else if (controlMessage.action === ControlAction.RejectRequest) {\r\n\r\n            if (this.controlState === ControlState.RequestSent) {\r\n\r\n                this.controlState = ControlState.None;\r\n\r\n                let controlInfo: SharingControlInfo = {\r\n                    inControl: false,\r\n                    id: LOCAL_PARTICIPANT_MRI, // local participant\r\n                    terminatedReason: controlMessage.terminatedReason,\r\n                };\r\n\r\n                if (this._requestControlPromise) {\r\n                    this._requestControlPromise.reject(new Error(JSON.stringify({controlInfo: controlInfo, details: ''})));\r\n                } else {\r\n                    this._logger.error(`Unexpected, no promise could be resolved - state =ControlState.RequestSent action =${controlMessage.action}`);\r\n                }\r\n\r\n                this._cancelRequestControlTimer();\r\n            } else {\r\n                this._logger.warn('RejectRequest message received in controlState=' + this.controlState + ' reason=' + controlMessage.terminatedReason);\r\n            }\r\n        }\r\n        else if (controlMessage.action === ControlAction.CancelControlRequest) {\r\n            if (this._controlRequest) {\r\n\r\n                let controlRequesterId = this._controlRequest.participant.id;\r\n                this._controlRequest = null;\r\n\r\n                               // Notify app that the control request was cancelled\r\n                this.event('sharingIncomingControlRequestCancelled').raise(controlRequesterId);\r\n            }\r\n        }\r\n        else if (controlMessage.action === ControlAction.GiveControl) {\r\n\r\n            // Send ack\r\n            let sent: boolean = this._sendRequest(\r\n                { action: ControlAction.Ack, terminatedReason: ControlTerminatedReason.None }, senderSourceId);\r\n\r\n            if (sent) {\r\n                this._setupViewerRemoteControl();\r\n                this.controlState = ControlState.LocalControlling;\r\n\r\n                let controlInfo: SharingControlInfo = {\r\n                    inControl: true,\r\n                    id: LOCAL_PARTICIPANT_MRI, // local participant\r\n                    terminatedReason: controlMessage.terminatedReason,\r\n                };\r\n                this.event('sharingControlChanged').raise(controlInfo);\r\n            }\r\n\r\n        }\r\n        else if (controlMessage.action === ControlAction.Ack) {\r\n\r\n            if (this.controlState === ControlState.WaitingForControlAck) {\r\n\r\n                if (sender === this._controllerParticipant) {\r\n\r\n                    let controllerSourceId: number = this._mapParticipantToSourceId(this._controllerParticipant);\r\n\r\n                    this._logger.info('Setting up remote control for controller source id=' + controllerSourceId);\r\n\r\n                    this._setupSharerRemoteControl(controllerSourceId);\r\n                    this.controlState = ControlState.RemoteControlling;\r\n\r\n                    let controlInfo: SharingControlInfo = {\r\n                        inControl: true,\r\n                        id: this._controllerParticipant.id,\r\n                        terminatedReason: controlMessage.terminatedReason,\r\n                    };\r\n                    this.event('sharingControlChanged').raise(controlInfo);\r\n                    if (this._grantControlPromise) {\r\n                        this._grantControlPromise.resolve();\r\n                        this._cancelGrantControlTimer();\r\n                    } else if (this._acceptControlPromise) {\r\n                        this._acceptControlPromise.resolve();\r\n                        this._cancelAcceptControlTimer();\r\n                    } else {\r\n                        this._logger.error(`Unexpected, no promise could be resolved - state =ControlState.WaitingForControlAck action =${controlMessage.action}`);\r\n                    }\r\n                } else if (sender) {\r\n                    this._logger.warn('Ignoring ack from participant that does not match controller id =' + sender.id);\r\n                } else {\r\n                    this._logger.warn('Ignoring ack from null participant source id =' + senderSourceId);\r\n                }\r\n            }\r\n            else if (this.controlState === ControlState.WaitingForTerminateAck) {\r\n                this.controlState = ControlState.None;\r\n                this._controllerParticipant = null;\r\n\r\n                if (this._terminateControlPromise) {\r\n                    this._terminateControlPromise.resolve();\r\n                    this._cancelTerminateControlTimer();\r\n                } else {\r\n                    this._logger.error(`Unexpected, no promise could be resolved - state =ControlState.WaitingForTerminateAck action =${controlMessage.action}`);\r\n                }\r\n            }\r\n            else {\r\n                this._logger.warn(`Unexpected ack in control state = ${this.controlState}`);\r\n            }\r\n        }\r\n        else if (controlMessage.action === ControlAction.TerminateNoAck ||\r\n            controlMessage.action === ControlAction.Terminate) {\r\n\r\n            let controllerId: string;\r\n            if (this._isViewing()) {\r\n                this._teardownViewerRemoteControl();\r\n                controllerId = LOCAL_PARTICIPANT_MRI; // local participant\r\n            } else {\r\n                this._teardownSharerRemoteControl();\r\n                if (sender) {\r\n                    controllerId = sender.id;\r\n                } else {\r\n                    this._logger.error('Got terminate message but could not find a sender participant!');\r\n                }\r\n            }\r\n\r\n            this.controlState = ControlState.None;\r\n            this._controllerParticipant = null;\r\n\r\n            let controlInfo: SharingControlInfo = {\r\n                inControl: false,\r\n                id: controllerId,\r\n                terminatedReason: controlMessage.terminatedReason,\r\n            };\r\n            this.event('sharingControlChanged').raise(controlInfo);\r\n\r\n            if (controlMessage.action === ControlAction.Terminate) {\r\n                // Send ack\r\n                this._sendRequest(\r\n                    { action: ControlAction.Ack, terminatedReason: ControlTerminatedReason.None }, senderSourceId);\r\n            }\r\n        }\r\n        else if (controlMessage.action === ControlAction.AvailableAck) {\r\n            if (this._terminateAvailableHandshake) {\r\n                this._terminateAvailableHandshake(AvailableHandshakeTerminatedReason.Succeeded, controlMessage.handshakeId);\r\n            }\r\n\r\n            // Notify app that local participant can use the control/pointer feature\r\n            this._raiseScreenSharingControlCapableEvent(true, LOCAL_PARTICIPANT_MRI);\r\n        }\r\n        else {\r\n            this._logger.error('Unknown request action received on control protocol data sink, action=' + controlMessage.action);\r\n        }\r\n    }\r\n\r\n    // Returns true if sent\r\n    private _sendRequest(data: ControlMessage, sourceID: number): boolean {\r\n\r\n        let returnVal: boolean = false;\r\n        let dataSource = this._protocolDataSource;\r\n\r\n        if (sourceID < 0) {\r\n            this._logger.error('Unexpected: invalid sourceID=' + sourceID);\r\n            return returnVal;\r\n        }\r\n\r\n        if (dataSource) {\r\n            this._logger.info('sending control message action=' + data.action + 'to sourceID=' + sourceID);\r\n\r\n            let protocolMessage: DataChannelProtocolMessage = {\r\n                type: DataChannelProtocolType.ScreenSharingControl,\r\n                message: JSON.stringify(data),\r\n            };\r\n\r\n            try {\r\n                let recipients: number[] = [sourceID];\r\n                dataSource.sendData(SlimCoreCommon.stringToBuffer(JSON.stringify(protocolMessage)), recipients);\r\n                returnVal = true;\r\n            } catch (error) {\r\n              this._logger.error('Unexpected: failure in call to sendData. Error=' + error);\r\n\r\n              let controlError: SharingControlError = {\r\n                  reason: SharingControlErrorReason.SendDataError };\r\n              this.event('sharingControlError').raise(controlError);\r\n            }\r\n        } else {\r\n            this._logger.error('Unexpected: null dataSource in _sendRequest');\r\n        }\r\n        return returnVal;\r\n    }\r\n\r\n    private _resetControlState() {\r\n        this._logger.info('_resetControlState()');\r\n        this.controlState = ControlState.None;\r\n        this._controllerParticipant = null;\r\n        this._sharerParticipant = null;\r\n        this._controlRequest = null;\r\n        this._cancelRequestControlTimer();\r\n        this._cancelAcceptControlTimer();\r\n        this._cancelGrantControlTimer();\r\n        this._cancelTerminateControlTimer();\r\n    }\r\n\r\n    private _setupSharerRemoteControl(sourceId: number) {\r\n\r\n        this._logger.info('_setupSharerRemoteControl() sourceId=' + sourceId);\r\n\r\n        // @TODO: temp code to enter seamless mode\r\n        this._setInjectorMode(InjectorMode.Seamless);\r\n\r\n        this._controlInjector.allowSingleController(sourceId).catch((error) => {\r\n            let controlError: SharingControlError = {\r\n                reason: SharingControlErrorReason.AllowSingleControllerError,\r\n                detail: JSON.stringify({sourceId: sourceId, errorMsg: error}) };\r\n            this.event('sharingControlError').raise(controlError);\r\n        });\r\n    }\r\n\r\n    private _teardownSharerRemoteControl() {\r\n\r\n        this._logger.info('_teardownSharerRemoteControl()');\r\n\r\n        // Remove the controller from injector\r\n        this._controlInjector.allowSingleController(0).catch((error) => {\r\n            let controlError: SharingControlError = {\r\n                reason: SharingControlErrorReason.AllowSingleControllerError,\r\n                detail: JSON.stringify({sourceId: 0, errorMsg: error}) };\r\n            this.event('sharingControlError').raise(controlError);\r\n        });\r\n\r\n        // @TODO: temporary workaround to remove the avatars\r\n        // once control ends:\r\n        this._setInjectorMode(InjectorMode.Disabled);\r\n    }\r\n\r\n    private _setupViewerRemoteControl() {\r\n\r\n        this._logger.info('_setupViewerRemoteControl()');\r\n\r\n        this._setCapturerMode(CaptureMode.Control);\r\n    }\r\n\r\n    private _teardownViewerRemoteControl() {\r\n\r\n        this._logger.info('_teardownViewerRemoteControl()');\r\n\r\n        // When viewer stops controlling, we go to detection mode\r\n        // @TODO: For now, go to disabled\r\n        this._setCapturerMode(CaptureMode.Disabled);\r\n    }\r\n\r\n    private _setInjectorMode(injectorMode: InjectorMode) {\r\n\r\n        this._logger.info('_setInjectorMode() mode=' + injectorMode);\r\n\r\n        let injectorConfig: InjectorConfig = {\r\n            mode: injectorMode,\r\n            noMotionTimeoutMs: 0, // don't timeout - always show\r\n            noMotionSharerTimeoutMs: 0, // don't timout - always show\r\n        };\r\n        this._controlInjector.setInjectorConfig(injectorConfig).catch((error) => {\r\n            let controlError: SharingControlError = {\r\n                reason: SharingControlErrorReason.SetInjectorConfigError,\r\n                detail: JSON.stringify({mode: injectorMode, errorMsg: error}) };\r\n            this.event('sharingControlError').raise(controlError);\r\n        });\r\n    }\r\n\r\n    private _clearCapturerEventSubscriptions() {\r\n        this._logger.info('_clearCapturerEventSubscriptions()');\r\n\r\n        if (this._captureEventSubscription) {\r\n            this._captureEventSubscription.dispose();\r\n            this._captureEventSubscription = null;\r\n        }\r\n        if (this._controlEventSubscription) {\r\n            this._controlEventSubscription.dispose();\r\n            this._controlEventSubscription = null;\r\n        }\r\n    }\r\n\r\n    private _setCapturerMode(capturerMode: CaptureMode) {\r\n\r\n        this._logger.info('_setCapturerMode() capturerMode=' + capturerMode);\r\n\r\n        if (this._controlCapturer) {\r\n            this._controlCapturer.setCaptureMode(capturerMode);\r\n\r\n            // Remove existing callbacks\r\n            this._clearCapturerEventSubscriptions();\r\n\r\n            if (capturerMode === CaptureMode.Detection) {\r\n                this._captureEventSubscription = this._controlCapturer.on('captureEvent', ((event: CaptureEvent) => {\r\n                    if (event === CaptureEvent.MouseClick) {\r\n                        this.event('sharingRendererClicked').raise();\r\n                    }\r\n                }));\r\n            }\r\n            else if (capturerMode === CaptureMode.Pointer) {\r\n                this._captureEventSubscription = this._controlCapturer.on('captureEvent', ((event: CaptureEvent) => {\r\n                    if (event === CaptureEvent.MouseEntering) {\r\n                        this.event('sharingRendererMouseEntering').raise();\r\n                    }\r\n                    else if (event === CaptureEvent.MouseLeaving) {\r\n                        this.event('sharingRendererMouseLeaving').raise();\r\n                    }\r\n                }));\r\n            }\r\n            else if (capturerMode === CaptureMode.Control) {\r\n                this._controlEventSubscription = this._controlCapturer.on('controlEvent', ((data: Uint8Array) => {\r\n                    if (this._controlDataSource && this._sharerParticipant) {\r\n                        let sharerSourceId = this._mapParticipantToSourceId(this._sharerParticipant);\r\n                        let recipients: number[] = [sharerSourceId];\r\n                        this._controlDataSource.sendData(data, recipients);\r\n                    }\r\n                }));\r\n\r\n                this._captureEventSubscription = this._controlCapturer.on('captureEvent', ((event: CaptureEvent) => {\r\n                    if (event === CaptureEvent.MouseEntering) {\r\n                        this.event('sharingRendererMouseEntering').raise();\r\n                    }\r\n                    else if (event === CaptureEvent.MouseLeaving) {\r\n                        this.event('sharingRendererMouseLeaving').raise();\r\n                    }\r\n                }));\r\n            }\r\n        }\r\n        else {\r\n            this._logger.warn('_controlCapturer not found when trying to setup viewer capture mode');\r\n        }\r\n    }\r\n\r\n    public setPointerImage(participant: ICallParticipant, base64str: string): Promise<void> {\r\n        let sourceId: number = 0;\r\n        // null participant is passed for local participant and maps to sourceId = 0\r\n        if (participant) {\r\n            sourceId = this._mapParticipantToSourceId(participant);\r\n        }\r\n        if (sourceId < 0) {\r\n            return Promise.reject(new Error('setPointerImage unable to map participant to sourceId'));\r\n        } else if (base64str.length === 0) {\r\n            return Promise.reject(new Error('setPointerImage invalid image length'));\r\n        }\r\n\r\n        return this._setPointerImage(sourceId, base64str);\r\n    }\r\n\r\n    private _setPointerImage(sourceId: number, base64str: string): Promise<void> {\r\n\r\n        if (!this._isSharing()) {\r\n            this._logger.warn('_setPointerImage called when not sharing');\r\n        }\r\n        return this._controlInjector.setAvatar(SlimCoreCommon.stringToBuffer(base64str), sourceId);\r\n    }\r\n\r\n    public startPointerMode(): Promise<void> {\r\n\r\n        if (!this._dataChannelActive) {\r\n            return Promise.reject(new Error('startPointerMode when data channel not active'));\r\n        }\r\n        else if (this.controlState !== ControlState.None) {\r\n            return Promise.reject(new Error('startPointerMode called in bad control state=' + this.controlState));\r\n        }\r\n        else if (!this._isViewing()) {\r\n            return Promise.reject(new Error('startPointerMode when not viewing'));\r\n        }\r\n        return async.asap(() => this._setCapturerMode(CaptureMode.Pointer));\r\n    }\r\n\r\n    public stopPointerMode(): Promise<void> {\r\n\r\n        if (this.controlState !== ControlState.None) {\r\n            return Promise.reject(new Error('stopPointerMode called in bad control state=' + this.controlState));\r\n        }\r\n        else if (!this._isViewing()) {\r\n            return Promise.reject(new Error('stopPointerMode when not viewing'));\r\n        }\r\n\r\n        return async.asap(() => this._setCapturerMode(CaptureMode.Detection));\r\n    }\r\n\r\n    private _startAvailableHandshake(sharerSourceId: number): void {\r\n        // Caller makes sure we are in an acceptable state to send\r\n        const handshakeId: string = Guid.generate();\r\n        this._logger.info(`_startAvailableHandshake() - handshakeId: ${sharerSourceId}:${handshakeId}`);\r\n        this.event('controlAvailableHandshake').raise(handshakeId, sharerSourceId, AvailableHandshakeStatus.Sending);\r\n\r\n        if (this._terminateAvailableHandshake) {\r\n            this._logger.warn('Replacing existing availble handshake');\r\n            this._terminateAvailableHandshake(AvailableHandshakeTerminatedReason.Replaced);\r\n        }\r\n\r\n        let sent: boolean = this._sendRequest(\r\n            { action: ControlAction.Available, terminatedReason: ControlTerminatedReason.None, handshakeId: handshakeId }, sharerSourceId);\r\n        if (!sent) {\r\n            this._logger.error('Failed to send Available message to sharer, will retry after backoff');\r\n        }\r\n        this._dataChannelAvailableSent = true; // set to true even if send failed so we know we are trying to send\r\n\r\n        // Start a timer in case we never get a response - so we know to retry\r\n        this._waitForAvailableAck(sharerSourceId, handshakeId);\r\n\r\n        this._terminateAvailableHandshake = (reason = AvailableHandshakeTerminatedReason.Unknown, ackHandshakeId?: string) => {\r\n            this._logger.info(`_terminateAvailableHandshake() - handshakeId: ${sharerSourceId}:${handshakeId}, status: ${reason}`);\r\n\r\n            this._terminateAvailableHandshake = null;\r\n\r\n            this.event('controlAvailableHandshake').raise(\r\n                handshakeId,\r\n                sharerSourceId,\r\n                reason === AvailableHandshakeTerminatedReason.Succeeded ? AvailableHandshakeStatus.Succeeded : AvailableHandshakeStatus.Terminated,\r\n                reason,\r\n            );\r\n\r\n            if (ackHandshakeId && ackHandshakeId !== handshakeId) {\r\n                this._logger.warn(`AvailableSeries: Got handshake from another series - expected: ${handshakeId}, received: ${ackHandshakeId}`);\r\n            }\r\n\r\n            if (this._availableAckTimer) {\r\n                clearTimeout(this._availableAckTimer);\r\n                this._availableAckTimer = null;\r\n            }\r\n            this._retryAttempt = 0;\r\n        };\r\n    }\r\n\r\n    private _waitForAvailableAck(sharerSourceId: number, handshakeId: string): void {\r\n        this._logger.info('_waitForAvailableAck()');\r\n\r\n        this._availableAckTimer = setTimeout(() => {\r\n            this._logger.warn('No Ack received for Available message from attempt=' + this._retryAttempt);\r\n            this._availableAckTimer = null;\r\n\r\n            if (this._retryAttempt <= AVAILABLE_RETRY_LIMIT) {\r\n                // Let's continue retrying until we reach the retry limit\r\n                this._logger.info(`Re-sending Available message handshakeId: ${sharerSourceId}:${handshakeId}`);\r\n                this.event('controlAvailableHandshake').raise(handshakeId, sharerSourceId, AvailableHandshakeStatus.Resending);\r\n\r\n                this._sendRequest(\r\n                    { action: ControlAction.Available, terminatedReason: ControlTerminatedReason.None, handshakeId: handshakeId }, sharerSourceId);\r\n                this._waitForAvailableAck(sharerSourceId, handshakeId);\r\n            } else {\r\n                this._logger.error('Reached Available retry limit! Control capability will be false');\r\n                if (this._terminateAvailableHandshake) {\r\n                    this._terminateAvailableHandshake(AvailableHandshakeTerminatedReason.TimedOut);\r\n                } else {\r\n                    // Raise generic error when handshake already terminated\r\n                    let controlError: SharingControlError = {\r\n                        reason: SharingControlErrorReason.AvailableAckTimeout,\r\n                    };\r\n                    this.event('sharingControlError').raise(controlError);\r\n                }\r\n            }\r\n        }, (AVAILABLE_ACK_WAIT_TIMEOUT * this._retryAttempt++));\r\n    }\r\n\r\n    public requestControl(): Promise<void> {\r\n\r\n        if (!this._dataChannelActive) {\r\n            return Promise.reject(new Error('requestControl when data channel not active'));\r\n        }\r\n        else if (this.controlState !== ControlState.None) {\r\n            return Promise.reject(new Error('requestControl called in bad state=' + this.controlState));\r\n        }\r\n        else if (!this._isViewing()) {\r\n            return Promise.reject(new Error('requestControl when not viewing'));\r\n        }\r\n        else if (!this._sharerParticipant) {\r\n            return Promise.reject(new Error('requestControl unexpected null sharer'));\r\n        }\r\n\r\n        if (this._requestControlPromise) {\r\n            return Promise.reject(new Error('request control promise has not been resolved yet while requesting control'));\r\n        }\r\n        if (this._terminateControlPromise) {\r\n            return Promise.reject(new Error('terminate control promise has not been resolved yet while requesting control'));\r\n        }\r\n\r\n        return this._requestControl();\r\n    }\r\n\r\n    private _requestControl(): Promise<void> {\r\n\r\n        this._logger.info('_requestControl()');\r\n\r\n        this._requestControlPromise = async.defer<void>();\r\n        let always = () => {\r\n            this._requestControlPromise = null;\r\n        };\r\n        this._requestControlPromise.promise.then(always, always);\r\n\r\n        // find the sharer's source id:\r\n        let sharerSourceId: number = this._mapParticipantToSourceId(this._sharerParticipant);\r\n\r\n        let sent: boolean = this._sendRequest(\r\n            { action: ControlAction.ControlRequest, terminatedReason: ControlTerminatedReason.None }, sharerSourceId);\r\n        if (!sent) {\r\n            // Failed to send the request\r\n            let controlInfo: SharingControlInfo = {\r\n                inControl: false,\r\n                id: LOCAL_PARTICIPANT_MRI, // local participant\r\n                terminatedReason: ControlTerminatedReason.DataChannelError,\r\n            };\r\n\r\n            this._requestControlPromise.reject(new Error());\r\n            return Promise.reject(new Error(JSON.stringify({controlInfo: controlInfo, details: ''})));\r\n        }\r\n\r\n        this.controlState = ControlState.RequestSent;\r\n\r\n        // Start a timer in case we never get a response\r\n        this._requestControlTimer = setTimeout(() => {\r\n            if (this.controlState === ControlState.RequestSent) {\r\n\r\n                this.controlState = ControlState.None;\r\n\r\n                // Didn't get any response, let's cancel the request\r\n                this._logger.warn('No response to control request - canceling');\r\n                let sent: boolean = this._sendRequest(\r\n                    {action: ControlAction.CancelControlRequest, terminatedReason: ControlTerminatedReason.SharerNoResponse}, sharerSourceId);\r\n                if (!sent) {\r\n                    this._logger.error('fail to send the cancel control request');\r\n                }\r\n\r\n                // Raise an event notifying that the request was 'rejected'\r\n                let controlInfo: SharingControlInfo = {\r\n                    inControl: false,\r\n                    id: LOCAL_PARTICIPANT_MRI, // local participant\r\n                    terminatedReason: ControlTerminatedReason.SharerNoResponse,\r\n                };\r\n\r\n                if (this._requestControlPromise) {\r\n                    this._requestControlPromise.reject(new Error(JSON.stringify({controlInfo: controlInfo, details: 'we did not get any response to the control - terminating control'})));\r\n                } else {\r\n                    this._logger.error('Unexpected, no promise could be resolved - controlState = ControlState.RequestSent');\r\n                }\r\n            } else {\r\n                if (this._requestControlPromise) {\r\n                    this._requestControlPromise.reject(new Error(JSON.stringify({controlInfo: undefined, details: 'request control - times out in bad state - do nothing'})));\r\n                } else {\r\n                    this._logger.error('Unexpected, no promise could be resolved - controlState = ' + this.controlState);\r\n                }\r\n            }\r\n            this._requestControlTimer = null;\r\n        }, CONTROL_REQUEST_WAIT_TIMEOUT);\r\n\r\n        return this._requestControlPromise.promise;\r\n    }\r\n\r\n    private _cancelRequestControlTimer(): void {\r\n        if (this._requestControlTimer) {\r\n            if (this._requestControlPromise) {\r\n                this._requestControlPromise.reject(new Error('cancelled by _cancelRequestControlTimer'));\r\n            }\r\n            clearTimeout(this._requestControlTimer);\r\n            this._requestControlTimer = null;\r\n        }\r\n    }\r\n\r\n    public cancelControl(): Promise<void> {\r\n\r\n        if (!this._dataChannelActive) {\r\n            return Promise.reject(new Error('cancelControl when data channel not active'));\r\n        }\r\n        else if (this.controlState !== ControlState.RequestSent) {\r\n            return Promise.reject(new Error('cancelControl called in bad state=' + this.controlState));\r\n        }\r\n        else if (!this._isViewing()) {\r\n            return Promise.reject(new Error('cancelControl when not viewing'));\r\n        }\r\n        else if (!this._sharerParticipant) {\r\n            return Promise.reject(new Error('cancelControl unexpected null sharer'));\r\n        }\r\n\r\n        // cancel only could happen if request control promise is not resolved yet.\r\n        if (!this._requestControlPromise) {\r\n            return Promise.reject(new Error('request control promise has been resolved while cancelling control'));\r\n        }\r\n        if (this._terminateControlPromise) {\r\n            return Promise.reject(new Error('terminate control promise has not been resolved yet while cancelling control'));\r\n        }\r\n\r\n        return this._cancelControl();\r\n    }\r\n\r\n    private _cancelControl(): Promise<void> {\r\n\r\n        this._logger.info('_cancelControl()');\r\n\r\n        // find the sharer's source id:\r\n        const sharerSourceId: number = this._mapParticipantToSourceId(this._sharerParticipant);\r\n\r\n        if (this.controlState === ControlState.RequestSent) {\r\n\r\n            this._cancelRequestControlTimer();\r\n\r\n            this.controlState = ControlState.None;\r\n\r\n            // Viewer cancel the control\r\n            this._logger.info('Viewer cancel the control');\r\n            const sent: boolean = this._sendRequest(\r\n                {action: ControlAction.CancelControlRequest, terminatedReason: ControlTerminatedReason.ViewerCancelled}, sharerSourceId);\r\n\r\n            // Raise an event notifying that the request was 'cancelled'\r\n            if (sent) {\r\n                let controlInfo: SharingControlInfo = {\r\n                    inControl: false,\r\n                    id: LOCAL_PARTICIPANT_MRI, // local participant\r\n                    terminatedReason: ControlTerminatedReason.ViewerCancelled,\r\n                };\r\n\r\n                this._requestControlPromise.reject(new Error(JSON.stringify({controlInfo: controlInfo, details: ''})));\r\n            } else {\r\n                return Promise.reject(new Error('fail to send cancel control request'));\r\n            }\r\n        } else {\r\n            return Promise.reject(new Error('cancel control - in bad state - do nothing'));\r\n        }\r\n\r\n        return new Promise<void>((resolve, reject) => { resolve(); });\r\n    }\r\n\r\n    public acceptControlRequest(): Promise<void> {\r\n\r\n        if (!this._dataChannelActive) {\r\n            return Promise.reject(new Error('acceptControlRequest when data channel not active'));\r\n        }\r\n        else if (!this._controlRequest) {\r\n            return Promise.reject(new Error('acceptControlRequest while no control request pending'));\r\n        }\r\n        else if (!this._isSharing()) {\r\n            return Promise.reject(new Error('acceptControlRequest when not sharing'));\r\n        }\r\n\r\n        if (this._acceptControlPromise) {\r\n            return Promise.reject(new Error('accept control promise has not been resolved yet while accepting control'));\r\n        }\r\n        if (this._grantControlPromise) {\r\n            return Promise.reject(new Error('grant control promise has not been resolved yet while accepting control'));\r\n        }\r\n        if (this._terminateControlPromise) {\r\n            return Promise.reject(new Error('terminate control promise has not been resolved yet while accepting control'));\r\n        }\r\n\r\n        return this._acceptControlRequest();\r\n    }\r\n\r\n    private _acceptControlRequest(): Promise<void> {\r\n\r\n        this._logger.info('_acceptControlRequest()');\r\n\r\n        this._acceptControlPromise = async.defer<void>();\r\n        let always = () => {\r\n            this._acceptControlPromise = null;\r\n        };\r\n        this._acceptControlPromise.promise.then(always, always);\r\n\r\n        if (this._controllerParticipant) {\r\n            // We are trying to accept someone's control request while someone already has control\r\n            this._logger.warn('_acceptControlRequest called while another participant already has control - terminating control');\r\n\r\n            // Stop control on sharer side\r\n            this._teardownSharerRemoteControl();\r\n\r\n            let controllerSourceId: number = this._mapParticipantToSourceId(this._controllerParticipant);\r\n\r\n            let sent: boolean = this._sendRequest(\r\n                { action: ControlAction.TerminateNoAck, terminatedReason: ControlTerminatedReason.SharerTerminated }, controllerSourceId);\r\n            if (!sent) {\r\n                this._logger.error('fail to send the terminateNoAck request');\r\n            }\r\n            this._controllerParticipant = null;\r\n        }\r\n\r\n        let controlRequesterSourceId: number = this._mapParticipantToSourceId(this._controlRequest.participant);\r\n        let controlRequesterId: string = this._controlRequest.participant.id;\r\n\r\n        // Send the accept control message\r\n        let sent: boolean = this._sendRequest(\r\n            { action: ControlAction.AcceptRequest, terminatedReason: ControlTerminatedReason.None }, controlRequesterSourceId);\r\n\r\n        if (!sent) {\r\n            this._logger.error('fail to send the accept control request');\r\n            this._acceptControlPromise.reject(new Error());\r\n            return Promise.reject(new Error('fail to send the accept control request!'));\r\n        }\r\n\r\n        this._controllerParticipant = this._controlRequest.participant;\r\n        this._controlRequest = null;\r\n        this.controlState = ControlState.WaitingForControlAck;\r\n\r\n        // Start ack timer before we setup the injector\r\n        this._acceptControlTimer = setTimeout(() => {\r\n            if (this.controlState === ControlState.WaitingForControlAck) {\r\n\r\n                this.controlState = ControlState.None;\r\n                this._controllerParticipant = null;\r\n\r\n                // Didn't get any ack, we shouldn't give the control\r\n                this._logger.error('No ack received when accepting control request - terminating control');\r\n                let sent: boolean = this._sendRequest(\r\n                    { action: ControlAction.TerminateNoAck, terminatedReason: ControlTerminatedReason.AckTimeout }, controlRequesterSourceId);\r\n                if (!sent) {\r\n                    this._logger.error('fail to send the TerminateNoAck request');\r\n                }\r\n\r\n                let controlInfo: SharingControlInfo = {\r\n                    inControl: false,\r\n                    id: controlRequesterId,\r\n                    terminatedReason: ControlTerminatedReason.AckTimeout,\r\n                };\r\n                this.event('sharingControlChanged').raise(controlInfo);\r\n                if (this._acceptControlPromise) {\r\n                    this._acceptControlPromise.reject(new Error('No ack received when accept control - terminating control'));\r\n                } else {\r\n                    this._logger.error('Unexpected, no promise could be resolved - controlState = ControlState.WaitingForControlAck');\r\n                }\r\n            } else {\r\n                if (this._acceptControlPromise) {\r\n                    this._acceptControlPromise.reject(new Error('accept control - times out in bad state - do nothing'));\r\n                } else {\r\n                    this._logger.error('Unexpected, no promise could be resolved - controlState = ' + this.controlState);\r\n                }\r\n            }\r\n            this._acceptControlTimer = null;\r\n        }, CONTROL_ACK_WAIT_TIMEOUT);\r\n\r\n        return this._acceptControlPromise.promise;\r\n    }\r\n\r\n    private _cancelAcceptControlTimer(): void {\r\n        if (this._acceptControlTimer) {\r\n            if (this._acceptControlPromise) {\r\n                this._acceptControlPromise.reject(new Error('cancelled by _cancelAcceptControlTimer'));\r\n            }\r\n            clearTimeout(this._acceptControlTimer);\r\n            this._acceptControlTimer = null;\r\n        }\r\n    }\r\n\r\n    public denyControlRequest(): Promise<void> {\r\n\r\n        if (!this._dataChannelActive) {\r\n            return Promise.reject(new Error('denyControlRequest when data channel not active'));\r\n        }\r\n        else if (!this._controlRequest) {\r\n            return Promise.reject(new Error('denyControlRequest while no control request pending'));\r\n        }\r\n        else if (!this._isSharing()) {\r\n            return Promise.reject(new Error('denyControlRequest when not sharing'));\r\n        }\r\n\r\n        if (this._acceptControlPromise) {\r\n            return Promise.reject(new Error('accept control promise has not been resolved yet while denying control'));\r\n        }\r\n        if (this._grantControlPromise) {\r\n            return Promise.reject(new Error('grant control promise has not been resolved yet while denying control'));\r\n        }\r\n        if (this._terminateControlPromise) {\r\n            return Promise.reject(new Error('terminate control promise has not been resolved yet while denying control'));\r\n        }\r\n\r\n        return this._denyControlRequest();\r\n    }\r\n\r\n    private _denyControlRequest(): Promise<void> {\r\n\r\n        this._logger.info('_denyControlRequest()');\r\n\r\n        let controlRequesterSourceId: number = this._mapParticipantToSourceId(this._controlRequest.participant);\r\n        this._controlRequest = null;\r\n\r\n        // Send the reject control message\r\n        let sent: boolean = this._sendRequest(\r\n            { action: ControlAction.RejectRequest, terminatedReason: ControlTerminatedReason.SharerDenied }, controlRequesterSourceId);\r\n\r\n        if (!sent) {\r\n          return Promise.reject(new Error('fail to send the deny control requst'));\r\n        }\r\n\r\n        return new Promise<void>((resolve, reject) => {resolve(); });\r\n    }\r\n\r\n    public grantControl(participant: ICallParticipant): Promise<void> {\r\n\r\n        if (!this._dataChannelActive) {\r\n            return Promise.reject(new Error('grantControl when data channel not active'));\r\n        }\r\n        else if (this._controlRequest) {\r\n            return Promise.reject(new Error('grantControl called while control request pending'));\r\n        }\r\n        else if (!this._isSharing()) {\r\n            return Promise.reject(new Error('grantControl when not sharing'));\r\n        }\r\n        else if (!participant) {\r\n            return Promise.reject(new Error('grantControl null participant'));\r\n        }\r\n\r\n        if (this._acceptControlPromise) {\r\n            return Promise.reject(new Error('accept control promise has not been resolved yet while granting control'));\r\n        }\r\n        if (this._grantControlPromise) {\r\n            return Promise.reject(new Error('grant control promise has not been resolved yet while granting control'));\r\n        }\r\n        if (this._terminateControlPromise) {\r\n            return Promise.reject(new Error('terminate control promise has not been resolved yet while granting control'));\r\n        }\r\n\r\n        return this._grantControl(participant);\r\n    }\r\n\r\n    private _grantControl(participant: ICallParticipant): Promise<void> {\r\n\r\n        this._logger.info('_grantControl()');\r\n\r\n        this._grantControlPromise = async.defer<void>();\r\n        let always = () => {\r\n            this._grantControlPromise = null;\r\n        };\r\n        this._grantControlPromise.promise.then(always, always);\r\n\r\n        if (this.controlState === ControlState.RemoteControlling) {\r\n            if (this._controllerParticipant === participant) {\r\n                // We are trying to grant control to someone who already has control\r\n                this._logger.warn('grantControl called for participant who already has control');\r\n                this._grantControlPromise.resolve();\r\n                return new Promise<void>((resolve, reject) => { resolve(); });\r\n            } else {\r\n                // Someone else has control, we have to terminate their control before we can\r\n                // give control to another\r\n                this._logger.warn('_grantControl called while another participant already has control - terminating control');\r\n\r\n                // Stop control on sharer side\r\n                this._teardownSharerRemoteControl();\r\n\r\n                let controllerSourceId: number = this._mapParticipantToSourceId(this._controllerParticipant);\r\n                let sent: boolean = this._sendRequest(\r\n                    { action: ControlAction.TerminateNoAck, terminatedReason: ControlTerminatedReason.SharerTerminated }, controllerSourceId);\r\n                if (!sent) {\r\n                    this._logger.error('fail to send the terminateNoAck request');\r\n                }\r\n            }\r\n        }\r\n\r\n        let participantSourceId: number = this._mapParticipantToSourceId(participant);\r\n\r\n        // Send the give control message\r\n        let sent: boolean = this._sendRequest(\r\n            { action: ControlAction.GiveControl, terminatedReason: ControlTerminatedReason.None }, participantSourceId);\r\n\r\n        if (!sent) {\r\n            this._logger.error('fail to send the grant control request');\r\n            this._grantControlPromise.reject(new Error());\r\n            return Promise.reject(new Error('fail to send the grant control request!'));\r\n        }\r\n\r\n        this._controllerParticipant = participant;\r\n        this.controlState = ControlState.WaitingForControlAck;\r\n\r\n        // Start ack timer before we setup the injector\r\n        this._grantControlTimer = setTimeout(() => {\r\n            if (this.controlState === ControlState.WaitingForControlAck) {\r\n\r\n                this.controlState = ControlState.None;\r\n                this._controllerParticipant = null;\r\n\r\n                // Didn't get any ack, we shouldn't give the control\r\n                this._logger.error('No ack received when granting control - terminating control');\r\n                let sent: boolean = this._sendRequest(\r\n                    { action: ControlAction.TerminateNoAck, terminatedReason: ControlTerminatedReason.AckTimeout }, participantSourceId);\r\n                if (!sent) {\r\n                    this._logger.error('fail to send the terminateNoAck request');\r\n                }\r\n\r\n                if (this._grantControlPromise) {\r\n                    this._grantControlPromise.reject(new Error('No ack received when granting control - terminating control'));\r\n                } else {\r\n                    this._logger.error('Unexpected, no promise could be resolved - controlState = ControlState.WaitingForControlAck');\r\n                }\r\n            } else {\r\n                if (this._grantControlPromise) {\r\n                    this._grantControlPromise.reject(new Error('grant control - times out in bad state - do nothing'));\r\n                } else {\r\n                    this._logger.error('Unexpected, no promise could be resolved - controlState = ' + this.controlState);\r\n                }\r\n            }\r\n            this._grantControlTimer = null;\r\n        }, CONTROL_ACK_WAIT_TIMEOUT);\r\n\r\n        return this._grantControlPromise.promise;\r\n    }\r\n\r\n    private _cancelGrantControlTimer(): void {\r\n        if (this._grantControlTimer) {\r\n            if (this._grantControlPromise) {\r\n                this._grantControlPromise.reject(new Error('cancelled by _cancelGrantControlTimer'));\r\n            }\r\n            clearTimeout(this._grantControlTimer);\r\n            this._grantControlTimer = null;\r\n        }\r\n    }\r\n\r\n    public terminateControl(): Promise<void> {\r\n\r\n        if (this._isViewing()) {\r\n            if (this.controlState !== ControlState.LocalControlling) {\r\n                return Promise.reject(new Error('terminateControl called while not in control'));\r\n            }\r\n            else if (!this._sharerParticipant) {\r\n                return Promise.reject(new Error('terminateControl called but _sharerParticipant is null'));\r\n            }\r\n        } else if (this._isSharing()) {\r\n            if (!this._controllerParticipant) {\r\n                return Promise.reject(new Error('terminateControl called but controllerParticipant is null'));\r\n            }\r\n        }\r\n        else {\r\n            return Promise.reject(new Error('terminateControl called but not sharing nor viewing'));\r\n        }\r\n\r\n        if (this._requestControlPromise) {\r\n            return Promise.reject(new Error('request control promise has not been resolved yet while terminating control'));\r\n        }\r\n\r\n        if (this._acceptControlPromise) {\r\n            return Promise.reject(new Error('accept control promise has not been resolved yet while terminating control'));\r\n        }\r\n        if (this._grantControlPromise) {\r\n            return Promise.reject(new Error('grant control promise has not been resolved yet while terminating control'));\r\n        }\r\n\r\n        if (this._terminateControlPromise) {\r\n            return Promise.reject(new Error('terminate control promise has not been resolved yet while terminating control'));\r\n        }\r\n\r\n        return this._terminateControl();\r\n    }\r\n\r\n    private _terminateControl(waitForAck = true): Promise<void> {\r\n\r\n        this._logger.info('_terminateControl()');\r\n\r\n        this._terminateControlPromise = async.defer<void>();\r\n        let always = () => {\r\n            this._terminateControlPromise = null;\r\n        };\r\n        this._terminateControlPromise.promise.then(always, always);\r\n\r\n        let reason: ControlTerminatedReason = ControlTerminatedReason.None;\r\n        let controlAction: ControlAction = waitForAck ? ControlAction.Terminate : ControlAction.TerminateNoAck;\r\n        let recipientSourceId: number;\r\n        let controllerId: string;\r\n\r\n        if (this._isViewing()) {\r\n            if (this.controlState === ControlState.LocalControlling) {\r\n                // Local participant is viewing\r\n                this._teardownViewerRemoteControl();\r\n                reason = ControlTerminatedReason.ViewerTerminated;\r\n\r\n                // We should send the terminate message to sharer\r\n                recipientSourceId = this._mapParticipantToSourceId(this._sharerParticipant);\r\n                controllerId = LOCAL_PARTICIPANT_MRI; // local participant is controller\r\n            }\r\n            else {\r\n                this._logger.error('Local viewer called terminateControl when not controlling');\r\n                this._terminateControlPromise.reject(new Error());\r\n                return Promise.reject(new Error('Local viewer called terminateControl when not controlling'));\r\n            }\r\n        } else {\r\n            if (this.controlState === ControlState.RemoteControlling &&\r\n                this._controllerParticipant) {\r\n                // Stop control on sharer side\r\n                this._teardownSharerRemoteControl();\r\n\r\n                // Local participant is sharing\r\n                reason = ControlTerminatedReason.SharerTerminated;\r\n\r\n                // We should send the terminate message to sharer\r\n                recipientSourceId = this._mapParticipantToSourceId(this._controllerParticipant);\r\n                controllerId = this._controllerParticipant.id; // controller\r\n           }\r\n            else {\r\n                this._logger.error('Local sherer called terminateControl when no one is in control');\r\n                this._terminateControlPromise.reject(new Error());\r\n                return Promise.reject(new Error('Local sherer called terminateControl when no one is in control'));\r\n            }\r\n        }\r\n\r\n        let sent: boolean = this._sendRequest(\r\n            {action: controlAction, terminatedReason: reason}, recipientSourceId);\r\n        if (!sent) {\r\n            if (waitForAck) {\r\n                this._logger.error('fail to send the terminate control request');\r\n                this._terminateControlPromise.reject(new Error());\r\n                return Promise.reject(new Error('fail to send the grant control request!'));\r\n            } else {\r\n                this._logger.error('fail to send the terminateNoAck request');\r\n            }\r\n        }\r\n\r\n        this.controlState = waitForAck ? ControlState.WaitingForTerminateAck : ControlState.None;\r\n\r\n        let controlInfo: SharingControlInfo = {\r\n            inControl: false,\r\n            id: controllerId,\r\n            terminatedReason: reason,\r\n        };\r\n        this.event('sharingControlChanged').raise(controlInfo);\r\n\r\n        if (waitForAck) {\r\n            this._terminateControlTimer = setTimeout(() => {\r\n                if (this.controlState === ControlState.WaitingForTerminateAck) {\r\n\r\n                    this.controlState = ControlState.None;\r\n                    this._controllerParticipant = null;\r\n\r\n                    // Didn't get any ack, we'll just resend the terminate\r\n                    this._logger.error('No ack received when terminating control - resending terminate request');\r\n                    let sent: boolean = this._sendRequest(\r\n                        { action: ControlAction.TerminateNoAck, terminatedReason: ControlTerminatedReason.AckTimeout }, recipientSourceId);\r\n                    if (!sent) {\r\n                        this._logger.error('fail to send the terminateNoAck request');\r\n                    }\r\n\r\n                    if (this._terminateControlPromise) {\r\n                        this._terminateControlPromise.reject(new Error('No ack received when terminating control - resending terminate request'));\r\n                    } else {\r\n                        this._logger.error('Unexpected, no promise could be resolved - controlState = ControlState.WaitingForTerminateAck');\r\n                    }\r\n                } else {\r\n                    if (this._terminateControlPromise) {\r\n                        this._terminateControlPromise.reject(new Error('terminate control - times out in bad state - do nothing'));\r\n                    } else {\r\n                        this._logger.error('Unexpected, no promise could be resolved - controlState = ' + this.controlState);\r\n                    }\r\n                }\r\n                this._terminateControlTimer = null;\r\n            }, CONTROL_ACK_WAIT_TIMEOUT);\r\n        } else {\r\n            this._terminateControlPromise.resolve();\r\n            return new Promise<void>((resolve, reject) => { resolve(); });\r\n        }\r\n\r\n        return this._terminateControlPromise.promise;\r\n    }\r\n\r\n    private _cancelTerminateControlTimer(): void {\r\n        if (this._terminateControlTimer) {\r\n            if (this._terminateControlPromise) {\r\n                this._terminateControlPromise.reject(new Error('cancelled by _cancelTerminateControlTimer'));\r\n            }\r\n            clearTimeout(this._terminateControlTimer);\r\n            this._terminateControlTimer = null;\r\n        }\r\n    }\r\n\r\n    private _disposeControlCapturer() {\r\n        this._logger.info('_disposeControlCapturer');\r\n\r\n        this._clearCapturerEventSubscriptions();\r\n\r\n        if (this._controlCapturer) {\r\n            this._controlCapturer.dispose();\r\n            this._controlCapturer = null;\r\n        }\r\n    }\r\n\r\n    public dispose() {\r\n        this._logger.info('SlimCoreElectronScreenSharingControl.dispose()');\r\n\r\n        this._detachAndDeleteControlDevices();\r\n        this._resetControlState();\r\n        if (this._dataChannel) {\r\n            // Don't dispose here, SlimCoreElectronDataChannel owns\r\n            // the SlimCore.DataChannel and will call dispose\r\n            this._dataChannel = null;\r\n        }\r\n        this._disposeControlCapturer();\r\n\r\n        this._cancelRequestControlTimer();\r\n        this._cancelAcceptControlTimer();\r\n        this._cancelGrantControlTimer();\r\n        this._cancelTerminateControlTimer();\r\n\r\n        if (this._terminateAvailableHandshake) {\r\n            this._terminateAvailableHandshake(AvailableHandshakeTerminatedReason.Shutdown);\r\n        }\r\n\r\n        super.dispose();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ts/SlimCoreElectronScreenSharingControl.ts","/// <reference path=\"../typings/slimcore.d.ts\" />\r\n/// <reference path=\"../typings/slimcore-enums.d.ts\" />\r\n\r\n// Port from global-portable @ https://skype.visualstudio.com/DefaultCollection/SCONSUMER/F.CALLEXP/_git/client-shared_web_sdk\r\n\r\n// tell TypeScript that sometimes the variables window and global exist 'magically'\r\ndeclare const window : any, self : any, global : any;\r\n\r\nconst undef = 'undefined';\r\n\r\nconst globalReference : any =\r\n    // Browser document context\r\n    typeof (window) !== undef ? window :\r\n    // Web Workers\r\n    typeof (self) !== undef ? self :\r\n    // Node.js\r\n    typeof (global) !== undef ? global :\r\n    // fallback. Export variables get cached anyways, so this becomes a static object that can substitute for\r\n    // global on odd Javascript platforms.\r\n    (Object.create(/*prototype*/ null) as any);\r\n\r\nexport default globalReference;\n\n\n// WEBPACK FOOTER //\n// ./ts/global.ts"],"sourceRoot":""}